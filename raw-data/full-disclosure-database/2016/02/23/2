
Date: Tue, 23 Feb 2016 12:58:44 +0100
From: Vulnerability Lab <research@...nerability-lab.com>
To: fulldisclosure@...lists.org
Subject: [FD] Prezi Bug Bounty #7 - (Charts) Persistent Vulnerability

Document Title:
===============
Prezi Bug Bounty #7 - (Charts) Persistent Vulnerability


References (Source):
====================
http://www.vulnerability-lab.com/get_content.php?id=1725


Release Date:
=============
2016-02-23


Vulnerability Laboratory ID (VL-ID):
====================================
1723


Common Vulnerability Scoring System:
====================================
3.9


Product & Service Introduction:
===============================
Prezi is a cloud-based presentation software based on a software as a service model. The product employs a zooming user interface (ZUI), which allows users 
to zoom in and out of their presentation media, and allows users to display and navigate through information within a 2.5D or parallax 3D space on the Z-axis. 
Prezi was officially established in 2009 by co-founders Adam Somlai-Fischer, Peter Halacsy and Peter Arvai.

(Copy of the Wikipedia entry: https://en.wikipedia.org/wiki/Prezi)


Abstract Advisory Information:
==============================
The Vulnerability Laboratory Research team discovered an application-side input validation web vulnerability in the official Prezi online service web-application.


Vulnerability Disclosure Timeline:
==================================
2016-01-27: Researcher Notification &amp; Coordination (Milan Solanki)
2016-01-27: Vendor Notification (Prezi.com Security Team - Bug Bounty Program)
2016-02-02: Vendor Fix/Patch (Prezi.com Developer Team)
2016-02-23: Public Disclosure (Vulnerability Laboratory)


Discovery Status:
=================
Published


Affected Product(s):
====================
Prezi
Product: Online Service - Web Application 2015 Q4

Prezi
Product: Online Service - Web Application 2016 Q1


Exploitation Technique:
=======================
Remote


Severity Level:
===============
Medium


Technical Details & Description:
================================
An application-side cross site scripting web vulnerability has been discovered in the official Prezi online service web-application.
The security vulnerability allows remote attackers to inject own script code to the application-side of the affected application module.

The vulnerability is located in the presentation charts function on Prezi online service web application. Remote attackers with low privilege 
web-application user accounts are able to inject own malicious script code via POST method request. The injection point is the vulnerable 
charts data field. The request method to inject is POST and the vulnerability is located to the application-side of the vulnerable service.

The security risk of the application-side cross site vulnerability is estimated as medium with a cvss (common vulnerability scoring system) count of 3.9. 
Exploitation of the persistent input validation web vulnerability requires a low privilege web-application user account and low or medium user interaction. 
Successful exploitation of the vulnerability results in session hijacking, persistent phishing attacks, persistent external redirects to malicious source 
and persistent manipulation of affected or connected application modules.


Proof of Concept (PoC):
=======================
The security vulnerability can be exploited by remote attackers with low privilege web-application user account and low or medium user interaction.
For security demonstration or to reproduce the vulnerability follow the provided information and steps below to continue.

PoC: Payload
&lt;--`&lt;img/src=` onerror=alert(document.cookie)&gt; --!&gt;

Manual steps to reproduce the vulnerability ...
1. Create new presentation
2. Select the charts function
3. Go to Data Field
4. There are 4 function by default (online, email, seo &amp; social)
-
5. Save the cross site scripting payload as the chart
6. Save the presentation and send to the victim
7. Victim try to re-edit the chart and visit the Data field
8. Thats it XSS executed In victim account also


Solution - Fix & Patch:
=======================
The vulnerability can be patched by a secure parse and encode of the vulnerable fields. Restrict the input and disallow usage of special chars.
Filter and setup a secure exception handling that prevents the persistent execution in the output location.


Security Risk:
==============
The security risk of application-side input validation web vulnerability in the frontend of the Prezi web-application is estimated as medium. (CVSS 3.9)


Credits & Authors:
==================
Milan Solanki - [http://www.vulnerability-lab.com/show.php?user=Milan%20A%20Solanki]


Disclaimer & Information:
=========================
The information provided in this advisory is provided as it is without any warranty. Vulnerability Lab disclaims all warranties, either 
expressed or implied, including the warranties of merchantability and capability for a particular purpose. Vulnerability-Lab or its suppliers 
are not liable in any case of damage, including direct, indirect, incidental, consequential loss of business profits or special damages, even 
if Vulnerability-Lab or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation 
of liability for consequential or incidental damages so the foregoing limitation may not apply. We do not approve or encourage anybody to break 
any vendor licenses, policies, deface websites, hack into databases or trade with fraud/stolen material.

Domains:    www.vulnerability-lab.com   	- www.vuln-lab.com			       		- www.evolution-sec.com
Contact:    admin@...nerability-lab.com 	- research@...nerability-lab.com 	       		- admin@...lution-sec.com
Section:    dev.vulnerability-db.com	 	- forum.vulnerability-db.com 		       		- magazine.vulnerability-db.com
Social:	    twitter.com/#!/vuln_lab 		- facebook.com/VulnerabilityLab 	       		- youtube.com/user/vulnerability0lab
Feeds:	    vulnerability-lab.com/rss/rss.php	- vulnerability-lab.com/rss/rss_upcoming.php   		- vulnerability-lab.com/rss/rss_news.php
Programs:   vulnerability-lab.com/submit.php  	- vulnerability-lab.com/list-of-bug-bounty-programs.php	- vulnerability-lab.com/register/

Any modified copy or reproduction, including partially usages, of this file requires authorization from Vulnerability Laboratory. Permission to 
electronically redistribute this alert in its unmodified form is granted. All other rights, including the use of other media, are reserved by 
Vulnerability-Lab Research Team or its suppliers. All pictures, texts, advisories, source code, videos and other information on this website 
is trademark of vulnerability-lab team &amp; the specific authors or managers. To record, list (feed), modify, use or edit our material contact 
(admin@...nerability-lab.com or research@...nerability-lab.com) to get a permission.

				Copyright (c) 2016 | Vulnerability Laboratory [Evolution Security]

-- 
VULNERABILITY LABORATORY - RESEARCH TEAM
SERVICE: www.vulnerability-lab.com
CONTACT: research@...nerability-lab.com



_______________________________________________
Sent through the Full Disclosure mailing list
https://nmap.org/mailman/listinfo/fulldisclosure
Web Archives & RSS: http://seclists.org/fulldisclosure/
