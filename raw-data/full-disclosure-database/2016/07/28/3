
Date: Thu, 28 Jul 2016 12:02:31 +0200
From: Vulnerability Lab <research@...nerability-lab.com>
To: fulldisclosure@...lists.org
Subject: [FD] Zoll Checklist v1.2.2 iOS - Multiple Persistent Vulnerabilities

Document Title:
===============
Zoll Checklist v1.2.2 iOS - Multiple Persistent Vulnerabilities


References (Source):
====================
http://www.vulnerability-lab.com/get_content.php?id=1881


Release Date:
=============
2016-07-27


Vulnerability Laboratory ID (VL-ID):
====================================
1881


Common Vulnerability Scoring System:
====================================
3.6


Product & Service Introduction:
===============================
The Checklist App is designed to give Fire and EMS agencies the ability to create customized daily, weekly or monthly 
vehicle checklists to ensure compliance and safety. Through ZOLL Online, you input the stations and vehicles that you 
will be checking. Then you can create custom vehicle checklist screens; capture employee signatures; and print or 
email a PDF copy for backup and storing. Download the ZOLL Checklist App from the Apple App Store.

(Copy of the Vendor Homepage:  https://www.zolldata.com/zochecklist/ https://itunes.apple.com/au/app/zoll-checklist/id643329756 )


Abstract Advisory Information:
==============================
The vulnerability laboratory core research team discovered multiple application-side input validation vulnerabilities in the Zoll GmbH Checklist v1.2.2 mobile iOS application.


Vulnerability Disclosure Timeline:
==================================
2016-07-27:	Public Disclosure (Vulnerability Laboratory)


Discovery Status:
=================
Published


Affected Product(s):
====================
ZOLL GmbH (ZOLL Data Systems Inc)
Product: Checklist App - iOS Mobile (Web-Application) 1.2.2


Exploitation Technique:
=======================
Remote


Severity Level:
===============
Medium


Technical Details & Description:
================================
Multiple persistent input validation web vulnerabilities has been discovered in the official Zoll Checklist v1.2.2 mobile iOS application.
The vulnerability allows local or remote attackers to inject own malicious script codes on the application-side of the affected vulnerable module.

The vulnerability is located in the `name and address` input parameters of the `add item` module. Local attackers are able to inject own 
malicious script codes to the vulnerable values to compromise the affected `Reports` and `Share by Email` modules. The injection point of 
the vulnerability are the vulnerable marked input fields and the execution point occurs in the `Reports` on generate of the report and in 
the `Share by Email` module. Attacker are able to share the malicious generated reports in the complete menu and 
can as well to send spoofed malicious emails via the local app.

The security risk of the application-side vulnerability is estimated as medium with a cvss (common vulnerability scoring system) count of 3.6. 
Exploitation of the persistent web vulnerability requires a low privileged ios device account with restricted access and without user interaction. 
Successful exploitation of the vulnerabilities results in persistent phishing mails, session hijacking, persistent external redirect to malicious 
sources and application-side manipulation of affected or connected module context.

Vulnerable Module(s):
			[+] Add

Vulnerable Parameter(s):
			[+] name
			[+] address

Affected Module(s):
			[+] Reports - Complete
			[+] Share via Email


Proof of Concept (PoC):
=======================
The vulnerability can be exploited by local attackers with a low privileged ios device account or restricted access and with low user interaction.
For security demonstration or to reproduce the vulnerability follow the provided information and steps below to continue.


Manual steps to reproduce the vulnerability ...
1. Install the vulnerable Zoll Checklist iOS mobile application
2. Open the software
3. Add a new entry as item
4. Inject to the address and name values own malicious test script code
5. Save the entry
6. Let the report get generated to the complete menu
7. Opent the menu choose the report to trigger the application-side injected payload
8. Now, the attacker can as well use the share by email module via click button
Note: The context of the report is transfered in html format to the email body context without secure approval
9. The code executes in the email body as second point of execution
10. Successful reproduce of both vulnerabilities in the mobile ios application.


POC: Share via Email (HTML)
<html><head><meta http-equiv="content-type" content="text/html; "></head><body dir="auto"><div><meta name="viewport" 
content="width=device-width; minimum-scale=1.0; maximum-scale=1.0;"><style type="text/css">* { font-size: 8pt; font-family: Helvetica, 
Arial, Helvetica, sans-serif; } p { font-size: 8pt; padding: 0px; margin: 0px; } h1 { margin: 10px 0px 10px 0px; padding: 0px; font-size: 12pt; } 
h2 { margin: 10px 0px 10px 0px; font-size: 10pt;} ul { padding: 0px; margin: 0px 0px 0px 30px; } li { font-size: 8pt; font-family: Helvetica, Arial, 
Helvetica, sans-serif; } td { vertical-align: top; } table { width: 100%; padding: 0px; margin: 0px; } body { background-color: white; width: 95%; } 
.footer { border-top: 1px solid black; text-align: center; } .boxed { border-style: solid; border-width: 2px; font-weight: bold; } .underlined 
{ font-weight: bold; text-decoration: underline; } .bold { font-weight: bold; } .rowTitle { font-weight: bold; } .halfRow { width: 50%; } 
.borderedRowTable { width: 100%; border-spacing: 0px; border-collapse: collapse; } .borderedRow { border: 1px solid black; }.borderedHeaderRow 
{ border: 1px solid black; background-color: #a9a9a9; }</style><h1>"&gt;<[MALICIOUS INJECTED SCRIPT CODE IN EMAIL VIA NAME!]&amp;gt;&amp;lt;/h1&amp;gt;&amp;lt;table 
width="100%"&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td width="50%" class="rowTitle"&amp;gt;Frequency&amp;lt;/td&amp;gt;&amp;lt;td width="50%"&amp;gt;
Daily&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;/table&amp;gt;&amp;lt;h2 class="boxed"&amp;gt;Dates&amp;lt;/h2&amp;gt;&amp;lt;table 
width="100%"&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td width="50%" class="rowTitle"&amp;gt;Started&amp;lt;/td&amp;gt;&amp;lt;td width="50%"&amp;gt;23.07.16, 
18:46&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td width="50%" class="rowTitle"&amp;gt;Completed&amp;lt;/td&amp;gt;&amp;lt;td 
width="50%"&amp;gt;23.07.16, 18:47&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;/table&amp;gt;&amp;lt;h2 class="boxed"&amp;gt;Checks&amp;lt;/
h2&amp;gt;&amp;lt;h2 class="boxed"&amp;gt;Signatures&amp;lt;/h2&amp;gt;&amp;lt;p class="underlined"&amp;gt;Inspector&amp;lt;/p&amp;gt;&amp;lt;table 
width="100%"&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td width="50%" class="rowTitle"&amp;gt;Name&amp;lt;/td&amp;gt;&amp;lt;td 
width="50%"&amp;gt;"&amp;gt;&amp;lt;iframe src=a&amp;gt;%20&amp;lt;iframe&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td 
width="50%" class="rowTitle"&amp;gt;Date&amp;lt;/td&amp;gt;&amp;lt;td width="50%"&amp;gt;23.07.16, 18:47&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;
lt;/table&amp;gt;&amp;lt;p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;&amp;lt;p class="underlined"&amp;gt;Reviewer&amp;lt;/p&amp;gt;&amp;lt;table 
width="100%"&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td width="50%" class="rowTitle"&amp;gt;Name&amp;lt;/td&amp;gt;&amp;lt;td width="50%"&amp;gt;"&amp;gt;
&amp;lt;iframe src=a&amp;gt;%20&amp;lt;iframe&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td width="50%" class="rowTitle"
&amp;gt;Date&amp;lt;/td&amp;gt;&amp;lt;td width="50%"&amp;gt;23.07.16, 18:47&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;/table&amp;gt;&amp;lt;
p&amp;gt;&amp;amp;nbsp;&amp;lt;/p&amp;gt;&amp;lt;p&amp;gt;&amp;amp;nbsp;
&amp;lt;/p&amp;gt;&amp;lt;p class="footer"&amp;gt;ZOLL Checklist&amp;lt;/p&amp;gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;</iframe></h1></div>
<div><br><br></div></body></html><BR><FIELDSET CLASS="mimeAttachmentHeader"></FIELDSET><BR/><html><head><meta http-equiv="content-type" 
content="text/html; "></head><body dir="auto"><div></div><div><br><br>Von meinem iPhone gesendet</div></body></html></body>
</html>


Solution - Fix & Patch:
=======================
The vulnerability can be patched by a secure parse and encode of the vulnerable name and address input fields on the add procedure.
Disallow the usage of special chars and script code tags to prevent further persistent injection attacks. Filter the output in 
the Reports and Share by Email modules of the mobile web-application. Disallow to transmit html context directly inside of 
the email body header context to share.


Security Risk:
==============
The security risk of the application-side input validation web vulnerabilities in the mobile web-application are estimated as medium. (CVSS 3.6)


Credits & Authors:
==================
Vulnerability Laboratory [Research Team] - Benjamin Kunz Mejri (bkm@...lution-sec.com) [www.vulnerability-lab.com]


Disclaimer & Information:
=========================
The information provided in this advisory is provided as it is without any warranty. Vulnerability Lab disclaims all warranties, either expressed or implied, 
including the warranties of merchantability and capability for a particular purpose. Vulnerability-Lab or its suppliers are not liable in any case of damage, 
including direct, indirect, incidental, consequential loss of business profits or special damages, even if Vulnerability-Lab or its suppliers have been advised 
of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing 
limitation may not apply. We do not approve or encourage anybody to break any licenses, policies, deface websites, hack into databases or trade with stolen data.

Domains:    www.vulnerability-lab.com 		- www.vuln-lab.com 						- www.evolution-sec.com
Contact:    admin@...nerability-lab.com 	- research@...nerability-lab.com 				- admin@...lution-sec.com
Section:    magazine.vulnerability-lab.com 	- vulnerability-lab.com/contact.php 				- evolution-sec.com/contact
Social:	    twitter.com/vuln_lab		- facebook.com/VulnerabilityLab 				- youtube.com/user/vulnerability0lab
Feeds:	    vulnerability-lab.com/rss/rss.php 	- vulnerability-lab.com/rss/rss_upcoming.php 			- vulnerability-lab.com/rss/rss_news.php
Programs:   vulnerability-lab.com/submit.php 	- vulnerability-lab.com/list-of-bug-bounty-programs.php 	- vulnerability-lab.com/register.php

Any modified copy or reproduction, including partially usages, of this file requires authorization from Vulnerability Laboratory. Permission to electronically 
redistribute this alert in its unmodified form is granted. All other rights, including the use of other media, are reserved by Vulnerability-Lab Research Team or 
its suppliers. All pictures, texts, advisories, source code, videos and other information on this website is trademark of vulnerability-lab team & the specific 
authors or managers. To record, list, modify, use or edit our material contact (admin@ or research@...nerability-lab.com) to get a ask permission.

				    Copyright © 2016 | Vulnerability Laboratory - [Evolution Security GmbH]™

-- 
VULNERABILITY LABORATORY - RESEARCH TEAM
SERVICE: www.vulnerability-lab.com



_______________________________________________
Sent through the Full Disclosure mailing list
https://nmap.org/mailman/listinfo/fulldisclosure
Web Archives & RSS: http://seclists.org/fulldisclosure/