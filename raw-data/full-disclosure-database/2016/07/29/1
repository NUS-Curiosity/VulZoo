
Date: Fri, 29 Jul 2016 12:11:05 +0200
From: Vulnerability Lab <research@...nerability-lab.com>
To: fulldisclosure@...lists.org
Subject: [FD] ZMS v3.2 CMS - Multiple Client Side Cross Site Scripting Web
 Vulnerabilities

Document Title:
===============
ZMS v3.2 CMS - Multiple Client Side Cross Site Scripting Web Vulnerabilities


References (Source):
====================
http://www.vulnerability-lab.com/get_content.php?id=1890


Release Date:
=============
2016-07-28


Vulnerability Laboratory ID (VL-ID):
====================================
1890


Common Vulnerability Scoring System:
====================================
3.3


Product & Service Introduction:
===============================
ZMS is the python content management solution (CMS) for website-based ePublishing. An easy Editorial interface 
and flexible content modeling (multilingualism, metadata, content objects, XML import / export, workflow 
etc.) aimed at optimum productivity for web pages, documentation and Educational content. ZMS is based 
on Zope, the leading open-source Web application server. ZOPE is platform-independent and runs on Linux, 
Unix, Solaris, Windows 9x / NT / 2000 / XP / Vista / 7 and Mac OS X.

(Copy of the Vendor Homepage: https://www.zms-publishing.com/content/download/index_ger.html )


Abstract Advisory Information:
==============================
The vulnerability laboratory core research team discovered two client-side cross site scripting vulnerability in the official ZMS v3.2 python content management system.


Vulnerability Disclosure Timeline:
==================================
2016-07-28:	Public Disclosure (Vulnerability Laboratory)


Discovery Status:
=================
Published


Affected Product(s):
====================

Exploitation Technique:
=======================
Remote


Severity Level:
===============
Medium


Technical Details & Description:
================================
Multiple client-side cross site scripting web vulnerabilities has been discovered iin the official ZMS v3.2 python content management system.
The cross site scripting web vulnerability allows remote attackers to inject own malicious script code to client-side browser to 
web-application requests.

The vulnerabilities are located in the `manage_tabs_message` parameter of the `manage_importexport` and `manage_main` files.
Remote attackers are able to inject own malicious script codes via GET method request to compromise user session data.
The attack vector is persistent and the request method to inject is GET. The message context of the status is not secure 
parsed by the python validation, thus results in the persistent execute of the script code payload.

The security risk of the vulnerability is estimated as medium with a cvss (common vulnerability scoring system) count of 3.3. 
Exploitation of the vulnerability requires no privileged user account or restricted access and only low user interaction. 
Successful exploitation of the vulnerabilities results in non-persistent phishing mails, session hijacking, non-persistent 
external redirect to malicious sources and application-side manipulation of affected or connected module context.

Vulnerable Module(s)
				[+] manage_main
				[+] manage_importexport

Vulnerable Parameter(s)
				[+] manage_tabs_message

Affected Module(s)
				[+] Status Message


Proof of Concept (PoC):
=======================
The client-side cross site vulnerabilities can be exploited by remote attackers without privileged user account and with low user interaction.
For security demonstration of the issue or to reproduce the vulnerability follow the provided information and steps below to continue.

PoC: Exploitation
http://zms.localhost:8080/manage_importexport?lang=ger&amp;manage_tabs_message=%3Ciframe%20src=a%20onload=alert(document.cookie)%20%3C

PoC: Alert Status Message
<div class="alert alert-success">
	<a class="close" data-dismiss="alert" href="#">×</a>
	<iframe src="a" onload="alert(document.cookie)" <="" (27.07.16="" 21:53:28)="" div="">


PoC: Exploitation
http://zms.localhost:8080/manage_main?lang=ger&manage_tabs_message=%3Ciframe%20src=a%20onload=alert(document.cookie)%20%3C


PoC: Alert Status Message
<div class="alert alert-success">
	<a class="close" data-dismiss="alert" href="#">×</a>
	<iframe src="a" onload="alert(document.cookie)" <="" (27.07.16="" 22:02:21)="" div="">


Reference(s):
http://zms.localhost:8080/manage_main
http://zms.localhost:8080/manage_importexport


Solution - Fix & Patch:
=======================
The client-side cross site scripting web vulnerabilities can be patched by a secure parse of the manage_tabs_message parameter 
in the manage_main and manage_importexport files. Restrict the input and disallow the usage of special chars and filter the parameter.
Escape the context or entries and use an exception-handling to prevent further client-side script code injection attacks.


Security Risk:
==============
The security risk of the client-side cross site scripting web vulnerabilities in the zms web-application are estimated as medium. (CVSS 3.3)


Credits & Authors:
==================
Vulnerability Laboratory [Research Team] - Benjamin Kunz Mejri (bkm@...lution-sec.com) [www.vulnerability-lab.com]


Disclaimer & Information:
=========================
The information provided in this advisory is provided as it is without any warranty. Vulnerability Lab disclaims all warranties, either expressed or implied, 
including the warranties of merchantability and capability for a particular purpose. Vulnerability-Lab or its suppliers are not liable in any case of damage, 
including direct, indirect, incidental, consequential loss of business profits or special damages, even if Vulnerability-Lab or its suppliers have been advised 
of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing 
limitation may not apply. We do not approve or encourage anybody to break any licenses, policies, deface websites, hack into databases or trade with stolen data.

Domains:    www.vulnerability-lab.com 		- www.vuln-lab.com 						- www.evolution-sec.com
Contact:    admin@...nerability-lab.com 	- research@...nerability-lab.com 				- admin@...lution-sec.com
Section:    magazine.vulnerability-lab.com 	- vulnerability-lab.com/contact.php 				- evolution-sec.com/contact
Social:	    twitter.com/vuln_lab		- facebook.com/VulnerabilityLab 				- youtube.com/user/vulnerability0lab
Feeds:	    vulnerability-lab.com/rss/rss.php 	- vulnerability-lab.com/rss/rss_upcoming.php 			- vulnerability-lab.com/rss/rss_news.php
Programs:   vulnerability-lab.com/submit.php 	- vulnerability-lab.com/list-of-bug-bounty-programs.php 	- vulnerability-lab.com/register.php

Any modified copy or reproduction, including partially usages, of this file requires authorization from Vulnerability Laboratory. Permission to electronically 
redistribute this alert in its unmodified form is granted. All other rights, including the use of other media, are reserved by Vulnerability-Lab Research Team or 
its suppliers. All pictures, texts, advisories, source code, videos and other information on this website is trademark of vulnerability-lab team & the specific 
authors or managers. To record, list, modify, use or edit our material contact (admin@ or research@...nerability-lab.com) to get a ask permission.

				    Copyright © 2016 | Vulnerability Laboratory - [Evolution Security GmbH]™

-- 
VULNERABILITY LABORATORY - RESEARCH TEAM
SERVICE: www.vulnerability-lab.com



_______________________________________________
Sent through the Full Disclosure mailing list
https://nmap.org/mailman/listinfo/fulldisclosure
Web Archives & RSS: http://seclists.org/fulldisclosure/