
Date: Mon, 2 May 2022 19:47:58 -0400
From: malvuln <malvuln13@...il.com>
To: fulldisclosure@...lists.org
Subject: [FD] Ransom.AvosLocker / Code Execution

Discovery / credits: Malvuln - malvuln.com (c) 2022
Original source:
https://malvuln.com/advisory/40f2238875fcbd2a92cfefc4846a15a8.txt
Contact: malvuln13@...il.com
Media: twitter.com/malvuln

Threat: Ransom.AvosLocker
Vulnerability: Code Execution
Description: The ransomware looks for and executes DLLs in its current
directory. Therefore, we can potentially hijack a vuln DLL execute our
own code, control and terminate the malware pre-encryption. The
exploit dll will check if the current directory is
"C:\Windows\System32", if not we grab our process ID and terminate. We
do not need to rely on hash signature or third-party product, the
malware will do the work for us. Endpoint protection systems and or
antivirus can potentially be killed prior to executing malware, but
this method cannot as theres nothing to kill the DLL just lives on
disk waiting. From defensive perspective you can add the DLLs to a
specific network share containing important data as a layered
approach. All basic tests were conducted successfully in a virtual
machine environment.
Family: AvosLocker
Type: PE32
MD5: 40f2238875fcbd2a92cfefc4846a15a8
Vuln ID: MVID-2022-0573
Disclosure: 05/02/2022
Video PoC URL: https://www.youtube.com/watch?v=jCxG46dEmso

Exploit/PoC:
1) Compile the following C code as "mpr.dll"
2) Place the DLL in same directory as the ransomware
3) Optional - Hide it: attrib +s +h "mpr.dll"
4) Run the malware

#include "windows.h"
#include "stdio.h"

//By malvuln - 5/2/2022
//Vuln: Code Execution
//Target: Ransom.AvosLocker
//MD5: 40f2238875fcbd2a92cfefc4846a15a8
/** DISCLAIMER:
Author is NOT responsible for any damages whatsoever by using this
software or improper malware
handling. By using this code you assume and accept all risk implied or
otherwise.
**/

//gcc -c mpr.c -m32
//gcc -shared -o mpr.dll mpr.o -m32

BOOL APIENTRY DllMain(HINSTANCE hInst, DWORD reason, LPVOID reserved){
  switch (reason) {
  case DLL_PROCESS_ATTACH:
   MessageBox(NULL, "Code Exec", "by malvuln", MB_OK);
   TCHAR buf[MAX_PATH];
   GetCurrentDirectory(MAX_PATH, TEXT(buf));
   //printf("Current directory: %s\n", buf);
   //check the path
   int rc = strcmp("C:\\Windows\\System32", TEXT(buf));
   	if(rc != 0){
   	HANDLE handle = OpenProcess(PROCESS_TERMINATE, FALSE, getpid());
     if (NULL != handle) {
        TerminateProcess(handle, 0);
       CloseHandle(handle);
     }
   }
    break;
  }
  return TRUE;
}


Disclaimer: The information contained within this advisory is supplied
"as-is" with no warranties or guarantees of fitness of use or
otherwise. Permission is hereby granted for the redistribution of this
advisory, provided that it is not altered except by reformatting it,
and that due credit is given. Permission is explicitly given for
insertion in vulnerability databases and similar, provided that due
credit is given to the author. The author is not responsible for any
misuse of the information contained herein and accepts no
responsibility for any damage caused by the use or misuse of this
information. The author prohibits any malicious use of security
related information or exploits by the author or elsewhere. Do not
attempt to download Malware samples. The author of this website takes
no responsibility for any kind of damages occurring from improper
Malware handling or the downloading of ANY Malware mentioned on this
website or elsewhere. All content Copyright (c) Malvuln.com (TM).
_______________________________________________
Sent through the Full Disclosure mailing list
https://nmap.org/mailman/listinfo/fulldisclosure
Web Archives & RSS: https://seclists.org/fulldisclosure/
