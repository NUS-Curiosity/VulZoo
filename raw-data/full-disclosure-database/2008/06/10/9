
Date: Tue, 10 Jun 2008 11:20:57 -0400
From: iDefense Labs <labs-no-reply@...fense.com>
To: vulnwatch@...nwatch.org, full-disclosure@...ts.grok.org.uk, 
	bugtraq@...urityfocus.com
Subject: iDefense Security Advisory 06.10.08: Multiple
 Vendor OpenOffice rtl_allocateMemory() Integer Overflow Vulnerability

iDefense Security Advisory 06.10.08
http://labs.idefense.com/intelligence/vulnerabilities/
Jun 10, 2008

I. BACKGROUND

OpenOffice is an open-source desktop office suite for many of today's
popular operating systems. For more information, see the vendor's site
found at the following URL.

http://www.openoffice.org/

II. DESCRIPTION

Remote exploitation of an integer overflow vulnerability in OpenOffice,
as included in various vendors' operating system distributions, allows
attackers to execute arbitrary code with the privileges of the
logged-in user.

The vulnerability exists due to the rtl_allocateMemory() function
rounding up allocation requests to be aligned on an 8 byte boundary
without checking if this rounding results in an integer overflow
condition. The vulnerable code is as follows, taken from
sal/rtl/source/alloc_global.c:

   191  void *
   192  SAL_CALL rtl_allocateMemory (sal_Size n)
   193  {
   194          void * p = 0;
   195          if (n > 0)
   196          {
   197                  char *     addr;
   198                  sal_Size   size = RTL_MEMORY_ALIGN(n + 
RTL_MEMALIGN, RTL_MEMALIGN);
   199
   200                  int index = (size - 1) >> RTL_MEMALIGN_SHIFT;
   201                  OSL_ASSERT(RTL_MEMALIGN >= sizeof(sal_Size));
   202
   203  try_alloc:
   204                  if (index < RTL_MEMORY_CACHED_LIMIT >> 
RTL_MEMALIGN_SHIFT)
   205                          addr = 
(char*)rtl_cache_alloc(g_alloc_table[index]);
   206                  else
   207                          addr = (char*)rtl_arena_alloc 
(gp_alloc_arena, &size);
   208

The problem occurs at line 198. The n + RTL_MEMALIGN calculation can
overflow if n > UINT_MAX - RTL_MEMALIGN. This results in an undersized
buffer being allocated at try_alloc. This buffer is then passed back to
the calling function, which assumes that the buffer is much larger than
it actually is. This results in a heap overflow.

As this vulnerability occurs in the core memory allocator, there are
numerous ways to trigger the vulnerable code using a wide variety of
different file types.

III. ANALYSIS

Exploitation of this vulnerability results in the execution of arbitrary
code with the privileges of the user opening the file. To exploit this
vulnerability, an attacker needs to convince a user to open a malicious
file. After opening the file, no further interaction is needed.

IV. DETECTION

iDefense has confirmed the existence of this vulnerability in OpenOffice
version 2.4. Previous versions may also be affected.

V. WORKAROUND

iDefense is currently unaware of any workarounds for this issue. Since
the vulnerability can be triggered by so many different file types,
disabling access to certain file types is not a valid workaround. As
such, avoid opening files from untrusted parties and unexpected files
from trusted parties.

VI. VENDOR RESPONSE

OpenOffice.Org has addressed this vulnerability by releasing version
2.4.1 of their product. For more information, consult the OOo Security
Bulletin at the following URL.

http://www.openoffice.org/security/cves/CVE-2008-2152.html

VII. CVE INFORMATION

The Common Vulnerabilities and Exposures (CVE) project has assigned the
name CVE-2008-2152 to this issue. This is a candidate for inclusion in
the CVE list (http://cve.mitre.org/), which standardizes names for
security problems.

VIII. DISCLOSURE TIMELINE

05/08/2008  Initial vendor notification
05/09/2008  Initial vendor response
06/10/2008  Coordinated public disclosure

IX. CREDIT

This vulnerability was discovered by Sean Larsson, iDefense Labs.

Get paid for vulnerability research
http://labs.idefense.com/methodology/vulnerability/vcp.php

Free tools, research and upcoming events
http://labs.idefense.com/

X. LEGAL NOTICES

Copyright Â© 2008 iDefense, Inc.

Permission is granted for the redistribution of this alert
electronically. It may not be edited in any way without the express
written consent of iDefense. If you wish to reprint the whole or any
part of this alert in any other medium other than electronically,
please e-mail customerservice@...fense.com for permission.

Disclaimer: The information in the advisory is believed to be accurate
at the time of publishing based on currently available information. Use
of the information constitutes acceptance for use in an AS IS condition.
 There are no warranties with regard to this information. Neither the
author nor the publisher accepts any liability for any direct,
indirect, or consequential loss or damage arising from use of, or
reliance on, this information.

_______________________________________________
Full-Disclosure - We believe in it.
Charter: http://lists.grok.org.uk/full-disclosure-charter.html
Hosted and sponsored by Secunia - http://secunia.com/
