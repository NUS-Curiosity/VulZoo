
Date: Thu, 16 Oct 2008 01:00:52 -0400
From: scott <redhowlingwolves@...rr.com>
To: full-disclosure@...ts.grok.org.uk
Subject: Re: Multiple Flash Authoring Heap Overflows
 -	Malformed SWF Files

Paul Craig wrote:
> ========================================================================
> Multiple Flash Authoring Heap Overflows - Malformed SWF Files
>
> Vendor Website: http://www.adobe.com
>
> Affected Versions:
> Adobe Flash Professional CS3/Flash MX2004
>
> Vendor Notified. July 2008
> Public Disclosure. October 16th 2008
>
> Researcher: Paul Craig - paul.craig <at> security-assessment.com
>
> http://www.security-assessment.com/files/advisories/2008-10-16_Multiple_Flash_Authoring_Heap_Overflows.pdf
> http://www.adobe.com/go/apsa08-09
> ========================================================================
>
> ============================ Overview ==================================
>
> During analysis of the SWF file format used by commercial Flash authoring
> applications multiple heap overflows were discovered within Adobe Flash
> CS3 Professional, and Adobe Flash MX 2004.
>
> Heap overflow conditions occurred when opening or importing malformed .SWF
> files within the Flash authoring applications.
>
> Exploitable conditions were related to excessively long control parameters
> within an SWF file, which resulted in a heap overflow condition.
>
> Exploitation of the heap overflow conditions would allow a malicious user
> to gain command execution on the system which opened the file.
>
> Only the Flash authoring software was found to insecurely parse malformed
> .SWF files.
>
> The Flash player was NOT found to be vulnerable to these specific attacks.
>
>
> =========================== Solutions ==================================
>
> A patch has been released from Adobe to address this vulnerability
within CS3.
> Additionally Adobe Flash CS4 has been officially released which resolves
> these particular vulnerabilities.
>
> ============================ Credit ====================================
>
> Discovered and advised to Adobe in July 2008 by Paul Craig of
Security-Assessment.com
>
> ======================== About Security-Assessment.com =================
>
> Security-Assessment.com is Australasia's leading team of Information
Security consultants
> specialising in providing high quality Information Security services to
clients throughout
> the Asia Pacific region. Our clients include some of the largest
globally recognised
> companies in areas such as finance, telecommunications, broadcasting,
legal and government.
> Our aim is to provide the very best independent advice and a high level
of technical
> expertise while creating long and lasting professional relationships
with our clients.
>
> Security-Assessment.com is committed to security research and
development, and its team
> continues to identify and responsibly publish vulnerabilities in public
and private
> software vendor's products. Members of the Security-Assessment.com R&D
team are globally
> recognised through their release of whitepapers and presentations
related to new security
> research.
>
>
>
>
> Paul Craig
> Principal Security Consultant
> Security-Assessment.com
>
> _______________________________________________
> Full-Disclosure - We believe in it.
> Charter: http://lists.grok.org.uk/full-disclosure-charter.html
> Hosted and sponsored by Secunia - http://secunia.com/
>
Admittedly; a nice finding.

Realistically, there are hacked versions of .swf devel platforms that
allow you to do, pretty much, what you want if it will fit in the
amount of space that is safe for AV's to miss the exploit that you
present to the user.

Same with .pdf's and a slew of other file formats.

I guess the real problem comes in believing the user is actually
using the adobe product.

Just saying that authors can be using a different approach.

No bad karma intended.

_______________________________________________
Full-Disclosure - We believe in it.
Charter: http://lists.grok.org.uk/full-disclosure-charter.html
Hosted and sponsored by Secunia - http://secunia.com/
