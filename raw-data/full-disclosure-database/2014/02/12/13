
Date: Wed, 12 Feb 2014 09:40:15 -0500
From: "Mikhail A. Utin" <mutin@...monwealthcare.org>
To: "full-disclosure@...ts.grok.org.uk" <full-disclosure@...ts.grok.org.uk>
Subject: Re: DoS via tables corruption in WordPress
	(Timothy Goddard)




































Hello,
I would add my question.
I'm installing WP and MySQL for it. I installed accounts and MySQL hashed passwords. So, it's secure.
However WP config file uses clear text password to communicate with MySQL. Config file more likely will stay as 755 on my Linux box.
So, am I missing WP option to use the hash instead of clear text? Old time issue, but was a bit surprised.

Mikhail

------------------------------

Message: 3
Date: Wed, 12 Feb 2014 09:03:57 +1300
From: Timothy Goddard <tim@...dard.net.nz>
To: nacin@...dpress.org, mustlive@...security.com.ua
Cc: full-disclosure@...ts.grok.org.uk
Subject: Re: [Full-disclosure] DoS via tables corruption in WordPress
Message-ID: <0fe1t861gpkc4pjywt176h95.1392149037306@...il.android.com>
Content-Type: text/plain; charset="utf-8"

I agree that the DoS part is vague and not a vulnerability in WordPress. However, my question would be:

* Will an error running a database statement lead to WordPress showing the install process to visitors?
* What additional privileges do they then have?
* Could this cause a non-exploitable db bug to become exploitable?

If the answers there lean towards yes, lots and yes, then some mitigation is called for.


Sent from Samsung Mobile

-------- Original message --------
From: Andrew Nacin <nacin@...dpress.org>
Date:
To: MustLive <mustlive@...security.com.ua>
Cc: full-disclosure@...ts.grok.org.uk
Subject: Re: [Full-disclosure] DoS via tables corruption in WordPress

On Mon, Feb 10, 2014 at 8:02 AM, MustLive <mustlive@...security.com.ua> wrote:
There is DoS vulnerability in WordPress, <snip>

As pointed out by others, this is unbearably vague.

But it's also invalid.

Your "attack" requires that a maintenance script to repair tables is left open for anyone to access. The constant that you point out must be set,?WP_ALLOW_REPAIR, is only there so a user can access this script, run the script, then remove the constant (as the script instructs).

Your suggestion appears to be to validate the logged-in user. But because this script is to fix a *corrupt database,* we would have no way of authenticating users. Thus, the script is instead secured by a temporary configuration change.

Aris mentions he experienced corruption in his own WordPress setup. It's most likely the options table simply crashed, not as a result of any particular exploit. This is, after all, why MySQL has a REPAIR command (and why we have a script for users to use).

I have read?to quite a few of your "attacks" against WordPress core, but I don't recall ever reading a valid one.

Perhaps for WordPress issues you should switch from "full disclosure" to a more responsible course of action, such as contacting us first (security@...dpress.org) so we can evaluate it.?I understand the general appeal of full disclosure, but when all you're doing is publishing invalid vulnerabilities, it's only spreading FUD and also making it tough for others to take any of your "attacks" seriously. This mailing list would probably appreciate the higher signal-to-noise ratio.

Regards,

Andrew Nacin
Lead Developer
WordPress
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.grok.org.uk/pipermail/full-disclosure/attachments/20140212/bd7f6c15/attachment-0001.html>

------------------------------

Message: 4
Date: Tue, 11 Feb 2014 20:18:50 -0200
From: William Costa <william.costa@...il.com>
To: "full-disclosure@...ts.grok.org.uk"
        <full-disclosure@...ts.grok.org.uk>
Subject: [Full-disclosure] Reflected XSS Attacks vulnerabilities in
        DELL SonicWALL Universal Management Suite v7.1 (CVE-2014-0332)
Message-ID:
        <CAOmMdVsSRM9LRcoB6_o1vMGjfq5om4CTRPrq6O4O6+4sTNye-w@...l.gmail.com>
Content-Type: text/plain; charset="iso-8859-1"

 I. VULNERABILITY

-------------------------

Reflected XSS Attacks vulnerabilities in DELL SonicWALL Universal Management Suite v7.1



II. BACKGROUND

-------------------------

Dell(R) SonicWALL(R) provides intelligent network security and data protection solutions that enable customers and partners to dynamically secure, control, and scale their global networks.



III. DESCRIPTION

-------------------------

Has been detected a Reflected XSS vulnerability in DELL SonicWALL Universal Management Suite.

The code injection is done through the parameter "node_id " in the page "/sgms/mainPage?page=genNetwork&screenid=1002&manager=ScreenDisplayManager&level=1&node_id"



IV. PROOF OF CONCEPT

-------------------------

The application does not validate the parameter "node_id" correctly.



https://ip_gms/sgms/mainPage?page=genNetwork&screenid=1002&manager=ScreenDisplayManager&level=1&node_id=aaaaa"><script>alert(document.cookie);</script>&screenid=1002&unused=&help_url=&node_name=Instance
View&unitType=1&searchBySonicwall=0




V. BUSINESS IMPACT

-------------------------

An attacker can execute arbitrary HTML or script code in a targeted

user's browser, , that allows the execution of arbitrary HTML/script code to be executed in the context of the victim user's browser allowing Cookie Theft/Session Hijacking, thus enabling full access the box.











VI. SYSTEMS AFFECTED

-------------------------

Tested DELL SonicWALL Universal Management Suite v7.1 DEMO ONLINE





VII. SOLUTION

-------------------------

All data received by the application and can be modified by the user,

before making any kind of transaction with them must be validated



VII. REFERENCES
-------------------------
http://www.kb.cert.org/vuls/id/727318
http://www.sonicwall.com/us/shared/download/Support_Bulletin_GMS_Vulnerability_XSS_Resolved_in_7.1_SP2_and_7.2.pdf


By William Costa

william.costa@...il.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.grok.org.uk/pipermail/full-disclosure/attachments/20140211/c10e6dd2/attachment-0001.html>

------------------------------

Message: 5
Date: Wed, 12 Feb 2014 12:26:30 +0100
From: Vulnerability Lab <research@...nerability-lab.com>
To: full-disclosure@...ts.grok.org.uk
Subject: [Full-disclosure] jDisk (stickto) v2.0.3 iOS - Multiple Web
        Vulnerabilities
Message-ID: <52FB5A66.2080703@...nerability-lab.com>
Content-Type: text/plain; charset=ISO-8859-15

Document Title:
===============
jDisk (stickto) v2.0.3 iOS - Multiple Web Vulnerabilities


References (Source):
====================
http://www.vulnerability-lab.com/get_content.php?id=1196


Release Date:
=============
2014-02-12


Vulnerability Laboratory ID (VL-ID):
====================================
1196


Common Vulnerability Scoring System:
====================================
9.4


Product & Service Introduction:
===============================
jDisk turns your iPhone`iPad`iPod into a flash drive / disk. jDisk provides a purely web-based management UI, what you need do is visit it in your browser, no client installation is needed. What`s more, jDisk embeds a native file manager, you can organize your files/folders on your device directly, open files, edit them, preview them, etc. All in all, jDisk empowers your iPhone/iPad, make it work as a moving disk / flash drive.

(Copy of the Homepage: https://itunes.apple.com/de/app/jdisk-convert-your-device/id604793088 )


Abstract Advisory Information:
==============================
The Vulnerability Laboratory Research Team discovered multiple vulnerabilities in the official sticktos jDisk v2.0.3 iOS mobile web-application.


Vulnerability Disclosure Timeline:
==================================
2014-02-12:    Public Disclosure (Vulnerability Laboratory)


Discovery Status:
=================
Published


Affected Product(s):
====================
Apple AppStore
Product: jDisk (stickto) iOS - Mobile Web Application 2.0.3


Exploitation Technique:
=======================
Remote


Severity Level:
===============
Critical


Technical Details & Description:
================================
1.1
Multiple remote code execution web vulnerabilities has been discovered in the official sticktos jDisk v2.0.3 iOS mobile web-application.
The vulnerability allows remote attackers to execute unauthorized system specific codes or commands to compromise the affected system/service.

The vulnerabilities are located in the `New+ Text file` and `New+ Folder` function of the jdisk wifi application file manager web-interface.
Remote attackers are able to inject own system specific codes by manipulation of the folder- & file name value in the add procedure.
The code execution occurs in the main file dir index and sub category listing, the add new edit file but also in the the app status notification message context. The security risk of the remote code execution vulnerabilities in the add new folder- & text file function are estimated as critical with a cvss (common vulnerability scoring system) count of 9.4(+)|(-)9.5.

Exploitation of the code execution vulnerability requires no user interaction or privileged mobile web-application user account with password.
Successful exploitation of the remote code execution vulnerabilities results in mobile application or connected device component compromise.

Request Method(s):
                                [+] [POST]

Vulnerable Module(s):
                                [+] New/Add Folder
                                [+] New/Add Text File

Vulnerable Parameter(s):
                                [+] folder name
                                [+] text-file name

Affected Module(s):
                                [+] Index & Sub Category - File Dir Listing
                                [+] Notification Message
                                [+] File Edit - Header


1.2
A directory-traversal web vulnerability has been discovered in the official sticktos jDisk v2.0.3 iOS mobile web-application.
The vulnerability allows remote attackers to unauthorized access system path variables or web-server data to compromise the application.

The local vulnerability is located in the `folderContent to folder` value of the mobile application. Remote attackers can exploit the bug by usage of a manipulated GET method request to unauthorized access app/device paths or folders. The local issue is a classic directory-traversal web vulnerability. The execution of the malicious dt string in the foldercontent to folder path request occurs in the context of the requested interface page itself. The security risk of the directory traversal web vulnerability is estimated as high(-) with a cvss (common vulnerability scoring system) count of 6.6(+)|(-)6.7.

Exploitation of the directory traversal web vulnerability requires no user interaction or privileged mobile web-application user account with password.
Successful exploitation of the path traversal web vulnerability results in mobile application or connected device component compromise.

Request Method(s):
                                [+] [GET]

Vulnerable Module(s):
                                [+] __FD__?action

Vulnerable Parameter(s):
                                [+] folderContent&folder=

Affected Module(s):
                                [+] Index & Sub Category - File Dir Listing



1.3
A local file include web vulnerability has been discovered in the official sticktos jDisk v2.0.3 iOS mobile web-application.
The local file include web vulnerability allows remote attackers to unauthorized include local file/path requests or system specific path commands to compromise the web-application or mobile device.

The web vulnerability is located in the `file name` value of the `Upload > Uplaod Files` module POST method request. Remote attackers are able to inject own files with malicious filename to compromise the mobile application. The attack vector is persistent and the request method is POST. The local file/path include execution occcurs in the main file dir index- or sub category item listing of the file manager. The security risk of the local file include web vulnerability is estimated as high with a cvss (common vulnerability scoring system) count of 8.3(+)|(-)8.4.

Exploitation of the local file include web vulnerability requires no user interaction or privileged web-application user account with password. Successful exploitation of the local web vulnerability results in mobile application or connected device component compromise by unauthorized local file include web attacks.

Request Method(s):
                                [+] [POST]

Vulnerable Input(s):
                                [+] Upload > Upload Files

Vulnerable Parameter(s):
                                [+] filename

Affected Module(s):
                                [+] Index File Dir Item Listing
                                [+] Sub Category File Dir Item Listing


Proof of Concept (PoC):
=======================
1.1
The remote code execution can be exploited by remote attackers without privileged web-application user account or user interaction.
For security demonstration or to reproduce the security vulnerability follow the provided information and steps below.

--- PoC Session Logs [POST] ---
Status: 200[OK]
POST http://localhost:12345/__FD__?action=saveFile&path=[VULNERABLE CODE EXECUTION VALUE!] Load Flags[LOAD_BYPASS_CACHE  LOAD_BACKGROUND  ] Gr??e des Inhalts[86] Mime Type[text/html]
   Request Header:
      Host[localhost:12345]
      User-Agent[Mozilla/5.0 (Windows NT 6.3; WOW64; rv:26.0) Gecko/20100101 Firefox/26.0]
      Accept[text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8]
      Accept-Language[de-de,de;q=0.8,en-us;q=0.5,en;q=0.3]
      Accept-Encoding[gzip, deflate]
      Content-Type[application/json; charset=UTF-8]
      X-Requested-With[XMLHttpRequest]
      Referer[http://localhost:12345/]
      Content-Length[14]
      Cookie[jtable%2376270709page-size=10]
      Connection[keep-alive]
      Pragma[no-cache]
      Cache-Control[no-cache]
   POST-Daten:
      {"content":"&path=[VULNERABLE CODE EXECUTION VALUE!]"}[]
   Response Header:
      Accept-Ranges[bytes]
      Content-Length[86]
      Content-Type[text/html]
      Date[Tue, 11 Feb 2014 23:11:06 GMT]


1.2
The directory-traversal vulnerability can be exploited by remote attackers without user interaction or privileged web-application user account.
For security demonstration or to reproduce the security vulnerability follow the provided information and steps below.

PoC:
http://localhost:12345/__FD__?action=folderContent&folder=%20%2F..%2F..%2F[DIRECTORY TRAVERSAL WEB VULNERABILITY!]&_dc=1392159953825

#{"msg":"","success":true,"data":[{"name":"%20%2F..%2F..%2F[DIRECTORY TRAVERSAL WEB VULNERABILITY!]","id":"/%20%2F..%2F..%2F[DIRECTORY TRAVERSAL WEB VULNERABILITY!]","type":"file",
"size":24386,"changed":"2014-02-12 00:13:49","created":"2014-02-12 00:13:49"}]}

--- PoC Session Logs [GET] ---
Status: 200[OK]
GET http://localhost:12345/__FD__?action=folderContent&folder=%20%2F..%2F..%2F[DIRECTORY TRAVERSAL WEB VULNERABILITY!]&_dc=1392159953825 Load Flags[LOAD_DOCUMENT_URI  LOAD_INITIAL_DOCUMENT_URI  ] Gr??e des Inhalts[35] Mime Type[text/html]
   Request Header:
      Host[localhost:12345]
      User-Agent[Mozilla/5.0 (Windows NT 6.3; WOW64; rv:26.0) Gecko/20100101 Firefox/26.0]
      Accept[text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8]
      Accept-Language[de-de,de;q=0.8,en-us;q=0.5,en;q=0.3]
      Accept-Encoding[gzip, deflate]
      Cookie[jtable%2376270709page-size=10]
      Connection[keep-alive]
   Response Header:
      Accept-Ranges[bytes]
      Content-Length[35]
      Content-Type[text/html]
      Date[Tue, 11 Feb 2014 23:14:46 GMT]




1.3
The file include vulnerability can be exploited by remote attackers without user interaction or privileged web-application user account.
For security demonstration or to reproduce the security vulnerability follow the provided information and steps below.

PoC:

<div class="x-grid-row-checker"> </div></div></td><td class=" x-grid-cell x-grid-cell-gridcolumn-1015   ">
<div class="x-grid-cell-inner " style="text-align: left; ;"><div style="position:relative;top:3px">
<img src="JoyfulPhone%C2%AE%20jDisk_file%20include_rename-Dateien/__FD__.txt" style="width:16px;height:16px;"><span style="position:absolute; padding-left: 5px; padding-top:0px">>"<[LOCAL FILE INCLUDE VULNERABILITY!].txt">[LOCAL FILE INCLUDE VULNERABILITY!].jpg</span></div></div></td><td
 class=" x-grid-cell x-grid-cell-gridcolumn-1016   " ><div
class="x-grid-cell-inner " style="text-align: left; ;">/</div></td><td class=" x-grid-cell
x-grid-cell-gridcolumn-1017   " ><div  class="x-grid-cell-inner "
style="text-align: right; ;">23.8 KB</div></td><td
class=" x-grid-cell x-grid-cell-gridcolumn-1018   " ><div
class="x-grid-cell-inner " style="text-align: left; ;">2014-02-12 00:13:49</div></td><td class=" x-grid-cell
x-grid-cell-gridcolumn-1019   x-grid-cell-last" ><div
class="x-grid-cell-inner " style="text-align: left; ;">2014-02-12 00:13:49</div></td></tr></tbody></table></iframe></span></div></div></td></tr></tbody></table></div>

PoC: rename - text file

<td style="width: 100%;" class="x-form-item-body " id="messagebox-1001-testfield-bodyEl" role="presentation" colspan="3"> <input value=">"<[LOCAL FILE INCLUDE VULNERABILITY!]>[LOCAL FILE INCLUDE VULNERABILITY!].jpg" data-errorqtip="" aria-invalid="false"
id="messagebox-1001-testfield-inputEl" size="1" name="messagebox-1001-testfield-inputEl" style="width: 100%; -moz-user-select:
text;" class="x-form-field x-form-text x-form-focus x-field-form-focus x-field-default-form-focus" autocomplete="off" type="text"></td></tr></tbody></table>
<table id="messagebox-1001-textarea" class="x-field x-form-item x-field-default x-anchor-form-item" style="height: 75px; table-layout: fixed; width: 520px;
display: none;" cellpadding="0"><tbody><tr id="messagebox-1001-textarea-inputRow"><td id="messagebox-1001-textarea-labelCell" style="display:none;"
halign="left" class="x-field-label-cell" valign="top" width="105"><label id="messagebox-1001-textarea-labelEl" for="messagebox-1001-textarea-inputEl"
class="x-form-item-label x-form-item-label-left" style="width:100px;margin-right:5px;"></label></td><td style="width: 100%;" class="x-form-item-body "
id="messagebox-1001-textarea-bodyEl" role="presentation" colspan="3"><textarea data-errorqtip="" aria-invalid="false" id="messagebox-1001-textarea-inputEl"
name="messagebox-1001-textarea-inputEl" rows="4" cols="20" class="x-form-field x-form-text" style="width: 100%; height: 75px; -moz-user-select: text;"
autocomplete="off">


Security Risk:
==============
1.1
The security risk of the remote code execution web vulnerabilities are estimated as critical.

1.2
The security risk of the directory traversal web vulnerabilities are estimated as high(-).

1.3
The security risk of the local file include web vulnerabilities are estimated as high(+).


Credits & Authors:
==================
Vulnerability Laboratory [Research Team] - Benjamin Kunz Mejri (bkm@...lution-sec.com) [www.vulnerability-lab.com]


Disclaimer & Information:
=========================
The information provided in this advisory is provided as it is without any warranty. Vulnerability Lab disclaims all warranties,
either expressed or implied, including the warranties of merchantability and capability for a particular purpose. Vulnerability-
Lab or its suppliers are not liable in any case of damage, including direct, indirect, incidental, consequential loss of business
profits or special damages, even if Vulnerability-Lab or its suppliers have been advised of the possibility of such damages. Some
states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation
may not apply. We do not approve or encourage anybody to break any vendor licenses, policies, deface websites, hack into databases
or trade with fraud/stolen material.

Domains:    www.vulnerability-lab.com           - www.vuln-lab.com                             - www.evolution-sec.com
Contact:    admin@...nerability-lab.com         - research@...nerability-lab.com               - admin@...lution-sec.com
Section:    www.vulnerability-lab.com/dev       - forum.vulnerability-db.com                   - magazine.vulnerability-db.com
Social:     twitter.com/#!/vuln_lab             - facebook.com/VulnerabilityLab                - youtube.com/user/vulnerability0lab
Feeds:      vulnerability-lab.com/rss/rss.php   - vulnerability-lab.com/rss/rss_upcoming.php   - vulnerability-lab.com/rss/rss_news.php

Any modified copy or reproduction, including partially usages, of this file requires authorization from Vulnerability Laboratory.
Permission to electronically redistribute this alert in its unmodified form is granted. All other rights, including the use of other
media, are reserved by Vulnerability-Lab Research Team or its suppliers. All pictures, texts, advisories, source code, videos and
other information on this website is trademark of vulnerability-lab team & the specific authors or managers. To record, list (feed),
modify, use or edit our material contact (admin@...nerability-lab.com or research@...nerability-lab.com) to get a permission.

                                Copyright ? 2014 | Vulnerability Laboratory [Evolution Security]



--
VULNERABILITY LABORATORY RESEARCH TEAM
DOMAIN: www.vulnerability-lab.com
CONTACT: research@...nerability-lab.com




------------------------------

Message: 6
Date: Wed, 12 Feb 2014 09:58:29 +0200
From: Shay Chen <sectooladdict.vendors@...il.com>
To: full-disclosure@...ts.grok.org.uk
Subject: [Full-disclosure] [Benchmark 2014] WAVSEP Vulnerability
        Scanner Benchmark 2013/2014
Message-ID:
        <CAJvxAA3Z2-8DMgcrS8LmGjYF=-s_BZ12EMYPyeH=Ap2krAXNNQ@...l.gmail.com>
Content-Type: text/plain; charset="iso-8859-1"

The **2014** *WAVSEP* web application scanner benchmark has been published
-

And currently includes new products that were tested for the first time, as
well as returning vendors that were not tested for a while.


Covering a total **63** vulnerability scanners, including commercial
scanners, multiple SAAS engines and open source vendors, the research
compares the performance of the various tested scanners in the following
aspects:


(*) Prices vs. Features

(*) Automated Crawling (WIVET)

(*) Technology and Input Delivery Method Support

(*) Backup/Hidden File Detection Accuracy (*NEW!*)

(*) Unvalidated Redirect Detection Accuracy (*NEW!*)

(*) SQL Injection Detection Accuracy

(*) Cross Site Scripting Detection Accuracy

(*) Path Traversal / LFI Detection Accuracy

(*) (XSS/Phishing via) Remote File Inclusion

(*) Supported Vulnerability Detection Features (e.g. audit features)

(*) Authentication and Usability Features

(*) Coverage and Scan Barrier Support (AntiCSRF Tokens, CAPTCHA, etc)

(*) Etc



The benchmark **one page** result summary can be viewed through the
following link:

http://sectoolmarket.com/price-and-feature-comparison-of-web-application-scanners-unified-list.html

The full article, which includes analysis and conclusions, can be accessed
through the following link:
http://sectooladdict.blogspot.com/2014/02/wavsep-web-application-scanner.html
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.grok.org.uk/pipermail/full-disclosure/attachments/20140212/31009446/attachment-0001.html>

------------------------------

Message: 7
Date: Wed, 12 Feb 2014 11:19:55 +0000
From: John Cartwright <johnc@...k.org.uk>
To: full-disclosure@...ts.grok.org.uk
Subject: [Full-disclosure] List Charter
Message-ID: <20140212111951.GA25399@...k.org.uk>
Content-Type: text/plain; charset=us-ascii


[Full-Disclosure] Mailing List Charter
John Cartwright <johnc@...k.org.uk>


- Introduction & Purpose -

This document serves as a charter for the [Full-Disclosure] mailing
list hosted at lists.grok.org.uk.

The list was created on 9th July 2002 by Len Rose, and is primarily
concerned with security issues and their discussion.  The list is
administered by John Cartwright.

The Full-Disclosure list is hosted and sponsored by Secunia.


- Subscription Information -

Subscription/unsubscription may be performed via the HTTP interface
located at http://lists.grok.org.uk/mailman/listinfo/full-disclosure.

Alternatively, commands may be emailed to
full-disclosure-request@...ts.grok.org.uk, send the word 'help' in
either the message subject or body for details.


- Moderation & Management -

The [Full-Disclosure] list is unmoderated. Typically posting will be
restricted to members only, however the administrators may choose to
accept submissions from non-members based on individual merit and
relevance.

It is expected that the list will be largely self-policing, however in
special circumstances (eg spamming, misappropriation) then offending
members may be removed from the list by the management.

An archive of postings is available at
http://lists.grok.org.uk/pipermail/full-disclosure/.


- Acceptable Content -

Any information pertaining to vulnerabilities is acceptable, for
instance announcement and discussion thereof, exploit techniques and
code, related tools and papers, and other useful information.

Gratuitous advertisement, product placement, or self-promotion is
forbidden.  Disagreements, flames, arguments, and off-topic discussion
should be taken off-list wherever possible.

Humour is acceptable in moderation, providing it is inoffensive.
Politics should be avoided at all costs.

Members are reminded that due to the open nature of the list, they
should use discretion in executing any tools or code distributed via
this list.


- Posting Guidelines -

The primary language of this list is English. Members are expected to
maintain a reasonable standard of netiquette when posting to the list.

Quoting should not exceed that which is necessary to convey context,
this is especially relevant to members subscribed to the digested
version of the list.

The use of HTML is discouraged, but not forbidden. Signatures will
preferably be short and to the point, and those containing
'disclaimers' should be avoided where possible.

Attachments may be included if relevant or necessary (e.g. PGP or
S/MIME signatures, proof-of-concept code, etc) but must not be active
(in the case of a worm, for example) or malicious to the recipient.

Vacation messages should be carefully configured to avoid replying to
list postings. Offenders will be excluded from the mailing list until
the problem is corrected.

Members may post to the list by emailing
full-disclosure@...ts.grok.org.uk. Do not send subscription/
unsubscription mails to this address, use the -request address
mentioned above.


- Charter Additions/Changes -

The list charter will be published at
http://lists.grok.org.uk/full-disclosure-charter.html.

In addition, the charter will be posted monthly to the list by the
management.

Alterations will be made after consultation with list members and a
consensus has been reached.



------------------------------

Subject: Digest Footer

_______________________________________________
Full-Disclosure - We believe in it.
Charter: http://lists.grok.org.uk/full-disclosure-charter.html
Hosted and sponsored by Secunia - http://secunia.com/

------------------------------

End of Full-Disclosure Digest, Vol 108, Issue 13
************************************************
CONFIDENTIALITY NOTICE: This email communication and any attachments may contain confidential 
and privileged information for the use of the designated recipients named above. If you are 
not the intended recipient, you are hereby notified that you have received this communication 
in error and that any review, disclosure, dissemination, distribution or copying of it or its 
contents is prohibited. If you have received this communication in error, please reply to the 
sender immediately or by telephone at (617) 426-0600 and destroy all copies of this communication 
and any attachments. For further information regarding Commonwealth Care Alliance's privacy policy, 
please visit our Internet web site at http://www.commonwealthcare.org.


_______________________________________________
Full-Disclosure - We believe in it.
Charter: http://lists.grok.org.uk/full-disclosure-charter.html
Hosted and sponsored by Secunia - http://secunia.com/
