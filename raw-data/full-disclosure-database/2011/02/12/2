
Date: Sat, 12 Feb 2011 06:54:04 +0000
From: "Cal Leeming [Simplicity Media Ltd]"
	<cal.leeming@...plicitymedialtd.co.uk>
To: coderman <coderman@...il.com>
Cc: full-disclosure@...ts.grok.org.uk
Subject: Re: High performance exception/traceback
	reporting system

Certainly having support for C++ would be great, but I know sweet FA when it
comes to coding in C/C++, so this may be the perfect time to learn lol.

Your suggestions for having hotlinks back to component information is pretty
hot. On the actual traceback view itself, I'm thinking of having a filter
section at the top which lets you expand/show/hide specific information
(such as frame variables, cast types vs str() wrapped display etc).

I had a look at django-sentry, but it is no where near what I envisaged the
end result to be.

For me, the most important thing is to make this system easily deployable,
self contained, and to have an interface/feature set which focuses on what's
best for a developer, not a manager (possibly in the future, it may have a
'managers' view which lets you see a business impact overview of all the
exceptions etc).

On Fri, Feb 11, 2011 at 7:55 PM, coderman <coderman@...il.com> wrote:

> On Fri, Feb 11, 2011 at 11:51 AM, coderman <coderman@...il.com> wrote:
> > On Fri, Feb 11, 2011 at 9:17 AM, Cal Leeming [Simplicity Media Ltd]
> > <cal.leeming@...plicitymedialtd.co.uk> wrote:
> >> ... current prototype stores basic exception information (the file path,
> >> line number, exception type, exception value, originating webapp, node
> >> hostname etc) ...
>
> implicit in my last reply is language agnostic exception reporting, or
> at least c++ support in addition to python/ruby/php/whatever ;)
>

Content of type "text/html" skipped

_______________________________________________
Full-Disclosure - We believe in it.
Charter: http://lists.grok.org.uk/full-disclosure-charter.html
Hosted and sponsored by Secunia - http://secunia.com/
