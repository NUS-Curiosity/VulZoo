
Date: Fri, 11 Feb 2011 11:51:26 -0800
From: coderman <coderman@...il.com>
To: "Cal Leeming [Simplicity Media Ltd]" <cal.leeming@...plicitymedialtd.co.uk>
Cc: full-disclosure@...ts.grok.org.uk
Subject: Re: High performance exception/traceback
	reporting system

On Fri, Feb 11, 2011 at 9:17 AM, Cal Leeming [Simplicity Media Ltd]
<cal.leeming@...plicitymedialtd.co.uk> wrote:
> ... current prototype stores basic exception information (the file path,
> line number, exception type, exception value, originating webapp, node
> hostname etc) ...
> A web interface then allows you to browse through these exceptions
> (currently via Django admin), and view them...
> if anyone has any
> suggestions as to what they would like to see in this, please feel free to
> mention them!

handy; some things i would find useful to add:

hotlinks to online sources (or internal repos?) like
http://mxr.mozilla.org/firefox/source/xpcom/components/nsComponentManager.cpp#167
when matched against call stack.

xref against debug symbol exports, crashdumps. (that is, tooltip or
info on EXE/DLL/shlib filename, imports/export table names and
offsets. bonus points for IE based VisualStudio browser hooks to
project runtime associated with a particular call stack, or windows
error reporting crash dump.


on this subject, how are you handling multiple threads of execution,
or C++ de-mangling in exception stacks, if at all beyond what is
included in output by default?

_______________________________________________
Full-Disclosure - We believe in it.
Charter: http://lists.grok.org.uk/full-disclosure-charter.html
Hosted and sponsored by Secunia - http://secunia.com/
