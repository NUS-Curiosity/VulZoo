
Date: Tue, 16 May 2017 12:14:04 +0200
From: Vulnerability Lab <research@...nerability-lab.com>
To: fulldisclosure@...lists.org
Subject: [FD] Wordpress EELV Newsletter v4.5 - Multiple Vulnerabilities

Document Title:
===============
Wordpress EELV Newsletter v4.5 - Multiple Vulnerabilities


References (Source):
====================
https://www.vulnerability-lab.com/get_content.php?id=2069


Release Date:
=============
2017-05-15


Vulnerability Laboratory ID (VL-ID):
====================================
2069


Common Vulnerability Scoring System:
====================================
3.3


Vulnerability Class:
====================
Multiple


Product & Service Introduction:
===============================
Add a registration form on FrontOffice, a newsletter manager on backoffice manage skins, address book, archives and direct answers.


Abstract Advisory Information:
==============================
An independent vulnerability laboratory researcher discovered a stored cross site and cross site request forgery vulnerability in the official  EELV Newsletter v4.5 Plugin.


Vulnerability Disclosure Timeline:
==================================
2017-05-15: Public Disclosure (Vulnerability Laboratory)


Discovery Status:
=================
Published


Affected Product(s):
====================
Bastien Ho
Product: EELV Newsletter - Plugin (Wordpress) 4.5


Exploitation Technique:
=======================
Remote


Severity Level:
===============
Medium


Technical Details & Description:
================================
Multiple client-side cross site web vulnerabilities has been discovered in the official Wordpress EELV Newsletter v4.5 web-application plugin.
The persistent web vulnerability allows remote attackers to inject own malicious script code on the application-side of the web-application.
The cross site request forgery vulnerability allows remote attackers to perform malicious client-side requests with user interaction to 
manipulate the web-application.

1.1
The application-side cross site vulnerability is located in the `s` value of the page module POST method request. Remote attackers are able to 
inject own malicious script codes to the application-side of the online service web-application to compromise user session information or data. 
The request method to inject is POST and the attack vector is persistent.

1.2
The cross site request forgery vulnerability is located in the `delgroupe` parameter of the `addressbook`. Remote attackers can prepare special 
crafted webpages to perform client-side delete requests with the administrator session. The request method to execute is GET and the attack 
vector of the vulnerability is non-persistent.

The security risk of the client-side web vulnerabilities are estimated as medium with a cvss (common vulnerability scoring system) count of 3.3.
Exploitation of the persistent web vulnerability requires no privileged web application user account and low user interaction (click link).
Exploitation of the csrf web vulnerability requires no privileged web application user account and low user interaction (click link). 
Successful exploitation of the vulnerability results in session hijacking, persistent phishing, persistent external redirects, 
persistent load of malicious script codes or persistent web module context manipulation.

Request Method(s):
[+] GET

Vulnerable Service(s):
[+] Truemag Theme (Wordpress)

Vulnerable Module(s):
[+] ./wp-contact/theme/truemag

Vulnerable Parameter(s):
[+] s


Proof of Concept (PoC):
=======================
The persistent cross site vulnerability can be exploited by remote attackers with privileged web-application user account and low user interaction.
For security demonstration or to reproduce the vulnerability follow the provided information and steps below to continue.

1.1
PoC: XSS (Payload)
"><script>alert(document.cookie)</script>

Manual steps to reproduce the vulnerability ...
1. First go to http://localhost:8080/wordpress/wp-admin/edit.php?post_type=newsletter&page=news_carnet_adresse
2. Create new adress book 
3. Include the following payload to the input field
Note: "><script>alert(document.cookie)</script>
4. Click save and the payload executes within the same module context
5. Successful reproduce of the persistent cross site vulnerability!


1.2
PoC CSRF:
<img src="http://king.coder/wordpress/wp-admin/edit.php?post_type=newsletter&page=news_carnet_adresse&delgroupe=[CSRF VULNERABILITY VIA BOOK ID]">


Reference(s):
http://localhost:8080/wordpress/
http://localhost:8080/wordpress/wp-admin/
http://localhost:8080/wordpress/wp-admin/edit.php
http://localhost:8080/wordpress/wp-admin/edit.php?post_type=newsletter
http://localhost:8080/wordpress/wp-admin/edit.php?post_type=newsletter&page=news_carnet_adresse


Solution - Fix & Patch:
=======================
The vulnerability can be patched by a secure parse  the webpage GET method request.
Encode the parameter and restrict the input value to prevent further script code injection attacks.


Security Risk:
==============
The security risk of the cross site  web vulnerabilities in the web-application are estimated as medium. (CVSS 3.3)




Credits & Authors:
==================
King Coder -  [https://www.vulnerability-lab.com/show.php?user=King%20Coder]


Disclaimer & Information:
=========================
The information provided in this advisory is provided as it is without any warranty. Vulnerability Lab disclaims all warranties, either expressed or 
implied, including the warranties of merchantability and capability for a particular purpose. Vulnerability-Lab or its suppliers are not liable in any 
case of damage, including direct, indirect, incidental, consequential loss of business profits or special damages, even if Vulnerability Labs or its 
suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability mainly for incidental
or consequential damages so the foregoing limitation may not apply. We do not approve or encourage anybody to break any licenses, policies, deface 
websites, hack into databases or trade with stolen data. We have no need for criminal activities or membership requests. We do not publish advisories 
or vulnerabilities of religious-, militant- and racist- hacker/analyst/researcher groups or individuals. We do not publish trade researcher mails, 
phone numbers, conversations or anything else to journalists, investigative authorities or private individuals. 

Domains:    www.vulnerability-lab.com		- www.vulnerability-db.com					- www.evolution-sec.com
Programs:   vulnerability-lab.com/submit.php 	- vulnerability-lab.com/list-of-bug-bounty-programs.php 	- vulnerability-lab.com/register.php
Feeds:	    vulnerability-lab.com/rss/rss.php 	- vulnerability-lab.com/rss/rss_upcoming.php 			- vulnerability-lab.com/rss/rss_news.php
Social:	    twitter.com/vuln_lab		- facebook.com/VulnerabilityLab 				- youtube.com/user/vulnerability0lab

Any modified copy or reproduction, including partially usages, of this file, resources or information requires authorization from Vulnerability Laboratory. 
Permission to electronically redistribute this alert in its unmodified form is granted. All other rights, including the use of other media, are reserved by 
Vulnerability Lab Research Team or its suppliers. All pictures, texts, advisories, source code, videos and other information on this website is trademark 
of vulnerability-lab team & the specific authors or managers. To record, list, modify, use or edit our material contact (admin@) to get an ask permission.

				    Copyright © 2017 | Vulnerability Laboratory - [Evolution Security GmbH]™



-- 
VULNERABILITY LABORATORY - RESEARCH TEAM
SERVICE: www.vulnerability-lab.com



_______________________________________________
Sent through the Full Disclosure mailing list
https://nmap.org/mailman/listinfo/fulldisclosure
Web Archives & RSS: http://seclists.org/fulldisclosure/