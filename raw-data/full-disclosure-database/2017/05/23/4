
Date: Tue, 23 May 2017 10:19:19 +0200
From: Vulnerability Lab <research@...nerability-lab.com>
To: fulldisclosure@...lists.org
Subject: [FD] Wordpress Newsletter Supsystic 1.1.7 - Cross Site Scripting
 Vulnerability

Document Title:
===============
Wordpress Newsletter Supsystic 1.1.7 - Cross Site Scripting Vulnerability


References (Source):
====================
https://www.vulnerability-lab.com/get_content.php?id=2070


Release Date:
=============
2017-05-16


Vulnerability Laboratory ID (VL-ID):
====================================
2070


Common Vulnerability Scoring System:
====================================
3.2


Vulnerability Class:
====================
Cross Site Scripting - Non Persistent


Product & Service Introduction:
===============================
Newsletter by Supsystic out of box plugin for mail list building, newsletter creation, send and track email campaigns.
Drag-and-drop newsletter template builder delights. Build-in mass mail sending and integration with mail services like 
MailChimp, Aweber, etc. Unlimited subscribers and mails for free.

(Copy of the Vendors Wordpress Plugin Page: https://de.wordpress.org/plugins/newsletter-by-supsystic/ )


Abstract Advisory Information:
==============================
An independent vulnerability laboratory researcher discovered a cross site scripting vulnerability in the official  Newsletter Plugin by Supsystic for Wordpress.


Vulnerability Disclosure Timeline:
==================================
2015-05-16: Public Disclosure (Vulnerability Laboratory)


Discovery Status:
=================
Published


Affected Product(s):
====================
Supsystic
Product: Newsletter by Supsystic - Wordpress Plugin (Web-Application) 1.1.7


Exploitation Technique:
=======================
Remote


Severity Level:
===============
Medium


Technical Details & Description:
================================
A stored cross site scripting web vulnerability has been discovered in the official Wordpress Newsletter Plugin by Supsystic v1.1.7.
The persistent vulnerability allows remote attackers to inject own malicious script code to the application-side of the module or function.

The stored cross site vulnerability is located in the `s` parameter of the `page` module GET method request. Remote attackers are able to 
inject own malicious script codes to the application-side of the online service web-application to compromise user session information or 
to permanently manipulate data.

The security risk of the cross site web vulnerability is estimated as medium with a cvss (common vulnerability scoring system) count of 3.2.
Exploitation of the cross site scripting web vulnerability requires no privileged web-application user account and low user interaction. 
Successful exploitation results in session hijacking, persistent phishings attacks, persistent external redirect and malware loads or persistent 
manipulation of affected and connected module context.

Request Method(s):
[+] GET

Vulnerable Service(s):
[+] Contentive Theme (Wordpress)

Vulnerable Input Field(s):
[+] Newsletter Name

Vulnerable Parameter(s):
[+] ?s=


Proof of Concept (PoC):
=======================
The remote cross site vulnerability can only be exploited by remote attackers with a privileged web-application user account and with low user interaction.
For security demonstration or to reproduce the vulnerability follow the provided information and steps below to continue.

PoC: Payload (Exploitation)
<script>alert(document.cookie)</script>
<script>alert(document.domain)</script>


Manual steps to reproduce vulnerability ...
1. First go to following url ...
Note: http://localhost:8080/wordpress/wp-admin/admin.php?page=newsletters-supsystic&tab=newsletters_add_new
2. Create a new newsletter
3. Include a payload as newsletter name, choose anything from newsletter list or templates section and click save to submit via POST method
4. The payload executes within the list after the malicious content is saved
5. Successful reproduce of the stored cross site scripting vulnerability!


Reference(s):
http://site.com:8080/wp-admin/admin.php?page=newsletters-supsystic&tab=newsletters_add_new


Solution - Fix & Patch:
=======================
The vulnerability can be patched by a parse and encode of the vulnerable `newsletter name` value in the webpage POST method request.
Encode the parameter and restrict the value input to prevent further script code injection attacks. Parse the output location, were 
the execution point occurs to prevent exploitation.


Security Risk:
==============
The security risk of the cross site scripting vulnerability in the wordpress newletter plugin is estimated as medium (CVSS 3.2).


Credits & Authors:
==================
King Coder -  [https://www.vulnerability-lab.com/show.php?user=King%20Coder]


Disclaimer & Information:
=========================
The information provided in this advisory is provided as it is without any warranty. Vulnerability Lab disclaims all warranties, either expressed or 
implied, including the warranties of merchantability and capability for a particular purpose. Vulnerability-Lab or its suppliers are not liable in any 
case of damage, including direct, indirect, incidental, consequential loss of business profits or special damages, even if Vulnerability Labs or its 
suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability mainly for incidental
or consequential damages so the foregoing limitation may not apply. We do not approve or encourage anybody to break any licenses, policies, deface 
websites, hack into databases or trade with stolen data. We have no need for criminal activities or membership requests. We do not publish advisories 
or vulnerabilities of religious-, militant- and racist- hacker/analyst/researcher groups or individuals. We do not publish trade researcher mails, 
phone numbers, conversations or anything else to journalists, investigative authorities or private individuals. 

Domains:    www.vulnerability-lab.com		- www.vulnerability-db.com					- www.evolution-sec.com
Programs:   vulnerability-lab.com/submit.php 	- vulnerability-lab.com/list-of-bug-bounty-programs.php 	- vulnerability-lab.com/register.php
Feeds:	    vulnerability-lab.com/rss/rss.php 	- vulnerability-lab.com/rss/rss_upcoming.php 			- vulnerability-lab.com/rss/rss_news.php
Social:	    twitter.com/vuln_lab		- facebook.com/VulnerabilityLab 				- youtube.com/user/vulnerability0lab

Any modified copy or reproduction, including partially usages, of this file, resources or information requires authorization from Vulnerability Laboratory. 
Permission to electronically redistribute this alert in its unmodified form is granted. All other rights, including the use of other media, are reserved by 
Vulnerability Lab Research Team or its suppliers. All pictures, texts, advisories, source code, videos and other information on this website is trademark 
of vulnerability-lab team & the specific authors or managers. To record, list, modify, use or edit our material contact (admin@) to get an ask permission.

				    Copyright © 2017 | Vulnerability Laboratory - [Evolution Security GmbH]™



-- 
VULNERABILITY LABORATORY - RESEARCH TEAM
SERVICE: www.vulnerability-lab.com



_______________________________________________
Sent through the Full Disclosure mailing list
https://nmap.org/mailman/listinfo/fulldisclosure
Web Archives & RSS: http://seclists.org/fulldisclosure/