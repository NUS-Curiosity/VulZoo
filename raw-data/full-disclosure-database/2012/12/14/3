
Date: Fri, 14 Dec 2012 08:34:17 +0100
From: Vulnerability Lab <research@...nerability-lab.com>
To: full-disclosure@...ts.grok.org.uk
Subject: Paypal Core Bug Bounty #3 - Persistent Web
	Vulnerability

Title:
======
Paypal Core Bug Bounty #3 - Persistent Web Vulnerability


Date:
=====
2012-12-12


References:
===========
http://www.vulnerability-lab.com/get_content.php?id=635


VL-ID:
=====
635


Common Vulnerability Scoring System:
====================================
4


Introduction:
=============
PayPal is a global e-commerce business allowing payments and money transfers to be made through the Internet. Online money 
transfers serve as electronic alternatives to paying with traditional paper methods, such as checks and money orders. Originally, 
a PayPal account could be funded with an electronic debit from a bank account or by a credit card at the payer s choice. But some 
time in 2010 or early 2011, PayPal began to require a verified bank account after the account holder exceeded a predetermined 
spending limit. After that point, PayPal will attempt to take funds for a purchase from funding sources according to a specified 
funding hierarchy. If you set one of the funding sources as Primary, it will default to that, within that level of the hierarchy 
(for example, if your credit card ending in 4567 is set as the Primary over 1234, it will still attempt to pay money out of your 
PayPal balance, before it attempts to charge your credit card). The funding hierarchy is a balance in the PayPal account; a 
PayPal credit account, PayPal Extras, PayPal SmartConnect, PayPal Extras Master Card or Bill Me Later (if selected as primary 
funding source) (It can bypass the Balance); a verified bank account; other funding sources, such as non-PayPal credit cards.
The recipient of a PayPal transfer can either request a check from PayPal, establish their own PayPal deposit account or request 
a transfer to their bank account.

PayPal is an acquirer, performing payment processing for online vendors, auction sites, and other commercial users, for which it 
charges a fee. It may also charge a fee for receiving money, proportional to the amount received. The fees depend on the currency 
used, the payment option used, the country of the sender, the country of the recipient, the amount sent and the recipient s account 
type. In addition, eBay purchases made by credit card through PayPal may incur extra fees if the buyer and seller use different currencies.

On October 3, 2002, PayPal became a wholly owned subsidiary of eBay. Its corporate headquarters are in San Jose, California, United 
States at eBay s North First Street satellite office campus. The company also has significant operations in Omaha, Nebraska, Scottsdale, 
Arizona, and Austin, Texas, in the United States, Chennai, Dublin, Kleinmachnow (near Berlin) and Tel Aviv. As of July 2007, across 
Europe, PayPal also operates as a Luxembourg-based bank.

On March 17, 2010, PayPal entered into an agreement with China UnionPay (CUP), China s bankcard association, to allow Chinese consumers 
to use PayPal to shop online.PayPal is planning to expand its workforce in Asia to 2,000 by the end of the year 2010.
Between December 4–9, 2010, PayPal services were attacked in a series of denial-of-service attacks organized by Anonymous in retaliation 
for PayPal s decision to freeze the account of WikiLeaks citing terms of use violations over the publication of leaked US diplomatic cables.

(Copy of the Homepage: www.paypal.com) [http://en.wikipedia.org/wiki/PayPal]


Abstract:
=========
The Vulnerability Laboratory Research Team discovered persistent web vulnerability in the official Paypal (core) ecommerce website content management system.


Report-Timeline:
================
2012-06-30:	Researcher Notification & Coordination
2012-06-30:	Vendor Notification
2012-07-02:	Vendor Response/Feedback 1
2012-10-08:	Vendor Response/Feedback 2
2012-12-11:	Vendor Fix/Patch
2012-12-12:	Public or Non-Public Disclosure


Status:
========
Published


Exploitation-Technique:
=======================
Remote


Affected Products:
==================
Paypal - Core Application [2012 Q2-3]

Severity:
=========
Medium


Details:
========
A persistent input validation vulnerability is detected in the official Paypal (core) ecommerce website content management system.
The bug allows remote attackers to implement/inject own malicious script code on the application side (persistent).

The persistent input validation vulnerability is located in the Adressbuch module with the bound vulnerable search function 
when processing to request script code tags as `Addressbuch` contacts. The code will be executed out of the search result 
listing web context. Remote exploitation requires low user interaction and a privileged paypal banking application user account. 

Successful exploitation of the vulnerability results in persistent session hijacking (admin), account steal via persistent phishing or 
persistent search module web context manipulation.

Vulnerable Module(s):
                          [+] Adressbuch > Search > Benutzer/Kontakt

Vulnerable Parameter(s):
                          [+] search_str - Results

Affected Section(s):
                          [+] Results - Index (Listing)


Proof of Concept:
=================
The persistent vulnerability can be exploited by remote attackers with privileged paypal user account and low required user interaction.
For demonstration or reproduce ...

PoC: [Existing Listing] (Index) Adressbuch > Search > Benutzer/Kontakt >  results

<form sourceindex="5" method="post" name="searchContact" action="https://www.paypal.com/de/cgi-bin/webscr?
SESSION=4b304_obgVN3fxg6LFp08F6lUBD7aWq0HG3SWv5HSmrKxR_xRzWrZOtwRDq&
dispatch=5885d80a13c0db1f8e263663d3faee8d8494db97
03d295b4a2116480ee01a05c" class=""><input name="cmd" value="_flow" type="hidden"><input id="baseUrl" name="baseUrl" 
value="www.paypal.com/de" type="hidden"><input id="selectLabel" name="selectLabel" value="" type="hidden"><input id="currentid" 
name="current_id" value="0" type="hidden"><input id="CONTEXT_CGI_VAR" name="CONTEXT" value="X3-7SZn2ExXucINxlliZ_05NdFsrIIpaV9TcRYNLL
_GiOwm9XgEZzWKQeV0" type="hidden"><div class="searchMainDiv"><fieldset id="searchBy"><legend class="accessAid">Suchen</legend><span 
class="floatLeft"><label for="search_str"><strong>Suchen</strong></label><input sourceindex="6" autocomplete="off" id="search_str" 
name="search_str" value=""><[PERSISTENT SCRIPT CODE INJECTION] <" type="text"><input sourceindex="7" 
name="searchGo.x" value="Los" class="button elemAjax" type="submit"></span><span><input sourceindex="8" name="addContact.x" 
value="Neuen Kontakt hinzufügen" class="button floatRight" type="submit"></span></fieldset></div><div class="floatLeft" 
id="resultPanel"><div id="resultDiv"><div id="leftSide"><ul id="val"><li class="rowLeft oddRow focus" id="L1">
<span class="results">"><[PERSISTENT SCRIPT CODE INJECTION]"…</span'><span
 class='viewEditLink 
show'></span></li></ul></div><div 
id='rightSideDiv' class='withBorder' tabindex='0'><div class='view
 show'><h3>"><[PERSISTENT SCRIPT CODE INJECTION] <("</h3><div class='links'> <span 
class='buttonAsLink'><input type='submit' 
name='editCID-T22A-J6G3-GZBY-SHK8.x' value='Bearbeiten'></span>
 | <span class='buttonAsLink'><input type='submit' id='delete' 
name='deleteCID-T22A-J6G3-GZBY-SHK8.x' value='Löschen' 
class='deleteButton'></span></span></div><div 
class='info'><span class='address'>"><iframe src=a 
onload=alert(" "><iframe src=a onload=alert("</span><span
 class='address'>"><[PERSISTENT SCRIPT CODE INJECTION] <") 
<</span><span 
class='address'>bkm@...nerability-lab.com</span><span 
class='address'>Deutschland</span></div><div 
class='info'><span class='address 
heading'>Zusatzinformationen</span><span 
class='address'>"><[PERSISTENT SCRIPT CODE INJECTION] <") 
<</span></div><div class='info'><span 
class='address heading'>Rechnungsadresse</span><span 
class='address'>"><[PERSISTENT SCRIPT CODE INJECTION] <") 
<<br>Deutschland</span></div></div></div></div></iframe></span></li>
</ul></div></div></div><input name="auth" value="M8_dK6Q4HG9oPBKoZ_4I6YQ6TWdaI00OnfMkOwWXQ6pOZjZRca8TSAO38hIC585zYBbTFKQz1Qg7UOte0VbD_ah-
dzZjkiuSC-unZSf6mNBym71XfmcQvdV0WPwOUivermg9_ZZWTQH7yV9OG-bLLIzxH3ZFUJHX0uQzwZ-4v65aKp5013-712a
00pnY9m2cURtoC02BRhB_kOkuODdR5I6pS_NXG5ZmIMgnrJhkSgYl09piAB0icMRkReu" type="hidden">
<input name="form_charset" value="UTF-8" type="hidden"></form>


Note:

The name with the code was saved in the addressbook. Only the matching and successful result leads to the persistent execution of the web context.
When the other user is searching the existing account of the addressbook the code will be executed persistent out of the matching search result 
web context listing. If you do not know this it will be a bit harder to reproduce. The bug is 100% existing because the screenshots show it 
and also the poc. I found the issue by manually exploitation over the different application layers and function. Maybe i guessed to implement 
this details to the submission. The requested code with the malicious persistent code can be reviewed in the attached poc document.


Manually reproduce ...

1. Go to the addressbook and switch to add a new contact to adressbook
2. Include script code (html/js) as username to the addressbook and save the context 
2. Now, switch to the user search (addressbook) module (other layer) & click the user contact search to activate
3. Include the exact name of the username (script code (html/js)) from the addressbook and press the search button
4. The context of the other layer from the addressbook will be executed directly out of the results listing page of the exisiting user contacts
5. Done! POST REQUEST: method="post" name="searchContact"


Solution:
=========
The vulnerability can be patched by parsing the addressbook search results module with the bound vulnerability matching account listing.


Risk:
=====
The security risk of the persistent script code inject vulnerability is estimated as medium(+).


Credits:
========
Vulnerability Laboratory [Research Team]  -    Benjamin Kunz Mejri (bkm@...nerability-lab.com)


Disclaimer:
===========
The information provided in this advisory is provided as it is without any warranty. Vulnerability-Lab disclaims all warranties, 
either expressed or implied, including the warranties of merchantability and capability for a particular purpose. Vulnerability-
Lab or its suppliers are not liable in any case of damage, including direct, indirect, incidental, consequential loss of business 
profits or special damages, even if Vulnerability-Lab or its suppliers have been advised of the possibility of such damages. Some 
states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation 
may not apply. We do not approve or encourage anybody to break any vendor licenses, policies, deface websites, hack into databases 
or trade with fraud/stolen material.

Domains:    www.vulnerability-lab.com   	- www.vuln-lab.com			       - www.vulnerability-lab.com/register
Contact:    admin@...nerability-lab.com 	- support@...nerability-lab.com 	       - research@...nerability-lab.com
Section:    video.vulnerability-lab.com 	- forum.vulnerability-lab.com 		       - news.vulnerability-lab.com
Social:	    twitter.com/#!/vuln_lab 		- facebook.com/VulnerabilityLab 	       - youtube.com/user/vulnerability0lab
Feeds:	    vulnerability-lab.com/rss/rss.php	- vulnerability-lab.com/rss/rss_upcoming.php   - vulnerability-lab.com/rss/rss_news.php

Any modified copy or reproduction, including partially usages, of this file requires authorization from Vulnerability Laboratory. 
Permission to electronically redistribute this alert in its unmodified form is granted. All other rights, including the use of other 
media, are reserved by Vulnerability-Lab Research Team or its suppliers. All pictures, texts, advisories, sourcecode, videos and 
other information on this website is trademark of vulnerability-lab team & the specific authors or managers. To record, list (feed), 
modify, use or edit our material contact (admin@...nerability-lab.com or support@...nerability-lab.com) to get a permission.

    				   	Copyright © 2012 | Vulnerability Laboratory

-- 
VULNERABILITY RESEARCH LABORATORY
LABORATORY RESEARCH TEAM
CONTACT: research@...nerability-lab.com


_______________________________________________
Full-Disclosure - We believe in it.
Charter: http://lists.grok.org.uk/full-disclosure-charter.html
Hosted and sponsored by Secunia - http://secunia.com/