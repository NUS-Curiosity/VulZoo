
Date: Wed, 28 Jul 2010 14:45:01 -0300
From: "M.B.Jr." <marcio.barbado@...il.com>
To: Rohit Patnaik <quanticle@...il.com>
Cc: Full-Disclosure mailing list <full-disclosure@...ts.grok.org.uk>
Subject: Re: Patent Absurdity - How software patents broke
	the system

Hi Rohit,
sorry for such a delay in this reply.


On Sat, Jul 24, 2010 at 8:49 PM, Rohit Patnaik <quanticle@...il.com> wrote:
> Now here's a question that should bring this thread back on-topic.  How
> patentable are security tools?


Your point alludes to one very generical concept but it is interesting
for it gives the chance to extirpate some confusion people make in
this subject.

See, maybe you don't clearly understand the difference between a
license and a patent.

A license is a contract between a licensor and a licensee. These 2
parties could be 2 commercial companies for example.

So, if your company's employees write some code, licensed under
proprietary premises, then your company won't have to make the sources
available to its customers, because they accepted the license. The
relationship is between your company and the one buying software from
it.

Now, a software patent, say, in the US, is a government rule which
gives a patentee, exclusive rights in a process, which often involves
math.

Suppose your software's algorithms make use of a patent you have never
heard of. I mean, you know the process, obviously. Though, you didn't
know it was patented. The patentee can sue you because of that. When
the relationship becomes clear, you see it is between your company and
some party you didn't know until that moment.

And then, if your company wants to keep selling the software its own
employees wrote, it will have to pay cash for the referred party (the
once unknown patentee).

The point is, trivial algos often represent patents.

You know stupid people? Well, sometimes they think, and when they
think, they get amused and sassy with that, like:

"OMG! am I an inventive smart badass or what?!"

they presuppose originality based on the environment they live in. And
sometimes, they manage to turn that trivial math stupidity into a
government rule.

But math constitutes a public domain group of sciences.

Security is exactly there, where your software, based upon public
domain mathematics, is threatened by discontinuation or modification,
which risks your company's stability and your customers' businesses.

If one wants to protect his "inventive" equations, he can do it
through a proprietary license contract between his represented party
and his customers. Though, the State must be aware of some other
thinking-capable people's presence in the world, which means,
different people may get to similar equations/algos.

Capiche?

Don't worry about your fuzzers. License your tools the way you think
it's reasonable to you.


Regards,



> On Thu, Jul 15, 2010 at 11:31 PM, M.B.Jr. <marcio.barbado@...il.com> wrote:
>>
>> Hello.
>>
>> Patent Absurdity explores the case of software patents and the history
>> of judicial activism that led to their rise, and the harm being done
>> to software developers and the wider economy. The film is based on a
>> series of interviews conducted during the Supreme Court's review of in
>> re Bilski â€” a case that could have profound implications for the
>> patenting of software.
>>
>> http://patentabsurdity.com/watch.html
>>
>>
>> Regards,
>>
>>
>>
>> Marcio Barbado, Jr.
>>
>> _______________________________________________
>> Full-Disclosure - We believe in it.
>> Charter: http://lists.grok.org.uk/full-disclosure-charter.html
>> Hosted and sponsored by Secunia - http://secunia.com/
>



Marcio Barbado, Jr.

_______________________________________________
Full-Disclosure - We believe in it.
Charter: http://lists.grok.org.uk/full-disclosure-charter.html
Hosted and sponsored by Secunia - http://secunia.com/