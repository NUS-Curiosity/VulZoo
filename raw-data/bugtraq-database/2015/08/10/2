
Date: Fri, 7 Aug 2015 19:25:40 +0200
From: Vulnerability Lab <research@...nerability-lab.com>
To: bugtraq@...urityfocus.com, bugs@...uritytracker.com
Subject: Device Inspector v1.5 iOS - Command Inject Vulnerabilities

Document Title:
===============
Device Inspector v1.5 iOS - Command Inject Vulnerabilities


References (Source):
====================
http://www.vulnerability-lab.com/get_content.php?id=1558


Release Date:
=============
2015-08-07


Vulnerability Laboratory ID (VL-ID):
====================================
1558


Common Vulnerability Scoring System:
====================================
5.7


Product & Service Introduction:
===============================
This app for professional and individual, collects all the features of your iPhone, iPod Touch or iPad and send them by mail with 2 clicks.
Device Inspector goes beyond the information provided in `Settings`. Device heading delivers a detailed information sheet of your device: 
model, storage capacity, Bluetooth version, processor speed, iOS version ... Battery topic tell you about the battery level and battery 
life: standby, 2G and 3G talk time, in 3G and WiFi Web browsing, reading, audio and video. Usage heading tells you the status of your 
device memory and how you use it: with apps, music, playlists or audio books ... The last entry Process, lists all open programs on 
the device: the natives (phone, mail ...) or apps downloaded on the App Store.

For professional of the mobile apps, Device Inspector will be particularly useful for the rapid transmission of the UDID of your 
Apple terminal. To register a test device, the process of retrieving the identifier is rather heavy: Connect the iPhone to the 
computer, open iTunes, select the device in iTunes, click the serial number field, copy and paste UDID in the mail. 
With Device Inspector, simply launch the app and click on `Send`.

(Copy of the Homepage: https://itunes.apple.com/us/app/device-inspector/id423791543 )


Abstract Advisory Information:
==============================
The Vulnerability Laboratory Research Team discovered multiple command inject web vulnerabilities in the official Device Inspector v1.5 iOS mobile web-application.


Vulnerability Disclosure Timeline:
==================================
2015-08-07: Public Disclosure (Vulnerability Laboratory)


Discovery Status:
=================
Published


Affected Product(s):
====================
DPC Interactive
Product: Device Inspector - iOS Mobile (Web-Application) 1.5


Exploitation Technique:
=======================
Local


Severity Level:
===============
Medium


Technical Details & Description:
================================
Multiple local command inject web vulnerabilities has been discovered in the official Device Inspector v1.5 iOS mobile web-application.
The vulnerability allows local attackers to inject own commands by usage of stored manipulated system/device values to compromise the 
iOS mobile web-application.

The first vulnerability is located in the device cell name value of the main device inspector app index. The app does not encode the values 
of the device name which results in a compromise by local command inject. The injection point is the device cell name in the ios device settings.
The execution point is the app inspector device information index listing. The vulnerability is located on the application-side and the request 
method to inject is a sync via save.

The second vulnerability is located in the device cell name value of the send (by mail) function. Local attackers are able to manipulated with 
restricted access the device name to compromise the mail send body context. The injection point of the issue is the same like in the first issue 
the device cell name. The execution point of the vulnerability is the send > email body context. The app takes the device name with wrong encoding 
and includes it to the mail. Thus results in an application-side issue via command inject.

The security risk of the local command inject vulnerabilities are estimated as medium with a cvss (common vulnerability scoring system) count of 5.7. 
Exploitation of the command inject web vulnerability requires a low privilege ios device account with restricted physical access without user interaction. 
Successful exploitation of the vulnerability results in unauthorized execution of system specific commands and unauthorized path value requests to 
compromise the mobile iOS application and connected device components.

Vulnerable Module(s)
				[+] Device - Settings - Information
 
Vulnerable Parameter(s)
				[+] device cell name

Affected Module(s)
				[+] Device Inspector - Information Listing (Index)
				[+] Device Inspector - Send (Mail)


Proof of Concept (PoC):
=======================
The command inject web vulnerabilities can be exploited by local attackers with physical device access or restricted user accounts without user interaction.
For security demonstration or to reproduce the vulnerability follow the provided information and steps below to continue.

PoC: Send > Mail
<html><head>
<title>Device Inspector : bkm337>"<img src"x">%20<iframe src=a>%20<iframe></title>
<link rel="important stylesheet" href="chrome://messagebody/skin/messageBody.css">
</head><body>
<table border=0 cellspacing=0 cellpadding=0 width="100%" class="header-part1"><tr><td><b>Betreff: 
</b>Device Inspector : bkm337>"<img src"x">%20<iframe src=a>%20<iframe></td>
</tr><tr><td><b>Von: </b>Benjamin Mejri Kunz <vulnerabilitylab@...oud.com></td></tr><tr><td><b>Datum: 
</b>28.06.2015 20:50</td></tr></table><table border=0 cellspacing=0 cellpadding=0 width="100%" class="header-part2">
<tr><td><b>An: </b>aki <bkm@...lution-sec.com></td></tr></table><br>
<html><head><meta http-equiv="content-type" content="text/html; "></head><body dir="auto"><div>Hello,<br><br>As agreed, 
the following information about my iPad4 :<br>
<br>UDID: FFFFFFFF8848EB96910C4AAB9AB3E07025049091<br>Name: bkm337>"<img src"x"="" src="cid:">%20<iframe src="a">%20<iframe><BR>Version: 
8.3<BR>Resolution: 1536x2048 (Retina)<BR>Capacity: 27,19 Go<BR><BR>This informations have been send from the iPhone/iPad app 
Device Inspector (available on App Store: 
<a href="http://itunes.apple.com/us/app/id423791543?mt=8">http://itunes.apple.com/us/app/id423791543?mt=8</a>)</iframe></div><div></div></body></html>
</body>
</html>



Solution - Fix & Patch:
=======================
The vulnerability in the index list can be patched by a secure parse and encode of the device cell name. Restrict the input and disallow special chars. 
The issue in the mail encode can be prevented by disallowing html in email send by the application. Encode the device cell name to prevent local 
command injects via device data.


Security Risk:
==============
The security risk of the local command injection web vulnerabilities in the mail send and index listing module are estimated as medium. (CVSS 5.7)


Credits & Authors:
==================
Vulnerability Laboratory [Research Team] - Benjamin Kunz Mejri (bkm@...lution-sec.com) [www.vulnerability-lab.com]


Disclaimer & Information:
=========================
The information provided in this advisory is provided as it is without any warranty. Vulnerability Lab disclaims all warranties, either 
expressed or implied, including the warranties of merchantability and capability for a particular purpose. Vulnerability-Lab or its suppliers 
are not liable in any case of damage, including direct, indirect, incidental, consequential loss of business profits or special damages, even 
if Vulnerability-Lab or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation 
of liability for consequential or incidental damages so the foregoing limitation may not apply. We do not approve or encourage anybody to break 
any vendor licenses, policies, deface websites, hack into databases or trade with fraud/stolen material.

Domains:    www.vulnerability-lab.com   	- www.vuln-lab.com			       		- www.evolution-sec.com
Contact:    admin@...nerability-lab.com 	- research@...nerability-lab.com 	       		- admin@...lution-sec.com
Section:    dev.vulnerability-db.com	 	- forum.vulnerability-db.com 		       		- magazine.vulnerability-db.com
Social:	    twitter.com/#!/vuln_lab 		- facebook.com/VulnerabilityLab 	       		- youtube.com/user/vulnerability0lab
Feeds:	    vulnerability-lab.com/rss/rss.php	- vulnerability-lab.com/rss/rss_upcoming.php   		- vulnerability-lab.com/rss/rss_news.php
Programs:   vulnerability-lab.com/submit.php  	- vulnerability-lab.com/list-of-bug-bounty-programs.php	- vulnerability-lab.com/register/

Any modified copy or reproduction, including partially usages, of this file requires authorization from Vulnerability Laboratory. Permission to 
electronically redistribute this alert in its unmodified form is granted. All other rights, including the use of other media, are reserved by 
Vulnerability-Lab Research Team or its suppliers. All pictures, texts, advisories, source code, videos and other information on this website 
is trademark of vulnerability-lab team & the specific authors or managers. To record, list (feed), modify, use or edit our material contact 
(admin@...nerability-lab.com or research@...nerability-lab.com) to get a permission.

				Copyright Â© 2014 | Vulnerability Laboratory [Evolution Security]



-- 
VULNERABILITY LABORATORY - RESEARCH TEAM
SERVICE: www.vulnerability-lab.com
CONTACT: research@...nerability-lab.com
PGP KEY: http://www.vulnerability-lab.com/keys/admin@vulnerability-lab.com%280x198E9928%29.txt


