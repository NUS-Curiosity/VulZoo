
Date: Wed, 01 Jul 2015 09:17:47 +0200
From: Vulnerability Lab <research@...nerability-lab.com>
To: bugtraq@...urityfocus.com, bugs@...uritytracker.com
Subject: FCS Scanner v1.0 & v1.4 - Command Inject Vulnerability

Document Title:
===============
FCS Scanner v1.0 & v1.4 - Command Inject Vulnerability


References (Source):
====================
http://www.vulnerability-lab.com/get_content.php?id=1538


Release Date:
=============
2015-06-30


Vulnerability Laboratory ID (VL-ID):
====================================
1538


Common Vulnerability Scoring System:
====================================
5.9


Product & Service Introduction:
===============================
This app (available in German and English) scans your smartphone or tablet and supplies you with detailed hardware and software information.
All data can be sent by mail in xml format. For an exact identification of every mobile: the name of the file attached contains the inventory 
number, if there is one, or the Serial Number otherwise. Thus you can do a professional inventory for multiple phones or tablets!

(Copy of the Homepage: https://itunes.apple.com/nz/app/fcs-scanner/id902969515 & https://play.google.com/store/apps/details?id=fcs.apps.fcsscanner )


Abstract Advisory Information:
==============================
The Vulnerability Laboratory Research team discovered a local command inject web vulnerability in the official FCS Scanner v1.0 iOS & v1.4 Android mobile application.


Vulnerability Disclosure Timeline:
==================================
2015-06-30:	Public Disclosure (Vulnerability Laboratory)


Discovery Status:
=================
Published


Affected Product(s):
====================
FCS Fair Computer Systems GmbH
Product: FCS Scanner - iOS & Android Mobile Application 1.0 & 1.4


Exploitation Technique:
=======================
Local


Severity Level:
===============
Medium


Technical Details & Description:
================================
A local command inject web vulnerability has been discovered in the official FCS Scanner v1.0 iOS & v1.4 Android mobile application.
The vulnerability allows to inject malicious script codes to the application-side of the vulnerable mobile fcs scanner app.

The vulnerability is located in the device id value of the send by mail function. Local attackers are able to manipulate the name value 
of the device to compromise the mail function of the fcs scanner mobile app. The html and xml encoding is broken in the send by mail 
export function. Local attackers are able to manipulate the device name id to compromise the application internal validation in the send 
emails module. The attack vector of the vulnerability is server-side and the injection point is the device name information settings.

The security risk of the local command/path inject vulnerability is estimated as medium with a cvss (common vulnerability scoring system) count of 5.9. 
Exploitation of the command/path inject vulnerability requires a low privilege android/ios device account with restricted access and no user interaction. 
Successful exploitation of the vulnerability results in unauthorized execution of system specific commands and unauthorized path value requests to 
compromise the mobile iOS application and connected device components.

Vulnerable Module(s):
				[+] Device - Settings - Information
 
Vulnerable Parameter(s):
				[+] device id

Affected Module(s):
				[+] FCS Scanner - Mail & XML


Proof of Concept (PoC):
=======================
The local command inject web vulnerability can be exploited by local attackers with low privilege device user account and without user interaction.
For security demonstration or to reproduce the security vulnerability follow the provided information and steps below to continue.

Manual steps to reproduce the vulnerability ...
1. Start the iOS device
2. Open the settings module
3. Change the name to the local command injection payload
4. Save the settings and start the application fcs scanner
5. Send the details by mail
6. Review the arrival inbox 
7. The execution point is the xml and header location with the device id value
8. Successful reproduce of the local command inject security vulnerability!


PoC: Device ID - Email

<html>
<head>
<title>FCS Scanner: bkm337>"<./[LOCAL COMMAND INJECT VULNERABILITY VIA DEVICE NAME VALUE!]></title>
<link rel="important stylesheet" href="chrome://messagebody/skin/messageBody.css">
</head>
<body>
<table border=0 cellspacing=0 cellpadding=0 width="100%" class="header-part1"><tr><td><b>Betreff: 
</b>FCS Scanner: bkm337>"<img src"x">%20<iframe src=a>%20<iframe></td></tr><tr>
<td><b>Von: </b>Benjamin Mejri Kunz <vulnerabilitylab@...oud.com></td></tr><tr><td><b>Datum: </b>28.06.2015 20:48</td></tr></table>
<table border=0 cellspacing=0 cellpadding=0 width="100%" class="header-part2"><tr><td><b>An: </b>aki <bkm@...lution-sec.com></td></tr></table>
<br>
<html><head><meta http-equiv="content-type" content="text/html; "></head>
<body dir="auto"><div>Device ID: bkm337>"<./[LOCAL COMMAND INJECT VULNERABILITY VIA DEVICE NAME VALUE!] src"x"="" src="cid:">> <br> 
Serial No: FB9BA2FF-5F09-4D67-9EDF-DF619C8FC6AE</iframe></div><div><br><br></div></body></html><BR>
<FIELDSET CLASS="mimeAttachmentHeader"><LEGEND CLASS="mimeAttachmentHeaderName">fcs-FB9BA2FF-5F09-4D67-9EDF-DF619C8FC6AE</LEGEND></FIELDSET><BR/>
<div class="moz-text-plain"><pre wrap>



PoC: XML - fcs-FB9BA2FF-5F09-4D67-9EDF-DF619C8FC7EA

<?xml version="1.0"?>
<XML time="2015-06-28 18:48:33 +0000" version="1.0" scanner="iOS Scanner" devid="bkm337>"<./[LOCAL COMMAND INJECT VULNERABILITY VIA DEVICE NAME VALUE!]
>"><System><Device>bkm337>"<./[LOCAL COMMAND INJECT VULNERABILITY VIA DEVICE NAME VALUE!]&;</Device><Model>iPad</Model>
<Manufacturer>Apple</Manufacturer></System><OS><Name>iPhone OS</Name><Release>8.3</Release><Culture>de</Culture><CPIABI>ARM</CPIABI></OS>
<Identity><DeviceName>bkm337>"<img src"x">%20<iframe src=a>%20<iframe></DeviceName><InventoryNo></InventoryNo><UDID>FB9BA2FF-5F09-4D67-9EDF-DF619C8FC7EA</UDID></Identity><Display><ScreenSize>1536x2048</ScreenSize><DensityDPI>264</DensityDPI><LogicalDensity>2.0</LogicalDensity>
<FontScalingFactor>2.0</FontScalingFactor><PixelPerInchX>132.0</PixelPerInchX><PixelPerInchY>132.0</PixelPerInchY></Display><Telephony>
<Country>de</Country><Operator></Operator><MobileData>ausgeschaltet</MobileData><MCC></MCC><MNC></MNC><IPAddress>192.168.2.104</IPAddress>
<WLANMACAddress>02:00:00:00:00:00</WLANMACAddress></Telephony><CPUS><CPU>ARM</CPU><CPUCores>2</CPUCores><ActiveCores>2</ActiveCores>
<ProcessGUID>771BF59C-158D-410A-9D86-FE599FF5EA7E-570-00000046B66909BD</ProcessGUID></CPUS><Storage><InternalStorage>27.19 GB</InternalStorage>
<FreeStorage>0.80 GB</FreeStorage><RAMThres>373.02 MB</RAMThres><AvailRAM>57.73 MB</AvailRAM><TotalRAM>987.98 MB</TotalRAM></Storage><Camera>
<Camera>ja</Camera><PictureFormat>jpeg</PictureFormat></Camera></XML>


Solution - Fix & Patch:
=======================
The vulnerability can be patched by a secure parse and encode of the vulnerable Device ID value. Restrict the input and encode the output in the 
vulnerable generated xml file.
Disallow script code values in the html generated xml file type to prevent further command injection attacks.


Security Risk:
==============
The security rsik of the local command inject web vulnerability in the device cell name is estimated as medium. (CVSS 5.9)


Credits & Authors:
==================
Vulnerability Laboratory [Research Team] - Benjamin Kunz Mejri (bkm@...lution-sec.com) [www.vulnerability-lab.com]


Disclaimer & Information:
=========================
The information provided in this advisory is provided as it is without any warranty. Vulnerability Lab disclaims all warranties, either expressed 
or implied, including the warranties of merchantability and capability for a particular purpose. Vulnerability-Lab or its suppliers are not liable 
in any case of damage, including direct, indirect, incidental, consequential loss of business profits or special damages, even if Vulnerability-Lab 
or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for 
consequential or incidental damages so the foregoing limitation may not apply. We do not approve or encourage anybody to break any vendor licenses, 
policies, deface websites, hack into databases or trade with fraud/stolen material.

Domains:    www.vulnerability-lab.com   	- www.vuln-lab.com			       		- www.evolution-sec.com
Contact:    admin@...nerability-lab.com 	- research@...nerability-lab.com 	       		- admin@...lution-sec.com
Section:    magazine.vulnerability-db.com	- vulnerability-lab.com/contact.php		       	- evolution-sec.com/contact
Social:	    twitter.com/#!/vuln_lab 		- facebook.com/VulnerabilityLab 	       		- youtube.com/user/vulnerability0lab
Feeds:	    vulnerability-lab.com/rss/rss.php	- vulnerability-lab.com/rss/rss_upcoming.php   		- vulnerability-lab.com/rss/rss_news.php
Programs:   vulnerability-lab.com/submit.php  	- vulnerability-lab.com/list-of-bug-bounty-programs.php	- vulnerability-lab.com/register/

Any modified copy or reproduction, including partially usages, of this file requires authorization from Vulnerability Laboratory. Permission to 
electronically redistribute this alert in its unmodified form is granted. All other rights, including the use of other media, are reserved by 
Vulnerability-Lab Research Team or its suppliers. All pictures, texts, advisories, source code, videos and other information on this website 
is trademark of vulnerability-lab team & the specific authors or managers. To record, list (feed), modify, use or edit our material contact 
(admin@...nerability-lab.com or research@...nerability-lab.com) to get a permission.

				Copyright © 2015 | Vulnerability Laboratory - [Evolution Security GmbH]™


-- 
VULNERABILITY LABORATORY - RESEARCH TEAM
SERVICE: www.vulnerability-lab.com
CONTACT: research@...nerability-lab.com
PGP KEY: http://www.vulnerability-lab.com/keys/admin@vulnerability-lab.com%280x198E9928%29.txt


