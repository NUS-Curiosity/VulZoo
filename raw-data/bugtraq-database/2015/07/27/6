
Date: Mon, 27 Jul 2015 16:21:52 +0200
From: Vulnerability Lab <research@...nerability-lab.com>
To: bugtraq@...urityfocus.com, bugs@...uritytracker.com
Subject: Apple iTunes & AppStore - Filter Bypass & Persistent Invoice
 Vulnerability

Document Title:
===============
Apple iTunes & AppStore - Filter Bypass & Persistent Invoice Vulnerability


References (Source):
====================
http://www.vulnerability-lab.com/get_content.php?id=1512

Apple Security ID: 623920272

Video: http://www.vulnerability-lab.com/get_content.php?id=1517

Vulnerability Magazine: http://magazine.vulnerability-db.com/?q=articles/2015/07/17/apple-app-store-and-itunes-store-input-validation-web-vulnerability


Release Date:
=============
2015-07-27


Vulnerability Laboratory ID (VL-ID):
====================================
1512


Common Vulnerability Scoring System:
====================================
5.9


Product & Service Introduction:
===============================
Apple Inc. is an American multinational technology company headquartered in Cupertino, California, that designs, develops, and sells consumer electronics, 
computer software, online services, and personal computers. Its best-known hardware products are the Mac line of computers, the iPod media player, the 
iPhone smartphone, the iPad tablet computer, and the Apple Watch smartwatch. Its online services include iCloud, the iTunes Store, and the App Store. 
Apple`s consumer software includes the OS X and iOS operating systems, the iTunes media browser, the Safari web browser, and the iLife and iWork 
creativity and productivity suites.

(Copy of the Homepage: http://en.wikipedia.org/wiki/Apple_Inc. )


Abstract Advisory Information:
==============================
The Vulnerability Laboratory discovered an application-side input validation web vulnerability in the official Apple - App Store and iTunes Store online-service web-application.


Vulnerability Disclosure Timeline:
==================================
2015-06-08:	Researcher Notification & Coordination (Benjamin Kunz Mejri)
2015-06-09:	Vendor Notification (Apple Product Security Team)
2015-**-**:	Vendor Response/Feedback (Apple Product Security Team)
2015-**-**:	Vendor Fix/Patch Notification (Apple Developer Team)
2015-07-27:	Public Disclosure (Vulnerability Laboratory)


Discovery Status:
=================
Published


Affected Product(s):
====================
Apple
Product: iTunes & AppStore - Online Service (Web-Application) 2015 Q2


Exploitation Technique:
=======================
Remote


Severity Level:
===============
High


Technical Details & Description:
================================
An application-side input validation web vulnerability has been discovered in the official Apple - App Store and iTunes Store online-service web-application.
The vulnerability allows remote attackers to inject own malicious script codes to the application-side of the vulnerable context function or service module.

The apple itunes and appstore is taking the device cell name of the buying users. Remote attackers can manipulate the name value by an exchange with script code (special chars). 
After that the attacker buys any article in the appstore or itunes-store. During that procedure the internal appstore service takes the device value and does encode it with wrong conditions. 
The seller account context runs since the error with the injected script code occurs and gets this way re-implemented to the invoice. Thus results in an application-side script code execution 
in the invoice of apple. Remote attackers can manipulate the issue by interaction via persisten manipulated context to other apple store user accounts. The vulnerability can be exploited by 
remote attackers and the malicious receiver/sender email is *@...il.apple.com. The invoice is present to both parties (buyer & seller) which demonstrates a significant risk to buyers, sellers 
or apple website managers/developers. The issue imapct also the risk that a buyer can be the seller by usage of the same name to compromise the store online service integrity.

The security risk of the persistent input validation and mail encoding web vulnerability is estimated as high with a cvss (common vulnerability scoring system) count of 5.8. 
Exploitation of the persistent input validation and mail encoding web vulnerability requires a low privilege apple (appstore/icloud) account and low or medium user interaction. 
Successful exploitation of the vulnerability results in session hijacking, persistent phishing attacks, persistent redirect to external sources and persistent manipulation of 
affected or connected service module context.

Vulnerable Module(s):
				[+] Apple Invoice

Vulnerable Parameter(s):
				[+] device-cell
				[+] type cell

Affected Service(s):
				[+] Appstore & iTunes

Sender(s)/Receiver(s):
				[+] @email.apple.com


Proof of Concept (PoC):
=======================
The vulnerability can be exploited by remote attackers with low privilege web-application user account with low or medium user interaction.
For security demonstration or to reproduce the vulnerability follow the provided information and steps below to continue.

Sender: *@...il.apple.com

Manual steps to reproduce the vulnerability ...
1. Inject script code to your device cell name ;)
2. Buy an article by usage of the apple itunes or appstore online-service (via app or desktop browser)
3. Choose any app or movie that you would like to buy and download it
4. After the download an invoice arrives to the users inbox
Note: The appstore runs since the gets the wrong encoded values and stops which results in the manipulated device name value in the seller name input
5. The application-side injected script code execution occurs in the arrived emails context next to the device-cell and type cell value parameters
6. Successful reproduce of the remote vulnerability!


PoC: Ihre Rechnung von Apple (Your Invoice by Apple)

<tbody><tr style="background-color: rgb(245,245,245);" class="section-header" height="24">
          <td colspan="2" style="width:350px;padding-left:10px;border-top-left-radius:3px;border-bottom-left-radius:3px;" width="350"><span style="font-size:14px;font-weight:500;">App Store</span></td>
          <td style="width:100px;padding-left:20px;" width="100"><span style="color:rgb(153,153,153);font-size:10px;position:relative;top:1;">TYP</span></td>
          <td style="width:120px;padding-left:20px;" width="120"><span style="color:rgb(153,153,153);font-size:10px;position:relative;top:1;">GEKAUFT BEI</span></td>
          <td style="width:100px;padding-right: 20px;position:relative;top:1;border-top-right-radius:3px;border-bottom-right-radius:3px;" width="90" align="right"><span style="color:rgb(153,153,153);font-size:10px;white-

space:nowrap;">PREIS</span></td>
        </tr>

<tr height="90">
<td class="artwork-cell" style="padding:0 0 0 20px;margin:0;height:60px;width:60px;" width="60" align="center">
            <img src="http://a258.phobos.apple.com/us/r30/Purple7/v4/9d/2b/2d/9d2b2d60-5433-a45e-02fe-12c0f14a1b7b/icon134x134.png" alt="DuckTales: Remastered" style="border:none;padding:0;margin:0;-ms-interpolation-mode: 

bicubic;border-radius:14px;border:1px solid rgba(128,128,128,0.2);" border="0" height="60" width="60">
          </td>
                    <td style="padding:0 0 0 20px;width:260px;line-height:15px;" class="item-cell" width="260">
            <span class="title" style="font-weight:600;">DuckTales: Remastered</span><br>
            <span class="artist" style="color:rgb(153,153,153);">Disney</span><br>                        <span class="item-links" style="font-size:10px;">
                <a href="https://userpub.itunes.apple.com/WebObjects/MZUserPublishing.woa/wa/addUserReview?cc=de&id=925209077&mt=8&o=i&type=App" style="color:#0073ff;">Eine Rezension schreiben</a>Â |Â <a 

href="https://buy.itunes.apple.com/WebObjects/MZFinance.woa/wa/reportAProblem?a=925209077&cc=de&d=1666419925&o=i&p=91003564004457&pli=91006585722774" style="color:#0073ff;">ProblemÂ melden</a>            </span>
          </td>
          <td class="type-cell" style="padding:0 0 0 20px;width:100px;" width="100">
<span style="color:rgb(153,153,153)">App</span></td>
<td class="device-cell" style="padding:0 0 0 20px;width:120px;" width="120">
<span style="color:rgb(153,153,153);">[PERSISTENT INJECTED SCRIPT CODE VULNERABILITY!]bkm337"><img src="x">%20<iframe src="a">%20<iframe></span></td>
          <td width="90" class="price-cell" align="right" style="padding:0 20px 0 0;width:100px;"><span style="font-weight:600;white-space:nowrap;">9,99Â â‚¬</span></td>
        </tr>

Note: We used the ducktales remake app to approve the zero-day remote vulnerability in the itunes and appstore without malicious perpose!


Reference(s):
http://a258.phobos.apple.com/us/r30/Purple7/v4/9d/2b/2d/9d2b2d60-5433-a45e-02fe-12c0f14a1b7b/icon134x134.png
https://userpub.itunes.apple.com/WebObjects/MZUserPublishing.woa/wa/addUserReview?cc=de&id=925209077&mt=8&o=i&type=App
https://buy.itunes.apple.com/WebObjects/MZFinance.woa/wa/reportAProblem?a=925209077&cc=de&d=1666419925&o=i&p=91003564004457&pli=91006585722774


Security Risk:
==============
The security risk of the application-side input validation and mail encoding web vulnerability in the invoice module is estimated as high. (CVSS 5.8)


Credits & Authors:
==================
Vulnerability Laboratory [Research Team] - Benjamin Kunz Mejri (bkm@...lution-sec.com) [www.vulnerability-lab.com]


Disclaimer & Information:
=========================
The information provided in this advisory is provided as it is without any warranty. Vulnerability Lab disclaims all warranties, either expressed 
or implied, including the warranties of merchantability and capability for a particular purpose. Vulnerability-Lab or its suppliers are not liable 
in any case of damage, including direct, indirect, incidental, consequential loss of business profits or special damages, even if Vulnerability-Lab 
or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for 
consequential or incidental damages so the foregoing limitation may not apply. We do not approve or encourage anybody to break any vendor licenses, 
policies, deface websites, hack into databases or trade with fraud/stolen material.

Domains:    www.vulnerability-lab.com   	- www.vuln-lab.com			       		- www.evolution-sec.com
Contact:    admin@...nerability-lab.com 	- research@...nerability-lab.com 	       		- admin@...lution-sec.com
Section:    magazine.vulnerability-db.com	- vulnerability-lab.com/contact.php		       	- evolution-sec.com/contact
Social:	    twitter.com/#!/vuln_lab 		- facebook.com/VulnerabilityLab 	       		- youtube.com/user/vulnerability0lab
Feeds:	    vulnerability-lab.com/rss/rss.php	- vulnerability-lab.com/rss/rss_upcoming.php   		- vulnerability-lab.com/rss/rss_news.php
Programs:   vulnerability-lab.com/submit.php  	- vulnerability-lab.com/list-of-bug-bounty-programs.php	- vulnerability-lab.com/register/

Any modified copy or reproduction, including partially usages, of this file requires authorization from Vulnerability Laboratory. Permission to 
electronically redistribute this alert in its unmodified form is granted. All other rights, including the use of other media, are reserved by 
Vulnerability-Lab Research Team or its suppliers. All pictures, texts, advisories, source code, videos and other information on this website 
is trademark of vulnerability-lab team & the specific authors or managers. To record, list (feed), modify, use or edit our material contact 
(admin@...nerability-lab.com or research@...nerability-lab.com) to get a permission.

				Copyright © 2015 | Vulnerability Laboratory - [Evolution Security GmbH]™

-- 
VULNERABILITY LABORATORY - RESEARCH TEAM
SERVICE: www.vulnerability-lab.com
CONTACT: research@...nerability-lab.com
PGP KEY: http://www.vulnerability-lab.com/keys/admin@vulnerability-lab.com%280x198E9928%29.txt


