
Date: Wed, 21 Jan 2015 11:49:17 +0100
From: Vulnerability Lab <research@...nerability-lab.com>
To: bugtraq@...urityfocus.com, bugs@...uritytracker.com
Subject: PhotoSync v1.1.3 Android - Command Inject Vulnerability

Document Title:
===============
PhotoSync v1.1.3 Android - Command Inject Vulnerability


References (Source):
====================
http://www.vulnerability-lab.com/get_content.php?id=1410


Release Date:
=============
2015-01-21


Vulnerability Laboratory ID (VL-ID):
====================================
1410


Common Vulnerability Scoring System:
====================================
5.2


Product & Service Introduction:
===============================
Its all about one thing – the best and easiest way to transfer, backup and share your photos and videos! PhotoSync allows you to transfer your 
photos and videos between your Android device, iPhone / iPad and computer over your local Wi-Fi network.

(Copy of the Vendor Homepage: https://play.google.com/store/apps/details?id=com.touchbyte.photosync )


Abstract Advisory Information:
==============================
An independent vulnerability laboratory researcher discovered a command inject web vulnerability in the official PhotoSync v1.1.3 Android mobile web-application.


Vulnerability Disclosure Timeline:
==================================
2015-01-21:	Public Disclosure (Vulnerability Laboratory)


Discovery Status:
=================
Published


Affected Product(s):
====================
Touchbyte GmbH
Product: PhotoSync - Android Mobile Web Application 1.1.3


Exploitation Technique:
=======================
Local


Severity Level:
===============
Medium


Technical Details & Description:
================================
A local command inject web vulnerability has been discovered in the official PhotoSync 1.1.3 Android mobile web-application.
The vulnerability allows remote attackers to inject own commands by usage of stored manipulated system/device values to 
compromise the android mobile web-application.

The command inject vulnerability is located in the vulnerable `albumname` value of the `uploadImageAlbumSelect` module. 
Local attackers are able to inject own malicious system specific commands or local path value to requests by usage of 
the vulnerable `albumname` value. The execution of the command occurs in the `listAlbum` module of the mobile application. 
Attackers are able to manipulate the local default photo app albumname values to provoke with a client-side GET method 
request the command injection. The attack vector is located on the application-side and the injection requires physical 
device access or a local low privileged device user account. Local attackers are also able to exploit the albumname 
validation issue in combination with persistent injected script codes.

The security risk of the local command/path inject vulnerability is estimated as medium with a cvss (common vulnerability 
scoring system) count of 5.2. Exploitation of the command/path inject vulnerability requires a low privileged android device 
account with restricted access and no user interaction. Successful exploitation of the vulnerability results in unauthorized 
execution of system specific commands and unauthorized path value requests to compromise the mobile iOS application and the 
connected device components.


Request Method(s):
				[+] [GET]

Vulnerable Module(s):
				[+] uploadImageAlbumSelect
 
Vulnerable Parameter(s):
				[+] albumname & name

Affected Module(s):
				[+] listAlbum


Proof of Concept (PoC):
=======================
The local command inject web vulnerability can be exploited by local attackers (network) without privileged application user account or user interaction.
For security demonstration or to reproduce the security vulnerability follow the provided information and steps below to continue.

--- PoC Session Logs [GET] (Execution) ---
Status: 200[OK]
GET /uploadImageAlbumSelect/%3;[LOCAL COMMAND INJECTION VULNERABILITY!]%3E HTTP/1.1
Host: 192.168.1.4:8080
User-Agent: Mozilla/5.0 (Windows NT 5.2; WOW64; rv:34.0) Gecko/20100101 Firefox/34.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: fr,fr-fr;q=0.8,en-us;q=0.5,en;q=0.3
Accept-Encoding: gzip, deflate
Cookie: WSPref=0%2C3%2C0%2Cemmc%2Cdefault%2C1; skey=
Connection: keep-alive


PoC: uploadImageAlbumSelect

<body>
    <div id="page_margins">
      <div id="page">
        <div class="head">
          <div class="nologo">
    <div class="buttons-left">
<a class="button" href="/listAlbum/;[LOCAL COMMAND INJECTION VULNERABILITY!]" id="backurl" name="backurl"><span class="l"></span>
<span class="m">Back</span><span class="r"></span></a>
    </div>
        <div class="buttons-right">
       </div>
      </div>
    </div>



Reference(s):
http://localhost:8080/
http://localhost:8080/uploadImageAlbumSelect/


Security Risk:
==============
The security risk of the local command inject web vulnerability in the photosync application is estimated as medium. (CVSS 5.2)


Credits & Authors:
==================
Hadji Samir s-dz@...mail.fr


Disclaimer & Information:
=========================
The information provided in this advisory is provided as it is without any warranty. Vulnerability Lab disclaims all warranties, either expressed 
or implied, including the warranties of merchantability and capability for a particular purpose. Vulnerability-Lab or its suppliers are not liable 
in any case of damage, including direct, indirect, incidental, consequential loss of business profits or special damages, even if Vulnerability-Lab 
or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for 
consequential or incidental damages so the foregoing limitation may not apply. We do not approve or encourage anybody to break any vendor licenses, 
policies, deface websites, hack into databases or trade with fraud/stolen material.

Domains:    www.vulnerability-lab.com   	- www.vuln-lab.com			       		- www.evolution-sec.com
Contact:    admin@...nerability-lab.com 	- research@...nerability-lab.com 	       		- admin@...lution-sec.com
Section:    magazine.vulnerability-db.com	- vulnerability-lab.com/contact.php		       	- evolution-sec.com/contact
Social:	    twitter.com/#!/vuln_lab 		- facebook.com/VulnerabilityLab 	       		- youtube.com/user/vulnerability0lab
Feeds:	    vulnerability-lab.com/rss/rss.php	- vulnerability-lab.com/rss/rss_upcoming.php   		- vulnerability-lab.com/rss/rss_news.php
Programs:   vulnerability-lab.com/submit.php  	- vulnerability-lab.com/list-of-bug-bounty-programs.php	- vulnerability-lab.com/register/

Any modified copy or reproduction, including partially usages, of this file requires authorization from Vulnerability Laboratory. Permission to 
electronically redistribute this alert in its unmodified form is granted. All other rights, including the use of other media, are reserved by 
Vulnerability-Lab Research Team or its suppliers. All pictures, texts, advisories, source code, videos and other information on this website 
is trademark of vulnerability-lab team & the specific authors or managers. To record, list (feed), modify, use or edit our material contact 
(admin@...nerability-lab.com or research@...nerability-lab.com) to get a permission.

				Copyright © 2015 | Vulnerability Laboratory - [Evolution Security GmbH]™

-- 
VULNERABILITY LABORATORY - RESEARCH TEAM
SERVICE: www.vulnerability-lab.com
CONTACT: research@...nerability-lab.com
PGP KEY: http://www.vulnerability-lab.com/keys/admin@vulnerability-lab.com%280x198E9928%29.txt


