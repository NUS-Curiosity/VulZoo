
Date: Wed, 14 Nov 2007 18:44:13 -0500
From: iDefense Labs <labs-no-reply@...fense.com>
To: vulnwatch@...nwatch.org, full-disclosure@...ts.grok.org.uk,
	bugtraq@...urityfocus.com
Subject: iDefense Security Advisory 11.14.07: Apple Mac OS X AppleTalk mbuf
 Kernel Heap Overflow Vulnerability

iDefense Security Advisory 11.14.07
http://labs.idefense.com/intelligence/vulnerabilities/
Nov 14, 2007

I. BACKGROUND

AppleTalk, a set of networking protocols developed by Apple, was
originally implemented on early Mac operating systems. Although it is a
legacy protocol, it is still supported on the latest version of Mac OS
X. AppleTalk is compiled into the default kernel, but must be turned on
in order to be used. More information can be found at the following URL.

http://docs.info.apple.com/article.html?artnum=50039

II. DESCRIPTION

Local exploitation of a heap based buffer overflow in Apple Inc.'s OS X
may allow an attacker to execute arbitrary code in kernel context.

The vulnerability exists within a function responsible for allocating an
mbuf. mbufs are a BSD concept, long used by BSD kernels to allocate
buffers for storing network related data.

When allocating an mbuf buffer, the kernel performs a comparison using
two signed integers, one of which is controlled by the user, to
determine how many bytes to allocate. If a user passes a negative
value, a minimally sized buffer will be allocated due to the signed
comparison. The calling function will usually interpret the user
controlled value as an unsigned value, and this results in the
allocated buffer being overflowed.

III. ANALYSIS

Successful exploitation of this vulnerability will result in the
execution of arbitrary code in kernel context. Unsuccessful attempts
will likely crash the system. Exploitation has proven to be
non-trivial.

In order to exploit this vulnerability, a system would have to have
AppleTalk turned on. It would likely be used on a network consisting of
older Mac hosts since previous versions of Mac relied on it to implement
Apple File Sharing.

IV. DETECTION

iDefense has confirmed the existence of this vulnerability in Mac OS X
10.4.10, Workstation and Server editions. Previous versions may also be
affected.

To determine if AppleTalk is running, the following command can be
executed on the command line.

  $ appletalk -s

V. WORKAROUND

Disabling AppleTalk will prevent exploitation of this vulnerability.
Executing the following command will disable AppleTalk if it is
enabled.

  # appletalk -d

VI. VENDOR RESPONSE

Apple addressed this vulnerability within their Mac OS X 2007-008
security update. More information is available at the following URL.

http://docs.info.apple.com/article.html?artnum=307041

VII. CVE INFORMATION

The Common Vulnerabilities and Exposures (CVE) project has assigned the
name CVE-2007-4268 to this issue. This is a candidate for inclusion in
the CVE list (http://cve.mitre.org/), which standardizes names for
security problems.

VIII. DISCLOSURE TIMELINE

08/08/2007  Initial vendor notification
08/09/2007  Initial vendor response
11/14/2007  Coordinated public disclosure

IX. CREDIT

This vulnerability was discovered by Sean Larsson of VeriSign iDefense
Labs.

Get paid for vulnerability research
http://labs.idefense.com/methodology/vulnerability/vcp.php

Free tools, research and upcoming events
http://labs.idefense.com/

X. LEGAL NOTICES

Copyright Â© 2007 iDefense, Inc.

Permission is granted for the redistribution of this alert
electronically. It may not be edited in any way without the express
written consent of iDefense. If you wish to reprint the whole or any
part of this alert in any other medium other than electronically,
please e-mail customerservice@...fense.com for permission.

Disclaimer: The information in the advisory is believed to be accurate
at the time of publishing based on currently available information. Use
of the information constitutes acceptance for use in an AS IS condition.
 There are no warranties with regard to this information. Neither the
author nor the publisher accepts any liability for any direct,
indirect, or consequential loss or damage arising from use of, or
reliance on, this information.
