
Date: Wed, 11 Jan 2012 11:03:09 GMT
From: noreply@...ecurity.ru
To: bugtraq@...urityfocus.com
Subject: [PT-2011-04] Cross-Site Scripting in Kayako Support Suite

-----------------------------------------------------------------
(PT-2011-04) Positive Technologies Security Advisory 
Cross-Site Scripting in Kayako Support Suite
-----------------------------------------------------------------

---[ Vulnerable software ]

Kayako Support Suite 
Version: 3.70.02-stable and earlier

Application link: 
http://www.kayako.com/

---[ Severity level ]

Severity level:	 Medium 
Impact:	 Cross-Site Scripting 
Access Vector:	 Network exploitable 
CVSS v2: 
Base Score: 4.3 
Vector: (AV:N/AC:M/Au:N/C:N/I:P/A:N)

CVE: not assigned

---[ Software description ]

Kayako Support Suite is a HelpDesk system.

---[ Vulnerability description ]

Positive Research Center has discovered multiple XSS vulnerabilties in Kayako Support Suite.

Application insufficiently verifies subscriberdata incoming parameter in /staff/index.php?_m=news&_a=importexport script. 
An attacker with "staff" privileges can use the vulnerabilty to inject and execute arbitrary HTML code and scripts in a user's browser within the trust relationship between the browser and the server. 
To use the vulnerability an attacker should convince a user with "staff" privileges to open URL like:
 http://example.com/support/staff/index.php?_m=news&_a=managesubscribers&importsub=1&resultdata=YTo0OntzOjEzOiJzdWNjZXNzZW1haWxzIjtpOjA7czoxMjoiZmFpbGVkZW1haWxzIjtpOjE7czoxMToidG90YWxlbWFpbHMiO2k6MTtzOjk6ImVtYWlsbGlzdCI7czo5MDoiPHNjcmlwdD5hbGVydCgneHNzJyk8L3NjcmlwdD5APHNjcmlwdD5hbGVydCgneHNzJyk8L3NjcmlwdD4uPHNjcmlwdD5hbGVydCgneHNzJyk8L3NjcmlwdD4gIjt9
Application insufficiently verifies subject incoming parameter in /staff/index.php?_m=news&_a=insertnews script. 
An attacker with "staff" privileges can use the vulnerabilty to inject and execute arbitrary HTML code and scripts in a user's browser within the trust relationship between the browser and the server. 
An attacker should trick a user with "staff" privileges to open URL like: 
http://example.com/support/staff/index.php?_m=news&_a=managenews to exploit the vulnerability.
Application insufficiently verifies description incoming parameter in /staff/index.php?_m=troubleshooter&_a=insertcategory script. 
An attacker with "staff" privileges can use the vulnerabilty to inject and execute arbitrary HTML code and scripts in a user's browser within the trust relationship between the browser and the server. 
To use the vulnerability an attacker should convince a user with "staff" privileges to open URL like: 
http://example.com/support/staff/index.php?_m=troubleshooter&_a=managecategories 
to exploit the vulnerability.
Application insufficiently verifies title incoming parameter in /staff/index.php?_m=downloads&_a=insertfile script. 
An attacker with "staff" privileges can use the vulnerabilty to inject and execute arbitrary HTML code and scripts in a user's browser within the trust relationship between the browser and the server. 
An attacker should trick a user with "staff" privileges to open URL like: 
  
http://example.com/support/staff/index.php?_m=downloads&_a=managefiles 
to exploit the vulnerability.
Application insufficiently verifies fullname, jobtitle, email1address, email2address, email3address, customerid, mobiletelephonenumber incoming parameters in /staff/index.php?_m=teamwork&_a=insertcontact script. 
An attacker with "staff" privileges can use the vulnerabilty to inject and execute arbitrary HTML code and scripts in a user's browser within the trust relationship between the browser and the server. 
An attacker should trick a user with "staff" privileges to open URL like: 
  
http://example.com/support/staff/index.php?_m=teamwork&_a=editcontact&contactid=[added contact ID] 
to exploit the vulnerability. 
Application insufficiently verifies redirecturl incoming parameter in /staff/index.php?_m=livesupport&_a=insertcampaign script. 
An attacker with "staff" privileges can use the vulnerabilty to inject and execute arbitrary HTML code and scripts in a user's browser within the trust relationship between the browser and the server. 
An attacker should trick a user with "staff" privileges to open URL like: 
  
http://example.com/support/staff/index.php?_m=livesupport&_a=adtracking 
to exploit the vulnerability. 
Application insufficiently verifies title incoming parameter in /staff/index.php?_m=livesupport&_a=insertcannedresponse script. 
An attacker with "staff" privileges can use the vulnerabilty to inject and execute arbitrary HTML code and scripts in a user's browser within the trust relationship between the browser and the server. 
An attacker should trick a user with "staff" privileges to open URL like: 
http://example.com/support/staff/index.php?_m=livesupport&_a=managecannedresponses 
to exploit the vulnerability. 
Application insufficiently verifies title incoming parameter in /staff/index.php?_m=tickets&_a=insertalert script. 
An attacker with "staff" privileges can use the vulnerabilty to inject and execute arbitrary HTML code and scripts in a user's browser within the trust relationship between the browser and the server. 
An attacker should trick a user with "staff" privileges to open URL like:: 
  
http://example.com/support/staff/index.php?_m=tickets&_a=managealerts 
to exploit the vulnerability. 
Application insufficiently verifies title incoming parameter in /staff/index.php?_m=tickets&_a=insertfilter script. 
An attacker with "staff" privileges can use the vulnerabilty to inject and execute arbitrary HTML code and scripts in a user's browser within the trust relationship between the browser and the server. 
An attacker should trick a user with "staff" privileges to open URL like: 
  
http://example.com/support/staff/index.php?_m=tickets&_a=managefilters 
to exploit the vulnerability. 

---[ How to fix ]

Update your software up to the v4 

---[ Advisory status ]

25.11.2011 - Vendor is notified 
25.11.2011 - Vendor gets vulnerability details 
25.08.2011 - Vendor releases fixed version and details 
29.12.2011 - Public disclosure

---[ Credits ]

The vulnerability was discovered by Alexander Zaitsev, Positive Research Center (Positive Technologies Company)

---[ References ]

http://en.securitylab.ru/lab/PT-2011-04

Reports on the vulnerabilities previously discovered by Positive Research:

http://www.ptsecurity.com/advisory1.aspx 
http://en.securitylab.ru/lab/

---[ About Positive Technologies ]

Positive Technologies www.ptsecurity.com is among the key players in the IT security market in Russia.

The principal activities of the company include the development of integrated tools for information security monitoring (MaxPatrol); providing IT security consulting services and technical support; development of the Securitylab leading Russian information security portal.

Among the clients of Positive Technologies, there are more than 40 state enterprises, more than 50 banks and financial organizations, 20 telecommunication companies, more than 40 plant facilities, as well as IT, service and retail companies from Russia, the CIS countries, the Baltic States, China, Ecuador, Germany, Great Britain, Holland, Iran, Israel, Japan, Mexico, the Republic of South Africa, Thailand, Turkey, and the USA.

Positive Technologies is a team of highly skilled developers, advisers and experts with years of vast hands-on experience. The company specialists possess professional titles and certificates; they are the members of various international societies and are actively involved in the IT security field development. 
