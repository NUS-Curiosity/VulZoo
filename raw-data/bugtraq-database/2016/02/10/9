
Date: Wed, 10 Feb 2016 11:53:28 +0100
From: Vulnerability Lab <research@...nerability-lab.com>
To: bugtraq@...urityfocus.com, bugs@...uritytracker.com
Subject: MyScript Memo v3.0 iOS - (Mail) Persistent Vulnerability

Document Title:
===============
MyScript Memo v3.0 iOS - (Mail) Persistent Vulnerability


References (Source):
====================
http://www.vulnerability-lab.com/get_content.php?id=1706


Release Date:
=============
2016-02-10


Vulnerability Laboratory ID (VL-ID):
====================================
1706


Common Vulnerability Scoring System:
====================================
3.6


Product & Service Introduction:
===============================
With MyScript Memo, take your notes on the go using your handwriting and convert them to digital text that you 
can export and share with Evernote®, Facebook®, Twitter®, Gmail or copy/paste to any other text application. 
MyScript Memo is available in 63 recognition languages (including Chinese, Korean, Japanese, Arabic, Russian, 
English, Spanish, French and many more). 

(Copy of the Homepage: https://itunes.apple.com/us/app/myscript-memo/id446368116 )


Abstract Advisory Information:
==============================
The Vulnerability Laboratory Core Research Team discovered a persistent mail encoding web vulnerability in the official MyScript Memo iOS mobile web-application.


Vulnerability Disclosure Timeline:
==================================
2016-02-10:	Public Disclosure (Vulnerability Laboratory)


Discovery Status:
=================
Published


Affected Product(s):
====================
MyScript
Product: MyScript Memo - iOS (Web-Application) 3.0.0.363


Exploitation Technique:
=======================
Remote


Severity Level:
===============
Medium


Technical Details & Description:
================================
A persistent mail encoding and file extension validation vulnerability has been discovered in the official MyScript Memo v3.0.0 iOS mobile web-application.
The vulnerability allows an remote attacker or local privileged user account to inject own malicious script codes to the application-side of the affected modules.

The issue is located in the notes-filename and document text context of the export module. Local low privileged web-application user accounts are able to inject 
own malicious persistent script codes to the mail body context of the `share` function. Attacker can manipulate the notes files as extension or the main document 
context to send malicious mails with persistent injected script codes. The request method to inject is POST and the attack vector of the issue is located on the 
application-side of the iOS mobile web-application.

The security risk of the application-side input web vulnerability is estimated as medium with a cvss (common vulnerability scoring system) count of 3.6. 
Exploitation of the persistent web vulnerability requires a low privileged ios device account with restricted access and low or medium user interaction. 
Successful exploitation of the vulnerability results in persistent phishing mails, session hijacking, persistent external redirect to malicious 
sources and application-side manipulation of affected or connected module context.

Vulnerable Module(s)
				[+] Export
 
Vulnerable File(s)
				[+] *.notes

Affected Module(s)
				[+] Email


Proof of Concept (PoC):
=======================
The vulnerability can be exploited by remote attackers and local low privileged user accounts with low or medium user interaction.
For security demonstration or to reproduce the vulnerability follow the provided information and steps below to continue.


Manual steps to reproduce the vulnerability ...
1. Install the mobile web-application
2. Start the mobile web-application
3. Add a new `Notizen` item via (+)
4. Use now a payload (script codes) as notiz name
5. Save the entry and open the document
6. Write with your finger a script code payload in the document and save it
7. Click (top|left) the export function
8. Use the function `As MyScript-File`
9. Now click the email button
Note: The file generates a notes file with the malicious payload for import/export. It also uses the file input payload of the document.
10. Successful reproduce of the persistent mail encoding web vulnerability and notes file validation issue!


PoC: Source
<html>
<head>
<title>memo script app ios</title>
<link rel="important stylesheet" href="chrome://messagebody/skin/messageBody.css">
</head>
<body><table border=0 cellspacing=0 cellpadding=0 width="100%" class="header-part1"><tr><td><b>Betreff: </b>memo script app ios</td></tr>
<tr><td><b>Von: </b>Benjamin Mejri Kunz <vulnlabstars@...oud.com></td></tr><tr><td><b>Datum: </b>31.01.2016 14:08</td></tr></table>
<table border=0 cellspacing=0 cellpadding=0 width="100%" class="header-part2"><tr><td><b>An: </b>bkm@...lution-sec.com</td></tr></table><br>
<div class="moz-text-plain"><pre wrap>
Angehängt: ">"<[PERSISTENT INJECTED SCRIPT CODE VIA MEMO!]
</pre></div><BR><FIELDSET CLASS="mimeAttachmentHeader"></FIELDSET><BR/><div class="moz-text-plain"><pre wrap>
Von meinem iPad gesendet</pre></div></body>
</html>



PoC: poc.notes
v3.0
VO_INK_DOCUMENT
1180
 .     Ò  3..          
   .«W.q€   	š.ü..X·QÃ2†. Ã.A˜ŒÌŒ##fI´•]\åqN~wWU¾Ê±	ˆÌ†!.ŒF#6Ñ2l™2bF&fDi“$šM...„a
m(C.Åî… ’<µahWyÒrœ«H,®.î¡ËB. .0.€.«W.r€   	š.ü..Ê¢vY”.‘2m$FC.(ã
s»¢—.5‚Ù Â.€J.€.«W.r€   	š.ü..fÅ8ìÈÿþ,C.ç.p‚ŠS++é.¢¢8-ž
&Â..`5.«W.s€   	š.ü..
FQ‹2©\â”(§8§r•ïòI$Ä ƒ..a„.‚.“$]„.c.1.b.™"dÙ2hˆÄa„!.ÌÍ²HxÈðXpg]Õ-[Z8
í(B.„ Üï™ÖÔµR¾!îBÀ.  ˆ.«W.t    	š.ü..ê5ELÈ . C'	üÚœQ.„..qŽB.Èêì‚jBçMó‚[ ›.¡‚êìºÛ@.€.«W.u    	š.ü.
Ô2c™.'·1Î Æ#ªøTÑ¬üT.!8.«W.u€   	š.ü..–ô–Ve
8pàPPãŽw‹'–I3.ÌC.„bh¤–;.BœY‡..(hà¢ÅŠ.$P‘'œ AÆšYd.÷µŠJ«À@..aØf.„ç™Ï.¤!jÚ4´ëŒBÒÕ1
qÈ.  .@.«W.v    	š.ü..+	NlÌ,Â8Y†.KV•  .	.æžIw3_´ÔM†× ¬/.«W.v€   	š.ü..6¾¡Ve±Ä.A.VwTeeDDB.(ƒ.r;¦ÚYÇ.4ÃŒ,–¹iQ.[.T™.ÿÜÎ.„(.î‘¢.µ¼„.ä.÷iÂSr‘Ç– : *.«W.w    	š.ü..<ZQ«2Ú¶¼KÍ,ÒÚ¿˜ŠC.(ã…..æuVDDD!Ž(Á.9™Ù.Ö.…1ä.I§œ AÆ–÷-.A7Í›.U•{›ÇË.iÂD.Q.ZP.5;¦§ãyò¹ÅgªK.¬+[ÅYj
Yd ÑµÑ•o$±¥ .À..«W.x    	š.ü..ü®P³2éLs.†#«+¹. ¢
 ‚.†r²¢#fâ1.0Â.!Ž!HUTDNÌL4ñ"Ä	,¦-H&\ø™òëöp¢Ë.iç.. AOXéóåßm[Î.âŠ$ÃEˆ.q¤1I0<Íc*%§½Ë
—ííÅ’ä0Ý.S¸N–£.4.Î.B8j˜†JW?¶T²@.0.€.«W.x€   	š.ü...Ò£æf(ðA.K-ÉAv]t©vÛ_©§»Ö.`‘B†„Œ<âZnˆ…¯Ö÷’{S1.0pÀ` `ƒ
QNr.YY.. @.¤šÌO˜~W	Á.å.pÆ=„.þr¾Òõ l.«W.y€   	š.ü..=,&f)
kÞiE.òˆ!ä¼‚.æ©)_)ºD™räÈ“U.Î9ï ³.8ñ..ad.÷9ÎbÐ•%Ži%”Y.µÉB.ÀPwýƒ:œy\Q+â.ô,ÒUVì¯[ÞRÄÜà L.À
VO_DOCUMENT
317
<Document version="1.0"><DateCreated>2016-01-31T14:06:40</DateCreated><DateModified>2016-01-31T14:06:59</DateModified><Height>263.200012</Height><Width>210.000000</Width><PredefinePaper>horizontalLinePaper</PredefinePaper><LinePatternUnit>13.210000</LinePatternUnit><PrimaryLanguage>en_US</PrimaryLanguage></Document>
D938BA68-4505-47CB-BFEE-DADC1E5ED150
79
<Page version="1.0"><PredefinePaper>horizontalLinePaper</PredefinePaper></Page>
VO_DOCUMENT_STRUCTURE
128
<Document version="1.0"><Pages><Page id="D938BA68-4505-47CB-BFEE-DADC1E5ED150"><PageItems></PageItems></Page></Pages></Document>


Solution - Fix & Patch:
=======================
The vulnerability can be patched by a secure parse and encode of the filename variable and the document input text context.
Restrict the input and disallow special chars.
Encode the mail context input next to the attachment. Disallow note files with specialchars to prevent a malicious import/export.
Filter the filename validation to approve for malicious context and to prevent further script code injection attacks.


Security Risk:
==============
The security risk of the persistent mail encoding web vulnerability in the notes file extension and mail is estimated as medium. (CVSS 3.6)


Credits & Authors:
==================
Vulnerability Laboratory [Research Team] - Benjamin Kunz Mejri (research@...nerability-lab.com) [www.vulnerability-lab.com]


Disclaimer & Information:
=========================
The information provided in this advisory is provided as it is without any warranty. Vulnerability Lab disclaims all warranties, either expressed 
or implied, including the warranties of merchantability and capability for a particular purpose. Vulnerability-Lab or its suppliers are not liable 
in any case of damage, including direct, indirect, incidental, consequential loss of business profits or special damages, even if Vulnerability-Lab 
or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for 
consequential or incidental damages so the foregoing limitation may not apply. We do not approve or encourage anybody to break any vendor licenses, 
policies, deface websites, hack into databases or trade with fraud/stolen material.

Domains:    www.vulnerability-lab.com   	- www.vuln-lab.com			       		- www.evolution-sec.com
Contact:    admin@...nerability-lab.com 	- research@...nerability-lab.com 	       		- admin@...lution-sec.com
Section:    magazine.vulnerability-db.com	- vulnerability-lab.com/contact.php		       	- evolution-sec.com/contact
Social:	    twitter.com/#!/vuln_lab 		- facebook.com/VulnerabilityLab 	       		- youtube.com/user/vulnerability0lab
Feeds:	    vulnerability-lab.com/rss/rss.php	- vulnerability-lab.com/rss/rss_upcoming.php   		- vulnerability-lab.com/rss/rss_news.php
Programs:   vulnerability-lab.com/submit.php  	- vulnerability-lab.com/list-of-bug-bounty-programs.php	- vulnerability-lab.com/register/

Any modified copy or reproduction, including partially usages, of this file requires authorization from Vulnerability Laboratory. Permission to 
electronically redistribute this alert in its unmodified form is granted. All other rights, including the use of other media, are reserved by 
Vulnerability-Lab Research Team or its suppliers. All pictures, texts, advisories, source code, videos and other information on this website 
is trademark of vulnerability-lab team & the specific authors or managers. To record, list (feed), modify, use or edit our material contact 
(admin@...nerability-lab.com or research@...nerability-lab.com) to get a permission.

				Copyright © 2016 | Vulnerability Laboratory - [Evolution Security GmbH]™



-- 
VULNERABILITY LABORATORY - RESEARCH TEAM
SERVICE: www.vulnerability-lab.com
CONTACT: research@...nerability-lab.com


