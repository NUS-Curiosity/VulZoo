
Date: Sat, 26 Oct 2013 02:03:00 +0200
From: Vulnerability Lab <research@...nerability-lab.com>
To: bugtraq@...urityfocus.com, bugs@...uritytracker.com
Subject: Feeder.co RSS Feeder 5.2 Chrome - Persistent Software Vulnerability

Document Title:
===============
Feeder.co RSS Feeder 5.2 Chrome - Persistent Software Vulnerability



Release Date:
=============
2013-10-26


Vulnerability Laboratory ID (VL-ID):
====================================
1119


Common Vulnerability Scoring System:
====================================
3.8


Product & Service Introduction:
===============================
Feeder.co (www.feeder.co) is the simplest and prettiest way to follow your favorite feeds and sites. 
Feeder supports most RSS and Atom feeds on the web. Get a simple overview of your RSS and Atom feeds 
in the toolbar. A simple and pretty way of keeping track of your latest RSS and Atom feeds. 
The best RSS Feed Reader extension for Chrome. 

- Instantaneously see when new posts are added to one of your RSS and Atom feeds
- Easily subscribe to new RSS/Atom feeds by clicking the browser icon
- Intuitively manage your feeds
- Right click context-menus in popup-menu let you mark all as read, and other nifty shortcuts
- Export your feeds so you can import them on another computer and/or keep them as backups for safekeeping
- Customize your feeds by choosing how many posts to display, or changing the title
- Organize your feeds using folders and sorting with drag and drop
- Choose between three different themes: Dark, Mint or Light 
- Everything is contained within the browser so no other third-party sites are needed
- Notifications when feeds have been updated. Enable globally or on select feeds
- Supports both RSS and Atom feeds
- See when a page has any RSS or Atom feeds to subscribe to

(Copy of the Vendor Product Homepage: http://feeder.co )


Abstract Advisory Information:
==============================
The Vulnerability Laboratory Research Team discovered a persistent web vulnerability in the Feeder.co RSS Feeds Chrome Addon.


Vulnerability Disclosure Timeline:
==================================
2013-10-26:	        Researcher Notification & Coordination (Ateeq Khan)


Discovery Status:
=================
Published


Affected Product(s):
====================
Feeder.co
Product: RSS Feeder - Chrome Browser Addon 5.2


Exploitation Technique:
=======================
Remote


Severity Level:
===============
Medium


Technical Details & Description:
================================
A remote script code execution vulnerability has been detected in the official feeder.co RSS browser extension application.
The vulnerability allows remote attackers to manipulate via POST method web-application to browser requests (persistent).

The vulnerability affects the main feed input field and since the application is not performing input sanatization properly, 
it is possible to inject persistent script code within the affected folder name input field which then directly gets executed 
when the victim tries to delete the malicious entry. 

It is possible to inject malicious script code in the folder `Name` field parameter of the feeds while adding a new entry. 
The code execution happens when a user tries to delete the injected entries. the affected sourcecode with injected payload 
is given below for your reference:

<div class=``pui-confirm-text``>Delete ``><iframe onload=``prompt(2)`` src=``http://evolution-sec.com``><script>?</iframe></div>

It is also possible to inject malicious code through remote URL simply by adding new RSS feeds from a third party remote website. 
In this case, the ``Title`` parameter is vulnerable.

It is also possible to import/export the RSS feeds through a file which makes this attack vector remotely exploitable through 
this method as well.

This vulnerability affects all current feeder.co users who are using the RSS browser extension application for PC. iOS and 
Android users may also be affected with this vulnerability. 

Successful exploitation of the persistent cross site scripting web vulnerability results in persistent client-side phishing, 
persistent client-side unauthorized external redirects and persistent manipulation of the module context.


Vulnerable Module(s):
				[+] RSS Feeds
				
Vulnerable Sections(s):
				[+] Add Feed (Title parameter)
				[+] Add Folder Name (Name parameter)


Proof of Concept (PoC):
=======================
The persistent script code execution vulnerability can be exploited by remote attackers without required web-application user account and 
with medium user interaction. For demonstration or to reproduce ...


To reproduce the proof of concept, the researcher used multiple ways including importing feeds from a remote URL and adding payloads manually.

Including payloads from remote URL:

1. Add a new feed entry in the browser extension with the following POC URL https://groups.google.com/forum/feed/evosec/msgs/rss.xml?num=15
2. You should now see the injected entries in your feeds. 
3. Try to delete the newly included entry feed 
4. You should see the code being executed as soon as the confirmation window appears hence proving the existence of this vulnerability.

Adding Payload manually as folder name:

1. Open the browser extension and click on + Add
2. In the Folder Name include the following payload through copy/paste: "><iframe src=http://evolution-sec.com onload=prompt(/POC/)></h1>Vulnerable</iframe>
3. You should now be able to see the newly injected entry in main feeds. 
4. To execute the code successfully, try to delete the newly injected entry.
5. As soon as the confirmation window appears, the code will get executed successfully hence proving the existence of this vulnerability



Affected Source Code POC #1:  Feed Title

<span>Title</span>
<input type="text" name="title" placeholder="Title...">
#document-fragment
<div>'">>"<script>prompt(1)</script><iframe onload=prompt(3) src=a </iframe> <</div>
<div part="-webkit-input-placeholder" style="visibility: hidden; text-overflow: clip;">Title...</div>
</input>


Affected Source Code POC #2: Folder Name

<span>Name</span>	
<input type="text" name="name" placeholder="Name...">
#document-fragment
<div>"><iframe onload=prompt(2) src=http://evolution-sec.com><script></div>
<div part="-webkit-input-placeholder" style="visibility: hidden; text-overflow: clip;">Name...</div>
</input>


Reference(s):
chrome-extension://pnjaodmkngahhkoihejjehlcdlnohgmp/options/options.html?page=undefined&run=undefined&


Solution - Fix & Patch:
=======================
User input sanitization should  be performed on the backend source code in order to bypass all illegal characters and malicious 
script code requests for secure parse and to mitigate all further risks associated with this vulnerability.


Security Risk:
==============
The security risk of the persistent input validation web vulnerability is estimated as medium(+).


Credits & Authors:
==================
Vulnerability Laboratory [Research Team] - Ateeq Khan (Ateeq@...lution-sec.com)


Disclaimer & Information:
=========================
The information provided in this advisory is provided as it is without any warranty. Vulnerability Lab disclaims all warranties, 
either expressed or implied, including the warranties of merchantability and capability for a particular purpose. Vulnerability-
Lab or its suppliers are not liable in any case of damage, including direct, indirect, incidental, consequential loss of business 
profits or special damages, even if Vulnerability-Lab or its suppliers have been advised of the possibility of such damages. Some 
states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation 
may not apply. We do not approve or encourage anybody to break any vendor licenses, policies, deface websites, hack into databases 
or trade with fraud/stolen material.

Domains:    www.vulnerability-lab.com   	- www.vuln-lab.com			       - www.evolution-sec.com
Contact:    admin@...nerability-lab.com 	- research@...nerability-lab.com 	       - admin@...lution-sec.com
Section:    www.vulnerability-lab.com/dev 	- forum.vulnerability-db.com 		       - magazine.vulnerability-db.com
Social:	    twitter.com/#!/vuln_lab 		- facebook.com/VulnerabilityLab 	       - youtube.com/user/vulnerability0lab
Feeds:	    vulnerability-lab.com/rss/rss.php	- vulnerability-lab.com/rss/rss_upcoming.php   - vulnerability-lab.com/rss/rss_news.php

Any modified copy or reproduction, including partially usages, of this file requires authorization from Vulnerability Laboratory. 
Permission to electronically redistribute this alert in its unmodified form is granted. All other rights, including the use of other 
media, are reserved by Vulnerability-Lab Research Team or its suppliers. All pictures, texts, advisories, source code, videos and 
other information on this website is trademark of vulnerability-lab team & the specific authors or managers. To record, list (feed), 
modify, use or edit our material contact (admin@...nerability-lab.com or research@...nerability-lab.com) to get a permission.

				Copyright Â© 2013 | Vulnerability Laboratory [Evolution Security]


-- 
VULNERABILITY LABORATORY RESEARCH TEAM
DOMAIN: www.vulnerability-lab.com
CONTACT: research@...nerability-lab.com


