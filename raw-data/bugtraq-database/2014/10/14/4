
Date: Mon, 13 Oct 2014 14:27:33 +0200
From: Vulnerability Lab <research@...nerability-lab.com>
To: bugtraq@...urityfocus.com, bugs@...uritytracker.com
Subject: PayPal Inc BB #96 - Persistent Tags Vulnerability

Document Title:
===============
PayPal Inc BB #96 - Persistent Tags Vulnerability


References (Source):
====================
http://www.vulnerability-lab.com/get_content.php?id=954

PayPal Security UID: apf87gW


Release Date:
=============
2014-10-08


Vulnerability Laboratory ID (VL-ID):
====================================
954


Common Vulnerability Scoring System:
====================================
3.1


Product & Service Introduction:
===============================
PayPal is a global e-commerce business allowing payments and money transfers to be made through the Internet. Online money 
transfers serve as electronic alternatives to paying with traditional paper methods, such as checks and money orders. Originally, 
a PayPal account could be funded with an electronic debit from a bank account or by a credit card at the payer s choice. But some 
time in 2010 or early 2011, PayPal began to require a verified bank account after the account holder exceeded a predetermined 
spending limit. After that point, PayPal will attempt to take funds for a purchase from funding sources according to a specified 
funding hierarchy. If you set one of the funding sources as Primary, it will default to that, within that level of the hierarchy 
(for example, if your credit card ending in 4567 is set as the Primary over 1234, it will still attempt to pay money out of your 
PayPal balance, before it attempts to charge your credit card). The funding hierarchy is a balance in the PayPal account; a 
PayPal credit account, PayPal Extras, PayPal SmartConnect, PayPal Extras Master Card or Bill Me Later (if selected as primary 
funding source) (It can bypass the Balance); a verified bank account; other funding sources, such as non-PayPal credit cards.
The recipient of a PayPal transfer can either request a check from PayPal, establish their own PayPal deposit account or request 
a transfer to their bank account.

PayPal is an acquirer, performing payment processing for online vendors, auction sites, and other commercial users, for which it 
charges a fee. It may also charge a fee for receiving money, proportional to the amount received. The fees depend on the currency 
used, the payment option used, the country of the sender, the country of the recipient, the amount sent and the recipient s account 
type. In addition, eBay purchases made by credit card through PayPal may incur extra fees if the buyer and seller use different currencies.

On October 3, 2002, PayPal became a wholly owned subsidiary of eBay. Its corporate headquarters are in San Jose, California, United 
States at eBay s North First Street satellite office campus. The company also has significant operations in Omaha, Nebraska, Scottsdale, 
Arizona, and Austin, Texas, in the United States, Chennai, Dublin, Kleinmachnow (near Berlin) and Tel Aviv. As of July 2007, across 
Europe, PayPal also operates as a Luxembourg-based bank.

On March 17, 2010, PayPal entered into an agreement with China UnionPay (CUP), China s bankcard association, to allow Chinese consumers 
to use PayPal to shop online.PayPal is planning to expand its workforce in Asia to 2,000 by the end of the year 2010.
Between December 4ñ9, 2010, PayPal services were attacked in a series of denial-of-service attacks organized by Anonymous in retaliation 
for PayPal s decision to freeze the account of WikiLeaks citing terms of use violations over the publication of leaked US diplomatic cables.

( Copy of the Homepage: http://www.paypal.com ) [ http://en.wikipedia.org/wiki/PayPal ]


Abstract Advisory Information:
==============================
An independent vulnerability lab researcher discovered a persistent web vulnerability in the official PayPal Inc Community web-application.


Vulnerability Disclosure Timeline:
==================================
2014-10-08:	Public Disclosure (Vulnerability Laboratory)


Discovery Status:
=================
Published


Affected Product(s):
====================
PayPal Inc
Product: Community (Forums) 2013 Q2


Exploitation Technique:
=======================
Remote


Severity Level:
===============
Medium


Technical Details & Description:
================================
A persistent input validation web vulnerability has been discovered in the official PayPal Inc Help Community Center web-application.
The persistent vulnerability allows remote attacker to inject own script codes to the application-side of the affected module/function.

The issue exists within the Tagging Options Page under “My profile” in Paypal Community Help Forums website. Input validation is not 
being performed properly on the layouttagging_cloud_tag_delimiter which is the main cause of this vulnerability. Successful exploits 
will allow attacker-supplied HTML and script code to run in the context of the affected browser, potentially allowing the attacker to 
steal cookie-based authentication credentials or control how the site is rendered to the user. Other attacks may also be possible for 
instance URL Redirection.

These sort of vulnerabilities can result in multiple attack vectors on the client end which may eventually result in complete
compromise of the end user system. The persistent code injection vulnerability is located within the main application.

The security risk of the vulnerability is estimated as medium with a cvss (common vulnerability scoring system) count of 3.1.
Exploitation of this persistent application vulnerability requires a low or medium user interaction. Successful exploitation of
the vulnerability may result in malicious script code being executed in the victims browser resulting in script code injection, 
persistent phishing, Client side redirects and similar client side attacks.

Request Method(s):
				[+] POST

Vulnerable Module(s):
				[+] Tags - Sidebar Lithium

Vulnerable Parameter(s):
				[+] layouttagging_cloud_tag_delimiter

Affected Module(s):
				[+] /user/myprofilepage/tab/user-tagging


Proof of Concept (PoC):
=======================
The persistent web vulnerability can be exploited by remote attackers with low privileged application user account with low user interaction.
For security demonstration or to reproduce the security vulnerability follow the provided information and steps below to continue.

Manual steps to reproduce the security vulnerability ...

1. Open the the Paypal Community website
2. Login to your account and upon getting redirected to the welcome page, click on My Profile on the Top right corner.
3. Click on Edit Profile and goto “Tagging” section
4. Now, within the first field named “Add a separator between tags in clouds”, enter the following payload <h1>TEST
5. Click on Save and wait for the page to reload.
Note: Now, The attacker is able to see the inserted payload in the URL under Most popular tags  widget proving the existence of this vulnerability.
6. Successful reproduce of the persistent application vulnerability!

Note: Due to the fact that proper input parse/encode is not being performed on the web application, it is possible to inject malicious code from the 
vulnerable parameter. Attackers can leverage this vulnerability since it adds multiple attack vectors.


PoC: layouttagging_cloud_tag_delimiter

<div class="lia-form-input-wrapper lia-js-entry-help-text">
      <input class="lia-form-layouttagging-cloud-tag-delimiter-input lia-form-type-text lia-form-input-vertical" 
       maxlength="10" value="<[PERSISTENT INJECTED SCRIPT CODE!]>Ateeq" id="layouttagging_cloud_tag_delimiter" 
name="layouttagging_cloud_tag_delimiter" type="text"></input>
<div class="lia-form-validation-help-text lia-js-hidden">
Enter the character you want to use to separate the tags in a tag cloud (the default is a space).</div>

Reference(s):
https://www.paypal-community.com/t5/user/myprofilepage/tab/user-tagging


Solution - Fix & Patch:
=======================
Encode and parse the vulnerable `layouttagging_cloud_tag_delimiter` parameter to prevent execution of application-side injected code through 
the paypal inc community service.
Restrict and filter the input with a own exception to block script code inject attacks in the `tags` section.

Note: The issue has been patched in the paypal inc portal by the developer team during the pentests session of the vulnerability laboratory core team.


Security Risk:
==============
The security risk of the persistent input validation web vulnerability in the community tags module is estimated as medium(+).


Credits & Authors:
==================
Vulnerability Laboratory [Research Team] - Ateeq ur Rehman Khan (ateeq@...lution-sec.com) [www.vulnerability-lab.com]


Disclaimer & Information:
=========================
The information provided in this advisory is provided as it is without any warranty. Vulnerability Lab disclaims all warranties, either 
expressed or implied, including the warranties of merchantability and capability for a particular purpose. Vulnerability-Lab or its suppliers 
are not liable in any case of damage, including direct, indirect, incidental, consequential loss of business profits or special damages, even 
if Vulnerability-Lab or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation 
of liability for consequential or incidental damages so the foregoing limitation may not apply. We do not approve or encourage anybody to break 
any vendor licenses, policies, deface websites, hack into databases or trade with fraud/stolen material.

Domains:    www.vulnerability-lab.com   	- www.vuln-lab.com			       		- www.evolution-sec.com
Contact:    admin@...nerability-lab.com 	- research@...nerability-lab.com 	       		- admin@...lution-sec.com
Section:    dev.vulnerability-db.com	 	- forum.vulnerability-db.com 		       		- magazine.vulnerability-db.com
Social:	    twitter.com/#!/vuln_lab 		- facebook.com/VulnerabilityLab 	       		- youtube.com/user/vulnerability0lab
Feeds:	    vulnerability-lab.com/rss/rss.php	- vulnerability-lab.com/rss/rss_upcoming.php   		- vulnerability-lab.com/rss/rss_news.php
Programs:   vulnerability-lab.com/submit.php  	- vulnerability-lab.com/list-of-bug-bounty-programs.php	- vulnerability-lab.com/register/

Any modified copy or reproduction, including partially usages, of this file requires authorization from Vulnerability Laboratory. Permission to 
electronically redistribute this alert in its unmodified form is granted. All other rights, including the use of other media, are reserved by 
Vulnerability-Lab Research Team or its suppliers. All pictures, texts, advisories, source code, videos and other information on this website 
is trademark of vulnerability-lab team & the specific authors or managers. To record, list (feed), modify, use or edit our material contact 
(admin@...nerability-lab.com or research@...nerability-lab.com) to get a permission.

				Copyright © 2014 | Vulnerability Laboratory [Evolution Security]



-- 
VULNERABILITY LABORATORY RESEARCH TEAM
DOMAIN: www.vulnerability-lab.com
CONTACT: research@...nerability-lab.com


