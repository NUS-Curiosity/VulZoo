
Date: Thu, 18 Dec 2014 13:46:10 +0100
From: Vulnerability Lab <research@...nerability-lab.com>
To: bugtraq@...urityfocus.com, bugs@...uritytracker.com
Subject: E-Journal CMS (ID) - Multiple Web Vulnerabilities

Document Title:
===============
E-Journal CMS (ID) - Multiple Web Vulnerabilities 


References (Source):
====================
http://www.vulnerability-lab.com/get_content.php?id=1380


Release Date:
=============
2014-12-17


Vulnerability Laboratory ID (VL-ID):
====================================
1380


Common Vulnerability Scoring System:
====================================
7


Product & Service Introduction:
===============================
http://simlitabmas.dikti.go.id/ejournal/ 


Abstract Advisory Information:
==============================
An independent Vulnerability Laboratory Researcher discovered multiple vulnerabilities in the indonesian E-Journal web-application.


Vulnerability Disclosure Timeline:
==================================
2013-12-17:	Public Disclosure


Discovery Status:
=================
Published


Exploitation Technique:
=======================
Remote


Severity Level:
===============
High


Technical Details & Description:
================================
1.1
A sql injection web vulnerability has been discovered in the official E-Journal (ID) content management system.
The vulnerability allows remote attackers to execute own sql commands by usage of a vulnerable serivce value.

The vulnerability is located in the id value of the jurnal.php file. Remote attackers are able to execute own 
sql commands by usage of a GET method request with manipulated id value. Remote attackers are able to read 
database information by execution of own sql commands. The vulnerability is located in the client-side and the 
request method to execute sql commands is GET.

The security risk of the sql vulnerability is estimated as high with a cvss (common vulnerability scoring system) count of 7.0. 
Exploitation of the sql injection web vulnerability does not require a privileged application user account or user interaction.
Successful exploitation of the remote vulnerability results in database management system and web-application compromise.

Request Method(s):
				[+] GET

Vulnerable Module(s):
				[+] jurnal

Vulnerable File(s):
				[+] jurnal.php

Vulnerable Parameter(s):
				[+] id


1.2
A privilege escalation vulnerability has been discovered in the official E-Journal (ID) content management system.
The vulnerability allows an attacker to escalate of the restricted privileges, to gain for example higher access controls.

The privilege escalation vulnerability is located in tambah value of the URL input in the data.php file. Remote attackers can switch 
the menu to escalte with privileges by adding a new administrator account. The vulnerability is located on the application-side and 
the request method to inject is POST.

The security risk of the privilege escalation vulnerability is estimated as high with a cvss (common vulnerability scoring system) count of 6.9. 
Exploitation of the privilege escalation web vulnerability requires a low privileged application user account and no user interaction.
Successful exploitation of the remote vulnerability results in information leaking, database management system- and web-application -compromise.


Request Method(s):
				[+] POST

Vulnerable Module(s):
				[+] URL

Vulnerable File(s):
				[+] data.php

Vulnerable Parameter(s):
				[+] tambah


Proof of Concept (PoC):
=======================
The vulnerabilities can be exploited by remote attackers without privileged application user account and user interaction.
For security demonstration or to reproduce the security vulnerability follow the provided information and steps below to continue.

Dork(s):
inurl:mahasiswa.php intitle:E-Journal 
inurl:dosen.php intitle:E-Journal 
inurl:jurnal.php intitle:E-Journal 
inurl:dokumen.php intitle:E-Journal 
"Karya Tulis Mahasiswa" intitle:E-Journal 
"Design & Programming by" intitle:E-Journal 
"E-Journal adalah aplikasi berbasis web untuk" 
Or use your own Google Dorks :) 

Note: This E-Journal CMS has 2 versions, The Old Version doesn't have informasi.php (Informasi Menu).  
 
1.1
POC#1: SQL Injection 
http://[Site]/[Path]/jurnal.php?detail=jurnal&id=-'[SQL-INJECTION VULNERABILITY]--
 
Reference Url(s): 
http://e-journal.xxx.ac.id/jurnal.php?detail=jurnal&id='133[SQL-INJECTION VULNERABILITY]--
http://www.ejournal-xxx.com/jurnal.php?detail=jurnal&id='133[SQL-INJECTION VULNERABILITY]--
http://e-journal.xxx.ac.id/jurnal.php?detail=jurnal&id='133[SQL-INJECTION VULNERABILITY]--
http://ejurnal.xxx.ac.id/jurnal.php?detail=jurnal&id='133[SQL-INJECTION VULNERABILITY]--
http://ejournal.xxx.ac.id/jurnal.php?detail=jurnal&id='133[SQL-INJECTION VULNERABILITY]--


1.2    
PoC#2: Privilege Escalation  
You can create a new administrator account by usage of the following trick.
For Example my Target url is : http://www.ejournal-xxx.com/ 
 
Step1: Add data.php?tambah=dosen in the URL. So in this case the URL was http://www.ejournal-xxx.com/data.php?tambah=dosen 
Step2: Then you can see this notice : "ANDA TIDAK BERHAK MENGAKSES HALAMAN INI. SILAHKAN ANDA LOGIN SEBAGAI ADMINISTRATOR". 
Ignore that Notice and click Admin Menu.  Screenshot #1 : http://i59.tinypic.com/54he2b.png 
Step3: Successful exploited! Now you can add an Administrator Account. Screenshot #2 : http://i59.tinypic.com/2i8vyus.png 


Solution - Fix & Patch:
=======================
1.1
The vulnerability can be patched by usage of a prepared statement. Encode and parse the vulnerable id value in the jurnal.php file to prevent sql injection attacks.

1.2
Restrict the URL parameter input to prevent unauthorized account adds. Parse the URL value and encode the input restrict the url to a local source.


Security Risk:
==============
1.1
The security risk of the remote sql injection web vulnerability in the e-journal application is estimated as high. (CVSS 7.0)

1.2
The security risk of the privilege escalation web vulnerability in the URL parameter is estimated as high. (CVSS 6.9)


Credits & Authors:
==================
X-Cisadane - Stefanus (steevee.aka@...il.com)
Greetz to: X-Code YogyaFree, Explore Crew, CodeNesia, Bogor Hackers Community, Tomi Zaoldyeck and Winda Utari 


Disclaimer & Information:
=========================
The information provided in this advisory is provided as it is without any warranty. Vulnerability Lab disclaims all warranties, either expressed 
or implied, including the warranties of merchantability and capability for a particular purpose. Vulnerability-Lab or its suppliers are not liable 
in any case of damage, including direct, indirect, incidental, consequential loss of business profits or special damages, even if Vulnerability-Lab 
or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for 
consequential or incidental damages so the foregoing limitation may not apply. We do not approve or encourage anybody to break any vendor licenses, 
policies, deface websites, hack into databases or trade with fraud/stolen material.

Domains:    www.vulnerability-lab.com   	- www.vuln-lab.com			       		- www.evolution-sec.com
Contact:    admin@...nerability-lab.com 	- research@...nerability-lab.com 	       		- admin@...lution-sec.com
Section:    magazine.vulnerability-db.com	- vulnerability-lab.com/contact.php		       	- evolution-sec.com/contact
Social:	    twitter.com/#!/vuln_lab 		- facebook.com/VulnerabilityLab 	       		- youtube.com/user/vulnerability0lab
Feeds:	    vulnerability-lab.com/rss/rss.php	- vulnerability-lab.com/rss/rss_upcoming.php   		- vulnerability-lab.com/rss/rss_news.php
Programs:   vulnerability-lab.com/submit.php  	- vulnerability-lab.com/list-of-bug-bounty-programs.php	- vulnerability-lab.com/register/

Any modified copy or reproduction, including partially usages, of this file requires authorization from Vulnerability Laboratory. Permission to 
electronically redistribute this alert in its unmodified form is granted. All other rights, including the use of other media, are reserved by 
Vulnerability-Lab Research Team or its suppliers. All pictures, texts, advisories, source code, videos and other information on this website 
is trademark of vulnerability-lab team & the specific authors or managers. To record, list (feed), modify, use or edit our material contact 
(admin@...nerability-lab.com or research@...nerability-lab.com) to get a permission.

				Copyright © 2014 | Vulnerability Laboratory - [Evolution Security GmbH]™



-- 
VULNERABILITY LABORATORY - RESEARCH TEAM
SERVICE: www.vulnerability-lab.com
CONTACT: research@...nerability-lab.com
PGP KEY: http://www.vulnerability-lab.com/keys/admin@vulnerability-lab.com%280x198E9928%29.txt


