
Date: Mon, 19 Dec 2011 15:51:12 -0200
From: "Felipe M. Aragon" <felipe@...unt.com>
To: bugtraq@...urityfocus.com
Subject: Syhunt: Time-Based Blind NoSQL Injection

Time-Based Blind NoSQL Injection - Detecting server-side JavaScript 
injection vulnerabilities

In July 2011, Bryan Sullivan, a senior security researcher at Adobe 
Systems, demonstrated server-side JavaScript injection vulnerabilities 
in web applications using MongoDB and other NoSQL database engines. He 
demonstrated how they could be used to perform Denial of Service, File 
System, Remote Command Execution, and many other attacks, including the 
easy extraction of the entire contents of the NoSQL database -- a blind 
NoSQL injection attack (paper here at 
https://media.blackhat.com/bh-us-11/Sullivan/BH_US_11_Sullivan_Server_Side_WP.pdf). 


We not only confirmed the published data about the NoSQL injection 
vulnerabilities, but also discovered that the MongoDB shell provides a 
sleep() function which makes time-based detection possible of vulnerable 
web applications.

It is also possible to inject a custom sleep code, a technique that may 
be used to spot injection vulnerabilities in web applications using 
server-side JavaScript execution. This is not restricted to MongoDB.

Below you can find two examples of NoSQL injection vulnerabilities in 
PHP that could be spotted using these techniques.

Example 1: NoSQL Injection Vulnerability in PHP

The following requests would make these (or similar) vulnerable web 
application sleep for 10 seconds:

vulnerable.php?msg=1';sleep(10000);var%20foo='bar

The MongoDB sleep() function works with milliseconds.

Alternative technique using a custom sleep code:

vulnerable.php?msg=1';var%20d%20=%20new%20Date();%20var%20cd%20=%20null;%20do%20{%20cd%20=%20new%20Date();%20}%20while(cd-d%20<%2010000);var%20foo='bar 


<?
$mongo = new Mongo();
$db = $mongo->demo;
$id = $_GET['id'];
$js = "function() {
var id = '$id';
SOME CODE...
}";
$response = $db->execute($js);
...
?>

Example 2: NoSQL Injection Vulnerability in PHP

<?
$mongo = new Mongo();
$db = $mongo->demo;
$year = $_GET['year'];
$collection = $db->demo;
$query = 'function() {var search_year = \'' .
$year . '\';' .
'return this.publicationYear == search_year || ' .
' this.filmingYear == search_year || ' .
' this.recordingYear == search_year;}';
$cursor = $collection->find(array('$where' => $query));
...
?>


Example 3: Sleep in JavaScript

var date = new Date();
var curDate = null;
do { curDate = new Date(); }
while(curDate-date < 10000); // delay time (ms)

Solution

Always validate user input used in server-side JavaScript commands.

Article by Felipe Aragon. Originally published at 
http://www.syhunt.com/?n=Articles.NoSQLInjection

---

Copyright Â© 2011 Syhunt Cyber-Security

Disclaimer:
The information in this article is provided "as is" without
warranty of any kind. Details provided are strictly for
educational and defensive purposes.

Syhunt is not liable for any damages caused by direct or
indirect use of the information provided by this article.
