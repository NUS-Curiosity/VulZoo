
Date: Mon, 27 Sep 2004 13:25:33 +0200 (MET DST)
From: Paul Wouters <paul@...net.nl>
To: Jeremy Epstein <jeremy.epstein@...methods.com>
Cc: bugtraq@...urityfocus.com
Subject: RE: Diebold Global Election Management System (GEMS) Backdoor


On Thu, 23 Sep 2004, Jeremy Epstein wrote:

> (1) I agree that source code should be inspected by someone truly
> independent and competent, and that the standards for approving voting
> machines should be stronger.  However, that's NOT the same as open source.
> And I'd strongly discourage folks from calling for open source, as it plays
> directly into the hands of folks like Diebold, who claim that the people
> (like me) who want Voter Verified Paper Audit Trails (VVPATs) are really
> trying to kill free enterprise.

Free enterprise is not the issue here. Audit trails are. If it means that
somewhere someone cannot make a profit, then so be it. Unless you declare
democracy dead, and instate the Corporate Republic. The 'free market'
should not be a main consideration in voting security. If you cannot relay
that message to your government, then either you or your government is not
the right one for its task.

> the VVPAT groups with the open source community.  So rather than putting
> your energy into trying to get Diebold et al to move to open source, it

Diebold has proven to not earn the trust of the public. It deserves to lose
money, or even go bankrupt. That's capitalism. You screw up and your product
no longer sells and you go do something else. Perhaps Diebold can go into
the playing cards business.

> (3) WRT requiring that the technology protect itself in case the users
> don't, that's simply unrealistic.  In *any* real computer system, there are
> expectations about the environment (e.g., the administrators aren't hostile
> to the functioning of the system).  It's important to state what those
> expectations are, but there will ALWAYS be some that rely on non-technical
> means.  The important part about election systems is that they be explicitly
> stated, and they be enforceable using non-technical means (e.g., by having
> locks on doors).  The problem today is that some of the assumptions (e.g.,
> the vendor provided software doesn't have any bugs) are clearly unrealistic.

We are talking about voting machines here, not general purpose operating 
systems! They should be able to restrict and properly (and provably!) secure 
a reasonably simple dedicated single purpose voting computer.

> (4) WRT getting one set of software approved, and then installing another...
> that's an old problem in any environment.  The way it's supposed to work in
> election systems is that a particular version is approved, and it's illegal
> for the vendor to install something different.  If there are teeth in the
> law, and the vendor can be fined for installing illegal software, then it's

A fine? No. They just be blacklisted from ever supplying voting machines to
the government again. Screwing up elections is not like hitting a red light
when there is nobody around.

> Bottom line, election systems are no different than any other systems in
> that the security of the whole system is based on risk management.

But I guess no one trusts the US government itself anymore if even Europe
is sending officials to watch over the elections:

http://news.bbc.co.uk/2/hi/americas/3666898.stm

And to counter your arguments, the Netherlands has open sourced its voting
system. You can download and verify it at http://www.ososs.nl/

Paul
-- 
 	"Non cogitamus, ergo nihil sumus"


