
Date: Thu, 25 Nov 2004 16:30:19 +0100
From: "James Youngman" <bugtraq@...ession.spiral-arm.org>
To: <kbo@....tiscali.de>
Cc: srevilak@...akeasy.net, parimiv@...haw.com,
	Martin Buchholz <Martin.Buchholz@....COM>,
	levon@...ementarian.org, bugtraq@...urityfocus.com, bug-findutils@....org
Subject: Re: Changes to the filesystem while find is running - comments?


On Wed, Nov 24, 2004 at 08:51:38AM +0100, Casper.Dik@....COM wrote:
> 
> >I can see that that would be useful but it would fail to comply with
> >the POSIX standard, which specifies:
> >
> >          The find utility shall be able to descend to arbitrary
> >          depths in a file hierarchy and shall not fail due to path
> >          length limitations (unless a path operand specified by the
> >          application exceeds {PATH_MAX} requirements)
> 
> But PATH_MAX is limited and the number of file descriptors is perhaps
> not.

Systems differ.  Some have no limits on the depth of a directory
hierarchy.  Certainly I've created directory hierarchies of over
800,000 levels on HP-UX 9 and on Linux.  GNU Hurd has no limits at all
(and therefore used not to #define PATH_MAX at all).


> (On Solaris, PATH_MAX is 1024 so you require at most 512 file
> descriptors to keep the stack of directories: 512 is less than the
> default hard limit of 65536 file descriptors per process [S9, S8
> and before used 1024, still >> 512)

A worthwhile point, but since the POSIX standard doesn't mention fd
limits here I suspect that there may be an expectation in some
quarters that find will still be able to work even if the soft limit
is much lower.

That being said, consistently using fchdir() is a robust and sensible
approach.  However, I'm trying to correctly solve the problem of
secure downward movement in the directory hierarchy, which as far as I
can see is not fully solved simply by using fchdir().

Regards,
James.

