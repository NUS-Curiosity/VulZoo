
Date: Wed, 21 Jun 2023 21:53:54 -0400
From: Steve Grubb <sgrubb@...hat.com>
To: oss-security@...ts.openwall.com
Cc: Demi Marie Obenour <demi@...isiblethingslab.com>
Subject: Re: CVE-2023-31975: memory leak in yasm

On Wednesday, June 21, 2023 5:54:57 PM EDT Demi Marie Obenour wrote:
> On Thu, Jun 22, 2023 at 01:44:04AM +1000, Dave Horsfall wrote:
> > On Wed, 21 Jun 2023, Jeffrey Walton wrote:
> > > Memory leaks on exit are par for the course in GNU software per
> > > https://www.gnu.org/prep/standards/standards.html#Memory-Usage .
> > 
> > Don't bother with this, don't bother with that, etc...  Call me
> > old-school (which I am), but I cannot abide sloppy programming[*].
> 
> Memory leaks on exit are a _good_ thing in general.  There is absolutely
> zero point in calling free() if the program is about to exit â€” the OS
> will do a better job of freeing resources than the program itself ever
> could.

Sure, but how can static analysis or address sanitizers tell the difference 
between something created and leaked on the error path, vs something that 
mattered during the life of the program? Meaning something leaks in an event 
loop and slowly accumulates leakage. Nothing gives you a free pass but the OS 
when analyzing leaks. Mundane leaks need cleaning up so you can find the real 
leaks that matter.

-Steve


