
Date: Fri, 23 Oct 2015 17:56:31 +0300
From: gremlin@...mlin.ru
To: oss-security@...ts.openwall.com
Subject: Re: Prime example of a can of worms

On 2015-10-21 22:27:33 -0600, Kurt Seifried wrote:

 > I can't even begin to think how slow this would be on hardware
 > limited systems like $20 routers and whatnot (in theory you could
 > have systems taking tens of minutes), which would not be popular
 > with consumers (turn the unit on and wait from 0 seconds to an
 > hour or so for the web interface to come up!).

Normally, all those $20 (or even $10) routers don't need to generate
keys at the first start - they are configured via plain HTTP given
that user's PC is connected to a "LAN" port with a cable. And only
when user activates the outside access (via VPN or SSH) the keys are
to be generated - possibly in several hours, like those 17 hours the
`openssh dhparam -5 8192` command took at my notebook :-)

 > With this data in mind I think we need to generally encourage
 > everyone to go to a minimum of 2048 bit primes

For my clients, I force the use of 4096 bit for over 5 years.

 > (which should last a few more years assuming quantum computers
 > don't suddenly make factorization easy)

That wouldn't be suddenly. At least I'm not going to worry until
they would be able to factorize some number close to 2^160 - say,
266508845991748914569771929356540352347893240569. And yes, I know
one divisor: it is 4458192223320340849 :-)

 > and establish some safe methods of creating them, much like
 > generating CA encryption keys we need to ensure the systems/
 > software in use are correct, the entropy is available (and
 > not manipulated) and so on.

Here we come to trusted execution, trusted computation and so on.

 > Ideally we'd like to see people using different primes (e.g.
 > hardware manufacturers not using the same primes as everyone
 > else) and where possible people needing more security (e.g. a
 > VPN hosting provider) should generate their own keys securely.

Theory is fine. But in practice we see weakened algorithms with
(intentionally?) reduced key size.


-- 
Alexey V. Vissarionov aka Gremlin from Kremlin <gremlin ПРИ gremlin ТЧК ru>
GPG: 8832FE9FA791F7968AC96E4E909DAC45EF3B1FA8 @ hkp://keys.gnupg.net
