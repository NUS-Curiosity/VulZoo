
Date: Wed, 22 Sep 2010 09:26:41 +1200
From: Michael Koziarski <michael@...iarski.com>
To: "Steven M. Christey" <coley@...us.mitre.org>
Cc: Thomas Biege <thomas@...e.de>, oss-security@...ts.openwall.com, juliano@...ifera.comt, 
	thaidn@...ecurity.net, security@...yonrails.org
Subject: Re: CVE request: padding oracle attack: ruby on rails
 2.3, owasp esapi

On Wed, Sep 22, 2010 at 9:07 AM, Steven M. Christey
<coley@...us.mitre.org> wrote:
>
> When it comes to language interpreters and/or code libraries: if an exposed
> API function has a vuln in it that could affect any application that uses
> that function, it's suitable for inclusion in CVE - especially if the
> function seems likely to accept malicious input.  If there's *no way* that
> these API functions can be used safely, then that would be associated with
> Rails, and a single CVE could be assigned.  If they *can* be used safely,
> but lots of different programmers just screw it up (a la strcpy() in C),
> then the individual applications would get their own separate CVEs.
>
> In this case, while the issue is probably not a problem for the bulk of
> Rails programmers, it might be for some - so a single CVE assignment seems
> reasonable.

In that case this is much more in the strcpy camp than anything else.
We can do an announcement to the security list advising against the
use of the function when there are more secure alternatives available,
and also ship deprecation warnings in future point releases.

We'll use the CVE in any announcements we make, but there won't be
point releases to address it or patches people can install.  Does this
sound like a plan?

> Hope that made sense.
>
> - Steve
>
>
> On Wed, 22 Sep 2010, Michael Koziarski wrote:
>
>> On Wed, Sep 22, 2010 at 2:57 AM, Thomas Biege <thomas@...e.de> wrote:
>>>
>>> I got no answer from the POET paper authors yet but it can be
>>> that CVE-2010-3299 is invalid.
>>
>> I'm not sure what the criteria for a CVE is but there's nothing
>> exploitable here in the vast vast bulk of rails applications.
>>
>> It's certainly true that an application using the low level
>> encrypt/decrypt API is vulnerable to padding oracle attacks, but as
>> you mentioned those apis aren't actually used anywhere within rails
>> itself.
>>
>> Given the 'shoot yourself in the foot' nature of those low level apis,
>> we'll probably deprecate them as public apis and advise people to use
>> encrypt_and_sign/decrypt_and_verify instead.
>>
>>
>>
>>> Cheers
>>> Thomas
>>>
>>>
>>> Am Dienstag 14 September 2010 21:36:53 schrieb Josh Bressers:
>>>>
>>>> I've assgiend two. The details are quite vague unfortunately.
>>>>
>>>> CVE-2010-3299 padding oracle attack: ruby on rails 2.3
>>>> CVE-2010-3300 padding oracle attack: owasp esapi
>>>>
>>>> Thanks.
>>>>
>>>>> Hi,
>>>>> the paper [1], about practical padding oracle attacks
>>>>> mentions some programming frameworks as vulnerable (section 5):
>>>>> - Ruby On ails 2.3
>>>>> - OWASP ESAPI
>>>>>
>>>>> I think they both need a CVE-ID. Thanks.
>>>>>
>>>>> Cheers
>>>>> Thomas
>>>>>
>>>>> [1] http://usenix.org/events/woot10/tech/full_papers/Rizzo.pdf
>>>>
>>>
>>> --
>>>  Thomas Biege <thomas@...e.de>, SUSE LINUX, Security Support & Auditing
>>>  SUSE LINUX Products GmbH, GF: Markus Rex, HRB 16746 (AG Nuernberg)
>>> --
>>>  Wer aufhoert besser werden zu wollen, hoert auf gut zu sein.
>>>                            -- Marie von Ebner-Eschenbach
>>>
>>
>>
>>
>> --
>> Cheers
>>
>> Koz
>>
>



-- 
Cheers

Koz
