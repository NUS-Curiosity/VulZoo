
Date: Thu, 10 Apr 2014 13:52:57 +0200
From: Vulnerability Lab <research@...nerability-lab.com>
To: bugtraq@...urityfocus.com, bugs@...uritytracker.com
Subject: AppFish Offline Coder v2.2 iOS - Persistent Software Vulnerability

Document Title:
===============
AppFish Offline Coder v2.2 iOS - Persistent Software Vulnerability


References (Source):
====================
http://www.vulnerability-lab.com/get_content.php?id=1252


Release Date:
=============
2014-04-08


Vulnerability Laboratory ID (VL-ID):
====================================
1252


Common Vulnerability Scoring System:
====================================
3.1


Product & Service Introduction:
===============================
Offline coder allows you to enter HTML, CSS, Javascript and PHP code and have the output generated immediately. 
You can code completely offline, with the exception of compiling PHP, which requires an internet connection. 

- Instant offline processing of HTML, CSS and Javascript within the app.
- Instant processing of PHP code, with an internet connection (3G, 4G or wifi)
- Save and organise an unlimited number of code snippets
- Import snippets from JSFiddle.net
- Debugging of Javascript and PHP
- Jquery 1.7.2 included
- Adjustable window sizes
- Post snippets to JSFiddle to share with others

(Copy of the Homepage: https://itunes.apple.com/us/app/offline-coder/id548233375 )


Abstract Advisory Information:
==============================
The Vulnerability Laboratory Research Team discovered a persistent input validation vulnerability in the official AppFish Offline Coder v2.2 iOS mobile application.


Vulnerability Disclosure Timeline:
==================================
2014-04-08:	Public Disclosure (Vulnerability Laboratory)


Discovery Status:
=================
Published


Affected Product(s):
====================
AppFish
Product: Offline Coder - iOS Mobile Application 2.2


Exploitation Technique:
=======================
Local


Severity Level:
===============
Medium


Technical Details & Description:
================================
A persistent input validation web vulnerability has been discovered in the official AppFish Offline Coder v2.2 iOS mobile application.
The vulnerability allows local attackers to inject own malicious persistent script codes on the application-side of the vulnerable software.

The vulnerability is located in the add `new snippet` function of the `your snippets` module. Attackers are able to inject own script codes by usage of the vulnerable
add `new snippet` function. The issue affects the `your snippets` module were all snippets will be visible in a drop down list by a history. The attack vector is 
persistent on the application-side and the injection method is local with physical access. The vulnerable input is the `add new snippets` function and the execution 
occurs in the `your snippets`. The script code execution occurs on every click or add of snippets and not in the editor sandbox context. The security risk of the 
persistent web vulnerability is estimated as medium with a cvss (common vulnerability scoring system) count of 3.1(+)|(-)3.2.

Exploitation of the persistent vulnerability requires a privileged device user account with physical access and low user interaction. Successful exploitation of the 
persistent web vulnerability results in  persistent external redirects, persistent phishing and persistent manipulation of vulnerable connected or affected modules.

Vulnerable Module(s):
				[+] New Snippet (+)

Vulnerable Parameter(s):
				[+] snippet name

Affected Module(s):
				[+] Your Snippets - History Listing (Drop Down)


Proof of Concept (PoC):
=======================
The persistent input validation vulnerability can be exploited by local attackers with physical device access and low user interaction.
For security demonstration or to reproduce the vulnerability follow the provided information and steps below to continue.

Manual steps to reproduce the vulnerability:
1. Install the mobile application to your ios device (ipad or iphone) - https://itunes.apple.com/us/app/offline-coder/id548233375
2. Open the coding client section and on top is the vulnerble add `new snippet` input
3. Include your own malicous test payload to the new snippet module input and save the settings
4. Now, just click simple the drop down arrow
5. The script code execution occurs with persisten attack vector in the `my snippets` item listing on the bottom
6. Successful reproduce of the persistent script code inject via snippets!

Picture(s):
http://www.vulnerability-lab.com/resources/pictures/1252/1.png


Solution - Fix & Patch:
=======================
The vulnerability can be patched by a secure parse of the vulnerable `new snippet` input field.
Filter and encode also the vulnerable output names in the `my snippets` module.


Security Risk:
==============
The security risk of the persistent input validation web vulnerability is estimated as medium.


Credits & Authors:
==================
Vulnerability Laboratory [Research Team] - Benjamin Kunz Mejri (bkm@...lution-sec.com) [www.vulnerability-lab.com]


Disclaimer & Information:
=========================
The information provided in this advisory is provided as it is without any warranty. Vulnerability Lab disclaims all warranties, 
either expressed or implied, including the warranties of merchantability and capability for a particular purpose. Vulnerability-
Lab or its suppliers are not liable in any case of damage, including direct, indirect, incidental, consequential loss of business 
profits or special damages, even if Vulnerability-Lab or its suppliers have been advised of the possibility of such damages. Some 
states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation 
may not apply. We do not approve or encourage anybody to break any vendor licenses, policies, deface websites, hack into databases 
or trade with fraud/stolen material.

Domains:    www.vulnerability-lab.com   	- www.vuln-lab.com			       - www.evolution-sec.com
Contact:    admin@...nerability-lab.com 	- research@...nerability-lab.com 	       - admin@...lution-sec.com
Section:    www.vulnerability-lab.com/dev 	- forum.vulnerability-db.com 		       - magazine.vulnerability-db.com
Social:	    twitter.com/#!/vuln_lab 		- facebook.com/VulnerabilityLab 	       - youtube.com/user/vulnerability0lab
Feeds:	    vulnerability-lab.com/rss/rss.php	- vulnerability-lab.com/rss/rss_upcoming.php   - vulnerability-lab.com/rss/rss_news.php

Any modified copy or reproduction, including partially usages, of this file requires authorization from Vulnerability Laboratory. 
Permission to electronically redistribute this alert in its unmodified form is granted. All other rights, including the use of other 
media, are reserved by Vulnerability-Lab Research Team or its suppliers. All pictures, texts, advisories, source code, videos and 
other information on this website is trademark of vulnerability-lab team & the specific authors or managers. To record, list (feed), 
modify, use or edit our material contact (admin@...nerability-lab.com or research@...nerability-lab.com) to get a permission.

				Copyright Â© 2014 | Vulnerability Laboratory [Evolution Security]



-- 
VULNERABILITY LABORATORY RESEARCH TEAM
DOMAIN: www.vulnerability-lab.com
CONTACT: research@...nerability-lab.com


