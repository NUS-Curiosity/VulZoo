
Date: Wed, 12 Aug 2015 15:19:06 +0200
From: Vulnerability Lab <research@...nerability-lab.com>
To: bugtraq@...urityfocus.com, bugs@...uritytracker.com
Subject: bizidea Design CMS 2015Q3 - SQL Injection Vulnerability

Document Title:
===============
bizidea Design CMS 2015Q3 - SQL Injection Vulnerability


References (Source):
====================
http://www.vulnerability-lab.com/get_content.php?id=1571


Release Date:
=============
2015-08-12


Vulnerability Laboratory ID (VL-ID):
====================================
1571


Common Vulnerability Scoring System:
====================================
8.7


Product & Service Introduction:
===============================
http://www.bizidea.co.th


Abstract Advisory Information:
==============================
An indepndent vulnerability laboratory researcher discovered a remote sql injection web vulnerability in the official bizidea Design content management system.


Vulnerability Disclosure Timeline:
==================================
2015-08-12: Public Disclosure (Vulnerability Laboratory)


Discovery Status:
=================
Published


Affected Product(s):
====================
Bizidea Co. Ltd.
Product: BizIdea - Content Management System (Web-Application) 2015 Q3


Exploitation Technique:
=======================
Remote


Severity Level:
===============
High


Technical Details & Description:
================================
A remote sql injection web vulnerability has been discovered in the official bizidea Design content management system.
The vulnerability allows remote attackers to execute own sql commands to compromise the web-applicaation or database management system.

The vulnerability is located in the `news_id` value of the `index.php` file. Remote attackers are able to execute own sql commands by 
manipulation of the GET method request with the vulnerable news_id parameter. The request method to inject the sql command is GET and 
the issue is located on the application-side of the online-service.

The security risk of the sql injection vulnerability is estimated as high with a cvss (common vulnerability scoring system) count of 8.7.
Exploitation of the remote sql injection web vulnerability requires no user interaction or privilege web-application user account.
Successful exploitation of the remote sql injection results in database management system, web-server and web-application compromise.

Request Method(s):
						[+] GET

Vulnerable File(s):
						[+] index.php

Vulnerable Parameter(s):
						[+] news_id


Proof of Concept (PoC):
=======================
The sql injection web vulnerability can be exploited by remote attackers without privilege application user account or user interaction.
For security demonstration or to reproduce the vulnerability follow the provided information and steps below to continue.

Admin UI: /admin

Google Dork(s): "Powered by bizidea.co.th"

PoC: http://localhost.co.th:8080/index.php?route=module/news/detail&news_id=438%27[REMOTE SQL INJECTION VULNERABILITY!]



Solution - Fix & Patch:
=======================
The sql injection vulnerability can be patched by usage of a secure prepared statement or entity on requests via GET with the vulnerable news_id value.
Disallow special chars and escape to filter the input of the parameter.


Security Risk:
==============
The security risk of the remote sql injection web vulnerability in the bizidea content management system is estimated as high. (CVSS 8.7)


Credits & Authors:
==================
wild.soldier(behrouz mansoori) - Danger Security Team
SPT: Nima Danger , Mehran_FLash and all Members ...


Disclaimer & Information:
=========================
The information provided in this advisory is provided as it is without any warranty. Vulnerability Lab disclaims all warranties, either 
expressed or implied, including the warranties of merchantability and capability for a particular purpose. Vulnerability-Lab or its suppliers 
are not liable in any case of damage, including direct, indirect, incidental, consequential loss of business profits or special damages, even 
if Vulnerability-Lab or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation 
of liability for consequential or incidental damages so the foregoing limitation may not apply. We do not approve or encourage anybody to break 
any vendor licenses, policies, deface websites, hack into databases or trade with fraud/stolen material.

Domains:    www.vulnerability-lab.com   	- www.vuln-lab.com			       		- www.evolution-sec.com
Contact:    admin@...nerability-lab.com 	- research@...nerability-lab.com 	       		- admin@...lution-sec.com
Section:    dev.vulnerability-db.com	 	- forum.vulnerability-db.com 		       		- magazine.vulnerability-db.com
Social:	    twitter.com/#!/vuln_lab 		- facebook.com/VulnerabilityLab 	       		- youtube.com/user/vulnerability0lab
Feeds:	    vulnerability-lab.com/rss/rss.php	- vulnerability-lab.com/rss/rss_upcoming.php   		- vulnerability-lab.com/rss/rss_news.php
Programs:   vulnerability-lab.com/submit.php  	- vulnerability-lab.com/list-of-bug-bounty-programs.php	- vulnerability-lab.com/register/

Any modified copy or reproduction, including partially usages, of this file requires authorization from Vulnerability Laboratory. Permission to 
electronically redistribute this alert in its unmodified form is granted. All other rights, including the use of other media, are reserved by 
Vulnerability-Lab Research Team or its suppliers. All pictures, texts, advisories, source code, videos and other information on this website 
is trademark of vulnerability-lab team & the specific authors or managers. To record, list (feed), modify, use or edit our material contact 
(admin@...nerability-lab.com or research@...nerability-lab.com) to get a permission.

				Copyright Â© 2014 | Vulnerability Laboratory [Evolution Security]



-- 
VULNERABILITY LABORATORY - RESEARCH TEAM
SERVICE: www.vulnerability-lab.com
CONTACT: research@...nerability-lab.com
PGP KEY: http://www.vulnerability-lab.com/keys/admin@vulnerability-lab.com%280x198E9928%29.txt


