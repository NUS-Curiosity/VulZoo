
Date: Thu, 26 Feb 2015 12:45:55 +0100
From: Vulnerability Lab <research@...nerability-lab.com>
To: bugtraq@...urityfocus.com, bugs@...uritytracker.com
Subject: Data Source: Scopus CMS - SQL Injection Web Vulnerability

Document Title:
===============
Data Source: Scopus CMS - SQL Injection Web Vulnerability


References (Source):
====================
http://www.vulnerability-lab.com/get_content.php?id=1436


Release Date:
=============
2015-02-25


Vulnerability Laboratory ID (VL-ID):
====================================
1436


Common Vulnerability Scoring System:
====================================
8.9


Abstract Advisory Information:
==============================
An independent security team of the vulnerability laboratory discovered a critical sql injection web vulnerability in the official Data Source Scopus Content Management System.


Vulnerability Disclosure Timeline:
==================================
2015-02-25:	Public Disclosure (Vulnerability Laboratory)


Discovery Status:
=================
Published


Exploitation Technique:
=======================
Remote


Severity Level:
===============
Critical


Technical Details & Description:
================================
A remote sql injection web vulnerability has been discovered in the official Data Source Scopus Content Management System.
The vulnerability allows remote attacker to inject own sql commands to compromise the affected database management system.

The vulnerability is located in the `w` value of the `countrysearch.php` file. Remote attackers are able to compromise the 
application & dbms by manipulation of the `w` value in the `countrysearch.php` file. The issue is a classic order by injection.
The request method to inject own commands is GET and the issue is located on the applicaiton-side of the service.

The security risk of the sql injection vulnerability is estimated as critical with a cvss (common vulnerability scoring system) count of 8.9.
Exploitation of the remote sql injection web vulnerability requires no user interaction or privileged web-application user account.
Successful exploitation of the remote sql injection results in dbms, web-server and web-application compromise.

Request Method(s):
				[+] GET

Vulnerable File(s):
				[+] countrysearch.php

Vulnerable Parameter(s):
				[+] w


Proof of Concept (PoC):
=======================
The remote sql injection web vulnerability can be exploited by remote attackers without privileged application user account or user interaction.
For security demonstration or to reproduce the security vulnerability follow the provided information and steps below to continue.

PoC: Example
http://[localhost]/[PATH]/[FILE].php?w=-[SQL INJECCTION VULNERABILITY]'--

PoC: Demonstration
http://www.server.com/countrysearch.php?w=world%27-[SQL INJECCTION VULNERABILITY]'--

Dork(s):
inurl:".php?w="


Solution - Fix & Patch:
=======================
The vulnerability can be patched by usage of the preapred statement in connection with a secure encode/parse of the w value in the countrysearch.php file.
Restrict the w value input and filter by disallowing input of special chars or negative values. Disable php script error(0);!


Security Risk:
==============
The security risk of the remote sql injection web vulnerability in the countrysearch.php file is estimated as critical.


Credits & Authors:
==================
[GuardIran Security Team] P0!s0nC0d3 - (http://www.guardiran.org) 


Disclaimer & Information:
=========================
The information provided in this advisory is provided as it is without any warranty. Vulnerability Lab disclaims all warranties, either expressed 
or implied, including the warranties of merchantability and capability for a particular purpose. Vulnerability-Lab or its suppliers are not liable 
in any case of damage, including direct, indirect, incidental, consequential loss of business profits or special damages, even if Vulnerability-Lab 
or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for 
consequential or incidental damages so the foregoing limitation may not apply. We do not approve or encourage anybody to break any vendor licenses, 
policies, deface websites, hack into databases or trade with fraud/stolen material.

Domains:    www.vulnerability-lab.com   	- www.vuln-lab.com			       		- www.evolution-sec.com
Contact:    admin@...nerability-lab.com 	- research@...nerability-lab.com 	       		- admin@...lution-sec.com
Section:    magazine.vulnerability-db.com	- vulnerability-lab.com/contact.php		       	- evolution-sec.com/contact
Social:	    twitter.com/#!/vuln_lab 		- facebook.com/VulnerabilityLab 	       		- youtube.com/user/vulnerability0lab
Feeds:	    vulnerability-lab.com/rss/rss.php	- vulnerability-lab.com/rss/rss_upcoming.php   		- vulnerability-lab.com/rss/rss_news.php
Programs:   vulnerability-lab.com/submit.php  	- vulnerability-lab.com/list-of-bug-bounty-programs.php	- vulnerability-lab.com/register/

Any modified copy or reproduction, including partially usages, of this file requires authorization from Vulnerability Laboratory. Permission to 
electronically redistribute this alert in its unmodified form is granted. All other rights, including the use of other media, are reserved by 
Vulnerability-Lab Research Team or its suppliers. All pictures, texts, advisories, source code, videos and other information on this website 
is trademark of vulnerability-lab team & the specific authors or managers. To record, list (feed), modify, use or edit our material contact 
(admin@...nerability-lab.com or research@...nerability-lab.com) to get a permission.

				Copyright © 2015 | Vulnerability Laboratory - [Evolution Security GmbH]™



-- 
VULNERABILITY LABORATORY - RESEARCH TEAM
SERVICE: www.vulnerability-lab.com
CONTACT: research@...nerability-lab.com
PGP KEY: http://www.vulnerability-lab.com/keys/admin@vulnerability-lab.com%280x198E9928%29.txt


