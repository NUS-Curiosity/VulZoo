
Date: Tue, 15 Apr 2008 15:23:06 -0400
From: iDefense Labs <labs-no-reply@...fense.com>
To: vulnwatch@...nwatch.org, full-disclosure@...ts.grok.org.uk,
	bugtraq@...urityfocus.com
Subject: iDefense Security Advisory 04.14.08: ClamAV libclamav PE WWPack Heap
 Overflow Vulnerability

iDefense Security Advisory 04.14.08
http://labs.idefense.com/intelligence/vulnerabilities/
Apr 14, 2008

I. BACKGROUND

Clam AntiVirus is a multi-platform GPL anti-virus toolkit. ClamAV is
often integrated into e-mail gateways and used to scan e-mail traffic
for viruses. It supports virus scanning for a wide variety of packed
Portable Executable (PE) binaries. WWPack is one of the supported
packers. For more information visit the vendor's web site at the
following URL.

http://www.clamav.net/

II. DESCRIPTION

Remote exploitation of a heap overflow vulnerability in Clam AntiVirus'
ClamAV, as included in various vendors' operating system distributions,
allows attackers to execute arbitrary code with the privileges of the
affected process.

The vulnerability exists within the code responsible for reading in
sections within a PE binary packed with the WWPack executable
compressor. See the following excerpt from libclamav/pe.c:

  1879          dsize = max-min+headsize-exe_sections[nsections - 1].rsz;
  ....
  1883          if((dest = (char *) cli_calloc(dsize, sizeof(char))) == 
NULL) {
  ....
  1897          for(i = 0 ; i < (unsigned int)nsections-1; i++) {
  1898              if(exe_sections[i].rsz) {
  1899                  if(!cli_seeksect(desc, &exe_sections[i]) || 
(unsigned int) cli_readn(desc, dest + headsize + exe_sections[i].rva - 
min, exe_sections[i].rsz) != exe_sections[i].rsz) {

The size of the allocated heap buffer is calculated on line 1879 using
several values that are under attacker control. The allocation takes
place on line 1883. Within the loop, starting on line 1897, data is
read into the allocated buffer (line 1899).

No validation is done to ensure that the resulting data is not written
outside the bounds of the "dest" buffer. The "headsize",
"exe_sections[i].rva", "min", and "exe_sections[i].rsz" values that are
used for this operation are all under attacker control. As such, an
exploitable heap corruption condition may occur.

III. ANALYSIS

Exploitation of this vulnerability results in the execution of arbitrary
code with the privileges of the process using libclamav. In the case of
the clamd program, this will result in code execution with the
privileges of the clamav user. Unsuccessful exploitation results in the
clamd process crashing.

IV. DETECTION

iDefense has confirmed the existence of this vulnerability in ClamAV
0.92.1. Previous versions may also be affected.

V. WORKAROUND

Disabling the scanning of PE files will prevent exploitation.

  If using clamscan, this can be done by running clamscan with the 
'--no-pe' option.
  If using clamdscan, set the 'ScanPE' option in the clamd.conf file to 
'no'.

VI. VENDOR RESPONSE



VII. CVE INFORMATION

A Mitre Corp. Common Vulnerabilities and Exposures (CVE) number has not
been assigned yet.

VIII. DISCLOSURE TIMELINE

03/04/2008  Initial vendor notification
03/06/2008  Initial vendor response
04/14/2008  Coordinated public disclosure

IX. CREDIT

This vulnerability was reported to iDefense by Damian Put and Thomas
Pollet.

Get paid for vulnerability research
http://labs.idefense.com/methodology/vulnerability/vcp.php

Free tools, research and upcoming events
http://labs.idefense.com/

X. LEGAL NOTICES

Copyright Â© 2008 iDefense, Inc.

Permission is granted for the redistribution of this alert
electronically. It may not be edited in any way without the express
written consent of iDefense. If you wish to reprint the whole or any
part of this alert in any other medium other than electronically,
please e-mail customerservice@...fense.com for permission.

Disclaimer: The information in the advisory is believed to be accurate
at the time of publishing based on currently available information. Use
of the information constitutes acceptance for use in an AS IS condition.
 There are no warranties with regard to this information. Neither the
author nor the publisher accepts any liability for any direct,
indirect, or consequential loss or damage arising from use of, or
reliance on, this information.
