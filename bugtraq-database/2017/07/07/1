
Date: Thu, 6 Jul 2017 14:19:49 -0500
From: KoreLogic Disclosures <disclosures@...elogic.com>
To: fulldisclosure@...lists.org, bugtraq@...urityfocus.com
Subject: KL-001-2017-011 : Barracuda WAF Internal Development Credential
 Disclosure

KL-001-2017-011 : Barracuda WAF Internal Development Credential Disclosure

Title: Barracuda WAF Internal Development Credential Disclosure
Advisory ID: KL-001-2017-011
Publication Date: 2017.07.06
Publication URL: https://www.korelogic.com/Resources/Advisories/KL-001-2017-011.txt


1. Vulnerability Details

     Affected Vendor: Barracuda
     Affected Product: Web Application Firewall V360
     Affected Version: Firmware v8.0.1.014
     Platform: Embedded Linux
     CWE Classification: CWE-489: Leftover Debug Code, CWE-200: Information Exposure
     Impact: Privileged Access
     Attack vector: Code Review

2. Vulnerability Description

     Firmware reversing of the Barracuda Web Application Firewall
     uncovered development artifacts that should have been removed
     on the production images. Once the encryption scheme was broken,
     many QA and development tools were discovered on the affected
     partitions. Some of these contained sensitive information such
     as authentication credentials used by internal developers.

3. Technical Description

     root@(none):/realroot/root# grep -ri "bospw" *|more
     newfile/lib/Stub.pm:        'BOSPW'                      => undef,
     newfile/lib/Stub.pm:    my $bospw = $self->_retrieve_bos_pw();
     newfile/lib/Stub.pm:    $self->_set_BOSPW($bospw);
     newfile/lib/Stub.pm:      my $bospw = Postbuild::get_bos_pw();
     newfile/lib/Stub.pm:      my $url =
"https://$bospw\@ops.barracudanetworks.com:443/cgi-old/createserialkey.cgi?model=$tmpmodel&date=$date&mac=$tmpMAC&revision=$tmprevision&hw=$tmphw&devel=$devel&vm=$vm&
     platform=$platform&buildkey=$bdvers";
     newfile/lib/Stub.pm:          $bospw = Postbuild::get_bos_pw();
     newfile/lib/Stub.pm:          $url =
"https://$bospw\@ops.barracudanetworks.com:443/cgi-old/createserialkey.cgi?model=$tmpmodel&date=$date&mac=$tmpMAC&revision=$tmprevision&hw=$tmphw&devel=$devel&vm=$vm
     &platform=$platform&dest_country=$ship_code&buildkey=$bdvers";
     newfile/lib/Stub.pm:    my $bospw;
     newfile/lib/Stub.pm:    if ( -f "/root/bospw" ) {
     newfile/lib/Stub.pm:        open IN, "/root/bospw";
     newfile/lib/Stub.pm:        $bospw = <IN>;
     newfile/lib/Stub.pm:        chomp($bospw);
     newfile/lib/Stub.pm:        $bospw = "manufacturing:N3rfH3rders";
     newfile/lib/Stub.pm:    return $bospw;
     newfile/lib/Stub.pm:sub _get_BOSPW() {
     newfile/lib/Stub.pm:   return $self->{'BOSPW'};
     newfile/lib/Stub.pm:sub _set_BOSPW() {
     newfile/lib/Stub.pm:    my ($self, $BOSPW) = @_;
     newfile/lib/Stub.pm:    $self->{'BOSPW'} = $BOSPW;
     newfile/lib/Postbuild.pm:    my $bospw = "manufacturing:N3rfH3rders";
     newfile/lib/Postbuild.pm:    if( -f "/root/bospw" ) {
     newfile/lib/Postbuild.pm:        open IN, "/root/bospw";
     newfile/lib/Postbuild.pm:        $bospw = <IN>;
     newfile/lib/Postbuild.pm:        chomp($bospw);
     newfile/lib/Postbuild.pm:    return $bospw;
     newfile/lib/Postbuild.pm:        my $bospw = get_bos_pw();
     newfile/lib/Postbuild.pm:	my $url =
"https://$bospw\@ops.barracuda.com:443/cgi-old/createserialkey.cgi?model=$tmpmodel&date=$date&mac=$tmpMAC&revision=$tmprevision&hw=$tmphw&devel=$devel&vm=$vm&pl
     atform=$platform&bdvers=$bdvers";
     newfile/lib/Postbuild.pm:		$url =
"https://$bospw\@ops.barracuda.com:443/cgi-old/createserialkey.cgi?model=$tmpmodel&date=$date&mac=$tmpMAC&revision=$tmprevision&hw=$tmphw&devel=$devel&vm=$
     vm&platform=$platform&dest_country=$ship_code&bdvers=$bdvers";
     newfile/lib/Postbuild.pm:    my $bospw = get_bos_pw();
     newfile/lib/Postbuild.pm:    my $url =
"https://$bospw\@ops.barracudanetworks.com:443/~order/prod_void.cgi?void_serial=$serial";
     postbuild-code-platform-2.tar.gz.integrit:!/root/bospw
     qaclear:    unlink("/root/bospw");
     qaclear.2:unlink("/root/bospw");
     qapass:my @bospw = ("manufacturing:N3rfH3rders");
     qapass:my $extrabospw = injectAndGet("__METHOD__://__POSTBUILDIP__/postbuild/files/os_updates2/root/bospw", {
METHOD => [ "http", "https" ], POSTBUILDIP => [ "mfg-postbuild.englab.cudanet.local" ] }, 10
      );
     qapass:if( defined($extrabospw) ) {
     qapass:	unshift @bospw, split(/\n/, $extrabospw);
     qapass:	$url = "https://__BOSPW__\@__BOSIP__/~order/prod_accept.cgi?serial=$serial&wh=$warehouse&firmware=$firmware"
     qapass:	$url =  "https://__BOSPW__\@__BOSIP__/~order/prod_accept.cgi?serial=$serial&firmware=$firmware";
     qapass:if (!defined(injectAndGet($url, { BOSPW => \@bospw, BOSIP => \@bosip } ))) {
     qapass:$url = "https://__BOSPW__\@__BOSIP__/cgi-bin/get_serial_status.cgi?serial=$serial";
     qapass:my $content = injectAndGet($url, { BOSPW => \@bospw, BOSIP => \@bosip } );
     qapass:$url =
"https://__BOSPW__\@__BOSIP__/cgi-bin/shipping.cgi?option=qadocs&xlist=1&box_label=1&printer_loc=manufacturing&submit=Print&serial_id=$serial&override=$serial$loc_string";
     qapass:	$url =
"https://__BOSPW__\@__BOSIP__/cgi-bin/shipping.cgi?option=qadocs&xlist=1&box_label=1&link_code=1&printer_loc=manufacturing&submit=Print&serial_id=$serial&override=$serial$loc_string";
     qapass:if( !defined(injectAndGet($url, { BOSPW => \@bospw, BOSIP => \@bosip })) ) {
     qapass:$url =
"https://__BOSPW__\@__BOSIP__/cgi-bin/shipping.cgi?option=qadocs&serial_label=1&printer_loc=manufacturing&submit=Print&serial_id=$serial&override=$serial$loc_string";
     qapass:if( !defined(injectAndGet($url, { BOSPW => \@bospw, BOSIP => \@bosip })) ) {


4. Mitigation and Remediation Recommendation

     The vendor has patched this vulnerability in the lastest
     virtual appliance release.

5. Credit

     This vulnerability was discovered by Matt Bergin (@thatguylevel)
     of KoreLogic, Inc. and Joshua Hardin.

6. Disclosure Timeline

     2016.12.20 - KoreLogic sends vulnerability report and PoC to
                  Barracuda.
     2016.12.21 - Barracuda acknowledges receipt of the vulnerability
                  report.
     2017.01.09 - Barracuda informs KoreLogic that they are working
                  on remediation for this issue.
     2017.01.26 - Barracuda asks for additional time beyond the
                  standard 45 business day embargo to address this
                  and other issues reported by KoreLogic.
     2017.02.27 - 45 business days have elapsed since the issue was
                  reported.
     2017.04.10 - 75 business days have elapsed since the issue was
                  reported.
     2017.05.15 - 100 business days have elapsed since the issue was
                  reported.
     2017.05.24 - Barracuda updates KoreLogic on the status of the
                  remediation efforts.
     2017.06.13 - 120 business days have elapsed since the issue was
                  reported.
     2017.06.27 - Barracuda informs KoreLogic that the issue has
                  been fixed in the latest release of the WAF
                  virtual appliance.
     2017.07.06 - KoreLogic public disclosure.

7. Proof of Concept

     See 3. Technical Description


The contents of this advisory are copyright(c) 2017
KoreLogic, Inc. and are licensed under a Creative Commons
Attribution Share-Alike 4.0 (United States) License:
http://creativecommons.org/licenses/by-sa/4.0/

KoreLogic, Inc. is a founder-owned and operated company with a
proven track record of providing security services to entities
ranging from Fortune 500 to small and mid-sized companies. We
are a highly skilled team of senior security consultants doing
by-hand security assessments for the most important networks in
the U.S. and around the world. We are also developers of various
tools and resources aimed at helping the security community.
https://www.korelogic.com/about-korelogic.html

Our public vulnerability disclosure policy is available at:
https://www.korelogic.com/KoreLogic-Public-Vulnerability-Disclosure-Policy.v2.2.txt



Download attachment "signature.asc" of type "application/pgp-signature" (526 bytes)
