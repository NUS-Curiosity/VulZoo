
Date: Sat, 10 Mar 2007 08:28:27 -0800
From: "Thor (Hammer of God)" <thor@...merofgod.com>
To: <bugtraq@...urityfocus.com>,
	"Roger A. Grimes" <roger@...neretcs.com>
Cc: "Tim" <tim-security@...tinelchicken.org>
Subject: Re: [Full-disclosure] Microsoft Windows Vista/2003/XP/2000 file management security issues

Apps utilizing temporary files should always use the TEMP or TMP environment 
variables, not a hard-coded path.  And by default, each user has their own 
temp directory created (in XP/Server it is "\Documents and 
Settings\username\Local Settings\temp" and in Vista it is 
"\Users\username\AppData\Local\Temp") that only they have permissions to 
(with SYSTEM and Administrators, of course).  It's not like there is some 
global "Full Control" temp directory created by default.

t



----- Original Message ----- 
From: "Roger A. Grimes" <roger@...neretcs.com>
To: "Tim" <tim-security@...tinelchicken.org>
Cc: <bugtraq@...urityfocus.com>; <full-disclosure@...ts.grok.org.uk>
Sent: Friday, March 09, 2007 9:42 AM
Subject: RE: [Full-disclosure] Microsoft Windows Vista/2003/XP/2000 file 
management security issues


So, let me get this. An app storing sensitive data doesn't make its own
temp storage folders in a secure location, and instead relies upon one
of the few folders in Windows that all users have Full Control to, and
this is a Windows problem?  In Linux, if an app uses \tmp, is that a
Linux issue?

Sounds like a developer issue to me.

Roger

-----Original Message-----
From: Tim [mailto:tim-security@...tinelchicken.org]
Sent: Friday, March 09, 2007 11:20 AM
To: Roger A. Grimes
Cc: bugtraq@...urityfocus.com; full-disclosure@...ts.grok.org.uk
Subject: Re: [Full-disclosure] Microsoft Windows Vista/2003/XP/2000 file
management security issues


I find your assessment somewhat short-sighted.  I have conducted code
reviews on several commercial apps which use C:\TEMP in very insecure
ways to store sensitive data.  It seems some of these attacks would be
possible in those situations.

Sure, Windows is already pathetically insecure against an attackers
already on the local system, but this would be yet another attack
vector.

tim


