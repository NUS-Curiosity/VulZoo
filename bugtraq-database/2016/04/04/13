
Date: Mon, 4 Apr 2016 13:34:34 +0200
From: Vulnerability Lab <research@...nerability-lab.com>
To: bugtraq@...urityfocus.com, bugs@...uritytracker.com
Subject: Techsoft Web Solutions CMS 2016 Q2 - SQL Injection Web Vulnerability


Document Title:
===============
Techsoft Web Solutions CMS (2016 Q2) - SQL Injection Web Vulnerability


References (Source):
====================
http://www.vulnerability-lab.com/get_content.php?id=1810


Release Date:
=============
2016-04-04


Vulnerability Laboratory ID (VL-ID):
====================================
1810


Common Vulnerability Scoring System:
====================================
7.2


Product & Service Introduction:
===============================
TechSoft WEB SOLUTIONS is an India based company that have many years
experience in the design, development and implementation of bespoke
software applications, relational databases, Internet and Intranet based
systems. TECHSOFT WEB SOLUTIONS is dedicated to providing professional
Website Design Solutions, Web Development, E-Commerce Web Applications,
Website Maintenance and Reengineering, Domain and Web Hosting Services, etc.

(COpy of the Vendor Homepage:
http://www.techsoftweb.com/Web-Design-Company-Kerala.html )


Abstract Advisory Information:
==============================
An independent vulnerability laboratory research team discovered
multiple remote sql injection vulnerabilities in the Techsoft Content
Management System.


Vulnerability Disclosure Timeline:
==================================
2016-04-04: Public Disclosure (Vulnerability Laboratory)


Discovery Status:
=================
Published


Affected Product(s):
====================
Techsoft Web Solutions
Product: TechSoft - Content Management System (Web-Application) 2016 Q2


Exploitation Technique:
=======================
Remote


Severity Level:
===============
High


Technical Details & Description:
================================
A remote sql-injection web vulnerability has been discovered in the
official Techsoft Content Management System (2016 Q2).
The vulnerability allows remote attackers to execute own sql commands to
compromise the web-applicaation or connected dbms.

The vulnerabilities are located in the `id` and `newsid` values of the
`Content_sub.php`, `news_detail.php`, `ward.php`,
`package_list.php`, `association.php` and `packages.php`files. Remote
attackers are able to execute sql commands by injection
of malicious statements via GET method request. The vulnerability is
located on the application-side of the online service.
The injection points are the id and newsid values in the vulnerable
marked php files. The security vulnerability is a classic
order by sql injection bug.

The security risk of the sql-injection vulnerability is estimated as
high with a cvss (common vulnerability scoring system) count of 7.2.
Exploitation of the remote sql injection web vulnerability requires no
user interaction or privileged web-application user accounts.
Successful exploitation of the remote sql injection results in database
management system, web-server and web-application compromise.

Request Method(s):
                [+] GET

Vulnerable File(s):
                [+] Content_sub.php
                [+] news_detail.php
                [+] ward.php
                [+] package_list.php
                [+] association.php
                [+] packages.php

Vulnerable Parameter(s):
                [+] id
                [+] newsid


Proof of Concept (PoC):
=======================
The remote sql-injection web vulnerability can be exploited by remote
attackers without user interaction or privileged web-application user
accounts.
For security demonstration or to reproduce the vulnerability follow the
provided information and steps below to continue.

Dork(s):
intext:"POWERED BY Techsoft" inurl:php?id

PoC: Exploitation
localhost:8080/Content_sub.php?id=5%27-[SQL-INJECTION VULNERABILITY!]*--
localhost:8080/news_detail.php?newsid=9%27-[SQL-INJECTION VULNERABILITY!]*--
localhost:8080/ward.php?id=2%27-[SQL-INJECTION VULNERABILITY!]*--
localhost:8080/package_list.php?id=7%27-[SQL-INJECTION VULNERABILITY!]*--
localhost:8080/news-detail.php?id=2%27-[SQL-INJECTION VULNERABILITY!]*--
localhost:8080/association.php?id=Youth-Association%27-[SQL-INJECTION
VULNERABILITY!]*--
localhost:8080/content.php?id=Service%27-[SQL-INJECTION VULNERABILITY!]*--
localhost:8080/packages.php?id=6%27-[SQL-INJECTION VULNERABILITY!]*--


Solution - Fix & Patch:
=======================
The vulnerability can be patched by usage of a secure prepared statement
in the vulnerable php files.
Encode and parse also the input of the vulnerable id and newsid values
to prevent sql injection or script code injection attacks.
Restrict the input with a filter mechanism and disallow the usage of
special chars. Escape and use entities to define clean and secure values.


Security Risk:
==============
The security risk of the remote sql injection web vulnerabilities in the
cms web-application are estimated as high. (CVSS 7.2)


Credits & Authors:
==================
Iran Cyber Security Group - 0x3a (ICG SEC) [Iran-Cyber.Net]
[http://www.vulnerability-lab.com/show.php?user=Iran%20Cyber%20Security]
THX: MOHAMAD-NOFOZI , root3r , sir.h4m1d , m0hamad.black , whitewolf ,
mr.s4jj4d , mr.turk , 0day , pi.hack , l3gi0n , nazanin_wild and 0xdevil


Disclaimer & Information:
=========================
The information provided in this advisory is provided as it is without
any warranty. Vulnerability Lab disclaims all warranties, either
expressed or implied,
including the warranties of merchantability and capability for a
particular purpose. Vulnerability-Lab or its suppliers are not liable in
any case of damage,
including direct, indirect, incidental, consequential loss of business
profits or special damages, even if Vulnerability-Lab or its suppliers
have been advised
of the possibility of such damages. Some states do not allow the
exclusion or limitation of liability for consequential or incidental
damages so the foregoing
limitation may not apply. We do not approve or encourage anybody to
break any licenses, policies, deface websites, hack into databases or
trade with stolen data.

Domains:    www.vulnerability-lab.com         - www.vuln-lab.com        
                - www.evolution-sec.com
Contact:    admin@...nerability-lab.com     -
research@...nerability-lab.com                 - admin@...lution-sec.com
Section:    magazine.vulnerability-lab.com     -
vulnerability-lab.com/contact.php                 -
evolution-sec.com/contact
Social:        twitter.com/vuln_lab        -
facebook.com/VulnerabilityLab                 -
youtube.com/user/vulnerability0lab
Feeds:        vulnerability-lab.com/rss/rss.php     -
vulnerability-lab.com/rss/rss_upcoming.php             -
vulnerability-lab.com/rss/rss_news.php
Programs:   vulnerability-lab.com/submit.php     -
vulnerability-lab.com/list-of-bug-bounty-programs.php     -
vulnerability-lab.com/register.php

Any modified copy or reproduction, including partially usages, of this
file requires authorization from Vulnerability Laboratory. Permission to
electronically
redistribute this alert in its unmodified form is granted. All other
rights, including the use of other media, are reserved by
Vulnerability-Lab Research Team or
its suppliers. All pictures, texts, advisories, source code, videos and
other information on this website is trademark of vulnerability-lab team
& the specific
authors or managers. To record, list, modify, use or edit our material
contact (admin@ or research@...nerability-lab.com) to get a ask permission.

                    Copyright © 2016 | Vulnerability Laboratory -
[Evolution Security GmbH]™




-- 
VULNERABILITY LABORATORY - RESEARCH TEAM
SERVICE: www.vulnerability-lab.com
CONTACT: research@...nerability-lab.com


