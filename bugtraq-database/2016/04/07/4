
Date: Thu, 7 Apr 2016 10:25:14 +0200
From: Vulnerability Lab <research@...nerability-lab.com>
To: bugtraq@...urityfocus.com, bugs@...uritytracker.com
Subject: Eight Webcom CMS (2016 Q2) - SQL Injection Vulnerability


Document Title:
===============
Eight Webcom CMS (2016 Q2) - SQL Injection Vulnerability


References (Source):
====================
http://www.vulnerability-lab.com/get_content.php?id=1811


Release Date:
=============
2016-04-05


Vulnerability Laboratory ID (VL-ID):
====================================
1811


Common Vulnerability Scoring System:
====================================
7.1


Product & Service Introduction:
===============================
Eight Webcom, is specialized in catering diversified web designing needs
of people all over the globe. We support our offerings based on
client's business requirements and provide in-depth reliable solution.
We provide standards for our customer with consistent in every
stage from end to end through the entire. With Ajax, web applications
can retrieve data from the server asynchronously in the background
without interfering with the display and behavior of the existing page.
We have Expertise in Ajax Development, Ajax Application, Ajax Web
Application. The term Ajax has come to represent a broad group of web
technologies that can be used to implement a web application that
communicates with a server in the background, without interfering with
the current state of the page.

(Copy of the Vendor Homepage: http://www.8webcom.com/ajax )


Abstract Advisory Information:
==============================
An independent vulnerability laboratory researcher discovered a remote
sql-injection vulnerability in the official Eight Webcom web-application
(2016 Q2).


Vulnerability Disclosure Timeline:
==================================
2016-04-05: Public Disclosure (Vulnerability Laboratory)


Discovery Status:
=================
Published


Affected Product(s):
====================
Eight Webcom
Product: Eight Webcom - AJAX (Web-Application) 2016 Q2


Exploitation Technique:
=======================
Remote


Severity Level:
===============
High


Technical Details & Description:
================================
A remote sql-injection web vulnerability has been discovered in the
official Eight Webcom web-application (2016 Q2).
The vulnerability allows remote attackers to execute own sql commands to
compromise the web-applicaation or connected dbms.

The sql-injection vulnerability is located in the `id` and `newsid`
values of the `content.php`file. Remote attackers are
able to execute sql commands by injection of malicious statements via
GET method request. The vulnerability is located on
the application-side of the online service. The injection point is the
id value in the vulnerable content.php file.
The security vulnerability is a classic order by sql injection bug in
the id parameter.

The security risk of the sql-injection vulnerability is estimated as
high with a cvss (common vulnerability scoring system) count of 7.1.
Exploitation of the remote sql injection web vulnerability requires no
user interaction or privileged web-application user accounts.
Successful exploitation of the remote sql injection results in database
management system, web-server and web-application compromise.

Request Method(s):
                [+] GET

Vulnerable File(s):
                [+] content.php

Vulnerable Parameter(s):
                [+] id


Proof of Concept (PoC):
=======================
The remote sql-injection web vulnerability can be exploited by remote
attackers without user interaction or privileged web-application user
accounts.
For security demonstration or to reproduce the vulnerability follow the
provided information and steps below to continue.

Dork(s):
intext:Powered by Eight Webcom Pvt. Ltd. inurl:content.php?id=

PoC: Exploitation
http://localhost:8080/content.php?id=25'[SQL-INJECTION VULNERABILITY!]--


Solution - Fix & Patch:
=======================
The vulnerability can be patched by usage of a secure prepared statement
and entities in the content.php file GET method request.
Filter and restrict the input by disallowing the usage of special chars
or escape the entries.
Encode and parse the vulnerable id parameter context to finally prevent
exploitation of the vulnerability.


Security Risk:
==============
The security risk of the remote sql-injection web vulnerability in the
content management system is estimated as high. (CVSS 7.1)


Credits & Authors:
==================
Iran Cyber Security Group - 0x3a (ICG SEC) [Iran-Cyber.Net]
[http://www.vulnerability-lab.com/show.php?user=Iran%20Cyber%20Security]
THX: MOHAMAD-NOFOZI , root3r , sir.h4m1d , m0hamad.black , whitewolf ,
mr.s4jj4d , mr.turk , 0day , pi.hack , l3gi0n , nazanin_wild and 0xdevil


Disclaimer & Information:
=========================
The information provided in this advisory is provided as it is without
any warranty. Vulnerability Lab disclaims all warranties, either
expressed or implied,
including the warranties of merchantability and capability for a
particular purpose. Vulnerability-Lab or its suppliers are not liable in
any case of damage,
including direct, indirect, incidental, consequential loss of business
profits or special damages, even if Vulnerability-Lab or its suppliers
have been advised
of the possibility of such damages. Some states do not allow the
exclusion or limitation of liability for consequential or incidental
damages so the foregoing
limitation may not apply. We do not approve or encourage anybody to
break any licenses, policies, deface websites, hack into databases or
trade with stolen data.

Domains:    www.vulnerability-lab.com         - www.vuln-lab.com        
                - www.evolution-sec.com
Contact:    admin@...nerability-lab.com     -
research@...nerability-lab.com                 - admin@...lution-sec.com
Section:    magazine.vulnerability-lab.com     -
vulnerability-lab.com/contact.php                 -
evolution-sec.com/contact
Social:        twitter.com/vuln_lab        -
facebook.com/VulnerabilityLab                 -
youtube.com/user/vulnerability0lab
Feeds:        vulnerability-lab.com/rss/rss.php     -
vulnerability-lab.com/rss/rss_upcoming.php             -
vulnerability-lab.com/rss/rss_news.php
Programs:   vulnerability-lab.com/submit.php     -
vulnerability-lab.com/list-of-bug-bounty-programs.php     -
vulnerability-lab.com/register.php

Any modified copy or reproduction, including partially usages, of this
file requires authorization from Vulnerability Laboratory. Permission to
electronically
redistribute this alert in its unmodified form is granted. All other
rights, including the use of other media, are reserved by
Vulnerability-Lab Research Team or
its suppliers. All pictures, texts, advisories, source code, videos and
other information on this website is trademark of vulnerability-lab team
& the specific
authors or managers. To record, list, modify, use or edit our material
contact (admin@ or research@...nerability-lab.com) to get a ask permission.

                    Copyright © 2016 | Vulnerability Laboratory -
[Evolution Security GmbH]™

-- 
VULNERABILITY LABORATORY - RESEARCH TEAM
SERVICE: www.vulnerability-lab.com
CONTACT: research@...nerability-lab.com


