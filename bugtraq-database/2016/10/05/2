
Date: Wed, 5 Oct 2016 12:52:35 +0200
From: Vulnerability Lab <research@...nerability-lab.com>
To: bugtraq@...urityfocus.com, bugs@...uritytracker.com
Subject: Cyberoam iview UTM v0.1.2.7 - (Ajax) XSS Web Vulnerability

Document Title:
===============
Cyberoam iview UTM v0.1.2.7 - (Ajax) XSS Web Vulnerability 


References (Source):
====================
http://www.vulnerability-lab.com/get_content.php?id=1850

Cyberoam ID: #1059276
Security ID: NCR-2064


Release Date:
=============
2016-10-04


Vulnerability Laboratory ID (VL-ID):
====================================
1850


Common Vulnerability Scoring System:
====================================
3.3


Product & Service Introduction:
===============================
Enterprises and MSSPs need a solution that gives them visibility into network activities and security posture from a single location. Cyberoam iView 
offers centralized logging and reporting of network and user activity over multiple devices across distributed locations for security events. It offers 
logs and reports of Cyberoam network security appliances, along with other UTMs and NGFW appliances, routers and switches.

(Copy of the Vendor Homepage:  https://www.cyberoam.com/cyberoamiview.html )


Abstract Advisory Information:
==============================
The vulnerability laboratory core research team discovered a client-side cross site vulnerability in the official iview Cyberoam utm v0.1.2.7 appliance web-application.


Vulnerability Disclosure Timeline:
==================================
2016-05-24: Researcher Notification & Coordination (Lawrence Amer - Vulnerability Laboratory)
2016-05-25: Vendor Notification (Cyberoam Security Team)
2016-09-20: Vendor Fix/Patch (Cyberoam Security Team)
2016-10-01: Acknowledgement & Bug Bounty (Cyberoam iview Developer Team)
2016-10-04: Public Disclosure (Vulnerability Laboratory)


Discovery Status:
=================
Published


Affected Product(s):
====================
Sophos
Product: iview Cyberoam - Appliance (Web-Application) 0.1.2.7


Exploitation Technique:
=======================
Remote


Severity Level:
===============
Medium


Technical Details & Description:
================================
A client side cross site scripting web vulnerability has been discovered in the official iview Cyberoam utm v0.1.2.7 appliance web-application.
The client-side web vulnerability allows remote attackers to inject own malicious script codes to client-side browser to application requests.

The vulnerability is located in the module `Dashboards - Custom Dashboard - Critria`. Remote attackers and low privileged web-application user 
accounts are able to inject own malicious script code context in the search input for parameters [username,sourcehost,emailaddr sender, 
emailaddr recipent). The data of the POST method request in the Body is bypassing the input validation and executes without a secure encode. 
The request runs through the data type "json".

The security risk of the client-side cross site vulnerability is estimated as medium with a cvss (common vulnerability scoring system) count of 3.3. 
Exploitation of the non-persistent input validation vulnerability requires no privileged web-application user account or a low privileged web-application 
user account and low user interaction. Successful exploitation of the vulnerability results in session hijacking, non-persistent phishing attacks, 
non-persistent external redirects to malicious source and non-persistent manipulation of affected or connected application modules.

Request Method(s) 
				[+] POST - [json] 


Vulnerable Module(s):
				[+] AjaxController 
				[+] Dashboard - Custom Dashboard - Critria  


Vulnerable Parameter(s): 
				[+] username
				[+] sourcehost
				[+] emailaddr sender
				[+] emailaddr recipent 


Proof of Concept (PoC):
=======================
The client-side web vulnerability can be exploited by remote attackers or low privileged web-application user accounts with low user interaction.
For security demonstration or to reproduce the vulnerability follow the provided information and steps below to continue.


Manual steps to reproduce the vulnerability ...
1. Open the iview url localhost:8080/iview 
2. After that, use the critria search in the following module
Note: Dashboards - Custom Dashboard - (critria input)
3. Type in the search input field a java script payload 
4. Successful reproduce of the vulnerability!


--- PoC Session Logs [POST] ---
https://iviewdemo.localhost:8080/AjaxController
action: 2
json: {"width":1146,"height":320,"isSort":false,"viewAll":true,"table":"on","Graph":"on","graphLimit":10,
"groupQuery":false,"originReportGroup":-1,"returnReportID":-1,"detailReport":-1,"detailReportView":false,
"type":"G","filter":{"recordPerPage":5,"currentPage":1,"startDate":"2016-05-21 00:00:00","endDate":
"2016-05-21 23:59:59","criteria":[],"reportCriteria":[],"limit":10000,"offset":0,"sort":{},"deviceCategory":
"device","appliancelist":["1","2","3","4"]},"id":1001,"index":0,"reportGroupid":1001}
-
POST https://iviewdemo.localhost:8080/AjaxController
Accept: application/xml, text/xml, */*; q=0.01
Origin: chrome-extension://kajfghlhfkcocafkcjlajldicbikpgnp
X-Requested-With: XMLHttpRequest
User-Agent: Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/37.0.2062.120 Safari/537.36
Cookie: JSESSIONID=AFCE7A3B7D53F363842FE2459D7EF444.ivwtomcat
-
HTTP/1.1 200 OK
Server: Apache
Connection: Keep-Alive
Content-Type: text/xml;charset=UTF-8


Reference(s):
https://iviewdemo.localhost:8080/
https://iviewdemo.localhost:8080/AjaxController


Solution - Fix & Patch:
=======================
The vulnerability can be patched by a secure parse and encode of the vulnerable input field context.
Encode all inputs and restrict the input by disallowing the usage of special chars.
Parse also the outgoing values for the user notification by the appliance service itself to prevent malicious attack scenarios.




Security Risk:
==============
The security risk of the client-side cross site scripting web vulnerability in the cyberoam iview application is estimated as medium. (CVSS 3.3)


Credits & Authors:
==================
Vulnerability Laboratory [Core Research Team] - Lawrence Amer - [http://www.vulnerability-lab.com/show.php?user=Lawrence%20Amer]


Disclaimer & Information:
=========================
The information provided in this advisory is provided as it is without any warranty. Vulnerability Lab disclaims all warranties, either expressed or implied, 
including the warranties of merchantability and capability for a particular purpose. Vulnerability-Lab or its suppliers are not liable in any case of damage, 
including direct, indirect, incidental, consequential loss of business profits or special damages, even if Vulnerability-Lab or its suppliers have been advised 
of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing 
limitation may not apply. We do not approve or encourage anybody to break any licenses, policies, deface websites, hack into databases or trade with stolen data.

Domains:    www.vulnerability-lab.com 		- www.vuln-lab.com 						- www.evolution-sec.com
Contact:    admin@...nerability-lab.com 	- research@...nerability-lab.com 				- admin@...lution-sec.com
Section:    magazine.vulnerability-lab.com 	- vulnerability-lab.com/contact.php 				- evolution-sec.com/contact
Social:	    twitter.com/vuln_lab		- facebook.com/VulnerabilityLab 				- youtube.com/user/vulnerability0lab
Feeds:	    vulnerability-lab.com/rss/rss.php 	- vulnerability-lab.com/rss/rss_upcoming.php 			- vulnerability-lab.com/rss/rss_news.php
Programs:   vulnerability-lab.com/submit.php 	- vulnerability-lab.com/list-of-bug-bounty-programs.php 	- vulnerability-lab.com/register.php

Any modified copy or reproduction, including partially usages, of this file requires authorization from Vulnerability Laboratory. Permission to electronically 
redistribute this alert in its unmodified form is granted. All other rights, including the use of other media, are reserved by Vulnerability-Lab Research Team or 
its suppliers. All pictures, texts, advisories, source code, videos and other information on this website is trademark of vulnerability-lab team & the specific 
authors or managers. To record, list, modify, use or edit our material contact (admin@ or research@...nerability-lab.com) to get a ask permission.

				    Copyright © 2016 | Vulnerability Laboratory - [Evolution Security GmbH]™



-- 
VULNERABILITY LABORATORY - RESEARCH TEAM
SERVICE: www.vulnerability-lab.com


