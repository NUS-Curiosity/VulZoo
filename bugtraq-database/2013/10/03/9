
Date: Thu, 03 Oct 2013 02:31:30 +0200
From: Vulnerability Lab <research@...nerability-lab.com>
To: bugtraq@...urityfocus.com, bugs@...uritytracker.com
Subject: WebAssist PowerCMS PHP - Multiple Web Vulnerabilities

Title:
======
WebAssist PowerCMS PHP - Multiple Web Vulnerabilities


Date:
=====
2013-09-28


References:
===========
http://www.vulnerability-lab.com/get_content.php?id=1098


VL-ID:
=====
1098


Common Vulnerability Scoring System:
====================================
4


Introduction:
=============
Design Extender is a Dreamweaver extension that, among other things, adds WebAssist`s proven CMS solution, PowerCMS, to any 
Dreamweaver website so that you or your clients can manage your website content with blessed ease. Use Design Extender`s 
user-friendly wizards to create new content areas directly in Dreamweaver. Then you can view, insert and edit your content 
the good ol` fashioned way (from a browser) or directly within Dreamweaver! Yes, you heard that correctly! With Design 
Extender`s CMS tools, you may add PowerCMS to any of your Dreamweaver sites without purchasing additional licenses. This 
is an ideal extension for developers who frequently build content management systems for their clients!

(Copy of the Vendor Homepage: http://www.webassist.com/ )


Abstract:
=========
The Vulnerability Laboratory Research Team discovered multiple vulnerabilities in the official WebAssist PowerCMS PHP Web-Application.


Report-Timeline:
================
2013-09-28:    Public Disclosure (Vulnerability Laboratory)


Status:
========
Published


Exploitation-Technique:
=======================
Remote


Severity:
=========
Medium


Details:
========
1.1
A persistent input validation web vulnerability is detected in the official WebAssist PowerCMS PHP Web-Application.
The bug allows an attacker (remote) to implement/inject own malicious persistent script codes (application side).

The vulnerability is located in the `User Management` module when processing to request via POST method manipulated `first- 
& lastname` parameters. Remote attackers can change the name of an user account to own script code to execute the malicious 
context in the `Add/Edit` mode or main `User Management` listing. 

Exploitation of the persistent web vulnerability requires low user interaction and a local low privileged web-application account. 
Successful exploitation of the vulnerability can lead to persistent session hijacking (customers), account steal via persistent web 
attacks, persistent phishing or persistent manipulation of module context.


Vulnerable Module(s):
				[+] User Management - Add User

Vulnerable Parameter(s):
				[+] Firstname
				[+] Lastname

Affected Module(s):
				[+] User Edit/Add Listing
				[+] User Management Listing


2.1 - 2.2
Two client-side cross site scripting web vulnerabilities are detected in the official WebAssist PowerCMS PHP Web-Application.
The non-persistent cross site scripting web vulnerability allows an attacker to manipulate client side web application to browser requests.

The first cross site scripting vulnerability is located in the contents_results.php file when processing to request via GET method manipulated 
s_Keyword search parameters. The malicious context gets executed on client-side of the application in the search results listing.

The secound cross site scripting web vulnerability is located in the load_content.php file when processing to request via GET method manipulated 
contentTotal parameters. The malicious context gets executed on client-side of the application in the error id listing of the load_content.php file.

Exploitation of the vulnerability requires no privileged application user account but low or medium user interaction. Successful exploitation of 
the vulnerability results in session hijacking, client-side phishing, client-side external redirects or malware loads and client-side mmanipulation 
of the vulnerable module context.

Request Method(s):
				[+] [GET]

Vulnerable Module(s):
				[+] Search
				[+] Module Context Listing

Vulnerable File(s):
				[+] contents_results.php
				[+] load_content.php

Vulnerable Parameter(s):
				[+] s_Keyword
				[+] contentTotal


Proof of Concept:
=================
1.1
The persistent input validation web vulnerabilty can be exploited by remote attackers with low privileged application user account and 
with low interaction. For demonstration or reproduce ...



Review: POST - Add User


<div class="validation">
</div>
<form action="" id="user" name="user" method="post">
<label for="email">Email Address:</label>
<input name="email" id="email" value="ptester23@...il.com" class="validate['required','email']" type="text">

<label for="firstname">First Name:</label>
<input name="firstname" id="firstname" value=">\" <[PERSISTENT INJECTED SCRIPT CODE!])<" 
type="text">\"<[PERSISTENT INJECTED SCRIPT CODE!])<"" class="validate['required']">
        
<label for="lastname">Last Name:</label>
        <input name="lastname" type="text" id="lastname" value=">\"<[PERSISTENT INJECTED SCRIPT CODE!])<   
>\"<[PERSISTENT INJECTED SCRIPT CODE!])<" class="validate['required']"  />
        

Reference(s):
http://powercms.localhost:8080/admin_cms/user_insert.php


The client-side cross site scripting web vulnerabilties can be exploited by remote attackers without privileged application user account and 
with low or medium user interaction. For demonstration or reproduce ...


2.1

PoC:
http://powercms.localhost:8080/admin_cms/contents_results.php?S_Keyword=a%2520%3C%2F%3E%3E%22%3Ciframe+src%3Da+onload%3Dalert%28%22BKM%22%29%3C&Search=Search

Review: Search Results

<h1>You searched "a%20>\"<[NON-PERSISTENT SCRIPT CODE EXECUTION!]BKM\")<"</h1">
<h2>Below are the results to your search.</h2>
<h2>Sorry no results matched your search.</h2>
</div></div><div id="footer"></a>
</div></div>
</body>
</html></iframe></h1>



2.2

PoC:
http://powercms.localhost:8080/admin_cms/common/load_content.php?ContentID=362&contentTotal=a%20%3C/%3E%3E%22%3Ciframe%20src=http://www.vulnerability-lab.com%3E


Review: ContentTotal Error Exception ID

<div class="content-detail">
  <img src="../images/choose.png" class="shiftright" align="left">
  <p class="sentence">Choose the content area you wish to edit below</p>
  <span id="title"></span> <span id="num">(a >\"<[NON-PERSISTENT SCRIPT CODE EXECUTION!]"> editable region)</span> 


Solution:
=========
1.1
The persistent input validation vulnerability can be patched by a secure parse and encode of the name input fields of the users.
Ensure the users listing is also secure encoded to prevent execution out of the listing module context.

1.2
The first client-side cross site scripting vulnerability can be patched by a secure escape or encode of the contentTotal parameter in the load_content.php.

The secound client-side cross site scripting vulnerability can be patched by a secure escape or encode of the s_Keyword parameter in the content_results.php.


Risk:
=====
1.1
The security risk of the persistent input validation web vulnerability in the user management is estimated as medium(+).

1.2
The security risk of the client-side cross site scripting web vulnerabilities are estimated as medium(-).


Credits:
========
Vulnerability Laboratory [Research Team] - Benjamin Kunz Mejri (bkm@...lution-sec.com) [www.vulnerability-lab.com]


Disclaimer:
===========
The information provided in this advisory is provided as it is without any warranty. Vulnerability Lab disclaims all warranties, 
either expressed or implied, including the warranties of merchantability and capability for a particular purpose. Vulnerability-
Lab or its suppliers are not liable in any case of damage, including direct, indirect, incidental, consequential loss of business 
profits or special damages, even if Vulnerability-Lab or its suppliers have been advised of the possibility of such damages. Some 
states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation 
may not apply. We do not approve or encourage anybody to break any vendor licenses, policies, deface websites, hack into databases 
or trade with fraud/stolen material.

Domains:    www.vulnerability-lab.com   	- www.vuln-lab.com			       - www.evolution-sec.com
Contact:    admin@...nerability-lab.com 	- research@...nerability-lab.com 	       - admin@...lution-sec.com
Section:    www.vulnerability-lab.com/dev 	- forum.vulnerability-db.com 		       - magazine.vulnerability-db.com
Social:	    twitter.com/#!/vuln_lab 		- facebook.com/VulnerabilityLab 	       - youtube.com/user/vulnerability0lab
Feeds:	    vulnerability-lab.com/rss/rss.php	- vulnerability-lab.com/rss/rss_upcoming.php   - vulnerability-lab.com/rss/rss_news.php

Any modified copy or reproduction, including partially usages, of this file requires authorization from Vulnerability Laboratory. 
Permission to electronically redistribute this alert in its unmodified form is granted. All other rights, including the use of other 
media, are reserved by Vulnerability-Lab Research Team or its suppliers. All pictures, texts, advisories, source code, videos and 
other information on this website is trademark of vulnerability-lab team & the specific authors or managers. To record, list (feed), 
modify, use or edit our material contact (admin@...nerability-lab.com or research@...nerability-lab.com) to get a permission.

				Copyright Â© 2013 | Vulnerability Laboratory [Evolution Security]



-- 
VULNERABILITY LABORATORY RESEARCH TEAM
DOMAIN: www.vulnerability-lab.com
CONTACT: research@...nerability-lab.com


