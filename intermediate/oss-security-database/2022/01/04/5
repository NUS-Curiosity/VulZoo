
Date: Tue, 4 Jan 2022 11:06:35 +0100
From: Carlton Gibson <carlton.gibson@...il.com>
To: oss-security@...ts.openwall.com
Subject: Django security releases issued: 4.0.1, 3.2.11, and 2.2.26 (Multiple CVEs)

Blog post:
https://www.djangoproject.com/weblog/2022/jan/04/security-releases/

Django 4.0.1, 3.2.11, and 2.2.26 fix three security issues.

In accordance with `our security release policy
<https://docs.djangoproject.com/en/dev/internals/security/>`_, the Django
team
is issuing
`Django 4.0.1 <https://docs.djangoproject.com/en/dev/releases/4.0.1/>`_,
`Django 3.2.11 <https://docs.djangoproject.com/en/dev/releases/3.2.11/>`_,
and
`Django 2.2.26 <https://docs.djangoproject.com/en/dev/releases/2.2.26/>`_.
These release addresses the security issues detailed below. We encourage all
users of Django to upgrade as soon as possible.

CVE-2021-45115: Denial-of-service possibility in
``UserAttributeSimilarityValidator``
=====================================================================================

``UserAttributeSimilarityValidator`` incurred significant overhead
evaluating submitted password that were artificially large in relative to
the
comparison values. On the assumption that access to user registration was
unrestricted this provided a potential vector for a denial-of-service
attack.

In order to mitigate this issue, relatively long values are now ignored by
``UserAttributeSimilarityValidator``.

This issue has severity "medium" according to the Django security policy.

CVE-2021-45116: Potential information disclosure in ``dictsort`` template
filter
================================================================================

Due to leveraging the Django Template Language's variable resolution logic,
the
``dictsort`` template filter was potentially vulnerable to information
disclosure or unintended method calls, if passed a suitably crafted key.

In order to avoid this possibility, ``dictsort`` now works with a restricted
resolution logic, that will not call methods, nor allow indexing on
dictionaries.

As a reminder, all untrusted user input should be validated before use.

This issue has severity "low" according to the Django security policy.

CVE-2021-45452: Potential directory-traversal via ``Storage.save()``
====================================================================

``Storage.save()`` allowed directory-traversal if directly passed suitably
crafted file names.

This issue has severity "low" according to the Django security policy.

Affected supported versions
===========================

* Django main branch
* Django 4.0
* Django 3.2
* Django 2.2

Resolution
==========

Patches to resolve the issue have been applied to Django's main branch and
to
the 4.0, 3.2, and 2.2 release branches. The patches may be obtained from the
following changesets.

CVE-2021-45115:

* On the `main branch <
https://github.com/django/django/commit/968a3d01fa79f055f93a1c3ed1535ecbcbdbb842
>`__
* On the `4.0 release branch <
https://github.com/django/django/commit/df79ef03ac867c93caaa6be56bc69e66abfeef8f
>`__
* On the `3.2 release branch <
https://github.com/django/django/commit/a8b32fe13bcaed1c0b772fdc53de84abc224fb20
>`__
* On the `2.2 release branch <
https://github.com/django/django/commit/2135637fdd5ce994de110affef9e67dffdf77277
>`__

CVE-2021-45116:

* On the `main branch <
https://github.com/django/django/commit/761f449e0daf3de06b0132bd4d6dfcdeef578e26
>`__
* On the `4.0 release branch <
https://github.com/django/django/commit/2a8ec7f546d6d5806e221ec948c5146b55bd7489
>`__
* On the `3.2 release branch <
https://github.com/django/django/commit/c7fe895bca06daf12cc1670b56eaf72a1ef27a16
>`__
* On the `2.2 release branch <
https://github.com/django/django/commit/c9f648ccfac5ab90fb2829a66da4f77e68c7f93a
>`__

CVE-2021-45452:

* On the `main branch <
https://github.com/django/django/commit/6d343d01c57eb03ca1c6826318b652709e58a76e
>`__
* On the `4.0 release branch <
https://github.com/django/django/commit/e1592e0f26302e79856cc7f2218ae848ae19b0f6
>`__
* On the `3.2 release branch <
https://github.com/django/django/commit/8d2f7cff76200cbd2337b2cf1707e383eb1fb54b
>`__
* On the `2.2 release branch <
https://github.com/django/django/commit/4cb35b384ceef52123fc66411a73c36a706825e1
>`__

The following releases have been issued:

* Django 4.0.1 (`download Django 4.0.1 <
https://www.djangoproject.com/m/releases/4.0/Django-4.0.1.tar.gz>`_ |
`4.0.1 checksums <
https://www.djangoproject.com/m/pgp/Django-4.0.1.checksum.txt>`_)
* Django 3.2.11 (`download Django 3.2.11 <
https://www.djangoproject.com/m/releases/3.2/Django-3.2.11.tar.gz>`_ |
`3.2.11 checksums <
https://www.djangoproject.com/m/pgp/Django-3.2.11.checksum.txt>`_)
* Django 2.2.26 (`download Django 2.2.26 <
https://www.djangoproject.com/m/releases/2.2/Django-2.2.26.tar.gz>`_ |
`2.2.26 checksums <
https://www.djangoproject.com/m/pgp/Django-2.2.26.checksum.txt>`_)

The PGP key ID used for these releases is Carlton Gibson: `E17DF5C82B4F9D00
<https://github.com/carltongibson.gpg>`_.

General notes regarding security reporting
==========================================

As always, we ask that potential security issues be reported via
private email to ``security@...ngoproject.com``, and not via Django's
Trac instance or the django-developers list. Please see `our security
policies <https://www.djangoproject.com/security/>`_ for further
information.

