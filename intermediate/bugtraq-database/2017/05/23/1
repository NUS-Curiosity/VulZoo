
Date: Tue, 23 May 2017 14:01:30 +0200 (CEST)
From: Secunia Research <remove-vuln@...unia.com>
To: bugtraq@...urityfocus.com
Subject: Secunia Research: Microsoft Windows Heap-based Buffer Overflow Vulnerabilities

======================================================================

                     Secunia Research 2016/05/22

    Microsoft Windows Heap-based Buffer Overflow Vulnerabilities

======================================================================
Table of Contents

Affected Software....................................................1
Severity.............................................................2
Description of Vulnerabilities.......................................3
Solution.............................................................4
Time Table...........................................................5
Credits..............................................................6
References...........................................................7
About Flexera Software...............................................8
Verification.........................................................9

======================================================================
1) Affected Software

* Microsoft Windows 10
* Microsoft Windows 7
* Microsoft Windows 8.1
* Microsoft Windows RT 8.1
* Microsoft Windows Server 2008
* Microsoft Windows Server 2012
* Microsoft Windows Server 2016
* Microsoft Windows Vista

======================================================================
2) Severity

Rating: Highly critical
Impact: System access
Where:  From remote

======================================================================
3) Description of Vulnerabilities

Secunia Research has discovered multiple vulnerabilities in Microsoft
Windows, which can be exploited by malicious people to compromise a
vulnerable system.

1) An error within the "LoadUvsTable()" function can be exploited to
cause a heap-based buffer overflow via a font file containing
specially crafted Unicode Variation Sequences tables.

2) An integer overflow error within the "LoadFont()" function can be
exploited to cause a heap-based buffer overflow via a font file
containing specially crafted Unicode Variation Sequences tables. 

Successful exploitation of the vulnerabilities allows execution of
arbitrary code.

The vulnerabilities are confirmed on a fully patched Windows 10
Professional (gdi32full.dll version 10.0.14393.576) and Windows 7
Professional (usp10.dll version 1.626.7601.23585). Other versions
may also be affected.

======================================================================
4) Solution

Apply update.
https://technet.microsoft.com/library/security/MS17-013

======================================================================
5) Time Table

2016/12/13 - Notified vendor about an incomplete fix of CVE-2016-7274.
2016/12/14 - Release of Secunia Advisory SA74000 due to details
             implicitly being public.
2016/12/15 - Update of SA74000 with a further vulnerability.
2016/12/29 - Vendor communication regarding root cause analysis.
2017/01/25 - Vendor patch scheduled for February 2017.
2017/02/14 - Vendor announces delay of February 2017 patch releases.
2017/03/06 - Vendor patch scheduled for March 2017.
2017/03/14 - Updated Secunia Advisory SA74000 due to release
             of vendor patch.
2017/05/22 - Public disclosure of Secunia Research Advisory.

======================================================================
6) Credits

Discovered by Hossein Lotfi, Secunia Research at Flexera Software.

======================================================================
7) References

The Common Vulnerabilities and Exposures (CVE) project has assigned
the CVE-2017-0014 identifier for the vulnerabilities.

======================================================================
8) About Flexera Software

Flexera Software helps application producers and enterprises increase
application usage and the value they derive from their software.


http://www.flexerasoftware.com/enterprise/company/about/

Flexera Software  delivers  market-leading  Software  Vulnerability
Management solutions enabling enterprises to proactively identify and
remediate software Vulnerability, effectively reducing the risk of
costly security breaches.

http://www.flexerasoftware.com/enterprise/products/

Flexera  Software  supports  and  contributes  to  the community in
several ways.  We have always believed that reliable vulnerability
intelligence and tools to aid identifying and fixing Vulnerability
should be  freely available  for  consumers  to ensure that users,
who care about their online privacy and security, can stay secure.
Only a few vendors address Vulnerability in a proper way and help
users get updated  and  stay secure.  End-users (whether private
individuals or businesses) are otherwise left largely alone,  and
that is why back in 2002, Secunia Research started investigating,
coordinating  disclosure  and  verifying software Vulnerability.
In  2016,  Secunia Research  became  a  part  of  Flexera Software
and today our in-house software vulnerability research remains the
core  of  the  Software  Vulnerability  Management  products  at
Flexera Software.

https://secuniaresearch.flexerasoftware.com/secunia_research/

The  public  Advisory database  contains sufficient information  for
researchers, security enthusiasts, and consumers to lookup individual
products and Vulnerability  and  assess, whether they need to take
any actions to secure their systems or whether a given vulnerability
has already been discovered

https://secuniaresearch.flexerasoftware.com/advisories/

======================================================================
9) Verification

Please verify this advisory by visiting the Secunia website:
https://secuniaresearch.flexerasoftware.com/secunia_research/2017-9/

Complete list of vulnerability reports published by Secunia Research:
https://secuniaresearch.flexerasoftware.com/secunia_research/

Secunia Research Blog at Flexera Software:
http://blogs.flexerasoftware.com/secunia-research/2016/12/microsoft_
windows_loaduvstable_heap_based_buffer_overflow_vulnerability.html

======================================================================
