
Date: Wed, 25 May 2016 14:13:32 +0200 (CEST)
From: Martin Heiland <martin.heiland.lists@...n-xchange.com>
To: bugtraq@...urityfocus.com
Subject: Open-Xchange Security Advisory 2016-05-25

Product: OX AppSuite
Vendor: Open-Xchange GmbH

Internal reference: 44542 (Bug ID)
Vulnerability type: Cross Site Scripting (CWE-80)
Vulnerable version: 7.8.0 and earlier
Vulnerable component: frontend
Report confidence: Confirmed
Solution status: Fixed by Vendor
Fixed versions: 7.6.2-rev40, 7.6.3-rev7, 7.8.0-rev19
Researcher credits: Satish Bommisetty
Vendor notification: 2016-03-07
Solution date: 2016-03-29
CVE reference: CVE-2016-3173
CVSSv3: 3.7 (CVSS:3.0/AV:N/AC:H/PR:L/UI:R/S:U/C:L/I:L/A:N/RC:C)

Vulnerability Details:
The aria-label parameter of tiles at the Portal can be used to inject script code. Those labels use the name of the file (e.g. an image) which gets displayed at the portal application. Using script code at the file name leads to script execution.

Risk:
Malicious script code can be executed within a users context. This can lead to session hijacking or triggering unwanted actions via the web interface (sending mail, deleting data etc.). Users actively need to add a file to the portal to enable this attack. In case of shared files however, a internal attacker may modify a previously embedded file to carry a malicious file name. Furthermore this vulnerability can be used to persistenly execute code that got injected by a temporary script execution vulnerability.

Steps to reproduce:
Create or upload a file which file name contains script code and use the "Add to Portal" functionality. Visiting the "Portal" app will subsequently execute the code that got injected through the file name.

Solution:
Users should not add file to portal that carry suspicious file names. Files from shared folders or folders where other users have "write" permissions should not be added to Portal. Operators shall update to the latest available Patch Releases which contain a programmatic fix for this vulnerability.



Internal reference: 44583 (Bug ID)
Vulnerability type: Open Redirect (CWE-601)
Vulnerable version: 7.8.0 and earlier
Vulnerable component: backend
Report confidence: Confirmed
Solution status: Fixed by Vendor
Fixed versions: 7.6.2-rev51, 7.6.3-rev9, 7.8.0-rev27
Researcher credits: Satish Bommisetty
Vendor notification: 2016-03-08
Solution date: 2016-03-29
CVE reference: CVE-2016-3174
CVSSv3: 5.4 (CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:L/A:N)

Vulnerability Details:
The "defer" servlet offers to redirect a client to a specified URL. Since some checks were missing, arbitrary URLs could be provided as redirection target.

Risk:
Users can be tricked to follow a link to a trustworthy domain but end up at a unexpected service later on. This vulnerability can be used to prepare and enhance phishing attacks.

Steps to reproduce:
Construct a link to the "defer" servlet and specify an arbitrary URL as redirection target.

Solution:
Users should not follow links sent by untrusted parties. The full URL needs to be checked to make sure the expected location is opened. Operators shall update to the latest available Patch Releases which contain a programmatic fix for this vulnerability.



Internal reference: 44584 (Bug ID)
Vulnerability type: Cross Site Scripting (CWE-80)
Vulnerable version: 7.8.0 and earlier
Vulnerable component: backend
Report confidence: Confirmed
Solution status: Fixed by Vendor
Fixed versions: 7.6.2-rev51, 7.6.3-rev9, 7.8.0-rev27
Researcher credits: Satish Bommisetty
Vendor notification: 2016-03-07
Solution date: 2016-03-29
CVE reference: CVE-2016-3173
CVSSv3: 4.2 (CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:L/A:N)

Vulnerability Details:
Script code contained in SVG files gets executed in case the browser opens that file. Existing sanitization rules did not cover the case where a script tag was not closed immediatelly.

Risk:
Malicious script code can be executed within a users context. This can lead to session hijacking or triggering unwanted actions via the web interface (sending mail, deleting data etc.).

Steps to reproduce:
Create a SVG file that contains a script tag with some parameters
Upload that file to Drive or attach it to a E-Mail
Request the file in a way that the browser will open it "inline", which some browsers offer for SVG

Solution:
Users should not open files or E-Mail attachments from untrusted sources. Operators shall update to the latest available Patch Releases which contain a programmatic fix for this vulnerability.



Internal reference: 44585 (Bug ID)
Vulnerability type: Cross Site Scripting (CWE-80)
Vulnerable version: 7.8.0 and earlier
Vulnerable component: backend
Report confidence: Confirmed
Solution status: Fixed by Vendor
Fixed versions: 7.6.2-rev51, 7.6.3-rev9, 7.8.0-rev27
Researcher credits: Satish Bommisetty
Vendor notification: 2016-03-08
Solution date: 2016-03-29
CVE reference: CVE-2016-3173
CVSSv3: 4.2 (CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:L/A:N)

Vulnerability Details:
URLs to publications contains a parameter that resolves the publication by its. If the specified publication cannot be found, the parameters content is displayed within a error message. This message is shown in a way that it is vulnerable to execute script code that got provided by the parameter.

Risk:
Malicious script code can be executed within a users context. This can lead to session hijacking or triggering unwanted actions via the web interface (sending mail, deleting data etc.).

Steps to reproduce:
Create a URL to a publication and specify script code as publication name. In case the publication does not exist, the name will be reflected at the error page and execute its script code.

Solution:
Users should not open links from untrusted sources. The full URL needs to be checked to make sure the expected location is opened. Operators shall update to the latest available Patch Releases which contain a programmatic fix for this vulnerability.



Internal reference: 44586 (Bug ID)
Vulnerability type: Cross Site Scripting (CWE-80)
Vulnerable version: 7.8.0 and earlier
Vulnerable component: backend
Report confidence: Confirmed
Solution status: Fixed by Vendor
Fixed versions: 7.6.2-rev51, 7.6.3-rev9, 7.8.0-rev27
Researcher credits: Satish Bommisetty
Vendor notification: 2016-03-08
Solution date: 2016-03-29
CVE reference: CVE-2016-3173
CVSSv3: 4.2 (CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:L/A:N)

Vulnerability Details:
File listings at publication pages can be used to execute script code in context of the client visiting the page. Code can be injected by creating files where the file name contains script code.

Risk:
Malicious script code can be executed within a users context. This can lead to session hijacking or triggering unwanted actions via the web interface (sending mail, deleting data etc.).

Steps to reproduce:
Create or upload a file which file name contains script code. Then create a publication and lure users to visit that publication page

Solution:
Users should not open links from untrusted sources. Operators shall update to the latest available Patch Releases which contain a programmatic fix for this vulnerability.



Internal reference: 44598 (Bug ID)
Vulnerability type: Cross Site Scripting (CWE-80)
Vulnerable version: 7.8.0 and earlier
Vulnerable component: backend
Report confidence: Confirmed
Solution status: Fixed by Vendor
Fixed versions: 7.6.2-rev51, 7.6.3-rev9, 7.8.0-rev27
Researcher credits: Satish Bommisetty
Vendor notification: 2016-03-08
Solution date: 2016-03-29
CVE reference: CVE-2016-3173
CVSSv3: 5.4 (CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:L/A:N)

Vulnerability Details:
The "session" parameter of the uwaWidgets servlet can be used to execute script code in the context of the requesting client. If the value of "session" does not match a existing session id, its reflected to an error page. By tricking the browser to enable MIME-sniffing, the response is executed as script code.

Risk:
Users can be tricked to follow a link to a trustworthy domain but end up at a unexpected service later on. This vulnerability can be used to prepare and enhance phishing attacks.

Steps to reproduce:
Create a URL to the uwaWidgets servlet which claims to be pointing to a .html file, at the same time add script code to the session parameter.

Solution:
Users should not open links from untrusted sources. The full URL needs to be checked to make sure the expected location is opened. Operators shall update to the latest available Patch Releases which contain a programmatic fix for this vulnerability.



Internal reference: 44622 (Bug ID)
Vulnerability type: Argument Injection or Modification (CWE-88)
Vulnerable version: 7.8.0 and earlier
Vulnerable component: backend
Report confidence: Confirmed
Solution status: Fixed by Vendor
Fixed versions: 7.6.2-rev51, 7.6.3-rev9, 7.8.0-rev27
Researcher credits: Satish Bommisetty
Vendor notification: 2016-03-09
Solution date: 2016-03-29
CVE reference: CVE-2016-3173
CVSSv3: 3.7 (CVSS:3.0/AV:N/AC:H/PR:L/UI:R/S:U/C:L/I:L/A:N)

Vulnerability Details:
Script code contained in a XML files can be executed in the context of a clients browser by removing the content_disposition header. The code does prevent to add arbitrary data but does not check empty data and falls-back to send headers in a way that browsers execute the response as script code depending on the file type.

Risk:
Malicious script code can be executed within a users context. This can lead to session hijacking or triggering unwanted actions via the web interface (sending mail, deleting data etc.).

Steps to reproduce:
Create a XML file that contains script code and upload it to drive. The share the file with another user and craft a link to that file which uses a empty content_disposition parameter.

Solution:
Users should not open links from untrusted sources. Operators shall update to the latest available Patch Releases which contain a programmatic fix for this vulnerability.

Download attachment "signature.asc" of type "application/pgp-signature" (822 bytes)
