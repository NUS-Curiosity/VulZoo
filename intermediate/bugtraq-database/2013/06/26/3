
Date: Wed, 26 Jun 2013 12:34:31 +0200 (CEST)
From: advisory@...ridge.com
To: bugtraq@...urityfocus.com
Subject: Multiple XSS Vulnerabilities in Xaraya

Advisory ID: HTB23156
Product: Xaraya 
Vendor: Xaraya Development Group
Vulnerable Version(s): 2.4.0-b1 and probably prior
Tested Version: 2.4.0-b1
Vendor Notification: May 15, 2013 
Public Disclosure: June 26, 2013 
Vulnerability Type: Cross-Site Scripting [CWE-79]
CVE Reference: CVE-2013-3639
Risk Level: Low 
CVSSv2 Base Score: 2.6 (AV:N/AC:H/Au:N/C:N/I:P/A:N)
Solution Status: Solution Available
Discovered and Provided: High-Tech Bridge Security Research Lab ( https://www.htbridge.com/advisory/ ) 

-----------------------------------------------------------------------------------------------

Advisory Details:

High-Tech Bridge Security Research Lab discovered four XSS vulnerabilities in Xaraya, which can be exploited to perform cross-site scripting attacks against administrators of vulnerable application.


1) Multiple Cross-Site Scripting (XSS) in Xaraya: CVE-2013-3639

1.1 The vulnerability exists due to insufficient sanitisation of user-supplied data passed via the "id" HTTP GET parameter to "/index.php" script. A remote attacker can trick a logged-in administrator to open a specially crafted link and execute arbitrary HTML and script code in browser in context of the vulnerable website.

The exploitation example below uses the "alert()" JavaScript function to display administrator's cookies:

http://xaraya/index.php?func=modinfonew&id=%3Cscript%3Ealert%28document.cookie%29;%3C/script%3E&module=modules&type=admin


1.2 The vulnerability exists due to insufficient filtration of user-supplied data passed via the "interface" HTTP GET parameter to "/index.php" script. A remote attacker can trick a logged-in administrator to open a specially crafted link and execute arbitrary HTML and script code in browser in context of the vulnerable website.

The exploitation example below uses the "alert()" JavaScript function to display administrator's cookies:

http://xaraya/index.php?block_id=7&func=modify_instance&interface=%3Cscript%3Ealert%28document.cookie%29;%3C/script%3E&module=blocks&tab=config&type=admin


1.3 The vulnerability exists due to insufficient sanitisation of user-supplied data passed via the "name" HTTP GET parameter to "/index.php" script. A remote attacker can trick a logged-in administrator to open a specially crafted link and execute arbitrary HTML and script code in browser in context of the vulnerable website.

The exploitation example below uses the "alert()" JavaScript function to display administrator's cookies:

http://xaraya/index.php?func=aliases&module=modules&name=%3Cscript%3Ealert%28document.cookie%29;%3C/script%3E&type=admin


1.4 The vulnerability exists due to insufficient filtration of user-supplied data passed via the "tabmodule" HTTP GET parameter to "/index.php" script. A remote attacker can trick a logged-in administrator to open a specially crafted link and execute arbitrary HTML and script code in browser in context of the vulnerable website.

The exploitation example below uses the "alert()" JavaScript function to display administrator's cookies:

http://xaraya/index.php?func=assignprivileges&module=privileges&tab=authsystem&tabmodule=%3Cscript%3Ealert%28document.cookie%29;%3C/script%3E&type=admin

-----------------------------------------------------------------------------------------------

Solution:

Vendor did not reply to numerous notifications. Currently we are not aware of any official solution for these vulnerabilities.

Unofficial patch developed by High-Tech Bridge Security Research Lab is available here: https://www.htbridge.com/advisory/HTB23156-patch.zip

-----------------------------------------------------------------------------------------------

References:

[1] High-Tech Bridge Advisory HTB23156 - https://www.htbridge.com/advisory/HTB23156 - Multiple XSS Vulnerabilities in Xaraya.
[2] Xaraya  - http://www.xaraya.com - Xaraya is a cutting edge open source framework (written in PHP) on which developers can create sophisticated web applications and designers enjoy considerable flexibility.
[3] Common Vulnerabilities and Exposures (CVE) - http://cve.mitre.org/ - international in scope and free for public use, CVEÂ® is a dictionary of publicly known information security vulnerabilities and exposures.
[4] Common Weakness Enumeration (CWE) - http://cwe.mitre.org - targeted to developers and security practitioners, CWE is a formal list of software weakness types. 

-----------------------------------------------------------------------------------------------

Disclaimer: The information provided in this Advisory is provided "as is" and without any warranty of any kind. Details of this Advisory may be updated in order to provide as accurate information as possible. The latest version of the Advisory is available on web page [1] in the References.

