{
    "data_type": "CVE",
    "data_format": "MITRE",
    "data_version": "4.0",
    "CVE_data_meta": {
        "ID": "CVE-2020-8160",
        "ASSIGNER": "support@hackerone.com",
        "STATE": "PUBLIC"
    },
    "affects": {
        "vendor": {
            "vendor_data": [
                {
                    "vendor_name": "n/a",
                    "product": {
                        "product_data": [
                            {
                                "product_name": "MendixSSO",
                                "version": {
                                    "version_data": [
                                        {
                                            "version_value": "2.1.1 and lower"
                                        }
                                    ]
                                }
                            }
                        ]
                    }
                }
            ]
        }
    },
    "problemtype": {
        "problemtype_data": [
            {
                "description": [
                    {
                        "lang": "eng",
                        "value": "Cross-site Scripting (XSS) - Reflected (CWE-79)"
                    }
                ]
            }
        ]
    },
    "references": {
        "reference_data": [
            {
                "refsource": "MISC",
                "name": "https://hackerone.com/reports/838178",
                "url": "https://hackerone.com/reports/838178"
            },
            {
                "refsource": "MISC",
                "name": "https://marketplace.mendix.com/link/component/111349",
                "url": "https://marketplace.mendix.com/link/component/111349"
            }
        ]
    },
    "description": {
        "description_data": [
            {
                "lang": "eng",
                "value": "MendixSSO <= 2.1.1 contains endpoints that make use of the openid handler, which is suffering from a Cross-Site Scripting vulnerability via the URL path. This is caused by the reflection of user-supplied data without appropriate HTML escaping or output encoding. As a result, a JavaScript payload may be injected into the above endpoint causing it to be executed within the context of the victim's browser."
            }
        ]
    }
}