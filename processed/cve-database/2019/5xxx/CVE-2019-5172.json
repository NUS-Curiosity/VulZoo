{
    "data_type": "CVE",
    "data_format": "MITRE",
    "data_version": "4.0",
    "CVE_data_meta": {
        "ID": "CVE-2019-5172",
        "ASSIGNER": "talos-cna@cisco.com",
        "STATE": "PUBLIC"
    },
    "affects": {
        "vendor": {
            "vendor_data": [
                {
                    "vendor_name": "Wago",
                    "product": {
                        "product_data": [
                            {
                                "product_name": "WAGO PFC200",
                                "version": {
                                    "version_data": [
                                        {
                                            "version_value": "Firmware version 03.02.02(14)"
                                        }
                                    ]
                                }
                            }
                        ]
                    }
                }
            ]
        }
    },
    "problemtype": {
        "problemtype_data": [
            {
                "description": [
                    {
                        "lang": "eng",
                        "value": "command injection"
                    }
                ]
            }
        ]
    },
    "references": {
        "reference_data": [
            {
                "refsource": "MISC",
                "name": "https://talosintelligence.com/vulnerability_reports/TALOS-2019-0962",
                "url": "https://talosintelligence.com/vulnerability_reports/TALOS-2019-0962"
            }
        ]
    },
    "description": {
        "description_data": [
            {
                "lang": "eng",
                "value": "An exploitable command injection vulnerability exists in the iocheckd service \u2018I/O-Check\u2019 function of the WAGO PFC 200 Firmware version 03.02.02(14). An attacker can send a specially crafted packet to trigger the parsing of this cache file. At 0x1e840 the extracted ntp value from the xml file is used as an argument to /etc/config-tools/config_sntp time-server-%d=<contents of ntp node> using sprintf(). This command is later executed via a call to system(). This is done in a loop and there is no limit to how many ntp entries will be parsed from the xml file."
            }
        ]
    }
}