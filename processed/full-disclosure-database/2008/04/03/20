
Date: Thu, 03 Apr 2008 18:15:45 -0300
From: CORE Security Technologies Advisories <advisories@...esecurity.com>
To: vulnwatch <vulnwatch@...nwatch.org>, bugtraq <bugtraq@...urityfocus.com>,
	full-disclosure@...ts.grok.org.uk
Subject: CORE-2008-0314 - Orbit Downloader "Download
	failed" buffer overflow

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

      Core Security Technologies - CoreLabs Advisory
           http://www.coresecurity.com/corelabs/

    Orbit Downloader "Download failed" buffer overflow


*Advisory Information*

Title: Orbit Downloader "Download failed" buffer overflow
Advisory ID: CORE-2008-0314
Advisory URL: http://www.coresecurity.com/?action=item&id=2211
Date published: 2008-04-03
Date of last update: 2008-04-03
Vendors contacted: Orbit Downloader team
Release mode: Coordinated release


*Vulnerability Information*

Class: Buffer overflow
Remotely Exploitable: Yes
Locally Exploitable: No
Bugtraq ID: 28541	
CVE Name: CVE-2008-1602	


*Vulnerability Description*

Orbit downloader [1] is vulnerable to a buffer overflow attack, which
can be exploited by malicious remote attackers to execute arbitrary
code. The vulnerability is due to Orbit not properly converting an URL
ascii string to unicode. This can be exploited to execute arbitrary code
by downloading a file from a specially crafted URL.


*Vulnerable Packages*

. Orbit downloader 2.6.3 and 2.6.4.
. Older versions could be vulnerables too, but they were not tested.


*Non-vulnerable Packages*

. Orbit downloader 2.6.5.


*Vendor Information, Solutions and Workarounds*

Update to Orbit downloader 2.6.5, available at
http://dl.orbitdownloader.com/dl/OrbitDownloaderSetup.exe, or visit the
vendor homepage at http://www.orbitdownloader.com.


*Credits*

This vulnerability was discovered and researched by Diego Juarez from
Core Security Technologies.


*Technical Description / Proof of Concept Code*

When Orbit is unable to download a file, a balloon control is popped in
the notification area. This is the code that takes care of drawing text
to said control:

/-----------

.text:004A56D0 sub_4A56D0  proc near        ; CODE XREF: sub_42AAC0+321 p
.text:004A56D0                              ; sub_439610+321 p ...
.text:004A56D0
.text:004A56D0 String   = word ptr -2000h
.text:004A56D0 hDC      = dword ptr  4
.text:004A56D0 arg_4    = dword ptr  8
.text:004A56D0 lpRect   = dword ptr  0Ch
.text:004A56D0 uFormat  = dword ptr  10h
.text:004A56D0
.text:004A56D0    mov     eax, 2000h        ; reserve 0x2000 (8192)
bytes in the stack
.text:004A56D5    call    __alloca_probe
.text:004A56DA    push    edi
.text:004A56DB    mov     ecx, 800h
.text:004A56E0    xor     eax, eax
.text:004A56E2    lea     edi, [esp+2004h+String]
.text:004A56E6    rep stosd
.text:004A56E8    mov     eax, [esp+2004h+arg_4]
.text:004A56EF    pop     edi
.text:004A56F0    mov     ecx, [eax+8]
.text:004A56F3    mov     eax, [eax+4]
.text:004A56F6    test    eax, eax
.text:004A56F8    jnz     short loc_4A56FF
.text:004A56FA    mov     eax, ds:?_C@...?_Nullstr@? basic_string@DU?
char_traits@D@std@@V? allocator@D@2@@std@@CAPBDXZ@4DB ;
.text:004A56FF
.text:004A56FF loc_4A56FF:                  ; CODE XREF: sub_4A56D0+28 j
.text:004A56FF    lea     edx, [esp+2000h+String]
.text:004A5703    push    2000h             ; cchWideChar (write up to
16384 bytes to the buffer)
.text:004A5708    push    edx               ; lpWideCharStr
.text:004A5709    push    ecx               ; cchMultiByte
.text:004A570A    push    eax               ; lpMultiByteStr
.text:004A570B    push    0                 ; dwFlags
.text:004A570D    push    0                 ; CodePage
.text:004A570F    call    ds:MultiByteToWideChar
.text:004A5715    mov     ecx, [esp+2000h+uFormat]
.text:004A571C    mov     edx, [esp+2000h+lpRect]
.text:004A5723    push    ecx               ; uFormat
.text:004A5724    mov     ecx, [esp+2004h+hDC]
.text:004A572B    push    edx               ; lpRect
.text:004A572C    push    eax               ; nCount
.text:004A572D    lea     eax, [esp+200Ch+String]
.text:004A5731    push    eax               ; lpString
.text:004A5732    push    ecx               ; hDC
.text:004A5733    call    ds:DrawTextW
.text:004A5739    add     esp, 2000h
.text:004A573F    retn
.text:004A573F    endp                      ;sub_4A56D0

- -----------/

 According to MSDN [2], the Win32 API function

/-----------

int MultiByteToWideChar(
      UINT CodePage,
      DWORD dwFlags,
      LPCSTR lpMultiByteStr,
      int cbMultiByte,
      LPWSTR lpWideCharStr,
      int cchWideChar
);

- -----------/

has a parameter 'cchWideChar' which should be the "size, in WCHAR
values, of the buffer indicated by lpWideCharStr". By supplying a
download URL longer than 4096 bytes, if the download fails,
'MultiByteToWideChar' will overflow the 8192 bytes buffer in the stack
and write up to 0x2000 WCHARs (16384 bytes) to it, overwriting internal
structures and enabling arbitrary code execution.


*Report Timeline*

. 2008-03-19: Core Security Technologies notifies the Orbit team of the
vulnerability.
. 2008-03-27: The Orbit team asks Core Security Technologies for
technical description of the vulnerability.
. 2008-03-27: Technical details sent to Orbit team by Core Security
Technologies.
. 2008-04-03: Orbit notifies Core Security Technologies that a fix has
been produced.
. 2008-04-03: CORE-2008-0314 advisory is published.


*References*

[1] http://www.orbitdownloader.com
[2] http://msdn2.microsoft.com/en-us/library/ms776413(VS.85).aspx


*About CoreLabs*

CoreLabs, the research center of Core Security Technologies, is charged
with anticipating the future needs and requirements for information
security technologies. We conduct our research in several important
areas of computer security including system vulnerabilities, cyber
attack planning and simulation, source code auditing, and cryptography.
Our results include problem formalization, identification of
vulnerabilities, novel solutions and prototypes for new technologies.
CoreLabs regularly publishes security advisories, technical papers,
project information and shared software tools for public use at:
http://www.coresecurity.com/corelabs/.


*About Core Security Technologies*

Core Security Technologies develops strategic solutions that help
security-conscious organizations worldwide develop and maintain a
proactive process for securing their networks. The company's flagship
product, CORE IMPACT, is the most comprehensive product for performing
enterprise security assurance testing. CORE IMPACT evaluates network,
endpoint and end-user vulnerabilities and identifies what resources are
exposed. It enables organizations to determine if current security
investments are detecting and preventing attacks. Core Security
Technologies augments its leading technology solution with world-class
security consulting services, including penetration testing and software
security auditing. Based in Boston, MA and Buenos Aires, Argentina, Core
Security Technologies can be reached at 617-399-6980 or on the Web at
http://www.coresecurity.com.


*Disclaimer*

The contents of this advisory are copyright (c) 2008 Core Security
Technologies and (c) 2008 CoreLabs, and may be distributed freely
provided that no fee is charged for this distribution and proper credit
is given.


*GPG/PGP Keys*

This advisory has been signed with the GPG key of Core Security
Technologies advisories team, which is available for download at
http://www.coresecurity.com/files/attachments/core_security_advisories.asc.

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.7 (MingW32)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org

iD8DBQFH9UkByNibggitWa0RAuXFAJ4v5Fgp5RNTdK/7uOpzenSArY4jUQCeKV4D
4aeviH5oHhjdIRFmDLVVUx0=
=v9yp
-----END PGP SIGNATURE-----

_______________________________________________
Full-Disclosure - We believe in it.
Charter: http://lists.grok.org.uk/full-disclosure-charter.html
Hosted and sponsored by Secunia - http://secunia.com/
