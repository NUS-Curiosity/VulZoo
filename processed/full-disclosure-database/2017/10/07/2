
Date: Fri, 6 Oct 2017 17:53:54 +0000
From: dxw Security <security@....com>
To: fulldisclosure@...lists.org
Subject: [FD] WordPress does not hash or expire wp_signups.activation_key
	allowing an attacker with SQL injection to create accounts

Details
================
Software: WordPress
Version: 4.8.2
Homepage: https://wordpress.org/
Advisory report: https://security.dxw.com/advisories/wordpress-signups-activation/
CVE: CVE-2017-14990
CVSS: 0 (Low; AV:L/AC:H/Au:M/C:N/I:N/A:N)

Description
================
WordPress does not hash or expire wp_signups.activation_key allowing an attacker with SQL injection to create accounts

Vulnerability
================
When creating new users with a confirmation email, the key for that confirmation email is stored in plain text, and never expires. This means that when there are users who have been created who haven’t followed the link in their confirmation emails (common in installations with lots of users), an attacker with access to a read-only SQLi vulnerability can immediately create a user account for themselves.



wp_users.user_activation_key is hashed and contains a timestamp. wp_signups.activation_key should include these security features too.



This issue was originally raised as a ticket in Trac.

Proof of concept
================

Visit /wp-admin/user-new.php (on a multisite installation – I haven’t tested on single site)
Fill out the “Add New User” form but do not check the “Skip Confirmation Email” checkbox
The user will be sent an email containing a link to /wp-activate.php?key=7259c714857ef009

This key is stored in the database unencrypted and without a timestamp:
mysql> select activation_key from wp_signups where signup_id=4;
+------------------+
| activation_key   |
+------------------+
| 7259c714857ef009 |
+------------------+
1 row in set (0.00 sec)

Mitigations
================
Regularly purge old entries from the wp_signups table.

Disclosure policy
================
dxw believes in responsible disclosure. Your attention is drawn to our disclosure policy: https://security.dxw.com/disclosure/

Please contact us on security@....com to acknowledge this report if you received it via a third party (for example, plugins@...dpress.org) as they generally cannot communicate with us on your behalf.

This vulnerability will be published if we do not receive a response to this report with 14 days.

Timeline
================

2016-10-24: Opened Trac ticket
2017-10-02: Requested CVE
2017-10-02: Received CVE



Discovered by dxw:
================
Glyn Wintle
Please visit security.dxw.com for more information.
          


_______________________________________________
Sent through the Full Disclosure mailing list
https://nmap.org/mailman/listinfo/fulldisclosure
Web Archives & RSS: http://seclists.org/fulldisclosure/