{
  "id": "CVE-2024-57920",
  "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
  "published": "2025-01-19T12:15:26.150",
  "lastModified": "2025-01-19T12:15:26.150",
  "vulnStatus": "Awaiting Analysis",
  "cveTags": [],
  "descriptions": [
    {
      "lang": "en",
      "value": "In the Linux kernel, the following vulnerability has been resolved:\n\ndrm/amdkfd: wq_release signals dma_fence only when available\n\nkfd_process_wq_release() signals eviction fence by\ndma_fence_signal() which wanrs if dma_fence\nis NULL.\n\nkfd_process->ef is initialized by kfd_process_device_init_vm()\nthrough ioctl. That means the fence is NULL for a new\ncreated kfd_process, and close a kfd_process right\nafter open it will trigger the warning.\n\nThis commit conditionally signals the eviction fence\nin kfd_process_wq_release() only when it is available.\n\n[  503.660882] WARNING: CPU: 0 PID: 9 at drivers/dma-buf/dma-fence.c:467 dma_fence_signal+0x74/0xa0\n[  503.782940] Workqueue: kfd_process_wq kfd_process_wq_release [amdgpu]\n[  503.789640] RIP: 0010:dma_fence_signal+0x74/0xa0\n[  503.877620] Call Trace:\n[  503.880066]  <TASK>\n[  503.882168]  ? __warn+0xcd/0x260\n[  503.885407]  ? dma_fence_signal+0x74/0xa0\n[  503.889416]  ? report_bug+0x288/0x2d0\n[  503.893089]  ? handle_bug+0x53/0xa0\n[  503.896587]  ? exc_invalid_op+0x14/0x50\n[  503.900424]  ? asm_exc_invalid_op+0x16/0x20\n[  503.904616]  ? dma_fence_signal+0x74/0xa0\n[  503.908626]  kfd_process_wq_release+0x6b/0x370 [amdgpu]\n[  503.914081]  process_one_work+0x654/0x10a0\n[  503.918186]  worker_thread+0x6c3/0xe70\n[  503.921943]  ? srso_alias_return_thunk+0x5/0xfbef5\n[  503.926735]  ? srso_alias_return_thunk+0x5/0xfbef5\n[  503.931527]  ? __kthread_parkme+0x82/0x140\n[  503.935631]  ? __pfx_worker_thread+0x10/0x10\n[  503.939904]  kthread+0x2a8/0x380\n[  503.943132]  ? __pfx_kthread+0x10/0x10\n[  503.946882]  ret_from_fork+0x2d/0x70\n[  503.950458]  ? __pfx_kthread+0x10/0x10\n[  503.954210]  ret_from_fork_asm+0x1a/0x30\n[  503.958142]  </TASK>\n[  503.960328] ---[ end trace 0000000000000000 ]---\n\n(cherry picked from commit 2774ef7625adb5fb9e9265c26a59dca7b8fd171e)"
    },
    {
      "lang": "es",
      "value": "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: drm/amdkfd: wq_release env\u00eda una se\u00f1al a dma_fence solo cuando est\u00e1 disponible kfd_process_wq_release() env\u00eda una se\u00f1al de desalojo a dma_fence_signal(), que se activa si dma_fence es NULL. kfd_process-&gt;ef se inicializa mediante kfd_process_device_init_vm() a trav\u00e9s de ioctl. Esto significa que el desalojo es NULL para un nuevo kfd_process creado, y cerrar un kfd_process justo despu\u00e9s de abrirlo activar\u00e1 la advertencia. Esta confirmaci\u00f3n env\u00eda una se\u00f1al condicional al desalojo en kfd_process_wq_release() solo cuando est\u00e1 disponible. [ 503.660882] ADVERTENCIA: CPU: 0 PID: 9 en drivers/dma-buf/dma-fence.c:467 dma_fence_signal+0x74/0xa0 [ 503.782940] Cola de trabajo: kfd_process_wq kfd_process_wq_release [amdgpu] [ 503.789640] RIP: 0010:dma_fence_signal+0x74/0xa0 [ 503.877620] Seguimiento de llamadas: [ 503.880066]  [ 503.882168] ? __warn+0xcd/0x260 [ 503.885407] ? dma_fence_signal+0x74/0xa0 [ 503.889416] ? report_bug+0x288/0x2d0 [ 503.893089] ? handle_bug+0x53/0xa0 [ 503.896587] ? exc_invalid_op+0x14/0x50 [ 503.900424] ? asm_exc_invalid_op+0x16/0x20 [ 503.904616] ? __kthread_parkme+0x82/0x140 [503.935631] ? __pfx_worker_thread+0x10/0x10 [ 503.939904] kthread+0x2a8/0x380 [ 503.943132] ? __pfx_kthread+0x10/0x10 [ 503.954210] ret_from_fork_asm+0x1a/0x30 [ 503.958142]  [ 503.960328] ---[ fin del seguimiento 000000000000000 ]--- (seleccionado de el commit 2774ef7625adb5fb9e9265c26a59dca7b8fd171e)"
    }
  ],
  "metrics": {},
  "references": [
    {
      "url": "https://git.kernel.org/stable/c/a993d319aebb7cce8a10c6e685344b7c2ad5c4c2",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    },
    {
      "url": "https://git.kernel.org/stable/c/c8243def299793ac6c85fdc1086089c800c1051a",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    }
  ]
}