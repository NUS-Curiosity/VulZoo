{
  "id": "CVE-2024-35836",
  "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
  "published": "2024-05-17T14:15:20.607",
  "lastModified": "2024-05-17T18:35:35.070",
  "vulnStatus": "Awaiting Analysis",
  "cveTags": [],
  "descriptions": [
    {
      "lang": "en",
      "value": "In the Linux kernel, the following vulnerability has been resolved:\n\ndpll: fix pin dump crash for rebound module\n\nWhen a kernel module is unbound but the pin resources were not entirely\nfreed (other kernel module instance of the same PCI device have had kept\nthe reference to that pin), and kernel module is again bound, the pin\nproperties would not be updated (the properties are only assigned when\nmemory for the pin is allocated), prop pointer still points to the\nkernel module memory of the kernel module which was deallocated on the\nunbind.\n\nIf the pin dump is invoked in this state, the result is a kernel crash.\nPrevent the crash by storing persistent pin properties in dpll subsystem,\ncopy the content from the kernel module when pin is allocated, instead of\nusing memory of the kernel module."
    },
    {
      "lang": "es",
      "value": "En el kernel de Linux, se resolvi\u00f3 la siguiente vulnerabilidad: dpll: corregido el fallo del volcado de pin para el m\u00f3dulo de rebote. Cuando un m\u00f3dulo del kernel est\u00e1 desatado pero los recursos del pin no se liberaron por completo (otra instancia del m\u00f3dulo del kernel del mismo dispositivo PCI ha mantenido la referencia a ese pin), y el m\u00f3dulo del kernel est\u00e1 nuevamente vinculado, las propiedades del pin no se actualizar\u00e1n (las propiedades solo se asignan cuando se asigna memoria para el pin), el puntero de propiedad a\u00fan apunta a la memoria del m\u00f3dulo del kernel que fue desasignado en la desvinculaci\u00f3n. Si se invoca el volcado de pines en este estado, el resultado es una fallo del kernel. Evite el bloqueo almacenando propiedades de pin persistentes en el subsistema dpll, copie el contenido del m\u00f3dulo del kernel cuando se asigna el pin, en lugar de usar la memoria del m\u00f3dulo del kernel."
    }
  ],
  "metrics": {},
  "references": [
    {
      "url": "https://git.kernel.org/stable/c/5050a5b9d8b4d3c6f7e376e07670e437db7ccf9c",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    },
    {
      "url": "https://git.kernel.org/stable/c/830ead5fb0c5855ce4d70ba2ed4a673b5f1e7d9b",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    }
  ]
}