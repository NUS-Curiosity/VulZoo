{
  "id": "CVE-2024-35878",
  "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
  "published": "2024-05-19T09:15:09.090",
  "lastModified": "2024-05-20T13:00:04.957",
  "vulnStatus": "Awaiting Analysis",
  "cveTags": [],
  "descriptions": [
    {
      "lang": "en",
      "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nof: module: prevent NULL pointer dereference in vsnprintf()\n\nIn of_modalias(), we can get passed the str and len parameters which would\ncause a kernel oops in vsnprintf() since it only allows passing a NULL ptr\nwhen the length is also 0. Also, we need to filter out the negative values\nof the len parameter as these will result in a really huge buffer since\nsnprintf() takes size_t parameter while ours is ssize_t...\n\nFound by Linux Verification Center (linuxtesting.org) with the Svace static\nanalysis tool."
    },
    {
      "lang": "es",
      "value": "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: de: m\u00f3dulo: evita la desreferencia del puntero NULL en vsnprintf() En of_modalias(), podemos pasar los par\u00e1metros str y len que provocar\u00edan un kernel ups en vsnprintf() ya que solo permite pasar un ptr NULL cuando la longitud tambi\u00e9n es 0. Adem\u00e1s, necesitamos filtrar los valores negativos del par\u00e1metro len ya que estos dar\u00e1n como resultado un b\u00fafer realmente enorme ya que snprintf() toma el par\u00e1metro size_t mientras que el nuestro es ssize_t... Encontrado por el Centro de verificaci\u00f3n de Linux (linuxtesting.org) con la herramienta de an\u00e1lisis est\u00e1tico Svace."
    }
  ],
  "metrics": {},
  "references": [
    {
      "url": "https://git.kernel.org/stable/c/544561dc56f7e69a053c25e11e6170f48bb97898",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    },
    {
      "url": "https://git.kernel.org/stable/c/a1aa5390cc912934fee76ce80af5f940452fa987",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    },
    {
      "url": "https://git.kernel.org/stable/c/e4a449368a2ce6d57a775d0ead27fc07f5a86e5b",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    }
  ]
}