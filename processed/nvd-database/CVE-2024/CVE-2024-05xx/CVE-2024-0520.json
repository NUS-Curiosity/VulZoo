{
  "id": "CVE-2024-0520",
  "sourceIdentifier": "security@huntr.dev",
  "published": "2024-06-06T19:15:51.187",
  "lastModified": "2024-06-07T14:56:05.647",
  "vulnStatus": "Awaiting Analysis",
  "cveTags": [],
  "descriptions": [
    {
      "lang": "en",
      "value": "A vulnerability in mlflow/mlflow version 8.2.1 allows for remote code execution due to improper neutralization of special elements used in an OS command ('Command Injection') within the `mlflow.data.http_dataset_source.py` module. Specifically, when loading a dataset from a source URL with an HTTP scheme, the filename extracted from the `Content-Disposition` header or the URL path is used to generate the final file path without proper sanitization. This flaw enables an attacker to control the file path fully by utilizing path traversal or absolute path techniques, such as '../../tmp/poc.txt' or '/tmp/poc.txt', leading to arbitrary file write. Exploiting this vulnerability could allow a malicious user to execute commands on the vulnerable machine, potentially gaining access to data and model information. The issue is fixed in version 2.9.0."
    },
    {
      "lang": "es",
      "value": "Una vulnerabilidad en mlflow/mlflow versi\u00f3n 8.2.1 permite la ejecuci\u00f3n remota de c\u00f3digo debido a la neutralizaci\u00f3n inadecuada de elementos especiales utilizados en un comando del sistema operativo (\"Inyecci\u00f3n de comandos\") dentro del m\u00f3dulo `mlflow.data.http_dataset_source.py`. Espec\u00edficamente, cuando se carga un conjunto de datos desde una URL de origen con un esquema HTTP, el nombre de archivo extra\u00eddo del encabezado `Content-Disposition` o la ruta URL se utiliza para generar la ruta final del archivo sin una sanitizaci\u00f3n adecuada. Esta falla permite a un atacante controlar completamente la ruta del archivo mediante el uso de t\u00e9cnicas de path traversal o de ruta absoluta, como '../../tmp/poc.txt' o '/tmp/poc.txt', lo que lleva a la escritura arbitraria de archivos. Explotar esta vulnerabilidad podr\u00eda permitir que un usuario malintencionado ejecute comandos en la m\u00e1quina vulnerable, obteniendo potencialmente acceso a datos e informaci\u00f3n del modelo. El problema se solucion\u00f3 en la versi\u00f3n 2.9.0. "
    }
  ],
  "metrics": {
    "cvssMetricV30": [
      {
        "source": "security@huntr.dev",
        "type": "Secondary",
        "cvssData": {
          "version": "3.0",
          "vectorString": "CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H",
          "attackVector": "NETWORK",
          "attackComplexity": "LOW",
          "privilegesRequired": "NONE",
          "userInteraction": "NONE",
          "scope": "CHANGED",
          "confidentialityImpact": "HIGH",
          "integrityImpact": "HIGH",
          "availabilityImpact": "HIGH",
          "baseScore": 10.0,
          "baseSeverity": "CRITICAL"
        },
        "exploitabilityScore": 3.9,
        "impactScore": 6.0
      }
    ]
  },
  "weaknesses": [
    {
      "source": "security@huntr.dev",
      "type": "Primary",
      "description": [
        {
          "lang": "en",
          "value": "CWE-23"
        }
      ]
    }
  ],
  "references": [
    {
      "url": "https://github.com/mlflow/mlflow/commit/400c226953b4568f4361bc0a0c223511652c2b9d",
      "source": "security@huntr.dev"
    },
    {
      "url": "https://huntr.com/bounties/93e470d7-b6f0-409b-af63-49d3e2a26dbc",
      "source": "security@huntr.dev"
    }
  ]
}