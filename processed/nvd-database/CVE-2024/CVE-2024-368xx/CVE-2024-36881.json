{
  "id": "CVE-2024-36881",
  "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
  "published": "2024-05-30T16:15:11.723",
  "lastModified": "2024-05-30T18:18:58.870",
  "vulnStatus": "Awaiting Analysis",
  "cveTags": [],
  "descriptions": [
    {
      "lang": "en",
      "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nmm/userfaultfd: reset ptes when close() for wr-protected ones\n\nUserfaultfd unregister includes a step to remove wr-protect bits from all\nthe relevant pgtable entries, but that only covered an explicit\nUFFDIO_UNREGISTER ioctl, not a close() on the userfaultfd itself.  Cover\nthat too.  This fixes a WARN trace.\n\nThe only user visible side effect is the user can observe leftover\nwr-protect bits even if the user close()ed on an userfaultfd when\nreleasing the last reference of it.  However hopefully that should be\nharmless, and nothing bad should happen even if so.\n\nThis change is now more important after the recent page-table-check\npatch we merged in mm-unstable (446dd9ad37d0 (\"mm/page_table_check:\nsupport userfault wr-protect entries\")), as we'll do sanity check on\nuffd-wp bits without vma context.  So it's better if we can 100%\nguarantee no uffd-wp bit leftovers, to make sure each report will be\nvalid."
    },
    {
      "lang": "es",
      "value": "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: mm/userfaultfd: restablece ptes al cerrar() para los protegidos por wr. Userfaultfd unregister incluye un paso para eliminar los bits de wr-protect de todas las entradas relevantes de pgtable, pero eso solo cubre una UFFDIO_UNREGISTER ioctl expl\u00edcito, no un close() en el propio userfaultfd. Cubre eso tambi\u00e9n. Esto corrige un rastro WARN. El \u00fanico efecto secundario visible para el usuario es que puede observar los bits wr-protect sobrantes incluso si el usuario cerr\u00f3 () en un userfaultfd al liberar la \u00faltima referencia del mismo. Sin embargo, es de esperar que eso sea inofensivo y, aun as\u00ed, no deber\u00eda pasar nada malo. Este cambio ahora es m\u00e1s importante despu\u00e9s del reciente parche de verificaci\u00f3n de tabla de p\u00e1ginas que fusionamos en mm-unstable (446dd9ad37d0 (\"mm/page_table_check: admite entradas de protecci\u00f3n wr de error de usuario\")), ya que haremos una verificaci\u00f3n de cordura en uffd-wp. bits sin contexto vma. Por lo tanto, es mejor si podemos garantizar al 100% que no queden restos de bits de uffd-wp, para asegurarnos de que cada informe sea v\u00e1lido."
    }
  ],
  "metrics": {},
  "references": [
    {
      "url": "https://git.kernel.org/stable/c/377f3a9a3d032a52325a5b110379a25dd1ab1931",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    },
    {
      "url": "https://git.kernel.org/stable/c/8d8b68a5b0c9fb23d37df06bb273ead38fd5a29d",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    },
    {
      "url": "https://git.kernel.org/stable/c/c88033efe9a391e72ba6b5df4b01d6e628f4e734",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    }
  ]
}