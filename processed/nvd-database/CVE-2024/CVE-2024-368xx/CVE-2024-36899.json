{
  "id": "CVE-2024-36899",
  "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
  "published": "2024-05-30T16:15:13.510",
  "lastModified": "2024-05-30T18:18:58.870",
  "vulnStatus": "Awaiting Analysis",
  "cveTags": [],
  "descriptions": [
    {
      "lang": "en",
      "value": "In the Linux kernel, the following vulnerability has been resolved:\n\ngpiolib: cdev: Fix use after free in lineinfo_changed_notify\n\nThe use-after-free issue occurs as follows: when the GPIO chip device file\nis being closed by invoking gpio_chrdev_release(), watched_lines is freed\nby bitmap_free(), but the unregistration of lineinfo_changed_nb notifier\nchain failed due to waiting write rwsem. Additionally, one of the GPIO\nchip's lines is also in the release process and holds the notifier chain's\nread rwsem. Consequently, a race condition leads to the use-after-free of\nwatched_lines.\n\nHere is the typical stack when issue happened:\n\n[free]\ngpio_chrdev_release()\n  --> bitmap_free(cdev->watched_lines)                  <-- freed\n  --> blocking_notifier_chain_unregister()\n    --> down_write(&nh->rwsem)                          <-- waiting rwsem\n          --> __down_write_common()\n            --> rwsem_down_write_slowpath()\n                  --> schedule_preempt_disabled()\n                    --> schedule()\n\n[use]\nst54spi_gpio_dev_release()\n  --> gpio_free()\n    --> gpiod_free()\n      --> gpiod_free_commit()\n        --> gpiod_line_state_notify()\n          --> blocking_notifier_call_chain()\n            --> down_read(&nh->rwsem);                  <-- held rwsem\n            --> notifier_call_chain()\n              --> lineinfo_changed_notify()\n                --> test_bit(xxxx, cdev->watched_lines) <-- use after free\n\nThe side effect of the use-after-free issue is that a GPIO line event is\nbeing generated for userspace where it shouldn't. However, since the chrdev\nis being closed, userspace won't have the chance to read that event anyway.\n\nTo fix the issue, call the bitmap_free() function after the unregistration\nof lineinfo_changed_nb notifier chain."
    },
    {
      "lang": "es",
      "value": "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: gpiolib: cdev: corrige el use after free en lineinfo_changed_notify El problema de use after free ocurre de la siguiente manera: cuando el archivo del dispositivo del chip GPIO se cierra al invocar gpio_chrdev_release(), las l\u00edneas vigiladas son liberado por bitmap_free(), pero la cancelaci\u00f3n del registro de la cadena de notificador lineinfo_changed_nb fall\u00f3 debido a la espera de escritura de rwsem. Adem\u00e1s, una de las l\u00edneas del chip GPIO tambi\u00e9n est\u00e1 en proceso de lanzamiento y contiene el rwsem de lectura de la cadena notificadora. En consecuencia, una condici\u00f3n de ejecuci\u00f3n conduce al use after free de watched_lines. Aqu\u00ed est\u00e1 la pila t\u00edpica cuando ocurri\u00f3 el problema: [free] gpio_chrdev_release() --&gt; bitmap_free(cdev-&gt;watched_lines) &lt;-- freed --&gt; blocking_notifier_chain_unregister() --&gt; down_write(&amp;nh-&gt;rwsem) &lt;-- waiting rwsem --&gt; __down_write_common() --&gt; rwsem_down_write_slowpath() --&gt; schedule_preempt_disabled() --&gt; schedule() [use] st54spi_gpio_dev_release() --&gt; gpio_free() --&gt; gpiod_free() --&gt; gpiod_free_commit() --&gt; gpiod_line_state_notify() --&gt; blocking_notifier_call_chain() --&gt; down_read(&amp;nh-&gt;rwsem); &lt;-- held rwsem --&gt; notifier_call_chain() --&gt; lineinfo_changed_notify() --&gt; test_bit(xxxx, cdev-&gt;watched_lines) &lt;-- use after free El efecto secundario del problema de use after free es que un GPIO El evento de l\u00ednea se est\u00e1 generando para el espacio de usuario donde no deber\u00eda. Sin embargo, dado que chrdev se cerrar\u00e1, el espacio de usuario no tendr\u00e1 la oportunidad de leer ese evento de todos modos. Para solucionar el problema, llame a la funci\u00f3n bitmap_free() despu\u00e9s de cancelar el registro de la cadena de notificadores lineinfo_changed_nb."
    }
  ],
  "metrics": {},
  "references": [
    {
      "url": "https://git.kernel.org/stable/c/02f6b0e1ec7e0e7d059dddc893645816552039da",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    },
    {
      "url": "https://git.kernel.org/stable/c/95ca7c90eaf5ea8a8460536535101e3e81160e2a",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    },
    {
      "url": "https://git.kernel.org/stable/c/ca710b5f40b8b16fdcad50bebd47f50e4c62d239",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    }
  ]
}