{
  "id": "CVE-2024-38574",
  "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
  "published": "2024-06-19T14:15:17.520",
  "lastModified": "2024-06-20T12:44:01.637",
  "vulnStatus": "Awaiting Analysis",
  "cveTags": [],
  "descriptions": [
    {
      "lang": "en",
      "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nlibbpf: Prevent null-pointer dereference when prog to load has no BTF\n\nIn bpf_objec_load_prog(), there's no guarantee that obj->btf is non-NULL\nwhen passing it to btf__fd(), and this function does not perform any\ncheck before dereferencing its argument (as bpf_object__btf_fd() used to\ndo). As a consequence, we get segmentation fault errors in bpftool (for\nexample) when trying to load programs that come without BTF information.\n\nv2: Keep btf__fd() in the fix instead of reverting to bpf_object__btf_fd()."
    },
    {
      "lang": "es",
      "value": "En el kernel de Linux, se resolvi\u00f3 la siguiente vulnerabilidad: libbpf: evita la desreferencia del puntero nulo cuando el programa a cargar no tiene BTF. En bpf_objec_load_prog(), no hay garant\u00eda de que obj-&gt;btf no sea NULL al pasarlo a btf__fd() , y esta funci\u00f3n no realiza ninguna verificaci\u00f3n antes de eliminar la referencia a su argumento (como sol\u00eda hacer bpf_object__btf_fd()). Como consecuencia, obtenemos errores de segmentaci\u00f3n en bpftool (por ejemplo) cuando intentamos cargar programas que vienen sin informaci\u00f3n BTF. v2: Mantenga btf__fd() en la soluci\u00f3n en lugar de volver a bpf_object__btf_fd()."
    }
  ],
  "metrics": {},
  "references": [
    {
      "url": "https://git.kernel.org/stable/c/1fd91360a75833b7110af9834ae26c977e1273e0",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    },
    {
      "url": "https://git.kernel.org/stable/c/9bf48fa19a4b1d186e08b20bf7e5de26a15644fb",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    },
    {
      "url": "https://git.kernel.org/stable/c/ef80b59acfa4dee4b5eaccb15572b69248831104",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    }
  ]
}