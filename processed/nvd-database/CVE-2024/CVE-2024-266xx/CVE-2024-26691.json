{
  "id": "CVE-2024-26691",
  "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
  "published": "2024-04-03T15:15:52.550",
  "lastModified": "2024-04-03T17:24:18.150",
  "vulnStatus": "Awaiting Analysis",
  "cveTags": [],
  "descriptions": [
    {
      "lang": "en",
      "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nKVM: arm64: Fix circular locking dependency\n\nThe rule inside kvm enforces that the vcpu->mutex is taken *inside*\nkvm->lock. The rule is violated by the pkvm_create_hyp_vm() which acquires\nthe kvm->lock while already holding the vcpu->mutex lock from\nkvm_vcpu_ioctl(). Avoid the circular locking dependency altogether by\nprotecting the hyp vm handle with the config_lock, much like we already\ndo for other forms of VM-scoped data."
    },
    {
      "lang": "es",
      "value": "En el kernel de Linux, se resolvi\u00f3 la siguiente vulnerabilidad: KVM: arm64: corrige la dependencia de bloqueo circular La regla dentro de kvm exige que vcpu-&gt;mutex se tome *dentro* de kvm-&gt;lock. La regla es violada por pkvm_create_hyp_vm() que adquiere el bloqueo kvm-&gt;mientras ya mantiene el bloqueo vcpu-&gt;mutex de kvm_vcpu_ioctl(). Evite por completo la dependencia del bloqueo circular protegiendo el identificador hyp vm con config_lock, de forma muy similar a como lo hacemos con otras formas de datos con alcance de VM."
    }
  ],
  "metrics": {},
  "references": [
    {
      "url": "https://git.kernel.org/stable/c/10c02aad111df02088d1a81792a709f6a7eca6cc",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    },
    {
      "url": "https://git.kernel.org/stable/c/3ab1c40a1e915e350d9181a4603af393141970cc",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    },
    {
      "url": "https://git.kernel.org/stable/c/3d16cebf01127f459dcfeb79ed77bd68b124c228",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    }
  ]
}