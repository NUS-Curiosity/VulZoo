{
  "id": "CVE-2024-40909",
  "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
  "published": "2024-07-12T13:15:14.137",
  "lastModified": "2024-07-12T16:34:58.687",
  "vulnStatus": "Awaiting Analysis",
  "cveTags": [],
  "descriptions": [
    {
      "lang": "en",
      "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: Fix a potential use-after-free in bpf_link_free()\n\nAfter commit 1a80dbcb2dba, bpf_link can be freed by\nlink->ops->dealloc_deferred, but the code still tests and uses\nlink->ops->dealloc afterward, which leads to a use-after-free as\nreported by syzbot. Actually, one of them should be sufficient, so\njust call one of them instead of both. Also add a WARN_ON() in case\nof any problematic implementation."
    },
    {
      "lang": "es",
      "value": "En el kernel de Linux, se resolvi\u00f3 la siguiente vulnerabilidad: bpf: corrige un posible use-after-free en bpf_link_free() Despu\u00e9s del commit 1a80dbcb2dba, bpf_link se puede liberar mediante link-&gt;ops-&gt;dealloc_deferred, pero el c\u00f3digo a\u00fan prueba y usa link-&gt;ops-&gt;dealloc despu\u00e9s, lo que conduce a un use-after-free seg\u00fan lo informado por syzbot. En realidad, uno de ellos deber\u00eda ser suficiente, as\u00ed que llame a uno de ellos en lugar de a ambos. Tambi\u00e9n agregue WARN_ON() en caso de cualquier implementaci\u00f3n problem\u00e1tica."
    }
  ],
  "metrics": {},
  "references": [
    {
      "url": "https://git.kernel.org/stable/c/2884dc7d08d98a89d8d65121524bb7533183a63a",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    },
    {
      "url": "https://git.kernel.org/stable/c/91cff53136daeff50816b0baeafd38a6976f6209",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    },
    {
      "url": "https://git.kernel.org/stable/c/fa97b8fed9896f1e89cb657513e483a152d4c382",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    }
  ]
}