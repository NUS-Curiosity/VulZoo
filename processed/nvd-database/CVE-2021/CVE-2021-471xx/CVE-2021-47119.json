{
  "id": "CVE-2021-47119",
  "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
  "published": "2024-03-15T21:15:07.013",
  "lastModified": "2024-03-17T22:38:29.433",
  "vulnStatus": "Awaiting Analysis",
  "cveTags": [],
  "descriptions": [
    {
      "lang": "en",
      "value": "In the Linux kernel, the following vulnerability has been resolved:\n\next4: fix memory leak in ext4_fill_super\n\nBuffer head references must be released before calling kill_bdev();\notherwise the buffer head (and its page referenced by b_data) will not\nbe freed by kill_bdev, and subsequently that bh will be leaked.\n\nIf blocksizes differ, sb_set_blocksize() will kill current buffers and\npage cache by using kill_bdev(). And then super block will be reread\nagain but using correct blocksize this time. sb_set_blocksize() didn't\nfully free superblock page and buffer head, and being busy, they were\nnot freed and instead leaked.\n\nThis can easily be reproduced by calling an infinite loop of:\n\n  systemctl start <ext4_on_lvm>.mount, and\n  systemctl stop <ext4_on_lvm>.mount\n\n... since systemd creates a cgroup for each slice which it mounts, and\nthe bh leak get amplified by a dying memory cgroup that also never\ngets freed, and memory consumption is much more easily noticed."
    },
    {
      "lang": "es",
      "value": "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: ext4: corrige la p\u00e9rdida de memoria en ext4_fill_super Las referencias del encabezado del b\u00fafer deben liberarse antes de llamar a kill_bdev(); de lo contrario, kill_bdev no liberar\u00e1 el encabezado del b\u00fafer (y su p\u00e1gina a la que hace referencia b_data) y, posteriormente, se filtrar\u00e1 ese bh. Si los tama\u00f1os de los bloques difieren, sb_set_blocksize() eliminar\u00e1 los b\u00faferes actuales y el cach\u00e9 de la p\u00e1gina usando kill_bdev(). Y luego el superbloque se volver\u00e1 a leer, pero esta vez utilizando el tama\u00f1o de bloque correcto. sb_set_blocksize() no liber\u00f3 completamente la p\u00e1gina del superbloque y el encabezado del b\u00fafer y, al estar ocupados, no se liberaron y en su lugar se filtraron. Esto se puede reproducir f\u00e1cilmente llamando a un bucle infinito de: systemctl start .mount, y systemctl stop .mount... ya que systemd crea un cgroup para cada segmento que monta, y la fuga de bh se amplifica con un grupo de memoria moribundo que tampoco se libera nunca, y el consumo de memoria se nota mucho m\u00e1s f\u00e1cilmente."
    }
  ],
  "metrics": {},
  "references": [
    {
      "url": "https://git.kernel.org/stable/c/01d349a481f0591230300a9171330136f9159bcd",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    },
    {
      "url": "https://git.kernel.org/stable/c/1385b23396d511d5233b8b921ac3058b3f86a5e1",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    },
    {
      "url": "https://git.kernel.org/stable/c/afd09b617db3786b6ef3dc43e28fe728cfea84df",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    }
  ]
}