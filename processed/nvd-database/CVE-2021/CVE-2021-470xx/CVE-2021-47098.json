{
  "id": "CVE-2021-47098",
  "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
  "published": "2024-03-04T18:15:08.090",
  "lastModified": "2024-03-05T13:41:01.900",
  "vulnStatus": "Awaiting Analysis",
  "cveTags": [],
  "descriptions": [
    {
      "lang": "en",
      "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nhwmon: (lm90) Prevent integer overflow/underflow in hysteresis calculations\n\nCommit b50aa49638c7 (\"hwmon: (lm90) Prevent integer underflows of\ntemperature calculations\") addressed a number of underflow situations\nwhen writing temperature limits. However, it missed one situation, seen\nwhen an attempt is made to set the hysteresis value to MAX_LONG and the\ncritical temperature limit is negative.\n\nUse clamp_val() when setting the hysteresis temperature to ensure that\nthe provided value can never overflow or underflow."
    },
    {
      "lang": "es",
      "value": "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: hwmon: (lm90) Previene el desbordamiento/desbordamiento insuficiente de enteros en los c\u00e1lculos de hist\u00e9resis del commit b50aa49638c7 (\"hwmon: (lm90) Evita el desbordamiento insuficiente de enteros en los c\u00e1lculos de temperatura\") abord\u00f3 una serie de situaciones de desbordamiento insuficiente al escribir. l\u00edmites de temperatura. Sin embargo, omiti\u00f3 una situaci\u00f3n, vista cuando se intenta establecer el valor de hist\u00e9resis en MAX_LONG y el l\u00edmite de temperatura cr\u00edtica es negativo. Utilice abrazadera_val() al configurar la temperatura de hist\u00e9resis para garantizar que el valor proporcionado nunca pueda desbordarse o subestimarse."
    }
  ],
  "metrics": {},
  "references": [
    {
      "url": "https://git.kernel.org/stable/c/55840b9eae5367b5d5b29619dc2fb7e4596dba46",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    },
    {
      "url": "https://git.kernel.org/stable/c/d105f30bea9104c590a9e5b495cb8a49bdfe405f",
      "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67"
    }
  ]
}