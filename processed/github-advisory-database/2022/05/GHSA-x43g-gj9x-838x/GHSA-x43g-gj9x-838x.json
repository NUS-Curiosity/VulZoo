{
  "schema_version": "1.4.0",
  "id": "GHSA-x43g-gj9x-838x",
  "modified": "2023-10-19T18:55:53Z",
  "published": "2022-05-24T22:01:03Z",
  "aliases": [
    "CVE-2019-17221"
  ],
  "summary": "PhantomJS Arbitrary File Read",
  "details": "PhantomJS through 2.1.1 has an arbitrary file read vulnerability, as demonstrated by an XMLHttpRequest for a `file://` URI. The vulnerability exists in the `page.open()` function of the webpage module, which loads a specified URL and calls a given callback. An attacker can supply a specially crafted HTML file, as user input, that allows reading arbitrary files on the filesystem. For example, if `page.render()` is the function callback, this generates a PDF or an image of the targeted file. **NOTE**: this product is no longer developed.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:N"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "npm",
        "name": "phantomjs"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              "introduced": "0"
            },
            {
              "last_affected": "2.1.1"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2019-17221"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/Medium/phantomjs"
    },
    {
      "type": "WEB",
      "url": "https://web.archive.org/web/20191220171022/https://www.darkmatter.ae/blogs/breaching-the-perimeter-phantomjs-arbitrary-file-read"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-552"
    ],
    "severity": "HIGH",
    "github_reviewed": true,
    "github_reviewed_at": "2023-10-19T18:55:53Z",
    "nvd_published_at": "2019-11-05T14:15:00Z"
  }
}