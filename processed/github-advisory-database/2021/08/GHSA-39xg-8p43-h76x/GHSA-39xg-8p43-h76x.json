{
  "schema_version": "1.4.0",
  "id": "GHSA-39xg-8p43-h76x",
  "modified": "2023-06-13T20:28:35Z",
  "published": "2021-08-25T20:51:40Z",
  "aliases": [
    "CVE-2020-36203"
  ],
  "summary": "Data races in reffers",
  "details": "ARefss<'a, V> is a type that is assumed to contain objects that are Send + Sync.\n\nIn the affected versions of this crate, Send/Sync traits are unconditionally implemented for ARefss<'a, V>.\n\nBy using the ARefss::map() API, we can insert a !Send or !Sync object into ARefss<'a, V>. After that, it is possible to create a data race to the inner object of ARefss<'a, V>, which can lead to undefined behavior & memory corruption.\n\nThe flaw was corrected in commit `6dd7ca0` by adding trait bound V: Send + Sync to ARefss::map() API.",
  "severity": [
    {
      "type": "CVSS_V3",
      "score": "CVSS:3.1/AV:L/AC:H/PR:L/UI:N/S:U/C:N/I:N/A:H"
    }
  ],
  "affected": [
    {
      "package": {
        "ecosystem": "crates.io",
        "name": "reffers"
      },
      "ranges": [
        {
          "type": "ECOSYSTEM",
          "events": [
            {
              "introduced": "0"
            },
            {
              "fixed": "0.6.1"
            }
          ]
        }
      ]
    }
  ],
  "references": [
    {
      "type": "ADVISORY",
      "url": "https://nvd.nist.gov/vuln/detail/CVE-2020-36203"
    },
    {
      "type": "WEB",
      "url": "https://github.com/diwic/reffers-rs/issues/7"
    },
    {
      "type": "WEB",
      "url": "https://github.com/diwic/reffers-rs/commit/6dd7ca0d50f2464df708975cdafcfaeeb6d41c66"
    },
    {
      "type": "PACKAGE",
      "url": "https://github.com/diwic/reffers-rs"
    },
    {
      "type": "WEB",
      "url": "https://rustsec.org/advisories/RUSTSEC-2020-0094.html"
    }
  ],
  "database_specific": {
    "cwe_ids": [
      "CWE-362",
      "CWE-787"
    ],
    "severity": "MODERATE",
    "github_reviewed": true,
    "github_reviewed_at": "2021-08-19T18:49:46Z",
    "nvd_published_at": null
  }
}