From bippy-5f407fcff5a0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2025-21810: driver core: class: Fix wild pointer dereferences in API class_dev_iter_next()

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

driver core: class: Fix wild pointer dereferences in API class_dev_iter_next()

There are a potential wild pointer dereferences issue regarding APIs
class_dev_iter_(init|next|exit)(), as explained by below typical usage:

// All members of @iter are wild pointers.
struct class_dev_iter iter;

// class_dev_iter_init(@iter, @class, ...) checks parameter @class for
// potential class_to_subsys() error, and it returns void type and does
// not initialize its output parameter @iter, so caller can not detect
// the error and continues to invoke class_dev_iter_next(@iter) even if
// @iter still contains wild pointers.
class_dev_iter_init(&iter, ...);

// Dereference these wild pointers in @iter here once suffer the error.
while (dev = class_dev_iter_next(&iter)) { ... };

// Also dereference these wild pointers here.
class_dev_iter_exit(&iter);

Actually, all callers of these APIs have such usage pattern in kernel tree.
Fix by:
- Initialize output parameter @iter by memset() in class_dev_iter_init()
  and give callers prompt by pr_crit() for the error.
- Check if @iter is valid in class_dev_iter_next().

The Linux kernel CVE team has assigned CVE-2025-21810 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 6.4 with commit 7b884b7f24b42fa25e92ed724ad82f137610afaf and fixed in 6.6.76 with commit f4b9bc823b0cfdebfed479c0e87d6939c7562e87
	Issue introduced in 6.4 with commit 7b884b7f24b42fa25e92ed724ad82f137610afaf and fixed in 6.12.13 with commit 1614e75d1a1b63db6421c7a4bf37004720c7376c
	Issue introduced in 6.4 with commit 7b884b7f24b42fa25e92ed724ad82f137610afaf and fixed in 6.13.2 with commit 5c504e9767b947cf7d4e29b811c0c8b3c53242b7
	Issue introduced in 6.4 with commit 7b884b7f24b42fa25e92ed724ad82f137610afaf and fixed in 6.14-rc1 with commit e128f82f7006991c99a58114f70ef61e937b1ac1

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2025-21810
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	drivers/base/class.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/f4b9bc823b0cfdebfed479c0e87d6939c7562e87
	https://git.kernel.org/stable/c/1614e75d1a1b63db6421c7a4bf37004720c7376c
	https://git.kernel.org/stable/c/5c504e9767b947cf7d4e29b811c0c8b3c53242b7
	https://git.kernel.org/stable/c/e128f82f7006991c99a58114f70ef61e937b1ac1
