From bippy-5f407fcff5a0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2025-21702: pfifo_tail_enqueue: Drop new packet when sch->limit == 0

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

pfifo_tail_enqueue: Drop new packet when sch->limit == 0

Expected behaviour:
In case we reach scheduler's limit, pfifo_tail_enqueue() will drop a
packet in scheduler's queue and decrease scheduler's qlen by one.
Then, pfifo_tail_enqueue() enqueue new packet and increase
scheduler's qlen by one. Finally, pfifo_tail_enqueue() return
`NET_XMIT_CN` status code.

Weird behaviour:
In case we set `sch->limit == 0` and trigger pfifo_tail_enqueue() on a
scheduler that has no packet, the 'drop a packet' step will do nothing.
This means the scheduler's qlen still has value equal 0.
Then, we continue to enqueue new packet and increase scheduler's qlen by
one. In summary, we can leverage pfifo_tail_enqueue() to increase qlen by
one and return `NET_XMIT_CN` status code.

The problem is:
Let's say we have two qdiscs: Qdisc_A and Qdisc_B.
 - Qdisc_A's type must have '->graft()' function to create parent/child relationship.
   Let's say Qdisc_A's type is `hfsc`. Enqueue packet to this qdisc will trigger `hfsc_enqueue`.
 - Qdisc_B's type is pfifo_head_drop. Enqueue packet to this qdisc will trigger `pfifo_tail_enqueue`.
 - Qdisc_B is configured to have `sch->limit == 0`.
 - Qdisc_A is configured to route the enqueued's packet to Qdisc_B.

Enqueue packet through Qdisc_A will lead to:
 - hfsc_enqueue(Qdisc_A) -> pfifo_tail_enqueue(Qdisc_B)
 - Qdisc_B->q.qlen += 1
 - pfifo_tail_enqueue() return `NET_XMIT_CN`
 - hfsc_enqueue() check for `NET_XMIT_SUCCESS` and see `NET_XMIT_CN` => hfsc_enqueue() don't increase qlen of Qdisc_A.

The whole process lead to a situation where Qdisc_A->q.qlen == 0 and Qdisc_B->q.qlen == 1.
Replace 'hfsc' with other type (for example: 'drr') still lead to the same problem.
This violate the design where parent's qlen should equal to the sum of its childrens'qlen.

Bug impact: This issue can be used for user->kernel privilege escalation when it is reachable.

The Linux kernel CVE team has assigned CVE-2025-21702 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 2.6.34 with commit 57dbb2d83d100ea601c54fe129bfde0678db5dee and fixed in 5.4.291 with commit 78285b53266d6d51fa4ff504a23df03852eba84e
	Issue introduced in 2.6.34 with commit 57dbb2d83d100ea601c54fe129bfde0678db5dee and fixed in 5.10.235 with commit 7a9723ec27aff5674f1fd4934608937f1d650980
	Issue introduced in 2.6.34 with commit 57dbb2d83d100ea601c54fe129bfde0678db5dee and fixed in 5.15.179 with commit a56a6e8589a9b98d8171611fbcc1e45a15fd2455
	Issue introduced in 2.6.34 with commit 57dbb2d83d100ea601c54fe129bfde0678db5dee and fixed in 6.1.130 with commit 020ecb76812a0526f4130ab5aeb6dc7c773e7ab9
	Issue introduced in 2.6.34 with commit 57dbb2d83d100ea601c54fe129bfde0678db5dee and fixed in 6.6.83 with commit 79a955ea4a2e5ddf4a36328959de0de496419888
	Issue introduced in 2.6.34 with commit 57dbb2d83d100ea601c54fe129bfde0678db5dee and fixed in 6.12.14 with commit e40cb34b7f247fe2e366fd192700d1b4f38196ca
	Issue introduced in 2.6.34 with commit 57dbb2d83d100ea601c54fe129bfde0678db5dee and fixed in 6.13.3 with commit b6a079c3b6f95378f26e2aeda520cb3176f7067b
	Issue introduced in 2.6.34 with commit 57dbb2d83d100ea601c54fe129bfde0678db5dee and fixed in 6.14-rc2 with commit 647cef20e649c576dff271e018d5d15d998b629d

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2025-21702
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	net/sched/sch_fifo.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/78285b53266d6d51fa4ff504a23df03852eba84e
	https://git.kernel.org/stable/c/7a9723ec27aff5674f1fd4934608937f1d650980
	https://git.kernel.org/stable/c/a56a6e8589a9b98d8171611fbcc1e45a15fd2455
	https://git.kernel.org/stable/c/020ecb76812a0526f4130ab5aeb6dc7c773e7ab9
	https://git.kernel.org/stable/c/79a955ea4a2e5ddf4a36328959de0de496419888
	https://git.kernel.org/stable/c/e40cb34b7f247fe2e366fd192700d1b4f38196ca
	https://git.kernel.org/stable/c/b6a079c3b6f95378f26e2aeda520cb3176f7067b
	https://git.kernel.org/stable/c/647cef20e649c576dff271e018d5d15d998b629d
