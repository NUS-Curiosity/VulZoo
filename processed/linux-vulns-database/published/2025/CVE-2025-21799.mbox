From bippy-5f407fcff5a0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2025-21799: net: ethernet: ti: am65-cpsw: fix freeing IRQ in am65_cpsw_nuss_remove_tx_chns()

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

net: ethernet: ti: am65-cpsw: fix freeing IRQ in am65_cpsw_nuss_remove_tx_chns()

When getting the IRQ we use k3_udma_glue_tx_get_irq() which returns
negative error value on error. So not NULL check is not sufficient
to deteremine if IRQ is valid. Check that IRQ is greater then zero
to ensure it is valid.

There is no issue at probe time but at runtime user can invoke
.set_channels which results in the following call chain.
am65_cpsw_set_channels()
 am65_cpsw_nuss_update_tx_rx_chns()
  am65_cpsw_nuss_remove_tx_chns()
  am65_cpsw_nuss_init_tx_chns()

At this point if am65_cpsw_nuss_init_tx_chns() fails due to
k3_udma_glue_tx_get_irq() then tx_chn->irq will be set to a
negative value.

Then, at subsequent .set_channels with higher channel count we
will attempt to free an invalid IRQ in am65_cpsw_nuss_remove_tx_chns()
leading to a kernel warning.

The issue is present in the original commit that introduced this driver,
although there, am65_cpsw_nuss_update_tx_rx_chns() existed as
am65_cpsw_nuss_update_tx_chns().

The Linux kernel CVE team has assigned CVE-2025-21799 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 5.7 with commit 93a76530316a3d8cc2d82c3deca48424fee92100 and fixed in 5.10.235 with commit 321990fdf4f1bb64e818c7140688bf33d129e48d
	Issue introduced in 5.7 with commit 93a76530316a3d8cc2d82c3deca48424fee92100 and fixed in 5.15.179 with commit ed8c0300f302338c36edb06bca99051e5be6fb2f
	Issue introduced in 5.7 with commit 93a76530316a3d8cc2d82c3deca48424fee92100 and fixed in 6.1.129 with commit aea5cca681d268f794fa2385f9ec26a5cce025cd
	Issue introduced in 5.7 with commit 93a76530316a3d8cc2d82c3deca48424fee92100 and fixed in 6.6.76 with commit 88fd5db8c0073bd91d18391feb5741aeb0a2b475
	Issue introduced in 5.7 with commit 93a76530316a3d8cc2d82c3deca48424fee92100 and fixed in 6.12.13 with commit 8448c87b3af68bebca21e3136913f7f77e363515
	Issue introduced in 5.7 with commit 93a76530316a3d8cc2d82c3deca48424fee92100 and fixed in 6.13.2 with commit 8aae91ae1c65782a169ec070e023d4d269e5d6e6
	Issue introduced in 5.7 with commit 93a76530316a3d8cc2d82c3deca48424fee92100 and fixed in 6.14-rc1 with commit 4395a44acb15850e492dd1de9ec4b6479d96bc80

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2025-21799
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	drivers/net/ethernet/ti/am65-cpsw-nuss.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/321990fdf4f1bb64e818c7140688bf33d129e48d
	https://git.kernel.org/stable/c/ed8c0300f302338c36edb06bca99051e5be6fb2f
	https://git.kernel.org/stable/c/aea5cca681d268f794fa2385f9ec26a5cce025cd
	https://git.kernel.org/stable/c/88fd5db8c0073bd91d18391feb5741aeb0a2b475
	https://git.kernel.org/stable/c/8448c87b3af68bebca21e3136913f7f77e363515
	https://git.kernel.org/stable/c/8aae91ae1c65782a169ec070e023d4d269e5d6e6
	https://git.kernel.org/stable/c/4395a44acb15850e492dd1de9ec4b6479d96bc80
