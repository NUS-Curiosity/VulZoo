From bippy-5f407fcff5a0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2022-48975: gpiolib: fix memory leak in gpiochip_setup_dev()

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

gpiolib: fix memory leak in gpiochip_setup_dev()

Here is a backtrace report about memory leak detected in
gpiochip_setup_dev():

unreferenced object 0xffff88810b406400 (size 512):
  comm "python3", pid 1682, jiffies 4295346908 (age 24.090s)
  backtrace:
    kmalloc_trace
    device_add		device_private_init at drivers/base/core.c:3361
			(inlined by) device_add at drivers/base/core.c:3411
    cdev_device_add
    gpiolib_cdev_register
    gpiochip_setup_dev
    gpiochip_add_data_with_key

gcdev_register() & gcdev_unregister() would call device_add() &
device_del() (no matter CONFIG_GPIO_CDEV is enabled or not) to
register/unregister device.

However, if device_add() succeeds, some resource (like
struct device_private allocated by device_private_init())
is not released by device_del().

Therefore, after device_add() succeeds by gcdev_register(), it
needs to call put_device() to release resource in the error handle
path.

Here we move forward the register of release function, and let it
release every piece of resource by put_device() instead of kfree().

While at it, fix another subtle issue, i.e. when gc->ngpio is equal
to 0, we still call kcalloc() and, in case of further error, kfree()
on the ZERO_PTR pointer, which is not NULL. It's not a bug per se,
but rather waste of the resources and potentially wrong expectation
about contents of the gdev->descs variable.

The Linux kernel CVE team has assigned CVE-2022-48975 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 4.6 with commit 159f3cd92f17c61a4e2a47456de5865b114ef88e and fixed in 5.15.83 with commit 6daaa84b621485fe28c401be18debf92ae8ef04a
	Issue introduced in 4.6 with commit 159f3cd92f17c61a4e2a47456de5865b114ef88e and fixed in 6.0.13 with commit 371363716398ed718e389bea8c5e9843a79dde4e
	Issue introduced in 4.6 with commit 159f3cd92f17c61a4e2a47456de5865b114ef88e and fixed in 6.1 with commit ec851b23084b3a0af8bf0f5e51d33a8d678bdc49

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2022-48975
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	drivers/gpio/gpiolib.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/6daaa84b621485fe28c401be18debf92ae8ef04a
	https://git.kernel.org/stable/c/371363716398ed718e389bea8c5e9843a79dde4e
	https://git.kernel.org/stable/c/ec851b23084b3a0af8bf0f5e51d33a8d678bdc49
