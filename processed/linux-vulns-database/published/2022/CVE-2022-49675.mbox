From bippy-5f407fcff5a0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2022-49675: tick/nohz: unexport __init-annotated tick_nohz_full_setup()

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

tick/nohz: unexport __init-annotated tick_nohz_full_setup()

EXPORT_SYMBOL and __init is a bad combination because the .init.text
section is freed up after the initialization. Hence, modules cannot
use symbols annotated __init. The access to a freed symbol may end up
with kernel panic.

modpost used to detect it, but it had been broken for a decade.

Commit 28438794aba4 ("modpost: fix section mismatch check for exported
init/exit sections") fixed it so modpost started to warn it again, then
this showed up:

    MODPOST vmlinux.symvers
  WARNING: modpost: vmlinux.o(___ksymtab_gpl+tick_nohz_full_setup+0x0): Section mismatch in reference from the variable __ksymtab_tick_nohz_full_setup to the function .init.text:tick_nohz_full_setup()
  The symbol tick_nohz_full_setup is exported and annotated __init
  Fix this by removing the __init annotation of tick_nohz_full_setup or drop the export.

Drop the export because tick_nohz_full_setup() is only called from the
built-in code in kernel/sched/isolation.c.

The Linux kernel CVE team has assigned CVE-2022-49675 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 5.5 with commit ae9e557b5be2e285f48ee945d9c8faf75d4f6a66 and fixed in 5.10.128 with commit c4ff3ffe0138234774602152fe67e3a898c615c6
	Issue introduced in 5.5 with commit ae9e557b5be2e285f48ee945d9c8faf75d4f6a66 and fixed in 5.15.52 with commit f4a80ec8c51d68be4b7a7830c510f75080c5e417
	Issue introduced in 5.5 with commit ae9e557b5be2e285f48ee945d9c8faf75d4f6a66 and fixed in 5.18.9 with commit ea32b27e2f8c58c92bff5ecba7fcf64b97707089
	Issue introduced in 5.5 with commit ae9e557b5be2e285f48ee945d9c8faf75d4f6a66 and fixed in 5.19 with commit 2390095113e98fc52fffe35c5206d30d9efe3f78

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2022-49675
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	kernel/time/tick-sched.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/c4ff3ffe0138234774602152fe67e3a898c615c6
	https://git.kernel.org/stable/c/f4a80ec8c51d68be4b7a7830c510f75080c5e417
	https://git.kernel.org/stable/c/ea32b27e2f8c58c92bff5ecba7fcf64b97707089
	https://git.kernel.org/stable/c/2390095113e98fc52fffe35c5206d30d9efe3f78
