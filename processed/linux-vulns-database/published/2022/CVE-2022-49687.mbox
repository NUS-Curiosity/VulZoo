From bippy-5f407fcff5a0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2022-49687: virtio_net: fix xdp_rxq_info bug after suspend/resume

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

virtio_net: fix xdp_rxq_info bug after suspend/resume

The following sequence currently causes a driver bug warning
when using virtio_net:

  # ip link set eth0 up
  # echo mem > /sys/power/state (or e.g. # rtcwake -s 10 -m mem)
  <resume>
  # ip link set eth0 down

  Missing register, driver bug
  WARNING: CPU: 0 PID: 375 at net/core/xdp.c:138 xdp_rxq_info_unreg+0x58/0x60
  Call trace:
   xdp_rxq_info_unreg+0x58/0x60
   virtnet_close+0x58/0xac
   __dev_close_many+0xac/0x140
   __dev_change_flags+0xd8/0x210
   dev_change_flags+0x24/0x64
   do_setlink+0x230/0xdd0
   ...

This happens because virtnet_freeze() frees the receive_queue
completely (including struct xdp_rxq_info) but does not call
xdp_rxq_info_unreg(). Similarly, virtnet_restore() sets up the
receive_queue again but does not call xdp_rxq_info_reg().

Actually, parts of virtnet_freeze_down() and virtnet_restore_up()
are almost identical to virtnet_close() and virtnet_open(): only
the calls to xdp_rxq_info_(un)reg() are missing. This means that
we can fix this easily and avoid such problems in the future by
just calling virtnet_close()/open() from the freeze/restore handlers.

Aside from adding the missing xdp_rxq_info calls the only difference
is that the refill work is only cancelled if netif_running(). However,
this should not make any functional difference since the refill work
should only be active if the network interface is actually up.

The Linux kernel CVE team has assigned CVE-2022-49687 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 4.16 with commit 754b8a21a96d5f11712245aef907149606b323ae and fixed in 4.19.250 with commit 9222672fa6370f0ec3d899662cb8680e9282fc4c
	Issue introduced in 4.16 with commit 754b8a21a96d5f11712245aef907149606b323ae and fixed in 5.4.202 with commit 8c7a32b7c15555beddc5810c3334d9cefff061bf
	Issue introduced in 4.16 with commit 754b8a21a96d5f11712245aef907149606b323ae and fixed in 5.10.127 with commit 340fbdc8011f2dc678f622c5ce1cbb5ab8305de7
	Issue introduced in 4.16 with commit 754b8a21a96d5f11712245aef907149606b323ae and fixed in 5.15.51 with commit 8d7fe9ad6fddc2af8bde4b921b4f8fab231ed38c
	Issue introduced in 4.16 with commit 754b8a21a96d5f11712245aef907149606b323ae and fixed in 5.18.8 with commit 57ee40f1b198b59d43c216fbc4672f9300d3c8b0
	Issue introduced in 4.16 with commit 754b8a21a96d5f11712245aef907149606b323ae and fixed in 5.19 with commit 8af52fe9fd3bf5e7478da99193c0632276e1dfce

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2022-49687
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	drivers/net/virtio_net.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/9222672fa6370f0ec3d899662cb8680e9282fc4c
	https://git.kernel.org/stable/c/8c7a32b7c15555beddc5810c3334d9cefff061bf
	https://git.kernel.org/stable/c/340fbdc8011f2dc678f622c5ce1cbb5ab8305de7
	https://git.kernel.org/stable/c/8d7fe9ad6fddc2af8bde4b921b4f8fab231ed38c
	https://git.kernel.org/stable/c/57ee40f1b198b59d43c216fbc4672f9300d3c8b0
	https://git.kernel.org/stable/c/8af52fe9fd3bf5e7478da99193c0632276e1dfce
