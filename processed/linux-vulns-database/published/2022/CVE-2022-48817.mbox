From bippy-5f407fcff5a0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2022-48817: net: dsa: ar9331: register the mdiobus under devres

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

net: dsa: ar9331: register the mdiobus under devres

As explained in commits:
74b6d7d13307 ("net: dsa: realtek: register the MDIO bus under devres")
5135e96a3dd2 ("net: dsa: don't allocate the slave_mii_bus using devres")

mdiobus_free() will panic when called from devm_mdiobus_free() <-
devres_release_all() <- __device_release_driver(), and that mdiobus was
not previously unregistered.

The ar9331 is an MDIO device, so the initial set of constraints that I
thought would cause this (I2C or SPI buses which call ->remove on
->shutdown) do not apply. But there is one more which applies here.

If the DSA master itself is on a bus that calls ->remove from ->shutdown
(like dpaa2-eth, which is on the fsl-mc bus), there is a device link
between the switch and the DSA master, and device_links_unbind_consumers()
will unbind the ar9331 switch driver on shutdown.

So the same treatment must be applied to all DSA switch drivers, which
is: either use devres for both the mdiobus allocation and registration,
or don't use devres at all.

The ar9331 driver doesn't have a complex code structure for mdiobus
removal, so just replace of_mdiobus_register with the devres variant in
order to be all-devres and ensure that we don't free a still-registered
bus.

The Linux kernel CVE team has assigned CVE-2022-48817 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 5.9 with commit ac3a68d56651c3dad2c12c7afce065fe15267f44 and fixed in 5.10.101 with commit 475ce5dcf2d88fd4f3c213a0ac944e3e40702970
	Issue introduced in 5.9 with commit ac3a68d56651c3dad2c12c7afce065fe15267f44 and fixed in 5.15.24 with commit aae1c6a1d3d696fc33b609fb12fe744a556d1dc5
	Issue introduced in 5.9 with commit ac3a68d56651c3dad2c12c7afce065fe15267f44 and fixed in 5.16.10 with commit f1842a8cb71de4d7eb75a86f76e88c7ee739218c
	Issue introduced in 5.9 with commit ac3a68d56651c3dad2c12c7afce065fe15267f44 and fixed in 5.17 with commit 50facd86e9fbc4b93fe02e5fe05776047f45dbfb

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2022-48817
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	drivers/net/dsa/qca/ar9331.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/475ce5dcf2d88fd4f3c213a0ac944e3e40702970
	https://git.kernel.org/stable/c/aae1c6a1d3d696fc33b609fb12fe744a556d1dc5
	https://git.kernel.org/stable/c/f1842a8cb71de4d7eb75a86f76e88c7ee739218c
	https://git.kernel.org/stable/c/50facd86e9fbc4b93fe02e5fe05776047f45dbfb
