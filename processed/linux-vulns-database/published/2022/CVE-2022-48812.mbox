From bippy-5f407fcff5a0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2022-48812: net: dsa: lantiq_gswip: don't use devres for mdiobus

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

net: dsa: lantiq_gswip: don't use devres for mdiobus

As explained in commits:
74b6d7d13307 ("net: dsa: realtek: register the MDIO bus under devres")
5135e96a3dd2 ("net: dsa: don't allocate the slave_mii_bus using devres")

mdiobus_free() will panic when called from devm_mdiobus_free() <-
devres_release_all() <- __device_release_driver(), and that mdiobus was
not previously unregistered.

The GSWIP switch is a platform device, so the initial set of constraints
that I thought would cause this (I2C or SPI buses which call ->remove on
->shutdown) do not apply. But there is one more which applies here.

If the DSA master itself is on a bus that calls ->remove from ->shutdown
(like dpaa2-eth, which is on the fsl-mc bus), there is a device link
between the switch and the DSA master, and device_links_unbind_consumers()
will unbind the GSWIP switch driver on shutdown.

So the same treatment must be applied to all DSA switch drivers, which
is: either use devres for both the mdiobus allocation and registration,
or don't use devres at all.

The gswip driver has the code structure in place for orderly mdiobus
removal, so just replace devm_mdiobus_alloc() with the non-devres
variant, and add manual free where necessary, to ensure that we don't
let devres free a still-registered bus.

The Linux kernel CVE team has assigned CVE-2022-48812 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 5.9 with commit ac3a68d56651c3dad2c12c7afce065fe15267f44 and fixed in 5.10.101 with commit e177d2e85ebcd3008c4b2abc293f4118e04eedef
	Issue introduced in 5.9 with commit ac3a68d56651c3dad2c12c7afce065fe15267f44 and fixed in 5.15.24 with commit b5652bc50dde7b84e93dfb25479b64b817e377c1
	Issue introduced in 5.9 with commit ac3a68d56651c3dad2c12c7afce065fe15267f44 and fixed in 5.16.10 with commit 2443ba2fe396bdde187a2fdfa6a57375643ae93c
	Issue introduced in 5.9 with commit ac3a68d56651c3dad2c12c7afce065fe15267f44 and fixed in 5.17 with commit 0d120dfb5d67edc5bcd1804e167dba2b30809afd

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2022-48812
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	drivers/net/dsa/lantiq_gswip.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/e177d2e85ebcd3008c4b2abc293f4118e04eedef
	https://git.kernel.org/stable/c/b5652bc50dde7b84e93dfb25479b64b817e377c1
	https://git.kernel.org/stable/c/2443ba2fe396bdde187a2fdfa6a57375643ae93c
	https://git.kernel.org/stable/c/0d120dfb5d67edc5bcd1804e167dba2b30809afd
