From bippy-5f407fcff5a0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2022-49171: ext4: don't BUG if someone dirty pages without asking ext4 first

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

ext4: don't BUG if someone dirty pages without asking ext4 first

[un]pin_user_pages_remote is dirtying pages without properly warning
the file system in advance.  A related race was noted by Jan Kara in
2018[1]; however, more recently instead of it being a very hard-to-hit
race, it could be reliably triggered by process_vm_writev(2) which was
discovered by Syzbot[2].

This is technically a bug in mm/gup.c, but arguably ext4 is fragile in
that if some other kernel subsystem dirty pages without properly
notifying the file system using page_mkwrite(), ext4 will BUG, while
other file systems will not BUG (although data will still be lost).

So instead of crashing with a BUG, issue a warning (since there may be
potential data loss) and just mark the page as clean to avoid
unprivileged denial of service attacks until the problem can be
properly fixed.  More discussion and background can be found in the
thread starting at [2].

[1] https://lore.kernel.org/linux-mm/20180103100430.GE4911@quack2.suse.cz
[2] https://lore.kernel.org/r/Yg0m6IjcNmfaSokM@google.com

The Linux kernel CVE team has assigned CVE-2022-49171 to this issue.


Affected and fixed versions
===========================

	Fixed in 4.9.311 with commit 5db60e76edf5680ff1f3a7221036fc44b308f146
	Fixed in 4.14.276 with commit d666dfaa571465a19f014534a214c255ea33f301
	Fixed in 4.19.238 with commit 0d3a6926f7e8be3c897fa46216ce13b119a9f56a
	Fixed in 5.4.189 with commit 5a016c053f426a73752c3b41b60b497b58694d48
	Fixed in 5.10.110 with commit 330d0e44fc5a47c27df958ecdd4693a3cb1d8b81
	Fixed in 5.15.33 with commit a0856764dc1276ad2dc7891288c2e9246bf11a37
	Fixed in 5.16.19 with commit 343117559ef41e992e326f7a92da1a8f254dfa8c
	Fixed in 5.17.2 with commit 677c9d30e8487bee6c8e3b034070319d98f6e203
	Fixed in 5.18 with commit cc5095747edfb054ca2068d01af20be3fcc3634f

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2022-49171
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	fs/ext4/inode.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/5db60e76edf5680ff1f3a7221036fc44b308f146
	https://git.kernel.org/stable/c/d666dfaa571465a19f014534a214c255ea33f301
	https://git.kernel.org/stable/c/0d3a6926f7e8be3c897fa46216ce13b119a9f56a
	https://git.kernel.org/stable/c/5a016c053f426a73752c3b41b60b497b58694d48
	https://git.kernel.org/stable/c/330d0e44fc5a47c27df958ecdd4693a3cb1d8b81
	https://git.kernel.org/stable/c/a0856764dc1276ad2dc7891288c2e9246bf11a37
	https://git.kernel.org/stable/c/343117559ef41e992e326f7a92da1a8f254dfa8c
	https://git.kernel.org/stable/c/677c9d30e8487bee6c8e3b034070319d98f6e203
	https://git.kernel.org/stable/c/cc5095747edfb054ca2068d01af20be3fcc3634f
