From bippy-5f407fcff5a0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2022-48727: KVM: arm64: Avoid consuming a stale esr value when SError occur

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

KVM: arm64: Avoid consuming a stale esr value when SError occur

When any exception other than an IRQ occurs, the CPU updates the ESR_EL2
register with the exception syndrome. An SError may also become pending,
and will be synchronised by KVM. KVM notes the exception type, and whether
an SError was synchronised in exit_code.

When an exception other than an IRQ occurs, fixup_guest_exit() updates
vcpu->arch.fault.esr_el2 from the hardware register. When an SError was
synchronised, the vcpu esr value is used to determine if the exception
was due to an HVC. If so, ELR_EL2 is moved back one instruction. This
is so that KVM can process the SError first, and re-execute the HVC if
the guest survives the SError.

But if an IRQ synchronises an SError, the vcpu's esr value is stale.
If the previous non-IRQ exception was an HVC, KVM will corrupt ELR_EL2,
causing an unrelated guest instruction to be executed twice.

Check ARM_EXCEPTION_CODE() before messing with ELR_EL2, IRQs don't
update this register so don't need to check.

The Linux kernel CVE team has assigned CVE-2022-48727 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 5.11 with commit defe21f49bc98b095300752aa1e19bb608f3e97d and fixed in 5.15.22 with commit e1e852746997500f1873f60b954da5f02cc2dba3
	Issue introduced in 5.11 with commit defe21f49bc98b095300752aa1e19bb608f3e97d and fixed in 5.16.8 with commit 57e2986c3b25092691a6e3d6ee9168caf8978932
	Issue introduced in 5.11 with commit defe21f49bc98b095300752aa1e19bb608f3e97d and fixed in 5.17 with commit 1c71dbc8a179d99dd9bb7e7fc1888db613cf85de

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2022-48727
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	arch/arm64/kvm/hyp/include/hyp/switch.h


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/e1e852746997500f1873f60b954da5f02cc2dba3
	https://git.kernel.org/stable/c/57e2986c3b25092691a6e3d6ee9168caf8978932
	https://git.kernel.org/stable/c/1c71dbc8a179d99dd9bb7e7fc1888db613cf85de
