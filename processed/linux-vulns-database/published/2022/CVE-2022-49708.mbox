From bippy-5f407fcff5a0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2022-49708: ext4: fix bug_on ext4_mb_use_inode_pa

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

ext4: fix bug_on ext4_mb_use_inode_pa

Hulk Robot reported a BUG_ON:
==================================================================
kernel BUG at fs/ext4/mballoc.c:3211!
[...]
RIP: 0010:ext4_mb_mark_diskspace_used.cold+0x85/0x136f
[...]
Call Trace:
 ext4_mb_new_blocks+0x9df/0x5d30
 ext4_ext_map_blocks+0x1803/0x4d80
 ext4_map_blocks+0x3a4/0x1a10
 ext4_writepages+0x126d/0x2c30
 do_writepages+0x7f/0x1b0
 __filemap_fdatawrite_range+0x285/0x3b0
 file_write_and_wait_range+0xb1/0x140
 ext4_sync_file+0x1aa/0xca0
 vfs_fsync_range+0xfb/0x260
 do_fsync+0x48/0xa0
[...]
==================================================================

Above issue may happen as follows:
-------------------------------------
do_fsync
 vfs_fsync_range
  ext4_sync_file
   file_write_and_wait_range
    __filemap_fdatawrite_range
     do_writepages
      ext4_writepages
       mpage_map_and_submit_extent
        mpage_map_one_extent
         ext4_map_blocks
          ext4_mb_new_blocks
           ext4_mb_normalize_request
            >>> start + size <= ac->ac_o_ex.fe_logical
           ext4_mb_regular_allocator
            ext4_mb_simple_scan_group
             ext4_mb_use_best_found
              ext4_mb_new_preallocation
               ext4_mb_new_inode_pa
                ext4_mb_use_inode_pa
                 >>> set ac->ac_b_ex.fe_len <= 0
           ext4_mb_mark_diskspace_used
            >>> BUG_ON(ac->ac_b_ex.fe_len <= 0);

we can easily reproduce this problem with the following commands:
	`fallocate -l100M disk`
	`mkfs.ext4 -b 1024 -g 256 disk`
	`mount disk /mnt`
	`fsstress -d /mnt -l 0 -n 1000 -p 1`

The size must be smaller than or equal to EXT4_BLOCKS_PER_GROUP.
Therefore, "start + size <= ac->ac_o_ex.fe_logical" may occur
when the size is truncated. So start should be the start position of
the group where ac_o_ex.fe_logical is located after alignment.
In addition, when the value of fe_logical or EXT4_BLOCKS_PER_GROUP
is very large, the value calculated by start_off is more accurate.

The Linux kernel CVE team has assigned CVE-2022-49708 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 4.9.14 with commit fc6c2da174edd7a7b760b12c60d432d300e05cca and fixed in 4.9.320 with commit 6880fb2e64331b9fdc85d3f32b1d7e81ad8703f1
	Issue introduced in 4.11 with commit cd648b8a8fd5071d232242d5ee7ee3c0815776af and fixed in 4.14.285 with commit a37c1359714da42517dd19d36fc3c4d17edba832
	Issue introduced in 4.11 with commit cd648b8a8fd5071d232242d5ee7ee3c0815776af and fixed in 4.19.249 with commit 5707d721d1819db57dba57b1d4623034fcb32047
	Issue introduced in 4.11 with commit cd648b8a8fd5071d232242d5ee7ee3c0815776af and fixed in 5.4.200 with commit a6b31616e5afe1d3972cb0682a373e50597faf5c
	Issue introduced in 4.11 with commit cd648b8a8fd5071d232242d5ee7ee3c0815776af and fixed in 5.10.124 with commit 6fdaf31ad5f3d3afab744dfd9a8b0d9142aa881f
	Issue introduced in 4.11 with commit cd648b8a8fd5071d232242d5ee7ee3c0815776af and fixed in 5.15.49 with commit 90f0f9d45dff0128c0fca0d2358c4153b024afa6
	Issue introduced in 4.11 with commit cd648b8a8fd5071d232242d5ee7ee3c0815776af and fixed in 5.18.6 with commit 887a3e9ad4b8309a2266bce7ae749b2bf1f7a687
	Issue introduced in 4.11 with commit cd648b8a8fd5071d232242d5ee7ee3c0815776af and fixed in 5.19 with commit a08f789d2ab5242c07e716baf9a835725046be89
	Issue introduced in 3.2.89 with commit f213db429b883a2d5403de0b1ce92fb7d7ee979e
	Issue introduced in 3.10.107 with commit 98f58e05231f835dfb09359e3b5e3a886fe8f189
	Issue introduced in 3.12.72 with commit c1664e9bcf6291c0ceb8599f57c8cf493526abe6
	Issue introduced in 3.16.44 with commit 37cf4ab1ba60c30ca9fd0fe3b9993b24cb87886a
	Issue introduced in 4.1.40 with commit 75f37dab088eb84ff25a49e59371f01ea3f44aa7
	Issue introduced in 4.4.53 with commit 8774c73cf6963310395823ed7077ea12943ea0f3
	Issue introduced in 4.10.2 with commit c4fbdc0124799f1772f4d886b7f2e1a6f881d195

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2022-49708
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	fs/ext4/mballoc.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/6880fb2e64331b9fdc85d3f32b1d7e81ad8703f1
	https://git.kernel.org/stable/c/a37c1359714da42517dd19d36fc3c4d17edba832
	https://git.kernel.org/stable/c/5707d721d1819db57dba57b1d4623034fcb32047
	https://git.kernel.org/stable/c/a6b31616e5afe1d3972cb0682a373e50597faf5c
	https://git.kernel.org/stable/c/6fdaf31ad5f3d3afab744dfd9a8b0d9142aa881f
	https://git.kernel.org/stable/c/90f0f9d45dff0128c0fca0d2358c4153b024afa6
	https://git.kernel.org/stable/c/887a3e9ad4b8309a2266bce7ae749b2bf1f7a687
	https://git.kernel.org/stable/c/a08f789d2ab5242c07e716baf9a835725046be89
