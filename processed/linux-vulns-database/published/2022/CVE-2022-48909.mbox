From bippy-5f407fcff5a0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2022-48909: net/smc: fix connection leak

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

net/smc: fix connection leak

There's a potential leak issue under following execution sequence :

smc_release  				smc_connect_work
if (sk->sk_state == SMC_INIT)
					send_clc_confirim
	tcp_abort();
					...
					sk.sk_state = SMC_ACTIVE
smc_close_active
switch(sk->sk_state) {
...
case SMC_ACTIVE:
	smc_close_final()
	// then wait peer closed

Unfortunately, tcp_abort() may discard CLC CONFIRM messages that are
still in the tcp send buffer, in which case our connection token cannot
be delivered to the server side, which means that we cannot get a
passive close message at all. Therefore, it is impossible for the to be
disconnected at all.

This patch tries a very simple way to avoid this issue, once the state
has changed to SMC_ACTIVE after tcp_abort(), we can actively abort the
smc connection, considering that the state is SMC_INIT before
tcp_abort(), abandoning the complete disconnection process should not
cause too much problem.

In fact, this problem may exist as long as the CLC CONFIRM message is
not received by the server. Whether a timer should be added after
smc_close_final() needs to be discussed in the future. But even so, this
patch provides a faster release for connection in above case, it should
also be valuable.

The Linux kernel CVE team has assigned CVE-2022-48909 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 5.3 with commit 39f41f367b08650e9aa314e3a13fb6dda1e9eec7 and fixed in 5.10.104 with commit 2e8d465b83db307f04ad265848f8ab3f78f6918f
	Issue introduced in 5.3 with commit 39f41f367b08650e9aa314e3a13fb6dda1e9eec7 and fixed in 5.15.27 with commit 80895b6f9154fb22d36fab311ccbb75503a2c87b
	Issue introduced in 5.3 with commit 39f41f367b08650e9aa314e3a13fb6dda1e9eec7 and fixed in 5.16.13 with commit e98d46ccfa84b35a9e4b1ccdd83961b41a5d7ce5
	Issue introduced in 5.3 with commit 39f41f367b08650e9aa314e3a13fb6dda1e9eec7 and fixed in 5.17 with commit 9f1c50cf39167ff71dc5953a3234f3f6eeb8fcb5

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2022-48909
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	net/smc/af_smc.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/2e8d465b83db307f04ad265848f8ab3f78f6918f
	https://git.kernel.org/stable/c/80895b6f9154fb22d36fab311ccbb75503a2c87b
	https://git.kernel.org/stable/c/e98d46ccfa84b35a9e4b1ccdd83961b41a5d7ce5
	https://git.kernel.org/stable/c/9f1c50cf39167ff71dc5953a3234f3f6eeb8fcb5
