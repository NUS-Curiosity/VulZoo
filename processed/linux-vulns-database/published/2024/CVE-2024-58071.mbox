From bippy-5f407fcff5a0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2024-58071: team: prevent adding a device which is already a team device lower

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

team: prevent adding a device which is already a team device lower

Prevent adding a device which is already a team device lower,
e.g. adding veth0 if vlan1 was already added and veth0 is a lower of
vlan1.

This is not useful in practice and can lead to recursive locking:

$ ip link add veth0 type veth peer name veth1
$ ip link set veth0 up
$ ip link set veth1 up
$ ip link add link veth0 name veth0.1 type vlan protocol 802.1Q id 1
$ ip link add team0 type team
$ ip link set veth0.1 down
$ ip link set veth0.1 master team0
team0: Port device veth0.1 added
$ ip link set veth0 down
$ ip link set veth0 master team0

============================================
WARNING: possible recursive locking detected
6.13.0-rc2-virtme-00441-ga14a429069bb #46 Not tainted
--------------------------------------------
ip/7684 is trying to acquire lock:
ffff888016848e00 (team->team_lock_key){+.+.}-{4:4}, at: team_device_event (drivers/net/team/team_core.c:2928 drivers/net/team/team_core.c:2951 drivers/net/team/team_core.c:2973)

but task is already holding lock:
ffff888016848e00 (team->team_lock_key){+.+.}-{4:4}, at: team_add_slave (drivers/net/team/team_core.c:1147 drivers/net/team/team_core.c:1977)

other info that might help us debug this:
Possible unsafe locking scenario:

CPU0
----
lock(team->team_lock_key);
lock(team->team_lock_key);

*** DEADLOCK ***

May be due to missing lock nesting notation

2 locks held by ip/7684:

stack backtrace:
CPU: 3 UID: 0 PID: 7684 Comm: ip Not tainted 6.13.0-rc2-virtme-00441-ga14a429069bb #46
Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.16.3-debian-1.16.3-2 04/01/2014
Call Trace:
<TASK>
dump_stack_lvl (lib/dump_stack.c:122)
print_deadlock_bug.cold (kernel/locking/lockdep.c:3040)
__lock_acquire (kernel/locking/lockdep.c:3893 kernel/locking/lockdep.c:5226)
? netlink_broadcast_filtered (net/netlink/af_netlink.c:1548)
lock_acquire.part.0 (kernel/locking/lockdep.c:467 kernel/locking/lockdep.c:5851)
? team_device_event (drivers/net/team/team_core.c:2928 drivers/net/team/team_core.c:2951 drivers/net/team/team_core.c:2973)
? trace_lock_acquire (./include/trace/events/lock.h:24 (discriminator 2))
? team_device_event (drivers/net/team/team_core.c:2928 drivers/net/team/team_core.c:2951 drivers/net/team/team_core.c:2973)
? lock_acquire (kernel/locking/lockdep.c:5822)
? team_device_event (drivers/net/team/team_core.c:2928 drivers/net/team/team_core.c:2951 drivers/net/team/team_core.c:2973)
__mutex_lock (kernel/locking/mutex.c:587 kernel/locking/mutex.c:735)
? team_device_event (drivers/net/team/team_core.c:2928 drivers/net/team/team_core.c:2951 drivers/net/team/team_core.c:2973)
? team_device_event (drivers/net/team/team_core.c:2928 drivers/net/team/team_core.c:2951 drivers/net/team/team_core.c:2973)
? fib_sync_up (net/ipv4/fib_semantics.c:2167)
? team_device_event (drivers/net/team/team_core.c:2928 drivers/net/team/team_core.c:2951 drivers/net/team/team_core.c:2973)
team_device_event (drivers/net/team/team_core.c:2928 drivers/net/team/team_core.c:2951 drivers/net/team/team_core.c:2973)
notifier_call_chain (kernel/notifier.c:85)
call_netdevice_notifiers_info (net/core/dev.c:1996)
__dev_notify_flags (net/core/dev.c:8993)
? __dev_change_flags (net/core/dev.c:8975)
dev_change_flags (net/core/dev.c:9027)
vlan_device_event (net/8021q/vlan.c:85 net/8021q/vlan.c:470)
? br_device_event (net/bridge/br.c:143)
notifier_call_chain (kernel/notifier.c:85)
call_netdevice_notifiers_info (net/core/dev.c:1996)
dev_open (net/core/dev.c:1519 net/core/dev.c:1505)
team_add_slave (drivers/net/team/team_core.c:1219 drivers/net/team/team_core.c:1977)
? __pfx_team_add_slave (drivers/net/team/team_core.c:1972)
do_set_master (net/core/rtnetlink.c:2917)
do_setlink.isra.0 (net/core/rtnetlink.c:3117)

The Linux kernel CVE team has assigned CVE-2024-58071 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 3.3 with commit 3d249d4ca7d0ed6629a135ea1ea21c72286c0d80 and fixed in 5.4.291 with commit 0a7794b9ca78c8e7d001c583bf05736169de3f20
	Issue introduced in 3.3 with commit 3d249d4ca7d0ed6629a135ea1ea21c72286c0d80 and fixed in 5.10.235 with commit 62ff1615815d565448c37cb8a7a2a076492ec471
	Issue introduced in 3.3 with commit 3d249d4ca7d0ed6629a135ea1ea21c72286c0d80 and fixed in 5.15.179 with commit bd099a2fa9be983ba0e90a57a59484fe9d520ba8
	Issue introduced in 3.3 with commit 3d249d4ca7d0ed6629a135ea1ea21c72286c0d80 and fixed in 6.1.129 with commit adff6ac889e16d97abd1e4543f533221127e978a
	Issue introduced in 3.3 with commit 3d249d4ca7d0ed6629a135ea1ea21c72286c0d80 and fixed in 6.6.76 with commit 184a564e6000b41582f160a5be9a9b5aabe22ac1
	Issue introduced in 3.3 with commit 3d249d4ca7d0ed6629a135ea1ea21c72286c0d80 and fixed in 6.12.13 with commit 1bb06f919fa5bec77ad9b6002525c3dcc5c1fd6c
	Issue introduced in 3.3 with commit 3d249d4ca7d0ed6629a135ea1ea21c72286c0d80 and fixed in 6.13.2 with commit d9bce1310c0e2a55888e3e08c9f69d8377b3a377
	Issue introduced in 3.3 with commit 3d249d4ca7d0ed6629a135ea1ea21c72286c0d80 and fixed in 6.14-rc1 with commit 3fff5da4ca2164bb4d0f1e6cd33f6eb8a0e73e50

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2024-58071
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	drivers/net/team/team_core.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/0a7794b9ca78c8e7d001c583bf05736169de3f20
	https://git.kernel.org/stable/c/62ff1615815d565448c37cb8a7a2a076492ec471
	https://git.kernel.org/stable/c/bd099a2fa9be983ba0e90a57a59484fe9d520ba8
	https://git.kernel.org/stable/c/adff6ac889e16d97abd1e4543f533221127e978a
	https://git.kernel.org/stable/c/184a564e6000b41582f160a5be9a9b5aabe22ac1
	https://git.kernel.org/stable/c/1bb06f919fa5bec77ad9b6002525c3dcc5c1fd6c
	https://git.kernel.org/stable/c/d9bce1310c0e2a55888e3e08c9f69d8377b3a377
	https://git.kernel.org/stable/c/3fff5da4ca2164bb4d0f1e6cd33f6eb8a0e73e50
