From bippy-5f407fcff5a0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2024-35839: netfilter: bridge: replace physindev with physinif in nf_bridge_info

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

netfilter: bridge: replace physindev with physinif in nf_bridge_info

An skb can be added to a neigh->arp_queue while waiting for an arp
reply. Where original skb's skb->dev can be different to neigh's
neigh->dev. For instance in case of bridging dnated skb from one veth to
another, the skb would be added to a neigh->arp_queue of the bridge.

As skb->dev can be reset back to nf_bridge->physindev and used, and as
there is no explicit mechanism that prevents this physindev from been
freed under us (for instance neigh_flush_dev doesn't cleanup skbs from
different device's neigh queue) we can crash on e.g. this stack:

arp_process
  neigh_update
    skb = __skb_dequeue(&neigh->arp_queue)
      neigh_resolve_output(..., skb)
        ...
          br_nf_dev_xmit
            br_nf_pre_routing_finish_bridge_slow
              skb->dev = nf_bridge->physindev
              br_handle_frame_finish

Let's use plain ifindex instead of net_device link. To peek into the
original net_device we will use dev_get_by_index_rcu(). Thus either we
get device and are safe to use it or we don't get it and drop skb.

The Linux kernel CVE team has assigned CVE-2024-35839 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 4.2 with commit c4e70a87d975d1f561a00abfe2d3cefa2a486c95 and fixed in 6.1.75 with commit 7ae19ee81ca56b13c50a78de6c47d5b8fdc9d97b
	Issue introduced in 4.2 with commit c4e70a87d975d1f561a00abfe2d3cefa2a486c95 and fixed in 6.6.14 with commit 9325e3188a9cf3f69fc6f32af59844bbc5b90547
	Issue introduced in 4.2 with commit c4e70a87d975d1f561a00abfe2d3cefa2a486c95 and fixed in 6.7.2 with commit 544add1f1cfb78c3dfa3e6edcf4668f6be5e730c
	Issue introduced in 4.2 with commit c4e70a87d975d1f561a00abfe2d3cefa2a486c95 and fixed in 6.8 with commit 9874808878d9eed407e3977fd11fee49de1e1d86

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2024-35839
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	include/linux/netfilter_bridge.h
	include/linux/skbuff.h
	net/bridge/br_netfilter_hooks.c
	net/bridge/br_netfilter_ipv6.c
	net/ipv4/netfilter/nf_reject_ipv4.c
	net/ipv6/netfilter/nf_reject_ipv6.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/7ae19ee81ca56b13c50a78de6c47d5b8fdc9d97b
	https://git.kernel.org/stable/c/9325e3188a9cf3f69fc6f32af59844bbc5b90547
	https://git.kernel.org/stable/c/544add1f1cfb78c3dfa3e6edcf4668f6be5e730c
	https://git.kernel.org/stable/c/9874808878d9eed407e3977fd11fee49de1e1d86
