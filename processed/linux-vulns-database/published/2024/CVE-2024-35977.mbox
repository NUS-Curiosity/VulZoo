From bippy-5f407fcff5a0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2024-35977: platform/chrome: cros_ec_uart: properly fix race condition

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

platform/chrome: cros_ec_uart: properly fix race condition

The cros_ec_uart_probe() function calls devm_serdev_device_open() before
it calls serdev_device_set_client_ops(). This can trigger a NULL pointer
dereference:

    BUG: kernel NULL pointer dereference, address: 0000000000000000
    ...
    Call Trace:
     <TASK>
     ...
     ? ttyport_receive_buf

A simplified version of crashing code is as follows:

    static inline size_t serdev_controller_receive_buf(struct serdev_controller *ctrl,
                                                      const u8 *data,
                                                      size_t count)
    {
            struct serdev_device *serdev = ctrl->serdev;

            if (!serdev || !serdev->ops->receive_buf) // CRASH!
                return 0;

            return serdev->ops->receive_buf(serdev, data, count);
    }

It assumes that if SERPORT_ACTIVE is set and serdev exists, serdev->ops
will also exist. This conflicts with the existing cros_ec_uart_probe()
logic, as it first calls devm_serdev_device_open() (which sets
SERPORT_ACTIVE), and only later sets serdev->ops via
serdev_device_set_client_ops().

Commit 01f95d42b8f4 ("platform/chrome: cros_ec_uart: fix race
condition") attempted to fix a similar race condition, but while doing
so, made the window of error for this race condition to happen much
wider.

Attempt to fix the race condition again, making sure we fully setup
before calling devm_serdev_device_open().

The Linux kernel CVE team has assigned CVE-2024-35977 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 6.3 with commit 01f95d42b8f4e88f20d68791b0a85dbb9e3d1ac9 and fixed in 6.6.28 with commit cfd758041d8b79aa8c3f811b6bd6105379f2f702
	Issue introduced in 6.3 with commit 01f95d42b8f4e88f20d68791b0a85dbb9e3d1ac9 and fixed in 6.8.7 with commit 9e9bb74a93b7daa32313ccaefd0edc529d40daf8
	Issue introduced in 6.3 with commit 01f95d42b8f4e88f20d68791b0a85dbb9e3d1ac9 and fixed in 6.9 with commit 5e700b384ec13f5bcac9855cb28fcc674f1d3593

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2024-35977
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	drivers/platform/chrome/cros_ec_uart.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/cfd758041d8b79aa8c3f811b6bd6105379f2f702
	https://git.kernel.org/stable/c/9e9bb74a93b7daa32313ccaefd0edc529d40daf8
	https://git.kernel.org/stable/c/5e700b384ec13f5bcac9855cb28fcc674f1d3593
