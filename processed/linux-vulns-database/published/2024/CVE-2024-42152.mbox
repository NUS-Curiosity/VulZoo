From bippy-5f407fcff5a0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2024-42152: nvmet: fix a possible leak when destroy a ctrl during qp establishment

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

nvmet: fix a possible leak when destroy a ctrl during qp establishment

In nvmet_sq_destroy we capture sq->ctrl early and if it is non-NULL we
know that a ctrl was allocated (in the admin connect request handler)
and we need to release pending AERs, clear ctrl->sqs and sq->ctrl
(for nvme-loop primarily), and drop the final reference on the ctrl.

However, a small window is possible where nvmet_sq_destroy starts (as
a result of the client giving up and disconnecting) concurrently with
the nvme admin connect cmd (which may be in an early stage). But *before*
kill_and_confirm of sq->ref (i.e. the admin connect managed to get an sq
live reference). In this case, sq->ctrl was allocated however after it was
captured in a local variable in nvmet_sq_destroy.
This prevented the final reference drop on the ctrl.

Solve this by re-capturing the sq->ctrl after all inflight request has
completed, where for sure sq->ctrl reference is final, and move forward
based on that.

This issue was observed in an environment with many hosts connecting
multiple ctrls simoutanuosly, creating a delay in allocating a ctrl
leading up to this race window.

The Linux kernel CVE team has assigned CVE-2024-42152 to this issue.


Affected and fixed versions
===========================

	Fixed in 5.10.222 with commit 2f3c22b1d3d7e86712253244797a651998c141fa
	Fixed in 5.15.163 with commit b4fed1443a6571d49c6ffe7d97af3bbe5ee6dff5
	Fixed in 6.1.98 with commit 940a71f08ef153ef807f751310b0648d1fa5d0da
	Fixed in 6.6.39 with commit 5502c1f1d0d7472706cc1f201aecf1c935d302d1
	Fixed in 6.9.9 with commit 818004f2a380420c19872171be716174d4985e33
	Fixed in 6.10 with commit c758b77d4a0a0ed3a1292b3fd7a2aeccd1a169a4

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2024-42152
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	drivers/nvme/target/core.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/2f3c22b1d3d7e86712253244797a651998c141fa
	https://git.kernel.org/stable/c/b4fed1443a6571d49c6ffe7d97af3bbe5ee6dff5
	https://git.kernel.org/stable/c/940a71f08ef153ef807f751310b0648d1fa5d0da
	https://git.kernel.org/stable/c/5502c1f1d0d7472706cc1f201aecf1c935d302d1
	https://git.kernel.org/stable/c/818004f2a380420c19872171be716174d4985e33
	https://git.kernel.org/stable/c/c758b77d4a0a0ed3a1292b3fd7a2aeccd1a169a4
