From bippy-5f407fcff5a0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2024-42105: nilfs2: fix inode number range checks

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

nilfs2: fix inode number range checks

Patch series "nilfs2: fix potential issues related to reserved inodes".

This series fixes one use-after-free issue reported by syzbot, caused by
nilfs2's internal inode being exposed in the namespace on a corrupted
filesystem, and a couple of flaws that cause problems if the starting
number of non-reserved inodes written in the on-disk super block is
intentionally (or corruptly) changed from its default value.  


This patch (of 3):

In the current implementation of nilfs2, "nilfs->ns_first_ino", which
gives the first non-reserved inode number, is read from the superblock,
but its lower limit is not checked.

As a result, if a number that overlaps with the inode number range of
reserved inodes such as the root directory or metadata files is set in the
super block parameter, the inode number test macros (NILFS_MDT_INODE and
NILFS_VALID_INODE) will not function properly.

In addition, these test macros use left bit-shift calculations using with
the inode number as the shift count via the BIT macro, but the result of a
shift calculation that exceeds the bit width of an integer is undefined in
the C specification, so if "ns_first_ino" is set to a large value other
than the default value NILFS_USER_INO (=11), the macros may potentially
malfunction depending on the environment.

Fix these issues by checking the lower bound of "nilfs->ns_first_ino" and
by preventing bit shifts equal to or greater than the NILFS_USER_INO
constant in the inode number test macros.

Also, change the type of "ns_first_ino" from signed integer to unsigned
integer to avoid the need for type casting in comparisons such as the
lower bound check introduced this time.

The Linux kernel CVE team has assigned CVE-2024-42105 to this issue.


Affected and fixed versions
===========================

	Fixed in 4.19.318 with commit 57235c3c88bb430043728d0d02f44a4efe386476
	Fixed in 5.4.280 with commit 08cab183a624ba71603f3754643ae11cab34dbc4
	Fixed in 5.10.222 with commit 731011ac6c37cbe97ece229fc6daa486276052c5
	Fixed in 5.15.163 with commit 3be4dcc8d7bea52ea41f87aa4bbf959efe7a5987
	Fixed in 6.1.98 with commit fae1959d6ab2c52677b113935e36ab4e25df37ea
	Fixed in 6.6.39 with commit 9194f8ca57527958bee207919458e372d638d783
	Fixed in 6.9.9 with commit 1c91058425a01131ea30dda6cf43c67b17884d6a
	Fixed in 6.10 with commit e2fec219a36e0993642844be0f345513507031f4

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2024-42105
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	fs/nilfs2/nilfs.h
	fs/nilfs2/the_nilfs.c
	fs/nilfs2/the_nilfs.h


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/57235c3c88bb430043728d0d02f44a4efe386476
	https://git.kernel.org/stable/c/08cab183a624ba71603f3754643ae11cab34dbc4
	https://git.kernel.org/stable/c/731011ac6c37cbe97ece229fc6daa486276052c5
	https://git.kernel.org/stable/c/3be4dcc8d7bea52ea41f87aa4bbf959efe7a5987
	https://git.kernel.org/stable/c/fae1959d6ab2c52677b113935e36ab4e25df37ea
	https://git.kernel.org/stable/c/9194f8ca57527958bee207919458e372d638d783
	https://git.kernel.org/stable/c/1c91058425a01131ea30dda6cf43c67b17884d6a
	https://git.kernel.org/stable/c/e2fec219a36e0993642844be0f345513507031f4
