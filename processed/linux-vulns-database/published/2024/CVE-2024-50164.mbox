From bippy-5f407fcff5a0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2024-50164: bpf: Fix overloading of MEM_UNINIT's meaning

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

bpf: Fix overloading of MEM_UNINIT's meaning

Lonial reported an issue in the BPF verifier where check_mem_size_reg()
has the following code:

    if (!tnum_is_const(reg->var_off))
        /* For unprivileged variable accesses, disable raw
         * mode so that the program is required to
         * initialize all the memory that the helper could
         * just partially fill up.
         */
         meta = NULL;

This means that writes are not checked when the register containing the
size of the passed buffer has not a fixed size. Through this bug, a BPF
program can write to a map which is marked as read-only, for example,
.rodata global maps.

The problem is that MEM_UNINIT's initial meaning that "the passed buffer
to the BPF helper does not need to be initialized" which was added back
in commit 435faee1aae9 ("bpf, verifier: add ARG_PTR_TO_RAW_STACK type")
got overloaded over time with "the passed buffer is being written to".

The problem however is that checks such as the above which were added later
via 06c1c049721a ("bpf: allow helpers access to variable memory") set meta
to NULL in order force the user to always initialize the passed buffer to
the helper. Due to the current double meaning of MEM_UNINIT, this bypasses
verifier write checks to the memory (not boundary checks though) and only
assumes the latter memory is read instead.

Fix this by reverting MEM_UNINIT back to its original meaning, and having
MEM_WRITE as an annotation to BPF helpers in order to then trigger the
BPF verifier checks for writing to memory.

Some notes: check_arg_pair_ok() ensures that for ARG_CONST_SIZE{,_OR_ZERO}
we can access fn->arg_type[arg - 1] since it must contain a preceding
ARG_PTR_TO_MEM. For check_mem_reg() the meta argument can be removed
altogether since we do check both BPF_READ and BPF_WRITE. Same for the
equivalent check_kfunc_mem_size_reg().

The Linux kernel CVE team has assigned CVE-2024-50164 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 5.19 with commit 7b3552d3f9f6897851fc453b5131a967167e43c2 and fixed in 6.1.125 with commit 43f4df339a4d375bedcad29a61ae6f0ee7a048f8
	Issue introduced in 5.19 with commit 7b3552d3f9f6897851fc453b5131a967167e43c2 and fixed in 6.6.59 with commit 48068ccaea957469f1adf78dfd2c1c9a7e18f0fe
	Issue introduced in 5.19 with commit 7b3552d3f9f6897851fc453b5131a967167e43c2 and fixed in 6.11.6 with commit 54bc31682660810af1bed7ca7a19f182df8d3df8
	Issue introduced in 5.19 with commit 7b3552d3f9f6897851fc453b5131a967167e43c2 and fixed in 6.12 with commit 8ea607330a39184f51737c6ae706db7fdca7628e
	Issue introduced in 5.15.45 with commit 6099a6c8a749a5c8d5f8b4c4342022a92072a02b
	Issue introduced in 5.17.13 with commit bfe25df63048edd4ceaf78a2fc755d5e2befc978
	Issue introduced in 5.18.2 with commit 717c39718dbc4f7ebcbb7b625fb11851cd9007fe
	Issue introduced in 5.15.45 with commit 5d0bba8232bf22ce13747cbfc8f696318ff01a50
	Issue introduced in 5.17.13 with commit 70674d11d14eeecad90be4b409a22b902112ba32
	Issue introduced in 5.18.2 with commit a08d942ecbf46e23a192093f6983cb1d779f4fa8

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2024-50164
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	kernel/bpf/verifier.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/43f4df339a4d375bedcad29a61ae6f0ee7a048f8
	https://git.kernel.org/stable/c/48068ccaea957469f1adf78dfd2c1c9a7e18f0fe
	https://git.kernel.org/stable/c/54bc31682660810af1bed7ca7a19f182df8d3df8
	https://git.kernel.org/stable/c/8ea607330a39184f51737c6ae706db7fdca7628e
