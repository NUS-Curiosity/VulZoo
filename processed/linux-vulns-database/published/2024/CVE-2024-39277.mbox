From bippy-5f407fcff5a0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2024-39277: dma-mapping: benchmark: handle NUMA_NO_NODE correctly

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

dma-mapping: benchmark: handle NUMA_NO_NODE correctly

cpumask_of_node() can be called for NUMA_NO_NODE inside do_map_benchmark()
resulting in the following sanitizer report:

UBSAN: array-index-out-of-bounds in ./arch/x86/include/asm/topology.h:72:28
index -1 is out of range for type 'cpumask [64][1]'
CPU: 1 PID: 990 Comm: dma_map_benchma Not tainted 6.9.0-rc6 #29
Hardware name: QEMU Standard PC (i440FX + PIIX, 1996)
Call Trace:
 <TASK>
dump_stack_lvl (lib/dump_stack.c:117)
ubsan_epilogue (lib/ubsan.c:232)
__ubsan_handle_out_of_bounds (lib/ubsan.c:429)
cpumask_of_node (arch/x86/include/asm/topology.h:72) [inline]
do_map_benchmark (kernel/dma/map_benchmark.c:104)
map_benchmark_ioctl (kernel/dma/map_benchmark.c:246)
full_proxy_unlocked_ioctl (fs/debugfs/file.c:333)
__x64_sys_ioctl (fs/ioctl.c:890)
do_syscall_64 (arch/x86/entry/common.c:83)
entry_SYSCALL_64_after_hwframe (arch/x86/entry/entry_64.S:130)

Use cpumask_of_node() in place when binding a kernel thread to a cpuset
of a particular node.

Note that the provided node id is checked inside map_benchmark_ioctl().
It's just a NUMA_NO_NODE case which is not handled properly later.

Found by Linux Verification Center (linuxtesting.org).

The Linux kernel CVE team has assigned CVE-2024-39277 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 5.11 with commit 65789daa8087e125927230ccb7e1eab13999b0cf and fixed in 5.15.161 with commit b41b0018e8ca06e985e87220a618ec633988fd13
	Issue introduced in 5.11 with commit 65789daa8087e125927230ccb7e1eab13999b0cf and fixed in 6.1.93 with commit 8e1ba9df9a35e8dc64f657a64e523c79ba01e464
	Issue introduced in 5.11 with commit 65789daa8087e125927230ccb7e1eab13999b0cf and fixed in 6.6.33 with commit 5a91116b003175302f2e6ad94b76fb9b5a141a41
	Issue introduced in 5.11 with commit 65789daa8087e125927230ccb7e1eab13999b0cf and fixed in 6.9.4 with commit 50ee21bfc005e69f183d6b4b454e33f0c2571e1f
	Issue introduced in 5.11 with commit 65789daa8087e125927230ccb7e1eab13999b0cf and fixed in 6.10 with commit e64746e74f717961250a155e14c156616fcd981f

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2024-39277
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	kernel/dma/map_benchmark.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/b41b0018e8ca06e985e87220a618ec633988fd13
	https://git.kernel.org/stable/c/8e1ba9df9a35e8dc64f657a64e523c79ba01e464
	https://git.kernel.org/stable/c/5a91116b003175302f2e6ad94b76fb9b5a141a41
	https://git.kernel.org/stable/c/50ee21bfc005e69f183d6b4b454e33f0c2571e1f
	https://git.kernel.org/stable/c/e64746e74f717961250a155e14c156616fcd981f
