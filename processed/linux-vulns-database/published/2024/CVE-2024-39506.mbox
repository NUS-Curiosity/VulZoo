From bippy-5f407fcff5a0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2024-39506: liquidio: Adjust a NULL pointer handling path in lio_vf_rep_copy_packet

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

liquidio: Adjust a NULL pointer handling path in lio_vf_rep_copy_packet

In lio_vf_rep_copy_packet() pg_info->page is compared to a NULL value,
but then it is unconditionally passed to skb_add_rx_frag() which looks
strange and could lead to null pointer dereference.

lio_vf_rep_copy_packet() call trace looks like:
	octeon_droq_process_packets
	 octeon_droq_fast_process_packets
	  octeon_droq_dispatch_pkt
	   octeon_create_recv_info
	    ...search in the dispatch_list...
	     ->disp_fn(rdisp->rinfo, ...)
	      lio_vf_rep_pkt_recv(struct octeon_recv_info *recv_info, ...)
In this path there is no code which sets pg_info->page to NULL.
So this check looks unneeded and doesn't solve potential problem.
But I guess the author had reason to add a check and I have no such card
and can't do real test.
In addition, the code in the function liquidio_push_packet() in
liquidio/lio_core.c does exactly the same.

Based on this, I consider the most acceptable compromise solution to
adjust this issue by moving skb_add_rx_frag() into conditional scope.

Found by Linux Verification Center (linuxtesting.org) with SVACE.

The Linux kernel CVE team has assigned CVE-2024-39506 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 4.15 with commit 1f233f327913f3dee0602cba9c64df1903772b55 and fixed in 4.19.317 with commit 87d6bdc006f0cbf297a3b2ad6e40ede4c3ee5dc2
	Issue introduced in 4.15 with commit 1f233f327913f3dee0602cba9c64df1903772b55 and fixed in 5.4.279 with commit dcc7440f32c7a26b067aff6e7d931ec593024a79
	Issue introduced in 4.15 with commit 1f233f327913f3dee0602cba9c64df1903772b55 and fixed in 5.10.221 with commit cbf18d8128a753cb632bef39470d19befd9c7347
	Issue introduced in 4.15 with commit 1f233f327913f3dee0602cba9c64df1903772b55 and fixed in 5.15.162 with commit a86490a3712cc513113440a606a0e77130abd47c
	Issue introduced in 4.15 with commit 1f233f327913f3dee0602cba9c64df1903772b55 and fixed in 6.1.95 with commit f1ab15a09492a5ae8ab1e2c35ba2cf9e150d25ee
	Issue introduced in 4.15 with commit 1f233f327913f3dee0602cba9c64df1903772b55 and fixed in 6.6.35 with commit fd2b613bc4c508e55c1221c6595bb889812a4fea
	Issue introduced in 4.15 with commit 1f233f327913f3dee0602cba9c64df1903772b55 and fixed in 6.9.6 with commit a6f4d0ec170a46b5f453cacf55dff5989b42bbfa
	Issue introduced in 4.15 with commit 1f233f327913f3dee0602cba9c64df1903772b55 and fixed in 6.10 with commit c44711b78608c98a3e6b49ce91678cd0917d5349

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2024-39506
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	drivers/net/ethernet/cavium/liquidio/lio_vf_rep.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/87d6bdc006f0cbf297a3b2ad6e40ede4c3ee5dc2
	https://git.kernel.org/stable/c/dcc7440f32c7a26b067aff6e7d931ec593024a79
	https://git.kernel.org/stable/c/cbf18d8128a753cb632bef39470d19befd9c7347
	https://git.kernel.org/stable/c/a86490a3712cc513113440a606a0e77130abd47c
	https://git.kernel.org/stable/c/f1ab15a09492a5ae8ab1e2c35ba2cf9e150d25ee
	https://git.kernel.org/stable/c/fd2b613bc4c508e55c1221c6595bb889812a4fea
	https://git.kernel.org/stable/c/a6f4d0ec170a46b5f453cacf55dff5989b42bbfa
	https://git.kernel.org/stable/c/c44711b78608c98a3e6b49ce91678cd0917d5349
