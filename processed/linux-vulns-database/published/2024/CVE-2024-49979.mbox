From bippy-5f407fcff5a0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2024-49979: net: gso: fix tcp fraglist segmentation after pull from frag_list

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

net: gso: fix tcp fraglist segmentation after pull from frag_list

Detect tcp gso fraglist skbs with corrupted geometry (see below) and
pass these to skb_segment instead of skb_segment_list, as the first
can segment them correctly.

Valid SKB_GSO_FRAGLIST skbs
- consist of two or more segments
- the head_skb holds the protocol headers plus first gso_size
- one or more frag_list skbs hold exactly one segment
- all but the last must be gso_size

Optional datapath hooks such as NAT and BPF (bpf_skb_pull_data) can
modify these skbs, breaking these invariants.

In extreme cases they pull all data into skb linear. For TCP, this
causes a NULL ptr deref in __tcpv4_gso_segment_list_csum at
tcp_hdr(seg->next).

Detect invalid geometry due to pull, by checking head_skb size.
Don't just drop, as this may blackhole a destination. Convert to be
able to pass to regular skb_segment.

Approach and description based on a patch by Willem de Bruijn.

The Linux kernel CVE team has assigned CVE-2024-49979 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 6.10 with commit bee88cd5bd83d40b8aec4d6cb729378f707f6197 and fixed in 6.10.14 with commit 3fdd8c83e83fa5e82f1b5585245c51e0355c9f46
	Issue introduced in 6.10 with commit bee88cd5bd83d40b8aec4d6cb729378f707f6197 and fixed in 6.11.3 with commit 2d4a83a44428de45bfe9dccb0192a3711d1097e0
	Issue introduced in 6.10 with commit bee88cd5bd83d40b8aec4d6cb729378f707f6197 and fixed in 6.12 with commit 17bd3bd82f9f79f3feba15476c2b2c95a9b11ff8

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2024-49979
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	net/ipv4/tcp_offload.c
	net/ipv6/tcpv6_offload.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/3fdd8c83e83fa5e82f1b5585245c51e0355c9f46
	https://git.kernel.org/stable/c/2d4a83a44428de45bfe9dccb0192a3711d1097e0
	https://git.kernel.org/stable/c/17bd3bd82f9f79f3feba15476c2b2c95a9b11ff8
