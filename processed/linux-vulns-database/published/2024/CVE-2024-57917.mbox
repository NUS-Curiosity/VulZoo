From bippy-5f407fcff5a0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2024-57917: topology: Keep the cpumask unchanged when printing cpumap

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

topology: Keep the cpumask unchanged when printing cpumap

During fuzz testing, the following warning was discovered:

 different return values (15 and 11) from vsnprintf("%*pbl
 ", ...)

 test:keyward is WARNING in kvasprintf
 WARNING: CPU: 55 PID: 1168477 at lib/kasprintf.c:30 kvasprintf+0x121/0x130
 Call Trace:
  kvasprintf+0x121/0x130
  kasprintf+0xa6/0xe0
  bitmap_print_to_buf+0x89/0x100
  core_siblings_list_read+0x7e/0xb0
  kernfs_file_read_iter+0x15b/0x270
  new_sync_read+0x153/0x260
  vfs_read+0x215/0x290
  ksys_read+0xb9/0x160
  do_syscall_64+0x56/0x100
  entry_SYSCALL_64_after_hwframe+0x78/0xe2

The call trace shows that kvasprintf() reported this warning during the
printing of core_siblings_list. kvasprintf() has several steps:

 (1) First, calculate the length of the resulting formatted string.

 (2) Allocate a buffer based on the returned length.

 (3) Then, perform the actual string formatting.

 (4) Check whether the lengths of the formatted strings returned in
     steps (1) and (2) are consistent.

If the core_cpumask is modified between steps (1) and (3), the lengths
obtained in these two steps may not match. Indeed our test includes cpu
hotplugging, which should modify core_cpumask while printing.

To fix this issue, cache the cpumask into a temporary variable before
calling cpumap_print_{list, cpumask}_to_buf(), to keep it unchanged
during the printing process.

The Linux kernel CVE team has assigned CVE-2024-57917 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 5.15 with commit bb9ec13d156e85dfd6a8afd0bb61ccf5736ed257 and fixed in 5.15.177 with commit 1c7818e2746e747838a3de1687e89eac7b947f08
	Issue introduced in 5.15 with commit bb9ec13d156e85dfd6a8afd0bb61ccf5736ed257 and fixed in 6.1.125 with commit ca47e933a900492d89dcf5db18a99c28bd4a742d
	Issue introduced in 5.15 with commit bb9ec13d156e85dfd6a8afd0bb61ccf5736ed257 and fixed in 6.6.72 with commit b02cf1d27e460ab2b3e1c8c9ce472d562cad2e8d
	Issue introduced in 5.15 with commit bb9ec13d156e85dfd6a8afd0bb61ccf5736ed257 and fixed in 6.12.10 with commit 360596e7fe319a5db1b5fb34a3952862ae53c924
	Issue introduced in 5.15 with commit bb9ec13d156e85dfd6a8afd0bb61ccf5736ed257 and fixed in 6.13 with commit cbd399f78e23ad4492c174fc5e6b3676dba74a52

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2024-57917
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	drivers/base/topology.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/1c7818e2746e747838a3de1687e89eac7b947f08
	https://git.kernel.org/stable/c/ca47e933a900492d89dcf5db18a99c28bd4a742d
	https://git.kernel.org/stable/c/b02cf1d27e460ab2b3e1c8c9ce472d562cad2e8d
	https://git.kernel.org/stable/c/360596e7fe319a5db1b5fb34a3952862ae53c924
	https://git.kernel.org/stable/c/cbd399f78e23ad4492c174fc5e6b3676dba74a52
