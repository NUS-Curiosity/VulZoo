From bippy-5f407fcff5a0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2024-46864: x86/hyperv: fix kexec crash due to VP assist page corruption

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

x86/hyperv: fix kexec crash due to VP assist page corruption

commit 9636be85cc5b ("x86/hyperv: Fix hyperv_pcpu_input_arg handling when
CPUs go online/offline") introduces a new cpuhp state for hyperv
initialization.

cpuhp_setup_state() returns the state number if state is
CPUHP_AP_ONLINE_DYN or CPUHP_BP_PREPARE_DYN and 0 for all other states.
For the hyperv case, since a new cpuhp state was introduced it would
return 0. However, in hv_machine_shutdown(), the cpuhp_remove_state() call
is conditioned upon "hyperv_init_cpuhp > 0". This will never be true and
so hv_cpu_die() won't be called on all CPUs. This means the VP assist page
won't be reset. When the kexec kernel tries to setup the VP assist page
again, the hypervisor corrupts the memory region of the old VP assist page
causing a panic in case the kexec kernel is using that memory elsewhere.
This was originally fixed in commit dfe94d4086e4 ("x86/hyperv: Fix kexec
panic/hang issues").

Get rid of hyperv_init_cpuhp entirely since we are no longer using a
dynamic cpuhp state and use CPUHP_AP_HYPERV_ONLINE directly with
cpuhp_remove_state().

The Linux kernel CVE team has assigned CVE-2024-46864 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 6.4 with commit 9636be85cc5bdd8b7a7f6a53405cbcc52161c93c and fixed in 6.6.52 with commit 2ae1beb3ab4f28868cc5d1541d05e1fbee3ad825
	Issue introduced in 6.4 with commit 9636be85cc5bdd8b7a7f6a53405cbcc52161c93c and fixed in 6.10.11 with commit d6f018a3b49d0a94ddbd0e479c2af6b19724e434
	Issue introduced in 6.4 with commit 9636be85cc5bdd8b7a7f6a53405cbcc52161c93c and fixed in 6.11 with commit b9af6418279c4cf73ca073f8ea024992b38be8ab

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2024-46864
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	arch/x86/hyperv/hv_init.c
	arch/x86/include/asm/mshyperv.h
	arch/x86/kernel/cpu/mshyperv.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/2ae1beb3ab4f28868cc5d1541d05e1fbee3ad825
	https://git.kernel.org/stable/c/d6f018a3b49d0a94ddbd0e479c2af6b19724e434
	https://git.kernel.org/stable/c/b9af6418279c4cf73ca073f8ea024992b38be8ab
