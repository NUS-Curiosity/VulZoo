{
   "containers": {
      "cna": {
         "providerMetadata": {
            "orgId": "f4215fc3-5b6b-47ff-a258-f7189bd81038"
         },
         "descriptions": [
            {
               "lang": "en",
               "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nio_uring/rw: fix missing NOWAIT check for O_DIRECT start write\n\nWhen io_uring starts a write, it'll call kiocb_start_write() to bump the\nsuper block rwsem, preventing any freezes from happening while that\nwrite is in-flight. The freeze side will grab that rwsem for writing,\nexcluding any new writers from happening and waiting for existing writes\nto finish. But io_uring unconditionally uses kiocb_start_write(), which\nwill block if someone is currently attempting to freeze the mount point.\nThis causes a deadlock where freeze is waiting for previous writes to\ncomplete, but the previous writes cannot complete, as the task that is\nsupposed to complete them is blocked waiting on starting a new write.\nThis results in the following stuck trace showing that dependency with\nthe write blocked starting a new write:\n\ntask:fio             state:D stack:0     pid:886   tgid:886   ppid:876\nCall trace:\n __switch_to+0x1d8/0x348\n __schedule+0x8e8/0x2248\n schedule+0x110/0x3f0\n percpu_rwsem_wait+0x1e8/0x3f8\n __percpu_down_read+0xe8/0x500\n io_write+0xbb8/0xff8\n io_issue_sqe+0x10c/0x1020\n io_submit_sqes+0x614/0x2110\n __arm64_sys_io_uring_enter+0x524/0x1038\n invoke_syscall+0x74/0x268\n el0_svc_common.constprop.0+0x160/0x238\n do_el0_svc+0x44/0x60\n el0_svc+0x44/0xb0\n el0t_64_sync_handler+0x118/0x128\n el0t_64_sync+0x168/0x170\nINFO: task fsfreeze:7364 blocked for more than 15 seconds.\n      Not tainted 6.12.0-rc5-00063-g76aaf945701c #7963\n\nwith the attempting freezer stuck trying to grab the rwsem:\n\ntask:fsfreeze        state:D stack:0     pid:7364  tgid:7364  ppid:995\nCall trace:\n __switch_to+0x1d8/0x348\n __schedule+0x8e8/0x2248\n schedule+0x110/0x3f0\n percpu_down_write+0x2b0/0x680\n freeze_super+0x248/0x8a8\n do_vfs_ioctl+0x149c/0x1b18\n __arm64_sys_ioctl+0xd0/0x1a0\n invoke_syscall+0x74/0x268\n el0_svc_common.constprop.0+0x160/0x238\n do_el0_svc+0x44/0x60\n el0_svc+0x44/0xb0\n el0t_64_sync_handler+0x118/0x128\n el0t_64_sync+0x168/0x170\n\nFix this by having the io_uring side honor IOCB_NOWAIT, and only attempt a\nblocking grab of the super block rwsem if it isn't set. For normal issue\nwhere IOCB_NOWAIT would always be set, this returns -EAGAIN which will\nhave io_uring core issue a blocking attempt of the write. That will in\nturn also get completions run, ensuring forward progress.\n\nSince freezing requires CAP_SYS_ADMIN in the first place, this isn't\nsomething that can be triggered by a regular user."
            }
         ],
         "affected": [
            {
               "product": "Linux",
               "vendor": "Linux",
               "defaultStatus": "unaffected",
               "repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
               "programFiles": [
                  "io_uring/rw.c"
               ],
               "versions": [
                  {
                     "version": "2b188cc1bb857a9d4701ae59aa7768b5124e262e",
                     "lessThan": "485d9232112b17f389b29497ff41b97b3189546b",
                     "status": "affected",
                     "versionType": "git"
                  },
                  {
                     "version": "2b188cc1bb857a9d4701ae59aa7768b5124e262e",
                     "lessThan": "4e24041ba86d50aaa4c792ae2c88ed01b3d96243",
                     "status": "affected",
                     "versionType": "git"
                  },
                  {
                     "version": "2b188cc1bb857a9d4701ae59aa7768b5124e262e",
                     "lessThan": "9e8debb8e51354b201db494689198078ec2c1e75",
                     "status": "affected",
                     "versionType": "git"
                  },
                  {
                     "version": "2b188cc1bb857a9d4701ae59aa7768b5124e262e",
                     "lessThan": "003d2996964c03dfd34860500428f4cdf1f5879e",
                     "status": "affected",
                     "versionType": "git"
                  },
                  {
                     "version": "2b188cc1bb857a9d4701ae59aa7768b5124e262e",
                     "lessThan": "26b8c48f369b7591f5679e0b90612f4862a32929",
                     "status": "affected",
                     "versionType": "git"
                  },
                  {
                     "version": "2b188cc1bb857a9d4701ae59aa7768b5124e262e",
                     "lessThan": "1d60d74e852647255bd8e76f5a22dc42531e4389",
                     "status": "affected",
                     "versionType": "git"
                  }
               ]
            },
            {
               "product": "Linux",
               "vendor": "Linux",
               "defaultStatus": "affected",
               "repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
               "programFiles": [
                  "io_uring/rw.c"
               ],
               "versions": [
                  {
                     "version": "5.1",
                     "status": "affected"
                  },
                  {
                     "version": "0",
                     "lessThan": "5.1",
                     "status": "unaffected",
                     "versionType": "semver"
                  },
                  {
                     "version": "5.10.230",
                     "lessThanOrEqual": "5.10.*",
                     "status": "unaffected",
                     "versionType": "semver"
                  },
                  {
                     "version": "5.15.172",
                     "lessThanOrEqual": "5.15.*",
                     "status": "unaffected",
                     "versionType": "semver"
                  },
                  {
                     "version": "6.1.116",
                     "lessThanOrEqual": "6.1.*",
                     "status": "unaffected",
                     "versionType": "semver"
                  },
                  {
                     "version": "6.6.60",
                     "lessThanOrEqual": "6.6.*",
                     "status": "unaffected",
                     "versionType": "semver"
                  },
                  {
                     "version": "6.11.7",
                     "lessThanOrEqual": "6.11.*",
                     "status": "unaffected",
                     "versionType": "semver"
                  },
                  {
                     "version": "6.12",
                     "lessThanOrEqual": "*",
                     "status": "unaffected",
                     "versionType": "original_commit_for_fix"
                  }
               ]
            }
         ],
         "references": [
            {
               "url": "https://git.kernel.org/stable/c/485d9232112b17f389b29497ff41b97b3189546b"
            },
            {
               "url": "https://git.kernel.org/stable/c/4e24041ba86d50aaa4c792ae2c88ed01b3d96243"
            },
            {
               "url": "https://git.kernel.org/stable/c/9e8debb8e51354b201db494689198078ec2c1e75"
            },
            {
               "url": "https://git.kernel.org/stable/c/003d2996964c03dfd34860500428f4cdf1f5879e"
            },
            {
               "url": "https://git.kernel.org/stable/c/26b8c48f369b7591f5679e0b90612f4862a32929"
            },
            {
               "url": "https://git.kernel.org/stable/c/1d60d74e852647255bd8e76f5a22dc42531e4389"
            }
         ],
         "title": "io_uring/rw: fix missing NOWAIT check for O_DIRECT start write",
         "x_generator": {
            "engine": "bippy-5f407fcff5a0"
         }
      }
   },
   "cveMetadata": {
      "assignerOrgId": "f4215fc3-5b6b-47ff-a258-f7189bd81038",
      "cveID": "CVE-2024-53052",
      "requesterUserId": "gregkh@kernel.org",
      "serial": "1",
      "state": "PUBLISHED"
   },
   "dataType": "CVE_RECORD",
   "dataVersion": "5.0"
}
