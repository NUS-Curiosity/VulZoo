From bippy-5f407fcff5a0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2024-50015: ext4: dax: fix overflowing extents beyond inode size when partially writing

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

ext4: dax: fix overflowing extents beyond inode size when partially writing

The dax_iomap_rw() does two things in each iteration: map written blocks
and copy user data to blocks. If the process is killed by user(See signal
handling in dax_iomap_iter()), the copied data will be returned and added
on inode size, which means that the length of written extents may exceed
the inode size, then fsck will fail. An example is given as:

dd if=/dev/urandom of=file bs=4M count=1
 dax_iomap_rw
  iomap_iter // round 1
   ext4_iomap_begin
    ext4_iomap_alloc // allocate 0~2M extents(written flag)
  dax_iomap_iter // copy 2M data
  iomap_iter // round 2
   iomap_iter_advance
    iter->pos += iter->processed // iter->pos = 2M
   ext4_iomap_begin
    ext4_iomap_alloc // allocate 2~4M extents(written flag)
  dax_iomap_iter
   fatal_signal_pending
  done = iter->pos - iocb->ki_pos // done = 2M
 ext4_handle_inode_extension
  ext4_update_inode_size // inode size = 2M

fsck reports: Inode 13, i_size is 2097152, should be 4194304.  Fix?

Fix the problem by truncating extents if the written length is smaller
than expected.

The Linux kernel CVE team has assigned CVE-2024-50015 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 4.10 with commit 776722e85d3b0936253ecc3d14db4fba37f191ba and fixed in 5.10.227 with commit f8a7c342326f6ad1dfdb30a18dd013c70f5e9669
	Issue introduced in 4.10 with commit 776722e85d3b0936253ecc3d14db4fba37f191ba and fixed in 5.15.168 with commit 8c30a9a8610c314554997f86370140746aa35661
	Issue introduced in 4.10 with commit 776722e85d3b0936253ecc3d14db4fba37f191ba and fixed in 6.1.113 with commit abfaa876b948baaea4d14f21a1963789845c8b4c
	Issue introduced in 4.10 with commit 776722e85d3b0936253ecc3d14db4fba37f191ba and fixed in 6.6.55 with commit 5efccdee4a7d507a483f20f880b809cc4eaef14d
	Issue introduced in 4.10 with commit 776722e85d3b0936253ecc3d14db4fba37f191ba and fixed in 6.10.14 with commit a9f331f51515bdb3ebc8d0963131af367ef468f6
	Issue introduced in 4.10 with commit 776722e85d3b0936253ecc3d14db4fba37f191ba and fixed in 6.11.3 with commit ec0dd451e236c46e4858d53e9e82bae7797a7af5
	Issue introduced in 4.10 with commit 776722e85d3b0936253ecc3d14db4fba37f191ba and fixed in 6.12 with commit dda898d7ffe85931f9cca6d702a51f33717c501e

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2024-50015
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	fs/ext4/file.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/f8a7c342326f6ad1dfdb30a18dd013c70f5e9669
	https://git.kernel.org/stable/c/8c30a9a8610c314554997f86370140746aa35661
	https://git.kernel.org/stable/c/abfaa876b948baaea4d14f21a1963789845c8b4c
	https://git.kernel.org/stable/c/5efccdee4a7d507a483f20f880b809cc4eaef14d
	https://git.kernel.org/stable/c/a9f331f51515bdb3ebc8d0963131af367ef468f6
	https://git.kernel.org/stable/c/ec0dd451e236c46e4858d53e9e82bae7797a7af5
	https://git.kernel.org/stable/c/dda898d7ffe85931f9cca6d702a51f33717c501e
