From bippy-5f407fcff5a0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2024-47757: nilfs2: fix potential oob read in nilfs_btree_check_delete()

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

nilfs2: fix potential oob read in nilfs_btree_check_delete()

The function nilfs_btree_check_delete(), which checks whether degeneration
to direct mapping occurs before deleting a b-tree entry, causes memory
access outside the block buffer when retrieving the maximum key if the
root node has no entries.

This does not usually happen because b-tree mappings with 0 child nodes
are never created by mkfs.nilfs2 or nilfs2 itself.  However, it can happen
if the b-tree root node read from a device is configured that way, so fix
this potential issue by adding a check for that case.

The Linux kernel CVE team has assigned CVE-2024-47757 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 2.6.30 with commit 17c76b0104e4a6513983777e1a17e0297a12b0c4 and fixed in 4.19.323 with commit f3a9859767c7aea758976f5523903d247e585129
	Issue introduced in 2.6.30 with commit 17c76b0104e4a6513983777e1a17e0297a12b0c4 and fixed in 5.4.285 with commit ed76d381dae125b81d09934e365391a656249da8
	Issue introduced in 2.6.30 with commit 17c76b0104e4a6513983777e1a17e0297a12b0c4 and fixed in 5.10.227 with commit d20674f31626e0596ae4c1d9401dfb6739b81b58
	Issue introduced in 2.6.30 with commit 17c76b0104e4a6513983777e1a17e0297a12b0c4 and fixed in 5.15.168 with commit c4f8554996e8ada3be872dfb8f60e93bcf15fb27
	Issue introduced in 2.6.30 with commit 17c76b0104e4a6513983777e1a17e0297a12b0c4 and fixed in 6.1.113 with commit a8abfda768b9f33630cfbc4af6c4214f1e5681b0
	Issue introduced in 2.6.30 with commit 17c76b0104e4a6513983777e1a17e0297a12b0c4 and fixed in 6.6.54 with commit 257f9e5185eb6de83377caea686c306e22e871f2
	Issue introduced in 2.6.30 with commit 17c76b0104e4a6513983777e1a17e0297a12b0c4 and fixed in 6.10.13 with commit a33e967b681e088a125b979975c93e3453e686cd
	Issue introduced in 2.6.30 with commit 17c76b0104e4a6513983777e1a17e0297a12b0c4 and fixed in 6.11.2 with commit c4cbcc64bb31e67e02940ce060cc77f7180564cf
	Issue introduced in 2.6.30 with commit 17c76b0104e4a6513983777e1a17e0297a12b0c4 and fixed in 6.12 with commit f9c96351aa6718b42a9f42eaf7adce0356bdb5e8

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2024-47757
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	fs/nilfs2/btree.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/f3a9859767c7aea758976f5523903d247e585129
	https://git.kernel.org/stable/c/ed76d381dae125b81d09934e365391a656249da8
	https://git.kernel.org/stable/c/d20674f31626e0596ae4c1d9401dfb6739b81b58
	https://git.kernel.org/stable/c/c4f8554996e8ada3be872dfb8f60e93bcf15fb27
	https://git.kernel.org/stable/c/a8abfda768b9f33630cfbc4af6c4214f1e5681b0
	https://git.kernel.org/stable/c/257f9e5185eb6de83377caea686c306e22e871f2
	https://git.kernel.org/stable/c/a33e967b681e088a125b979975c93e3453e686cd
	https://git.kernel.org/stable/c/c4cbcc64bb31e67e02940ce060cc77f7180564cf
	https://git.kernel.org/stable/c/f9c96351aa6718b42a9f42eaf7adce0356bdb5e8
