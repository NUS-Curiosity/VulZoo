From bippy-5f407fcff5a0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2024-53152: PCI: tegra194: Move controller cleanups to pex_ep_event_pex_rst_deassert()

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

PCI: tegra194: Move controller cleanups to pex_ep_event_pex_rst_deassert()

Currently, the endpoint cleanup function dw_pcie_ep_cleanup() and EPF
deinit notify function pci_epc_deinit_notify() are called during the
execution of pex_ep_event_pex_rst_assert() i.e., when the host has asserted
PERST#. But quickly after this step, refclk will also be disabled by the
host.

All of the tegra194 endpoint SoCs supported as of now depend on the refclk
from the host for keeping the controller operational. Due to this
limitation, any access to the hardware registers in the absence of refclk
will result in a whole endpoint crash. Unfortunately, most of the
controller cleanups require accessing the hardware registers (like eDMA
cleanup performed in dw_pcie_ep_cleanup(), etc...). So these cleanup
functions can cause the crash in the endpoint SoC once host asserts PERST#.

One way to address this issue is by generating the refclk in the endpoint
itself and not depending on the host. But that is not always possible as
some of the endpoint designs do require the endpoint to consume refclk from
the host.

Thus, fix this crash by moving the controller cleanups to the start of
the pex_ep_event_pex_rst_deassert() function. This function is called
whenever the host has deasserted PERST# and it is guaranteed that the
refclk would be active at this point. So at the start of this function
(after enabling resources) the controller cleanup can be performed. Once
finished, rest of the code execution for PERST# deassert can continue as
usual.

The Linux kernel CVE team has assigned CVE-2024-53152 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 6.10 with commit 570d7715eed8a29ac5bd96c7694f060a991e5a31 and fixed in 6.11.11 with commit 70212c2300971506e986d95000d2745529cac9d7
	Issue introduced in 6.10 with commit 570d7715eed8a29ac5bd96c7694f060a991e5a31 and fixed in 6.12.2 with commit 72034050ccf4202cd6558b0afd2474f756ea3b9b
	Issue introduced in 6.10 with commit 570d7715eed8a29ac5bd96c7694f060a991e5a31 and fixed in 6.13 with commit 40e2125381dc11379112485e3eefdd25c6df5375

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2024-53152
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	drivers/pci/controller/dwc/pcie-tegra194.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/70212c2300971506e986d95000d2745529cac9d7
	https://git.kernel.org/stable/c/72034050ccf4202cd6558b0afd2474f756ea3b9b
	https://git.kernel.org/stable/c/40e2125381dc11379112485e3eefdd25c6df5375
