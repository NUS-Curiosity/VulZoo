{
   "containers": {
      "cna": {
         "providerMetadata": {
            "orgId": "f4215fc3-5b6b-47ff-a258-f7189bd81038"
         },
         "descriptions": [
            {
               "lang": "en",
               "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nfsdax: dax_unshare_iter needs to copy entire blocks\n\nThe code that copies data from srcmap to iomap in dax_unshare_iter is\nvery very broken, which bfoster's recent fsx changes have exposed.\n\nIf the pos and len passed to dax_file_unshare are not aligned to an\nfsblock boundary, the iter pos and length in the _iter function will\nreflect this unalignment.\n\ndax_iomap_direct_access always returns a pointer to the start of the\nkmapped fsdax page, even if its pos argument is in the middle of that\npage.  This is catastrophic for data integrity when iter->pos is not\naligned to a page, because daddr/saddr do not point to the same byte in\nthe file as iter->pos.  Hence we corrupt user data by copying it to the\nwrong place.\n\nIf iter->pos + iomap_length() in the _iter function not aligned to a\npage, then we fail to copy a full block, and only partially populate the\ndestination block.  This is catastrophic for data confidentiality\nbecause we expose stale pmem contents.\n\nFix both of these issues by aligning copy_pos/copy_len to a page\nboundary (remember, this is fsdax so 1 fsblock == 1 base page) so that\nwe always copy full blocks.\n\nWe're not done yet -- there's no call to invalidate_inode_pages2_range,\nso programs that have the file range mmap'd will continue accessing the\nold memory mapping after the file metadata updates have completed.\n\nBe careful with the return value -- if the unshare succeeds, we still\nneed to return the number of bytes that the iomap iter thinks we're\noperating on."
            }
         ],
         "affected": [
            {
               "product": "Linux",
               "vendor": "Linux",
               "defaultStatus": "unaffected",
               "repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
               "programFiles": [
                  "fs/dax.c"
               ],
               "versions": [
                  {
                     "version": "1bec6782a25c9b92c203ea7a1b3e3dc6a468cbc4",
                     "lessThan": "bdbc96c23197d773a7d1bf03e4f11de593b0ff28",
                     "status": "affected",
                     "versionType": "git"
                  },
                  {
                     "version": "d984648e428bf88cbd94ebe346c73632cb92fffb",
                     "lessThan": "9bc18bb476e50e32e5d08f2734d63d63e0fa528c",
                     "status": "affected",
                     "versionType": "git"
                  },
                  {
                     "version": "d984648e428bf88cbd94ebe346c73632cb92fffb",
                     "lessThan": "8e9c0f500b42216ef930f5c0d1703989a451913d",
                     "status": "affected",
                     "versionType": "git"
                  },
                  {
                     "version": "d984648e428bf88cbd94ebe346c73632cb92fffb",
                     "lessThan": "50793801fc7f6d08def48754fb0f0706b0cfc394",
                     "status": "affected",
                     "versionType": "git"
                  }
               ]
            },
            {
               "product": "Linux",
               "vendor": "Linux",
               "defaultStatus": "affected",
               "repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
               "programFiles": [
                  "fs/dax.c"
               ],
               "versions": [
                  {
                     "version": "6.2",
                     "status": "affected"
                  },
                  {
                     "version": "0",
                     "lessThan": "6.2",
                     "status": "unaffected",
                     "versionType": "semver"
                  },
                  {
                     "version": "6.1.116",
                     "lessThanOrEqual": "6.1.*",
                     "status": "unaffected",
                     "versionType": "semver"
                  },
                  {
                     "version": "6.6.60",
                     "lessThanOrEqual": "6.6.*",
                     "status": "unaffected",
                     "versionType": "semver"
                  },
                  {
                     "version": "6.11.7",
                     "lessThanOrEqual": "6.11.*",
                     "status": "unaffected",
                     "versionType": "semver"
                  },
                  {
                     "version": "6.12",
                     "lessThanOrEqual": "*",
                     "status": "unaffected",
                     "versionType": "original_commit_for_fix"
                  }
               ]
            }
         ],
         "references": [
            {
               "url": "https://git.kernel.org/stable/c/bdbc96c23197d773a7d1bf03e4f11de593b0ff28"
            },
            {
               "url": "https://git.kernel.org/stable/c/9bc18bb476e50e32e5d08f2734d63d63e0fa528c"
            },
            {
               "url": "https://git.kernel.org/stable/c/8e9c0f500b42216ef930f5c0d1703989a451913d"
            },
            {
               "url": "https://git.kernel.org/stable/c/50793801fc7f6d08def48754fb0f0706b0cfc394"
            }
         ],
         "title": "fsdax: dax_unshare_iter needs to copy entire blocks",
         "x_generator": {
            "engine": "bippy-5f407fcff5a0"
         }
      }
   },
   "cveMetadata": {
      "assignerOrgId": "f4215fc3-5b6b-47ff-a258-f7189bd81038",
      "cveID": "CVE-2024-50250",
      "requesterUserId": "gregkh@kernel.org",
      "serial": "1",
      "state": "PUBLISHED"
   },
   "dataType": "CVE_RECORD",
   "dataVersion": "5.0"
}
