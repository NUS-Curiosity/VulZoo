From bippy-5f407fcff5a0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2024-49882: ext4: fix double brelse() the buffer of the extents path

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

ext4: fix double brelse() the buffer of the extents path

In ext4_ext_try_to_merge_up(), set path[1].p_bh to NULL after it has been
released, otherwise it may be released twice. An example of what triggers
this is as follows:

  split2    map    split1
|--------|-------|--------|

ext4_ext_map_blocks
 ext4_ext_handle_unwritten_extents
  ext4_split_convert_extents
   // path->p_depth == 0
   ext4_split_extent
     // 1. do split1
     ext4_split_extent_at
       |ext4_ext_insert_extent
       |  ext4_ext_create_new_leaf
       |    ext4_ext_grow_indepth
       |      le16_add_cpu(&neh->eh_depth, 1)
       |    ext4_find_extent
       |      // return -ENOMEM
       |// get error and try zeroout
       |path = ext4_find_extent
       |  path->p_depth = 1
       |ext4_ext_try_to_merge
       |  ext4_ext_try_to_merge_up
       |    path->p_depth = 0
       |    brelse(path[1].p_bh)  ---> not set to NULL here
       |// zeroout success
     // 2. update path
     ext4_find_extent
     // 3. do split2
     ext4_split_extent_at
       ext4_ext_insert_extent
         ext4_ext_create_new_leaf
           ext4_ext_grow_indepth
             le16_add_cpu(&neh->eh_depth, 1)
           ext4_find_extent
             path[0].p_bh = NULL;
             path->p_depth = 1
             read_extent_tree_block  ---> return err
             // path[1].p_bh is still the old value
             ext4_free_ext_path
               ext4_ext_drop_refs
                 // path->p_depth == 1
                 brelse(path[1].p_bh)  ---> brelse a buffer twice

Finally got the following WARRNING when removing the buffer from lru:

============================================
VFS: brelse: Trying to free free buffer
WARNING: CPU: 2 PID: 72 at fs/buffer.c:1241 __brelse+0x58/0x90
CPU: 2 PID: 72 Comm: kworker/u19:1 Not tainted 6.9.0-dirty #716
RIP: 0010:__brelse+0x58/0x90
Call Trace:
 <TASK>
 __find_get_block+0x6e7/0x810
 bdev_getblk+0x2b/0x480
 __ext4_get_inode_loc+0x48a/0x1240
 ext4_get_inode_loc+0xb2/0x150
 ext4_reserve_inode_write+0xb7/0x230
 __ext4_mark_inode_dirty+0x144/0x6a0
 ext4_ext_insert_extent+0x9c8/0x3230
 ext4_ext_map_blocks+0xf45/0x2dc0
 ext4_map_blocks+0x724/0x1700
 ext4_do_writepages+0x12d6/0x2a70
[...]
============================================

The Linux kernel CVE team has assigned CVE-2024-49882 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 3.7 with commit ecb94f5fdf4b72547fca022421a9dca1672bddd4 and fixed in 4.19.323 with commit d4574bda63906bf69660e001470bfe1a0ac524ae
	Issue introduced in 3.7 with commit ecb94f5fdf4b72547fca022421a9dca1672bddd4 and fixed in 5.4.285 with commit f9fd47c9d9548f9e47fa60098eab99dde175401d
	Issue introduced in 3.7 with commit ecb94f5fdf4b72547fca022421a9dca1672bddd4 and fixed in 5.10.227 with commit b6c29c8f3d7cb67b505f3b2f6c242d52298d1f2e
	Issue introduced in 3.7 with commit ecb94f5fdf4b72547fca022421a9dca1672bddd4 and fixed in 5.15.168 with commit 32bbb59e3f18facd7201bef110010bf35819b8c3
	Issue introduced in 3.7 with commit ecb94f5fdf4b72547fca022421a9dca1672bddd4 and fixed in 6.1.113 with commit 78bbc3d15b6f443acb26e94418c445bac940d414
	Issue introduced in 3.7 with commit ecb94f5fdf4b72547fca022421a9dca1672bddd4 and fixed in 6.6.55 with commit 68a69cf60660c73990c1875f94a5551600b04775
	Issue introduced in 3.7 with commit ecb94f5fdf4b72547fca022421a9dca1672bddd4 and fixed in 6.10.14 with commit 7633407ca4ab8be2916ab214eb44ccebc6a50e1a
	Issue introduced in 3.7 with commit ecb94f5fdf4b72547fca022421a9dca1672bddd4 and fixed in 6.11.3 with commit 230ee0535d01478bad9a3037292043f39b9be10b
	Issue introduced in 3.7 with commit ecb94f5fdf4b72547fca022421a9dca1672bddd4 and fixed in 6.12 with commit dcaa6c31134c0f515600111c38ed7750003e1b9c

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2024-49882
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	fs/ext4/extents.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/d4574bda63906bf69660e001470bfe1a0ac524ae
	https://git.kernel.org/stable/c/f9fd47c9d9548f9e47fa60098eab99dde175401d
	https://git.kernel.org/stable/c/b6c29c8f3d7cb67b505f3b2f6c242d52298d1f2e
	https://git.kernel.org/stable/c/32bbb59e3f18facd7201bef110010bf35819b8c3
	https://git.kernel.org/stable/c/78bbc3d15b6f443acb26e94418c445bac940d414
	https://git.kernel.org/stable/c/68a69cf60660c73990c1875f94a5551600b04775
	https://git.kernel.org/stable/c/7633407ca4ab8be2916ab214eb44ccebc6a50e1a
	https://git.kernel.org/stable/c/230ee0535d01478bad9a3037292043f39b9be10b
	https://git.kernel.org/stable/c/dcaa6c31134c0f515600111c38ed7750003e1b9c
