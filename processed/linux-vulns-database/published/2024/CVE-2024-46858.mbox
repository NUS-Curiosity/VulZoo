From bippy-5f407fcff5a0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2024-46858: mptcp: pm: Fix uaf in __timer_delete_sync

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

mptcp: pm: Fix uaf in __timer_delete_sync

There are two paths to access mptcp_pm_del_add_timer, result in a race
condition:

     CPU1				CPU2
     ====                               ====
     net_rx_action
     napi_poll                          netlink_sendmsg
     __napi_poll                        netlink_unicast
     process_backlog                    netlink_unicast_kernel
     __netif_receive_skb                genl_rcv
     __netif_receive_skb_one_core       netlink_rcv_skb
     NF_HOOK                            genl_rcv_msg
     ip_local_deliver_finish            genl_family_rcv_msg
     ip_protocol_deliver_rcu            genl_family_rcv_msg_doit
     tcp_v4_rcv                         mptcp_pm_nl_flush_addrs_doit
     tcp_v4_do_rcv                      mptcp_nl_remove_addrs_list
     tcp_rcv_established                mptcp_pm_remove_addrs_and_subflows
     tcp_data_queue                     remove_anno_list_by_saddr
     mptcp_incoming_options             mptcp_pm_del_add_timer
     mptcp_pm_del_add_timer             kfree(entry)

In remove_anno_list_by_saddr(running on CPU2), after leaving the critical
zone protected by "pm.lock", the entry will be released, which leads to the
occurrence of uaf in the mptcp_pm_del_add_timer(running on CPU1).

Keeping a reference to add_timer inside the lock, and calling
sk_stop_timer_sync() with this reference, instead of "entry->add_timer".

Move list_del(&entry->list) to mptcp_pm_del_add_timer and inside the pm lock,
do not directly access any members of the entry outside the pm lock, which
can avoid similar "entry->x" uaf.

The Linux kernel CVE team has assigned CVE-2024-46858 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 5.10 with commit 00cfd77b9063dcdf3628a7087faba60de85a9cc8 and fixed in 5.15.168 with commit 3554482f4691571fc4b5490c17ae26896e62171c
	Issue introduced in 5.10 with commit 00cfd77b9063dcdf3628a7087faba60de85a9cc8 and fixed in 6.1.111 with commit 67409b358500c71632116356a0b065f112d7b707
	Issue introduced in 5.10 with commit 00cfd77b9063dcdf3628a7087faba60de85a9cc8 and fixed in 6.6.52 with commit 6452b162549c7f9ef54655d3fb9977b9192e6e5b
	Issue introduced in 5.10 with commit 00cfd77b9063dcdf3628a7087faba60de85a9cc8 and fixed in 6.10.11 with commit 12134a652b0a10064844ea235173e70246eba6dc
	Issue introduced in 5.10 with commit 00cfd77b9063dcdf3628a7087faba60de85a9cc8 and fixed in 6.11 with commit b4cd80b0338945a94972ac3ed54f8338d2da2076

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2024-46858
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	net/mptcp/pm_netlink.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/3554482f4691571fc4b5490c17ae26896e62171c
	https://git.kernel.org/stable/c/67409b358500c71632116356a0b065f112d7b707
	https://git.kernel.org/stable/c/6452b162549c7f9ef54655d3fb9977b9192e6e5b
	https://git.kernel.org/stable/c/12134a652b0a10064844ea235173e70246eba6dc
	https://git.kernel.org/stable/c/b4cd80b0338945a94972ac3ed54f8338d2da2076
