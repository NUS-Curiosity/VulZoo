From bippy-5f407fcff5a0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2024-40947: ima: Avoid blocking in RCU read-side critical section

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

ima: Avoid blocking in RCU read-side critical section

A panic happens in ima_match_policy:

BUG: unable to handle kernel NULL pointer dereference at 0000000000000010
PGD 42f873067 P4D 0
Oops: 0000 [#1] SMP NOPTI
CPU: 5 PID: 1286325 Comm: kubeletmonit.sh
Kdump: loaded Tainted: P
Hardware name: QEMU Standard PC (i440FX + PIIX, 1996),
               BIOS 0.0.0 02/06/2015
RIP: 0010:ima_match_policy+0x84/0x450
Code: 49 89 fc 41 89 cf 31 ed 89 44 24 14 eb 1c 44 39
      7b 18 74 26 41 83 ff 05 74 20 48 8b 1b 48 3b 1d
      f2 b9 f4 00 0f 84 9c 01 00 00 <44> 85 73 10 74 ea
      44 8b 6b 14 41 f6 c5 01 75 d4 41 f6 c5 02 74 0f
RSP: 0018:ff71570009e07a80 EFLAGS: 00010207
RAX: 0000000000000000 RBX: 0000000000000000 RCX: 0000000000000200
RDX: ffffffffad8dc7c0 RSI: 0000000024924925 RDI: ff3e27850dea2000
RBP: 0000000000000000 R08: 0000000000000000 R09: ffffffffabfce739
R10: ff3e27810cc42400 R11: 0000000000000000 R12: ff3e2781825ef970
R13: 00000000ff3e2785 R14: 000000000000000c R15: 0000000000000001
FS:  00007f5195b51740(0000)
GS:ff3e278b12d40000(0000) knlGS:0000000000000000
CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
CR2: 0000000000000010 CR3: 0000000626d24002 CR4: 0000000000361ee0
DR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000
DR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400
Call Trace:
 ima_get_action+0x22/0x30
 process_measurement+0xb0/0x830
 ? page_add_file_rmap+0x15/0x170
 ? alloc_set_pte+0x269/0x4c0
 ? prep_new_page+0x81/0x140
 ? simple_xattr_get+0x75/0xa0
 ? selinux_file_open+0x9d/0xf0
 ima_file_check+0x64/0x90
 path_openat+0x571/0x1720
 do_filp_open+0x9b/0x110
 ? page_counter_try_charge+0x57/0xc0
 ? files_cgroup_alloc_fd+0x38/0x60
 ? __alloc_fd+0xd4/0x250
 ? do_sys_open+0x1bd/0x250
 do_sys_open+0x1bd/0x250
 do_syscall_64+0x5d/0x1d0
 entry_SYSCALL_64_after_hwframe+0x65/0xca

Commit c7423dbdbc9e ("ima: Handle -ESTALE returned by
ima_filter_rule_match()") introduced call to ima_lsm_copy_rule within a
RCU read-side critical section which contains kmalloc with GFP_KERNEL.
This implies a possible sleep and violates limitations of RCU read-side
critical sections on non-PREEMPT systems.

Sleeping within RCU read-side critical section might cause
synchronize_rcu() returning early and break RCU protection, allowing a
UAF to happen.

The root cause of this issue could be described as follows:
|	Thread A	|	Thread B	|
|			|ima_match_policy	|
|			|  rcu_read_lock	|
|ima_lsm_update_rule	|			|
|  synchronize_rcu	|			|
|			|    kmalloc(GFP_KERNEL)|
|			|      sleep		|
==> synchronize_rcu returns early
|  kfree(entry)		|			|
|			|    entry = entry->next|
==> UAF happens and entry now becomes NULL (or could be anything).
|			|    entry->action	|
==> Accessing entry might cause panic.

To fix this issue, we are converting all kmalloc that is called within
RCU read-side critical section to use GFP_ATOMIC.

[PM: fixed missing comment, long lines, !CONFIG_IMA_LSM_RULES case]

The Linux kernel CVE team has assigned CVE-2024-40947 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 5.10.163 with commit c4b035b1f036ddd53fbfced49046e586c5ad8a3e and fixed in 5.10.222 with commit a6176a802c4bfb83bf7524591aa75f44a639a853
	Issue introduced in 5.15.86 with commit 2d4bc60693c4206c64723e94ae5f7a04c0b8f18f and fixed in 5.15.163 with commit a38e02265c681b51997a264aaf743095e2ee400a
	Issue introduced in 6.1.2 with commit 8008f1691c15f353f5a53dc5d450b8262cb57421 and fixed in 6.1.98 with commit 9c3906c3738562b1fedc6f1cfc81756a7cfefff0
	Issue introduced in 6.2 with commit c7423dbdbc9ecef7fff5239d144cad4b9887f4de and fixed in 6.6.39 with commit 28d0ecc52f6c927d0e9ba70a4f2c1ea15453ee88
	Issue introduced in 6.2 with commit c7423dbdbc9ecef7fff5239d144cad4b9887f4de and fixed in 6.9.7 with commit 58275455893066149e9f4df2223ab2fdbdc59f9c
	Issue introduced in 6.2 with commit c7423dbdbc9ecef7fff5239d144cad4b9887f4de and fixed in 6.10 with commit 9a95c5bfbf02a0a7f5983280fe284a0ff0836c34
	Issue introduced in 5.4.229 with commit 38d48fd224036717fcb3437e7af1314f6ebcd2d0
	Issue introduced in 6.0.16 with commit 69c60b2a2dbb4887739d3a13297cc0dae3793f35

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2024-40947
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	include/linux/lsm_hook_defs.h
	include/linux/security.h
	kernel/auditfilter.c
	security/apparmor/audit.c
	security/apparmor/include/audit.h
	security/integrity/ima/ima.h
	security/integrity/ima/ima_policy.c
	security/security.c
	security/selinux/include/audit.h
	security/selinux/ss/services.c
	security/smack/smack_lsm.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/a6176a802c4bfb83bf7524591aa75f44a639a853
	https://git.kernel.org/stable/c/a38e02265c681b51997a264aaf743095e2ee400a
	https://git.kernel.org/stable/c/9c3906c3738562b1fedc6f1cfc81756a7cfefff0
	https://git.kernel.org/stable/c/28d0ecc52f6c927d0e9ba70a4f2c1ea15453ee88
	https://git.kernel.org/stable/c/58275455893066149e9f4df2223ab2fdbdc59f9c
	https://git.kernel.org/stable/c/9a95c5bfbf02a0a7f5983280fe284a0ff0836c34
