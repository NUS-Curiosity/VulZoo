From bippy-5f407fcff5a0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2024-53125: bpf: sync_linked_regs() must preserve subreg_def

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

bpf: sync_linked_regs() must preserve subreg_def

Range propagation must not affect subreg_def marks, otherwise the
following example is rewritten by verifier incorrectly when
BPF_F_TEST_RND_HI32 flag is set:

  0: call bpf_ktime_get_ns                   call bpf_ktime_get_ns
  1: r0 &= 0x7fffffff       after verifier   r0 &= 0x7fffffff
  2: w1 = w0                rewrites         w1 = w0
  3: if w0 < 10 goto +0     -------------->  r11 = 0x2f5674a6     (r)
  4: r1 >>= 32                               r11 <<= 32           (r)
  5: r0 = r1                                 r1 |= r11            (r)
  6: exit;                                   if w0 < 0xa goto pc+0
                                             r1 >>= 32
                                             r0 = r1
                                             exit

(or zero extension of w1 at (2) is missing for architectures that
 require zero extension for upper register half).

The following happens w/o this patch:
- r0 is marked as not a subreg at (0);
- w1 is marked as subreg at (2);
- w1 subreg_def is overridden at (3) by copy_register_state();
- w1 is read at (5) but mark_insn_zext() does not mark (2)
  for zero extension, because w1 subreg_def is not set;
- because of BPF_F_TEST_RND_HI32 flag verifier inserts random
  value for hi32 bits of (2) (marked (r));
- this random value is read at (5).

The Linux kernel CVE team has assigned CVE-2024-53125 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 5.10 with commit 75748837b7e56919679e02163f45d5818c644d03 and fixed in 5.10.232 with commit dadf82c1b2608727bcc306843b540cd7414055a7
	Issue introduced in 5.10 with commit 75748837b7e56919679e02163f45d5818c644d03 and fixed in 5.15.175 with commit b57ac2d92c1f565743f6890a5b9cf317ed856b09
	Issue introduced in 5.10 with commit 75748837b7e56919679e02163f45d5818c644d03 and fixed in 6.1.121 with commit 60fd3538d2a8fd44c41d25088c0ece3e1fd30659
	Issue introduced in 5.10 with commit 75748837b7e56919679e02163f45d5818c644d03 and fixed in 6.6.67 with commit bfe9446ea1d95f6cb7848da19dfd58d2eec6fd84
	Issue introduced in 5.10 with commit 75748837b7e56919679e02163f45d5818c644d03 and fixed in 6.11.6 with commit e2ef0f317a52e678fe8fa84b94d6a15b466d6ff0
	Issue introduced in 5.10 with commit 75748837b7e56919679e02163f45d5818c644d03 and fixed in 6.12 with commit e9bd9c498cb0f5843996dbe5cbce7a1836a83c70

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2024-53125
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	kernel/bpf/verifier.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/dadf82c1b2608727bcc306843b540cd7414055a7
	https://git.kernel.org/stable/c/b57ac2d92c1f565743f6890a5b9cf317ed856b09
	https://git.kernel.org/stable/c/60fd3538d2a8fd44c41d25088c0ece3e1fd30659
	https://git.kernel.org/stable/c/bfe9446ea1d95f6cb7848da19dfd58d2eec6fd84
	https://git.kernel.org/stable/c/e2ef0f317a52e678fe8fa84b94d6a15b466d6ff0
	https://git.kernel.org/stable/c/e9bd9c498cb0f5843996dbe5cbce7a1836a83c70
