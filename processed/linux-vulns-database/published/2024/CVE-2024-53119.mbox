From bippy-5f407fcff5a0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2024-53119: virtio/vsock: Fix accept_queue memory leak

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

virtio/vsock: Fix accept_queue memory leak

As the final stages of socket destruction may be delayed, it is possible
that virtio_transport_recv_listen() will be called after the accept_queue
has been flushed, but before the SOCK_DONE flag has been set. As a result,
sockets enqueued after the flush would remain unremoved, leading to a
memory leak.

vsock_release
  __vsock_release
    lock
    virtio_transport_release
      virtio_transport_close
        schedule_delayed_work(close_work)
    sk_shutdown = SHUTDOWN_MASK
(!) flush accept_queue
    release
                                        virtio_transport_recv_pkt
                                          vsock_find_bound_socket
                                          lock
                                          if flag(SOCK_DONE) return
                                          virtio_transport_recv_listen
                                            child = vsock_create_connected
                                      (!)   vsock_enqueue_accept(child)
                                          release
close_work
  lock
  virtio_transport_do_close
    set_flag(SOCK_DONE)
    virtio_transport_remove_sock
      vsock_remove_sock
        vsock_remove_bound
  release

Introduce a sk_shutdown check to disallow vsock_enqueue_accept() during
socket destruction.

unreferenced object 0xffff888109e3f800 (size 2040):
  comm "kworker/5:2", pid 371, jiffies 4294940105
  hex dump (first 32 bytes):
    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
    28 00 0b 40 00 00 00 00 00 00 00 00 00 00 00 00  (..@............
  backtrace (crc 9e5f4e84):
    [<ffffffff81418ff1>] kmem_cache_alloc_noprof+0x2c1/0x360
    [<ffffffff81d27aa0>] sk_prot_alloc+0x30/0x120
    [<ffffffff81d2b54c>] sk_alloc+0x2c/0x4b0
    [<ffffffff81fe049a>] __vsock_create.constprop.0+0x2a/0x310
    [<ffffffff81fe6d6c>] virtio_transport_recv_pkt+0x4dc/0x9a0
    [<ffffffff81fe745d>] vsock_loopback_work+0xfd/0x140
    [<ffffffff810fc6ac>] process_one_work+0x20c/0x570
    [<ffffffff810fce3f>] worker_thread+0x1bf/0x3a0
    [<ffffffff811070dd>] kthread+0xdd/0x110
    [<ffffffff81044fdd>] ret_from_fork+0x2d/0x50
    [<ffffffff8100785a>] ret_from_fork_asm+0x1a/0x30

The Linux kernel CVE team has assigned CVE-2024-53119 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 5.10 with commit 3fe356d58efae54dade9ec94ea7c919ed20cf4db and fixed in 5.10.232 with commit e26fa236758e8baa61a82cfd9fd4388d2e8d6a4c
	Issue introduced in 5.10 with commit 3fe356d58efae54dade9ec94ea7c919ed20cf4db and fixed in 5.15.175 with commit 4310902c766e371359e6c6311056ae80b5beeac9
	Issue introduced in 5.10 with commit 3fe356d58efae54dade9ec94ea7c919ed20cf4db and fixed in 6.1.119 with commit 946c7600fa2207cc8d3fbc86a518ec56f98a5813
	Issue introduced in 5.10 with commit 3fe356d58efae54dade9ec94ea7c919ed20cf4db and fixed in 6.6.63 with commit 897617a413e0bf1c6380e3b34b2f28f450508549
	Issue introduced in 5.10 with commit 3fe356d58efae54dade9ec94ea7c919ed20cf4db and fixed in 6.11.10 with commit 2415345042245de7601dcc6eafdbe3a3dcc9e379
	Issue introduced in 5.10 with commit 3fe356d58efae54dade9ec94ea7c919ed20cf4db and fixed in 6.12 with commit d7b0ff5a866724c3ad21f2628c22a63336deec3f
	Issue introduced in 5.9.13 with commit 2e7dd95046203bd05e8f4dc06ee53cace70a8e3c

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2024-53119
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	net/vmw_vsock/virtio_transport_common.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/e26fa236758e8baa61a82cfd9fd4388d2e8d6a4c
	https://git.kernel.org/stable/c/4310902c766e371359e6c6311056ae80b5beeac9
	https://git.kernel.org/stable/c/946c7600fa2207cc8d3fbc86a518ec56f98a5813
	https://git.kernel.org/stable/c/897617a413e0bf1c6380e3b34b2f28f450508549
	https://git.kernel.org/stable/c/2415345042245de7601dcc6eafdbe3a3dcc9e379
	https://git.kernel.org/stable/c/d7b0ff5a866724c3ad21f2628c22a63336deec3f
