From bippy-5f407fcff5a0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2024-27405: usb: gadget: ncm: Avoid dropping datagrams of properly parsed NTBs

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

usb: gadget: ncm: Avoid dropping datagrams of properly parsed NTBs

It is observed sometimes when tethering is used over NCM with Windows 11
as host, at some instances, the gadget_giveback has one byte appended at
the end of a proper NTB. When the NTB is parsed, unwrap call looks for
any leftover bytes in SKB provided by u_ether and if there are any pending
bytes, it treats them as a separate NTB and parses it. But in case the
second NTB (as per unwrap call) is faulty/corrupt, all the datagrams that
were parsed properly in the first NTB and saved in rx_list are dropped.

Adding a few custom traces showed the following:
[002] d..1  7828.532866: dwc3_gadget_giveback: ep1out:
req 000000003868811a length 1025/16384 zsI ==> 0
[002] d..1  7828.532867: ncm_unwrap_ntb: K: ncm_unwrap_ntb toprocess: 1025
[002] d..1  7828.532867: ncm_unwrap_ntb: K: ncm_unwrap_ntb nth: 1751999342
[002] d..1  7828.532868: ncm_unwrap_ntb: K: ncm_unwrap_ntb seq: 0xce67
[002] d..1  7828.532868: ncm_unwrap_ntb: K: ncm_unwrap_ntb blk_len: 0x400
[002] d..1  7828.532868: ncm_unwrap_ntb: K: ncm_unwrap_ntb ndp_len: 0x10
[002] d..1  7828.532869: ncm_unwrap_ntb: K: Parsed NTB with 1 frames

In this case, the giveback is of 1025 bytes and block length is 1024.
The rest 1 byte (which is 0x00) won't be parsed resulting in drop of
all datagrams in rx_list.

Same is case with packets of size 2048:
[002] d..1  7828.557948: dwc3_gadget_giveback: ep1out:
req 0000000011dfd96e length 2049/16384 zsI ==> 0
[002] d..1  7828.557949: ncm_unwrap_ntb: K: ncm_unwrap_ntb nth: 1751999342
[002] d..1  7828.557950: ncm_unwrap_ntb: K: ncm_unwrap_ntb blk_len: 0x800

Lecroy shows one byte coming in extra confirming that the byte is coming
in from PC:

 Transfer 2959 - Bytes Transferred(1025)  Timestamp((18.524 843 590)
 - Transaction 8391 - Data(1025 bytes) Timestamp(18.524 843 590)
 --- Packet 4063861
       Data(1024 bytes)
       Duration(2.117us) Idle(14.700ns) Timestamp(18.524 843 590)
 --- Packet 4063863
       Data(1 byte)
       Duration(66.160ns) Time(282.000ns) Timestamp(18.524 845 722)

According to Windows driver, no ZLP is needed if wBlockLength is non-zero,
because the non-zero wBlockLength has already told the function side the
size of transfer to be expected. However, there are in-market NCM devices
that rely on ZLP as long as the wBlockLength is multiple of wMaxPacketSize.
To deal with such devices, it pads an extra 0 at end so the transfer is no
longer multiple of wMaxPacketSize.

The Linux kernel CVE team has assigned CVE-2024-27405 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 2.6.38 with commit 9f6ce4240a2bf456402c15c06768059e5973f28c and fixed in 4.19.308 with commit 059285e04ebb273d32323fbad5431c5b94f77e48
	Issue introduced in 2.6.38 with commit 9f6ce4240a2bf456402c15c06768059e5973f28c and fixed in 5.4.270 with commit a31cf46d108dabce3df80b3e5c07661e24912151
	Issue introduced in 2.6.38 with commit 9f6ce4240a2bf456402c15c06768059e5973f28c and fixed in 5.10.211 with commit 57ca0e16f393bb21d69734e536e383a3a4c665fd
	Issue introduced in 2.6.38 with commit 9f6ce4240a2bf456402c15c06768059e5973f28c and fixed in 5.15.150 with commit 2cb66b62a5d64ccf09b0591ab86fb085fa491fc5
	Issue introduced in 2.6.38 with commit 9f6ce4240a2bf456402c15c06768059e5973f28c and fixed in 6.1.80 with commit 35b604a37ec70d68b19dafd10bbacf1db505c9ca
	Issue introduced in 2.6.38 with commit 9f6ce4240a2bf456402c15c06768059e5973f28c and fixed in 6.6.19 with commit 2b7ec68869d50ea998908af43b643bca7e54577e
	Issue introduced in 2.6.38 with commit 9f6ce4240a2bf456402c15c06768059e5973f28c and fixed in 6.7.7 with commit c7f43900bc723203d7554d299a2ce844054fab8e
	Issue introduced in 2.6.38 with commit 9f6ce4240a2bf456402c15c06768059e5973f28c and fixed in 6.8 with commit 76c51146820c5dac629f21deafab0a7039bc3ccd

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2024-27405
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	drivers/usb/gadget/function/f_ncm.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/059285e04ebb273d32323fbad5431c5b94f77e48
	https://git.kernel.org/stable/c/a31cf46d108dabce3df80b3e5c07661e24912151
	https://git.kernel.org/stable/c/57ca0e16f393bb21d69734e536e383a3a4c665fd
	https://git.kernel.org/stable/c/2cb66b62a5d64ccf09b0591ab86fb085fa491fc5
	https://git.kernel.org/stable/c/35b604a37ec70d68b19dafd10bbacf1db505c9ca
	https://git.kernel.org/stable/c/2b7ec68869d50ea998908af43b643bca7e54577e
	https://git.kernel.org/stable/c/c7f43900bc723203d7554d299a2ce844054fab8e
	https://git.kernel.org/stable/c/76c51146820c5dac629f21deafab0a7039bc3ccd
