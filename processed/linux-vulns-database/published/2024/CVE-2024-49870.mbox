From bippy-5f407fcff5a0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2024-49870: cachefiles: fix dentry leak in cachefiles_open_file()

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

cachefiles: fix dentry leak in cachefiles_open_file()

A dentry leak may be caused when a lookup cookie and a cull are concurrent:

            P1             |             P2
-----------------------------------------------------------
cachefiles_lookup_cookie
  cachefiles_look_up_object
    lookup_one_positive_unlocked
     // get dentry
                            cachefiles_cull
                              inode->i_flags |= S_KERNEL_FILE;
    cachefiles_open_file
      cachefiles_mark_inode_in_use
        __cachefiles_mark_inode_in_use
          can_use = false
          if (!(inode->i_flags & S_KERNEL_FILE))
            can_use = true
	  return false
        return false
        // Returns an error but doesn't put dentry

After that the following WARNING will be triggered when the backend folder
is umounted:

==================================================================
BUG: Dentry 000000008ad87947{i=7a,n=Dx_1_1.img}  still in use (1) [unmount of ext4 sda]
WARNING: CPU: 4 PID: 359261 at fs/dcache.c:1767 umount_check+0x5d/0x70
CPU: 4 PID: 359261 Comm: umount Not tainted 6.6.0-dirty #25
RIP: 0010:umount_check+0x5d/0x70
Call Trace:
 <TASK>
 d_walk+0xda/0x2b0
 do_one_tree+0x20/0x40
 shrink_dcache_for_umount+0x2c/0x90
 generic_shutdown_super+0x20/0x160
 kill_block_super+0x1a/0x40
 ext4_kill_sb+0x22/0x40
 deactivate_locked_super+0x35/0x80
 cleanup_mnt+0x104/0x160
==================================================================

Whether cachefiles_open_file() returns true or false, the reference count
obtained by lookup_positive_unlocked() in cachefiles_look_up_object()
should be released.

Therefore release that reference count in cachefiles_look_up_object() to
fix the above issue and simplify the code.

The Linux kernel CVE team has assigned CVE-2024-49870 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 5.17 with commit 1f08c925e7a38002bde509e66f6f891468848511 and fixed in 6.1.113 with commit d32ff64c872d7e08e893c32ba6a2374583444410
	Issue introduced in 5.17 with commit 1f08c925e7a38002bde509e66f6f891468848511 and fixed in 6.6.55 with commit c7d10fa7d7691558ff967668494672415f5fa151
	Issue introduced in 5.17 with commit 1f08c925e7a38002bde509e66f6f891468848511 and fixed in 6.10.14 with commit e4a28489b310339b2b8187bec0a437709be551c1
	Issue introduced in 5.17 with commit 1f08c925e7a38002bde509e66f6f891468848511 and fixed in 6.11.3 with commit 7fa2382f97421978514a419c93054eca69f5247b
	Issue introduced in 5.17 with commit 1f08c925e7a38002bde509e66f6f891468848511 and fixed in 6.12 with commit da6ef2dffe6056aad3435e6cf7c6471c2a62187c

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2024-49870
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	fs/cachefiles/namei.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/d32ff64c872d7e08e893c32ba6a2374583444410
	https://git.kernel.org/stable/c/c7d10fa7d7691558ff967668494672415f5fa151
	https://git.kernel.org/stable/c/e4a28489b310339b2b8187bec0a437709be551c1
	https://git.kernel.org/stable/c/7fa2382f97421978514a419c93054eca69f5247b
	https://git.kernel.org/stable/c/da6ef2dffe6056aad3435e6cf7c6471c2a62187c
