{
   "containers": {
      "cna": {
         "providerMetadata": {
            "orgId": "f4215fc3-5b6b-47ff-a258-f7189bd81038"
         },
         "descriptions": [
            {
               "lang": "en",
               "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nIB/hfi1: Fix bugs with non-PAGE_SIZE-end multi-iovec user SDMA requests\n\nhfi1 user SDMA request processing has two bugs that can cause data\ncorruption for user SDMA requests that have multiple payload iovecs\nwhere an iovec other than the tail iovec does not run up to the page\nboundary for the buffer pointed to by that iovec.a\n\nHere are the specific bugs:\n1. user_sdma_txadd() does not use struct user_sdma_iovec->iov.iov_len.\n   Rather, user_sdma_txadd() will add up to PAGE_SIZE bytes from iovec\n   to the packet, even if some of those bytes are past\n   iovec->iov.iov_len and are thus not intended to be in the packet.\n2. user_sdma_txadd() and user_sdma_send_pkts() fail to advance to the\n   next iovec in user_sdma_request->iovs when the current iovec\n   is not PAGE_SIZE and does not contain enough data to complete the\n   packet. The transmitted packet will contain the wrong data from the\n   iovec pages.\n\nThis has not been an issue with SDMA packets from hfi1 Verbs or PSM2\nbecause they only produce iovecs that end short of PAGE_SIZE as the tail\niovec of an SDMA request.\n\nFixing these bugs exposes other bugs with the SDMA pin cache\n(struct mmu_rb_handler) that get in way of supporting user SDMA requests\nwith multiple payload iovecs whose buffers do not end at PAGE_SIZE. So\nthis commit fixes those issues as well.\n\nHere are the mmu_rb_handler bugs that non-PAGE_SIZE-end multi-iovec\npayload user SDMA requests can hit:\n1. Overlapping memory ranges in mmu_rb_handler will result in duplicate\n   pinnings.\n2. When extending an existing mmu_rb_handler entry (struct mmu_rb_node),\n   the mmu_rb code (1) removes the existing entry under a lock, (2)\n   releases that lock, pins the new pages, (3) then reacquires the lock\n   to insert the extended mmu_rb_node.\n\n   If someone else comes in and inserts an overlapping entry between (2)\n   and (3), insert in (3) will fail.\n\n   The failure path code in this case unpins _all_ pages in either the\n   original mmu_rb_node or the new mmu_rb_node that was inserted between\n   (2) and (3).\n3. In hfi1_mmu_rb_remove_unless_exact(), mmu_rb_node->refcount is\n   incremented outside of mmu_rb_handler->lock. As a result, mmu_rb_node\n   could be evicted by another thread that gets mmu_rb_handler->lock and\n   checks mmu_rb_node->refcount before mmu_rb_node->refcount is\n   incremented.\n4. Related to #2 above, SDMA request submission failure path does not\n   check mmu_rb_node->refcount before freeing mmu_rb_node object.\n\n   If there are other SDMA requests in progress whose iovecs have\n   pointers to the now-freed mmu_rb_node(s), those pointers to the\n   now-freed mmu_rb nodes will be dereferenced when those SDMA requests\n   complete."
            }
         ],
         "affected": [
            {
               "product": "Linux",
               "vendor": "Linux",
               "defaultStatus": "unaffected",
               "repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
               "programFiles": [
                  "drivers/infiniband/hw/hfi1/ipoib_tx.c",
                  "drivers/infiniband/hw/hfi1/mmu_rb.c",
                  "drivers/infiniband/hw/hfi1/mmu_rb.h",
                  "drivers/infiniband/hw/hfi1/sdma.c",
                  "drivers/infiniband/hw/hfi1/sdma.h",
                  "drivers/infiniband/hw/hfi1/sdma_txreq.h",
                  "drivers/infiniband/hw/hfi1/trace_mmu.h",
                  "drivers/infiniband/hw/hfi1/user_sdma.c",
                  "drivers/infiniband/hw/hfi1/user_sdma.h",
                  "drivers/infiniband/hw/hfi1/verbs.c",
                  "drivers/infiniband/hw/hfi1/vnic_sdma.c"
               ],
               "versions": [
                  {
                     "version": "7724105686e7",
                     "lessThan": "9c4c6512d733",
                     "status": "affected",
                     "versionType": "git"
                  },
                  {
                     "version": "7724105686e7",
                     "lessThan": "a2bd706ab635",
                     "status": "affected",
                     "versionType": "git"
                  },
                  {
                     "version": "7724105686e7",
                     "lessThan": "dce59b544370",
                     "status": "affected",
                     "versionType": "git"
                  },
                  {
                     "version": "7724105686e7",
                     "lessThan": "c76cb8f4bdf2",
                     "status": "affected",
                     "versionType": "git"
                  },
                  {
                     "version": "7724105686e7",
                     "lessThan": "7e6010f79b58",
                     "status": "affected",
                     "versionType": "git"
                  },
                  {
                     "version": "7724105686e7",
                     "lessThan": "00cbce5cbf88",
                     "status": "affected",
                     "versionType": "git"
                  }
               ]
            },
            {
               "product": "Linux",
               "vendor": "Linux",
               "defaultStatus": "affected",
               "repo": "https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git",
               "programFiles": [
                  "drivers/infiniband/hw/hfi1/ipoib_tx.c",
                  "drivers/infiniband/hw/hfi1/mmu_rb.c",
                  "drivers/infiniband/hw/hfi1/mmu_rb.h",
                  "drivers/infiniband/hw/hfi1/sdma.c",
                  "drivers/infiniband/hw/hfi1/sdma.h",
                  "drivers/infiniband/hw/hfi1/sdma_txreq.h",
                  "drivers/infiniband/hw/hfi1/trace_mmu.h",
                  "drivers/infiniband/hw/hfi1/user_sdma.c",
                  "drivers/infiniband/hw/hfi1/user_sdma.h",
                  "drivers/infiniband/hw/hfi1/verbs.c",
                  "drivers/infiniband/hw/hfi1/vnic_sdma.c"
               ],
               "versions": [
                  {
                     "version": "4.3",
                     "status": "affected"
                  },
                  {
                     "version": "0",
                     "lessThan": "4.3",
                     "status": "unaffected",
                     "versionType": "semver"
                  },
                  {
                     "version": "5.10.180",
                     "lessThanOrEqual": "5.10.*",
                     "status": "unaffected",
                     "versionType": "semver"
                  },
                  {
                     "version": "5.15.111",
                     "lessThanOrEqual": "5.15.*",
                     "status": "unaffected",
                     "versionType": "semver"
                  },
                  {
                     "version": "6.1.28",
                     "lessThanOrEqual": "6.1.*",
                     "status": "unaffected",
                     "versionType": "semver"
                  },
                  {
                     "version": "6.2.15",
                     "lessThanOrEqual": "6.2.*",
                     "status": "unaffected",
                     "versionType": "semver"
                  },
                  {
                     "version": "6.3.2",
                     "lessThanOrEqual": "6.3.*",
                     "status": "unaffected",
                     "versionType": "semver"
                  },
                  {
                     "version": "6.4",
                     "lessThanOrEqual": "*",
                     "status": "unaffected",
                     "versionType": "original_commit_for_fix"
                  }
               ]
            }
         ],
         "references": [
            {
               "url": "https://git.kernel.org/stable/c/9c4c6512d7330b743c4ffd18bd999a86ca26db0d"
            },
            {
               "url": "https://git.kernel.org/stable/c/a2bd706ab63509793b5cd5065e685b7ef5cba678"
            },
            {
               "url": "https://git.kernel.org/stable/c/dce59b5443700fbd0d2433ec6e4d4cf063448844"
            },
            {
               "url": "https://git.kernel.org/stable/c/c76cb8f4bdf26d04cfa5485a93ce297dba5e6a80"
            },
            {
               "url": "https://git.kernel.org/stable/c/7e6010f79b58f45b204cf18aa58f4b73c3f30adc"
            },
            {
               "url": "https://git.kernel.org/stable/c/00cbce5cbf88459cd1aa1d60d0f1df15477df127"
            }
         ],
         "title": "IB/hfi1: Fix bugs with non-PAGE_SIZE-end multi-iovec user SDMA requests",
         "x_generator": {
            "engine": "bippy-9e1c9544281a"
         }
      }
   },
   "cveMetadata": {
      "assignerOrgId": "f4215fc3-5b6b-47ff-a258-f7189bd81038",
      "cveID": "CVE-2023-52474",
      "requesterUserId": "gregkh@kernel.org",
      "serial": "1",
      "state": "PUBLISHED"
   },
   "dataType": "CVE_RECORD",
   "dataVersion": "5.0"
}
