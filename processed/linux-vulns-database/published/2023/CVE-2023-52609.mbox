From bippy-5f407fcff5a0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2023-52609: binder: fix race between mmput() and do_exit()

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

binder: fix race between mmput() and do_exit()

Task A calls binder_update_page_range() to allocate and insert pages on
a remote address space from Task B. For this, Task A pins the remote mm
via mmget_not_zero() first. This can race with Task B do_exit() and the
final mmput() refcount decrement will come from Task A.

  Task A            | Task B
  ------------------+------------------
  mmget_not_zero()  |
                    |  do_exit()
                    |    exit_mm()
                    |      mmput()
  mmput()           |
    exit_mmap()     |
      remove_vma()  |
        fput()      |

In this case, the work of ____fput() from Task B is queued up in Task A
as TWA_RESUME. So in theory, Task A returns to userspace and the cleanup
work gets executed. However, Task A instead sleep, waiting for a reply
from Task B that never comes (it's dead).

This means the binder_deferred_release() is blocked until an unrelated
binder event forces Task A to go back to userspace. All the associated
death notifications will also be delayed until then.

In order to fix this use mmput_async() that will schedule the work in
the corresponding mm->async_put_work WQ instead of Task A.

The Linux kernel CVE team has assigned CVE-2023-52609 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 2.6.29 with commit 457b9a6f09f011ebcb9b52cc203a6331a6fc2de7 and fixed in 4.19.306 with commit 95b1d336b0642198b56836b89908d07b9a0c9608
	Issue introduced in 2.6.29 with commit 457b9a6f09f011ebcb9b52cc203a6331a6fc2de7 and fixed in 5.4.268 with commit 252a2a5569eb9f8d16428872cc24dea1ac0bb097
	Issue introduced in 2.6.29 with commit 457b9a6f09f011ebcb9b52cc203a6331a6fc2de7 and fixed in 5.10.209 with commit 7e7a0d86542b0ea903006d3f42f33c4f7ead6918
	Issue introduced in 2.6.29 with commit 457b9a6f09f011ebcb9b52cc203a6331a6fc2de7 and fixed in 5.15.148 with commit 98fee5bee97ad47b527a997d5786410430d1f0e9
	Issue introduced in 2.6.29 with commit 457b9a6f09f011ebcb9b52cc203a6331a6fc2de7 and fixed in 6.1.75 with commit 6696f76c32ff67fec26823fc2df46498e70d9bf3
	Issue introduced in 2.6.29 with commit 457b9a6f09f011ebcb9b52cc203a6331a6fc2de7 and fixed in 6.6.14 with commit 67f16bf2cc1698fd50e01ee8a2becc5a8e6d3a3e
	Issue introduced in 2.6.29 with commit 457b9a6f09f011ebcb9b52cc203a6331a6fc2de7 and fixed in 6.7.2 with commit 77d210e8db4d61d43b2d16df66b1ec46fad2ee01
	Issue introduced in 2.6.29 with commit 457b9a6f09f011ebcb9b52cc203a6331a6fc2de7 and fixed in 6.8 with commit 9a9ab0d963621d9d12199df9817e66982582d5a5

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2023-52609
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	drivers/android/binder_alloc.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/95b1d336b0642198b56836b89908d07b9a0c9608
	https://git.kernel.org/stable/c/252a2a5569eb9f8d16428872cc24dea1ac0bb097
	https://git.kernel.org/stable/c/7e7a0d86542b0ea903006d3f42f33c4f7ead6918
	https://git.kernel.org/stable/c/98fee5bee97ad47b527a997d5786410430d1f0e9
	https://git.kernel.org/stable/c/6696f76c32ff67fec26823fc2df46498e70d9bf3
	https://git.kernel.org/stable/c/67f16bf2cc1698fd50e01ee8a2becc5a8e6d3a3e
	https://git.kernel.org/stable/c/77d210e8db4d61d43b2d16df66b1ec46fad2ee01
	https://git.kernel.org/stable/c/9a9ab0d963621d9d12199df9817e66982582d5a5
