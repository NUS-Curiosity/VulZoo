From bippy-5f407fcff5a0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2023-52924: netfilter: nf_tables: don't skip expired elements during walk

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

netfilter: nf_tables: don't skip expired elements during walk

There is an asymmetry between commit/abort and preparation phase if the
following conditions are met:

1. set is a verdict map ("1.2.3.4 : jump foo")
2. timeouts are enabled

In this case, following sequence is problematic:

1. element E in set S refers to chain C
2. userspace requests removal of set S
3. kernel does a set walk to decrement chain->use count for all elements
   from preparation phase
4. kernel does another set walk to remove elements from the commit phase
   (or another walk to do a chain->use increment for all elements from
    abort phase)

If E has already expired in 1), it will be ignored during list walk, so its use count
won't have been changed.

Then, when set is culled, ->destroy callback will zap the element via
nf_tables_set_elem_destroy(), but this function is only safe for
elements that have been deactivated earlier from the preparation phase:
lack of earlier deactivate removes the element but leaks the chain use
count, which results in a WARN splat when the chain gets removed later,
plus a leak of the nft_chain structure.

Update pipapo_get() not to skip expired elements, otherwise flush
command reports bogus ENOENT errors.

The Linux kernel CVE team has assigned CVE-2023-52924 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 4.1 with commit 9d0982927e79049675cb6c6c04a0ebb3dad5a434 and fixed in 4.19.316 with commit 94313a196b44184b5b52c1876da6a537701b425a
	Issue introduced in 4.1 with commit 9d0982927e79049675cb6c6c04a0ebb3dad5a434 and fixed in 5.4.262 with commit 1da4874d05da1526b11b82fc7f3c7ac38749ddf8
	Issue introduced in 4.1 with commit 9d0982927e79049675cb6c6c04a0ebb3dad5a434 and fixed in 5.10.198 with commit b15ea4017af82011dd55225ce77cce3d4dfc169c
	Issue introduced in 4.1 with commit 9d0982927e79049675cb6c6c04a0ebb3dad5a434 and fixed in 5.15.134 with commit 7c7e658a36f8b1522bd3586d8137e5f93a25ddc5
	Issue introduced in 4.1 with commit 9d0982927e79049675cb6c6c04a0ebb3dad5a434 and fixed in 6.1.56 with commit 59dab3bf0b8fc08eb802721c0532f13dd89209b8
	Issue introduced in 4.1 with commit 9d0982927e79049675cb6c6c04a0ebb3dad5a434 and fixed in 6.4.11 with commit bd156ce9553dcaf2d6ee2c825d1a5a1718e86524
	Issue introduced in 4.1 with commit 9d0982927e79049675cb6c6c04a0ebb3dad5a434 and fixed in 6.5 with commit 24138933b97b055d486e8064b4a1721702442a9b

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2023-52924
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	net/netfilter/nf_tables_api.c
	net/netfilter/nft_set_hash.c
	net/netfilter/nft_set_pipapo.c
	net/netfilter/nft_set_rbtree.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/94313a196b44184b5b52c1876da6a537701b425a
	https://git.kernel.org/stable/c/1da4874d05da1526b11b82fc7f3c7ac38749ddf8
	https://git.kernel.org/stable/c/b15ea4017af82011dd55225ce77cce3d4dfc169c
	https://git.kernel.org/stable/c/7c7e658a36f8b1522bd3586d8137e5f93a25ddc5
	https://git.kernel.org/stable/c/59dab3bf0b8fc08eb802721c0532f13dd89209b8
	https://git.kernel.org/stable/c/bd156ce9553dcaf2d6ee2c825d1a5a1718e86524
	https://git.kernel.org/stable/c/24138933b97b055d486e8064b4a1721702442a9b
