From bippy-5f407fcff5a0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2021-47505: aio: fix use-after-free due to missing POLLFREE handling

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

aio: fix use-after-free due to missing POLLFREE handling

signalfd_poll() and binder_poll() are special in that they use a
waitqueue whose lifetime is the current task, rather than the struct
file as is normally the case.  This is okay for blocking polls, since a
blocking poll occurs within one task; however, non-blocking polls
require another solution.  This solution is for the queue to be cleared
before it is freed, by sending a POLLFREE notification to all waiters.

Unfortunately, only eventpoll handles POLLFREE.  A second type of
non-blocking poll, aio poll, was added in kernel v4.18, and it doesn't
handle POLLFREE.  This allows a use-after-free to occur if a signalfd or
binder fd is polled with aio poll, and the waitqueue gets freed.

Fix this by making aio poll handle POLLFREE.

A patch by Ramji Jiyani <ramjiyani@google.com>
(https://lore.kernel.org/r/20211027011834.2497484-1-ramjiyani@google.com)
tried to do this by making aio_poll_wake() always complete the request
inline if POLLFREE is seen.  However, that solution had two bugs.
First, it introduced a deadlock, as it unconditionally locked the aio
context while holding the waitqueue lock, which inverts the normal
locking order.  Second, it didn't consider that POLLFREE notifications
are missed while the request has been temporarily de-queued.

The second problem was solved by my previous patch.  This patch then
properly fixes the use-after-free by handling POLLFREE in a
deadlock-free way.  It does this by taking advantage of the fact that
freeing of the waitqueue is RCU-delayed, similar to what eventpoll does.

The Linux kernel CVE team has assigned CVE-2021-47505 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 4.18 with commit 2c14fa838cbefc23cf1c73ca167ed85b274b2913 and fixed in 4.19.221 with commit 321fba81ec034f88aea4898993c1bf15605c023f
	Issue introduced in 4.18 with commit 2c14fa838cbefc23cf1c73ca167ed85b274b2913 and fixed in 5.4.165 with commit 4105e6a128e8a98455dfc9e6dbb2ab0c33c4497f
	Issue introduced in 4.18 with commit 2c14fa838cbefc23cf1c73ca167ed85b274b2913 and fixed in 5.10.85 with commit 47ffefd88abfffe8a040bcc1dd0554d4ea6f7689
	Issue introduced in 4.18 with commit 2c14fa838cbefc23cf1c73ca167ed85b274b2913 and fixed in 5.15.8 with commit 60d311f9e6381d779d7d53371f87285698ecee24
	Issue introduced in 4.18 with commit 2c14fa838cbefc23cf1c73ca167ed85b274b2913 and fixed in 5.16 with commit 50252e4b5e989ce64555c7aef7516bdefc2fea72

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2021-47505
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	fs/aio.c
	include/uapi/asm-generic/poll.h


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/321fba81ec034f88aea4898993c1bf15605c023f
	https://git.kernel.org/stable/c/4105e6a128e8a98455dfc9e6dbb2ab0c33c4497f
	https://git.kernel.org/stable/c/47ffefd88abfffe8a040bcc1dd0554d4ea6f7689
	https://git.kernel.org/stable/c/60d311f9e6381d779d7d53371f87285698ecee24
	https://git.kernel.org/stable/c/50252e4b5e989ce64555c7aef7516bdefc2fea72
