From bippy-5f407fcff5a0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2021-46988: userfaultfd: release page in error path to avoid BUG_ON

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

userfaultfd: release page in error path to avoid BUG_ON

Consider the following sequence of events:

1. Userspace issues a UFFD ioctl, which ends up calling into
   shmem_mfill_atomic_pte(). We successfully account the blocks, we
   shmem_alloc_page(), but then the copy_from_user() fails. We return
   -ENOENT. We don't release the page we allocated.
2. Our caller detects this error code, tries the copy_from_user() after
   dropping the mmap_lock, and retries, calling back into
   shmem_mfill_atomic_pte().
3. Meanwhile, let's say another process filled up the tmpfs being used.
4. So shmem_mfill_atomic_pte() fails to account blocks this time, and
   immediately returns - without releasing the page.

This triggers a BUG_ON in our caller, which asserts that the page
should always be consumed, unless -ENOENT is returned.

To fix this, detect if we have such a "dangling" page when accounting
fails, and if so, release it before returning.

The Linux kernel CVE team has assigned CVE-2021-46988 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 4.11 with commit cb658a453b9327ce96ce5222c24d162b5b65b564 and fixed in 4.14.233 with commit 319116227e52d49eee671f0aa278bac89b3c1b69
	Issue introduced in 4.11 with commit cb658a453b9327ce96ce5222c24d162b5b65b564 and fixed in 4.19.191 with commit 07c9b834c97d0fa3402fb7f3f3b32df370a6ff1f
	Issue introduced in 4.11 with commit cb658a453b9327ce96ce5222c24d162b5b65b564 and fixed in 5.4.120 with commit b3f1731c6d7fbc1ebe3ed8eff6d6bec56d76ff43
	Issue introduced in 4.11 with commit cb658a453b9327ce96ce5222c24d162b5b65b564 and fixed in 5.10.38 with commit 140cfd9980124aecb6c03ef2e69c72d0548744de
	Issue introduced in 4.11 with commit cb658a453b9327ce96ce5222c24d162b5b65b564 and fixed in 5.11.22 with commit ad53127973034c63b5348715a1043d0e80ceb330
	Issue introduced in 4.11 with commit cb658a453b9327ce96ce5222c24d162b5b65b564 and fixed in 5.12.5 with commit 2d59a0ed8b26b8f3638d8afc31f839e27759f1f6
	Issue introduced in 4.11 with commit cb658a453b9327ce96ce5222c24d162b5b65b564 and fixed in 5.13 with commit 7ed9d238c7dbb1fdb63ad96a6184985151b0171c

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2021-46988
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	mm/shmem.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/319116227e52d49eee671f0aa278bac89b3c1b69
	https://git.kernel.org/stable/c/07c9b834c97d0fa3402fb7f3f3b32df370a6ff1f
	https://git.kernel.org/stable/c/b3f1731c6d7fbc1ebe3ed8eff6d6bec56d76ff43
	https://git.kernel.org/stable/c/140cfd9980124aecb6c03ef2e69c72d0548744de
	https://git.kernel.org/stable/c/ad53127973034c63b5348715a1043d0e80ceb330
	https://git.kernel.org/stable/c/2d59a0ed8b26b8f3638d8afc31f839e27759f1f6
	https://git.kernel.org/stable/c/7ed9d238c7dbb1fdb63ad96a6184985151b0171c
