From bippy-5f407fcff5a0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2021-47430: x86/entry: Clear X86_FEATURE_SMAP when CONFIG_X86_SMAP=n

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

x86/entry: Clear X86_FEATURE_SMAP when CONFIG_X86_SMAP=n

Commit

  3c73b81a9164 ("x86/entry, selftests: Further improve user entry sanity checks")

added a warning if AC is set when in the kernel.

Commit

  662a0221893a3d ("x86/entry: Fix AC assertion")

changed the warning to only fire if the CPU supports SMAP.

However, the warning can still trigger on a machine that supports SMAP
but where it's disabled in the kernel config and when running the
syscall_nt selftest, for example:

  ------------[ cut here ]------------
  WARNING: CPU: 0 PID: 49 at irqentry_enter_from_user_mode
  CPU: 0 PID: 49 Comm: init Tainted: G                T 5.15.0-rc4+ #98 e6202628ee053b4f310759978284bd8bb0ce6905
  Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.10.2-1ubuntu1 04/01/2014
  RIP: 0010:irqentry_enter_from_user_mode
  ...
  Call Trace:
   ? irqentry_enter
   ? exc_general_protection
   ? asm_exc_general_protection
   ? asm_exc_general_protectio

IS_ENABLED(CONFIG_X86_SMAP) could be added to the warning condition, but
even this would not be enough in case SMAP is disabled at boot time with
the "nosmap" parameter.

To be consistent with "nosmap" behaviour, clear X86_FEATURE_SMAP when
!CONFIG_X86_SMAP.

Found using entry-fuzz + satrandconfig.

 [ bp: Massage commit message. ]

The Linux kernel CVE team has assigned CVE-2021-47430 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 5.8 with commit 3c73b81a9164d0c1b6379d6672d2772a9e95168e and fixed in 5.10.73 with commit f2447f6587b8ffe42ba04d14ce67d429a1163e5e
	Issue introduced in 5.8 with commit 3c73b81a9164d0c1b6379d6672d2772a9e95168e and fixed in 5.14.12 with commit 4e9ec1c65da98c293f75d83755dfa5e03075a6d0
	Issue introduced in 5.8 with commit 3c73b81a9164d0c1b6379d6672d2772a9e95168e and fixed in 5.15 with commit 3958b9c34c2729597e182cc606cc43942fd19f7c
	Issue introduced in 5.8.8 with commit 231508fa9a6d038565c7bd6654200350ce2f7548

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2021-47430
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	arch/x86/kernel/cpu/common.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/f2447f6587b8ffe42ba04d14ce67d429a1163e5e
	https://git.kernel.org/stable/c/4e9ec1c65da98c293f75d83755dfa5e03075a6d0
	https://git.kernel.org/stable/c/3958b9c34c2729597e182cc606cc43942fd19f7c
