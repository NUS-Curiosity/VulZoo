From bippy-5f407fcff5a0 Mon Sep 17 00:00:00 2001
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: <linux-cve-announce@vger.kernel.org>
Reply-to: <cve@kernel.org>, <linux-kernel@vger.kernel.org>
Subject: CVE-2021-47406: ext4: add error checking to ext4_ext_replay_set_iblocks()

Description
===========

In the Linux kernel, the following vulnerability has been resolved:

ext4: add error checking to ext4_ext_replay_set_iblocks()

If the call to ext4_map_blocks() fails due to an corrupted file
system, ext4_ext_replay_set_iblocks() can get stuck in an infinite
loop.  This could be reproduced by running generic/526 with a file
system that has inline_data and fast_commit enabled.  The system will
repeatedly log to the console:

EXT4-fs warning (device dm-3): ext4_block_to_path:105: block 1074800922 > max in inode 131076

and the stack that it gets stuck in is:

   ext4_block_to_path+0xe3/0x130
   ext4_ind_map_blocks+0x93/0x690
   ext4_map_blocks+0x100/0x660
   skip_hole+0x47/0x70
   ext4_ext_replay_set_iblocks+0x223/0x440
   ext4_fc_replay_inode+0x29e/0x3b0
   ext4_fc_replay+0x278/0x550
   do_one_pass+0x646/0xc10
   jbd2_journal_recover+0x14a/0x270
   jbd2_journal_load+0xc4/0x150
   ext4_load_journal+0x1f3/0x490
   ext4_fill_super+0x22d4/0x2c00

With this patch, generic/526 still fails, but system is no longer
locking up in a tight loop.  It's likely the root casue is that
fast_commit replay is corrupting file systems with inline_data, and we
probably need to add better error handling in the fast commit replay
code path beyond what is done here, which essentially just breaks the
infinite loop without reporting the to the higher levels of the code.

The Linux kernel CVE team has assigned CVE-2021-47406 to this issue.


Affected and fixed versions
===========================

	Issue introduced in 5.10 with commit 8016e29f4362e285f0f7e38fadc61a5b7bdfdfa2 and fixed in 5.10.71 with commit a63474dbf692dd09b50fed592bc41f6de5f102fc
	Issue introduced in 5.10 with commit 8016e29f4362e285f0f7e38fadc61a5b7bdfdfa2 and fixed in 5.14.10 with commit 27e10c5d31ff1d222c7f797f1ee96d422859ba67
	Issue introduced in 5.10 with commit 8016e29f4362e285f0f7e38fadc61a5b7bdfdfa2 and fixed in 5.15 with commit 1fd95c05d8f742abfe906620780aee4dbe1a2db0

Please see https://www.kernel.org for a full list of currently supported
kernel versions by the kernel community.

Unaffected versions might change over time as fixes are backported to
older supported kernel versions.  The official CVE entry at
	https://cve.org/CVERecord/?id=CVE-2021-47406
will be updated if fixes are backported, please check that for the most
up to date information about this issue.


Affected files
==============

The file(s) affected by this issue are:
	fs/ext4/extents.c


Mitigation
==========

The Linux kernel CVE team recommends that you update to the latest
stable kernel version for this, and many other bugfixes.  Individual
changes are never tested alone, but rather are part of a larger kernel
release.  Cherry-picking individual commits is not recommended or
supported by the Linux kernel community at all.  If however, updating to
the latest release is impossible, the individual changes to resolve this
issue can be found at these commits:
	https://git.kernel.org/stable/c/a63474dbf692dd09b50fed592bc41f6de5f102fc
	https://git.kernel.org/stable/c/27e10c5d31ff1d222c7f797f1ee96d422859ba67
	https://git.kernel.org/stable/c/1fd95c05d8f742abfe906620780aee4dbe1a2db0
