Title:
======
Enterpriser16 Load Balancer v7.1 - Multiple Web Vulnerabilities


Date:
=====
2012-12-12


References:
===========
http://www.vulnerability-lab.com/get_content.php?id=785


VL-ID:
=====
785


Common Vulnerability Scoring System:
====================================
3.5


Introduction:
=============
Load Balancer .org have cemented our reputation as market leaders in affordable server load balancing appliances with the ground-breaking
release of firmware v7.0 for the Enterprise product family – which includes a slick new web interface design and many additional features
which continue to keep us one step ahead of the competition.

(Copy of the Vendor Homepage:  http://www.loadbalancer.org )



Abstract:
=========
The Vulnerability Laboratory Research Team discovered multiple web vulnerabilities in Enterpriser16 LoadBalancer v7.1.


Report-Timeline:
================
2012-12-12:	Public or Non-Public Disclosure


Status:
========
Published


Affected Products:
==================

Exploitation-Technique:
=======================
Remote


Severity:
=========
Medium


Details:
========
Multiple persistent input validation web vulnerabilities are detected in the Enterpriser16 v7.1 Load Balancer Application.
The bug allows remote attackers to implement/inject own malicious script code on the application side (persistent) of the service.

The first vulnerabilities are located in the `Edit Configuration` module with the bound vulnerable Label, Virtual Host, Request to
send, Email Alerts  and  Response expected parameters.

The secound vulnerabilities are located in the Create Solution, Access points and New Contract module with the bound vulnerable
title, asset name, contract name, name or description parameter requests.

Exploitation requires low user interaction and a low privileged application user account. Successful exploitation of the vulnerability
can lead to persistent session hijacking (manager/admin), persistent phishing or persistent module web context manipulation.


Vulnerable Module(s):	(Edit Configuration)

			[+] Edit Configuration > layer4 > Virtual Servers
			[+] Edit Configuration > Layer4 > Real Server
			[+] Edit Configuration > SSL termination > Modify

Vulnerable Parameter(s):
			[+] [Label] [Virtual Host] [Request to send][Email Alerts][Response expected]
			[+] [Label]
			[+] [Label]



Vulnerable Module(s): 	(Admin/Moderator Back-End)

			[+] Solution > Create Solution
			[+] Assets > It Assets > Access points
			[+] Contract > New Contract

Vulnerable Parameter(s):
			[+] [Title]
			[+] [Asset name]
			[+] [Contract Name] - [Description] - [Name] - [Support]


Proof of Concept:
=================
The persistent input validation vulnerability can be exploited by remote attackers with low required user interaction & low privileged user account.
For demonstration or reproduce ...

Review: Edit Configuration > layer4 > Virtual Servers - [Label] [Virtual Host] [Request to send] [Email Alerts] [Response expected]
<pre>
#0 /var/www/html/lbadmin/inc/ldirectord.inc(695): execute('/etc/rc.d/rc.lv...') #1 /var/www/html/lbadmin/inc/ldirectord.inc(610):
tcp_timeouts(Array) #2 /var/www/html/lbadmin/config/ldirectord.php(627): ldirectord_vip_edit('0', 'ipv4', '10.1.1.5', '80', '
<h1>[PERSISTENT INJECTED SCRIPT CODE!]</h1>
', 'tcp', 'masq', '255.255.255.255', '127.0.0.1', '9081', 'yes', '300', 'wrr', 'none', '
<h1>[PERSISTENT INJECTED SCRIPT CODE!]</h1>
<h1>[PERSISTENT INJECTED SCRIPT CODE!]</h1>
<h1>[PERSISTENT INJECTED SCRIPT CODE!]</h1>
<h1>[PERSISTENT INJECTED SCRIPT CODE!]</h1>
</pre>


URL: http://loadbalancer.127.0.0.1:8080/lbadmin/config/ldirectord.php?action=modvirtual&subaction=editdata&v=0&t=1355504097

...

Review: Edit Configuration > Add New Floating IP
<p class="error">
Error:
<em>
The Floating IP address '
<iframe [PERSISTENT INJECTED SCRIPT CODE!]>
<html>
<head>
<body vlink="#990000" text="#990000" link="#990000" bgcolor="#000000" alink="#999999" dir="ltr">
</html>
</iframe>
</em>
</p>

URL: http://loadbalancer.127.0.0.1:8080/lbadmin/config/changevips.php?mnp=edit&submnp=efip&t=1355527607&l=e

...

Review: Edit Configuration > SSL termination > Modify  [Label] [Ciphers to use]
<pre>
execute(): 'cp /usr/local/etc/certs/server.pem /usr/local/etc/certs/
<h1>label</h1>
.pem' failed: errno 1,
</pre>
<p></p>
<h3>Trace:</h3>
<p></p>
<pre>
#0 /var/www/html/lbadmin/inc/pound.inc(164): execute('cp /usr/local/e...') #1 /var/www/html/lbadmin/config/pound.php(243): pound_vip_add('
<h1>[PERSISTENT INJECTED SCRIPT CODE!]</h1>
', 'ipv4', '10.0.0.20', '443', '10.0.0.20', '80', '
<h1>
[PERSISTENT INJECTED SCRIPT CODE!]
<p></p>
</h1>
</pre>

URL: http://loadbalancer.127.0.0.1:8080/lbadmin/config/pound.php?action=adddata&t=1355504561

...

Review: Edit Configuration > Physical - Advanced Configuration

<p class="error">
Error:
<em>
Input field failed the validation.
<br>
'">
<iframe [PERSISTENT INJECTED SCRIPT CODE!]>
' is not a valid IP address.
</em>
</p>

URL: http://loadbalancer.127.0.0.1:8080/lbadmin/config/physicaladv.php?mnp=edit&submnp=epa&t=1355527441&l=e



Risk:
=====
The security risk of the persistent input validation vulnerabilities are estimated as medium(+).



Credits:
========
Vulnerability Laboratory [Research Team] - Ibrahim El-Sayed (the_storm) [storm@vulnerability-lab.com] [iel-sayed.blogspot.com]


Disclaimer:
===========
The information provided in this advisory is provided as it is without any warranty. Vulnerability-Lab disclaims all warranties,
either expressed or implied, including the warranties of merchantability and capability for a particular purpose. Vulnerability-
Lab or its suppliers are not liable in any case of damage, including direct, indirect, incidental, consequential loss of business
profits or special damages, even if Vulnerability-Lab or its suppliers have been advised of the possibility of such damages. Some
states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation
may not apply. We do not approve or encourage anybody to break any vendor licenses, policies, deface websites, hack into databases
or trade with fraud/stolen material.

Domains:    www.vulnerability-lab.com   	- www.vuln-lab.com			       - www.vulnerability-lab.com/register
Contact:    admin@vulnerability-lab.com 	- support@vulnerability-lab.com 	       - research@vulnerability-lab.com
Section:    video.vulnerability-lab.com 	- forum.vulnerability-lab.com 		       - news.vulnerability-lab.com
Social:	    twitter.com/#!/vuln_lab 		- facebook.com/VulnerabilityLab 	       - youtube.com/user/vulnerability0lab
Feeds:	    vulnerability-lab.com/rss/rss.php	- vulnerability-lab.com/rss/rss_upcoming.php   - vulnerability-lab.com/rss/rss_news.php

Any modified copy or reproduction, including partially usages, of this file requires authorization from Vulnerability Laboratory.
Permission to electronically redistribute this alert in its unmodified form is granted. All other rights, including the use of other
media, are reserved by Vulnerability-Lab Research Team or its suppliers. All pictures, texts, advisories, sourcecode, videos and
other information on this website is trademark of vulnerability-lab team & the specific authors or managers. To record, list (feed),
modify, use or edit our material contact (admin@vulnerability-lab.com or support@vulnerability-lab.com) to get a permission.

    				   	Copyright © 2012 | Vulnerability Laboratory

--
VULNERABILITY RESEARCH LABORATORY
LABORATORY RESEARCH TEAM
CONTACT: research@vulnerability-lab.com