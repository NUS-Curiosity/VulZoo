Title:
======
ManageEngine OpStor v7.4 - Multiple Web Vulnerabilities


Date:
=====
2012-08-17


References:
===========
http://www.vulnerability-lab.com/get_content.php?id=667


VL-ID:
=====
667


Common Vulnerability Scoring System:
====================================
8.1


Introduction:
=============
OpStor is a multi-vendor storage area networks SAN and network attached storage NAS monitoring tool for storage
devices like Storage Arrays, Fabric Switches, Tape Libraries, Host servers and Host Bus Adapters cards from
leading vendors like EMC, HP, IBM, Promise, Fibrenetix, Cisco, Brocade, DELL, ADIC, SUN, QLogic, Emulex, JNI and more.

(Copy of the Vendor Homepage:  http://www.manageengine.com/products/opstor/ )


Abstract:
=========
The Vulnerability Laboratory Research Team discovered multiple Web  Vulnerabilities in OpStor v7.4, Storage Area Network Monitoring.


Report-Timeline:
================
2012-07-30:	Researcher Notification & Coordination
2012-08-01:	Vendor Notification
2012-08-04:	Vendor Response/Feedback
2012-08-17:	Public or Non-Public Disclosure


Status:
========
Published


Affected Products:
==================
Manage Engine
Product: OpStor Monitor v7.4


Exploitation-Technique:
=======================
Remote


Severity:
=========
Critical


Details:
========
1.1
A blind SQL Injection vulnerability is detected in OpStor v7.4, Storage Area Network Monitoring.
The vulnerability allows an attacker (remote) or local low privileged user account to execute a SQL commands on the
affected application dbms. The vulnerability is located in raidMaps.do file with the bound vulnerable name parameter.
Successful exploitation of the vulnerability results in dbms & application compromise. Exploitation requires no user
inter action & without privileged user account.


Vulnerable Module(s):
			[+] raidMaps.do - [name]
Vulnerable File(s):
			[+] raidMaps.do


--- SQL Exception Logs ---
Problem Type
Struts Exception 	Problem Details
Syntax error or access violation message from server:
You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the
right syntax to use near  000123456789 )  at line 1



1.2
A persistent input validation vulnerability is detected in OpStor v7.4, Storage Area Network Monitoring.
The bugs allow remote attackers to implement/inject malicious script code on the application side (persistent).
The persistent vulnerability is located in Alarm reporting module with the bound vulnerable subject parameters.
Successful exploitation of the vulnerability can lead to session hijacking (manager/admin) or stable (persistent) context
manipulation. Exploitation requires low user inter action & privileged user account.

Vulnerable Module(s):
			[+] Alarms -> Alarm reporting -> Escalate Unattended Alarms

Vulnerable Parameter(s):
			[+] Subject


1.3
Multiple non persistent cross site scripting vulnerability is detected in OpStor v7.4, Storage Area Network Monitoring.
The vulnerability allows remote attackers to hijack website customer, moderator or admin sessions with medium or high
required user inter action or local low privileged user account. The vulnerabilities are located in availability730.do
with the bound vulnerable day & name parameters. Successful exploitation can result in account steal, client site phishing
& client-side content request manipulation.

Vulnerable Module(s):
			[+] availability

Vulnerable File(s):
			[+] availability730.do

Vulnerable Parameter(s):
			[+]  Days
			[+]  Name


Proof of Concept:
=================
1.1
The blind SQL injection vulnerability can be exploited by remote attackers without user inter action. For demonstration or reproduce ...

PoC:
http://opstor.127.0.0.1:1338/raidMaps.do?raidId=10000&name=000123456789'+AND+'1'='1')-- -
http://opstor.127.0.0.1:1338/raidMaps.do?raidId=10000&name=000123456789%27+AND+substring(@@version,1,1)='4')-- -
http://opstor.127.0.0.1:1338/raidMaps.do?raidId=10000&name=000123456789%27+AND+(select 1)='1')-- -


1.2
The persistent input validation vulnerability can be exploited by remote attackers with low required user inter action & low
privileged user account. For demonstration or reproduce ...

The attacker create an alarm report and insert in a subject field own malicious javascript or html code.
To create an alarm the attacker needs to go to Alarms -> Alarm reporting -> Escalate Unattended Alarms
Then inject the malicious script code i.e., <iframe src=www.vuln-lab.com onload=alert("VL")/>
When the user browses the alarms page in the control panel the persistent injected script code will be
executed out of the web application context.

1.3
PoC:
http://opstor.127.0.0.1:1338/availability730.do
?days=>"<iframe src=http://www.vuln-lab.com onload=alert("XSS")></iframe>
&name=>"<iframe src=http://www.vuln-lab.com onload=alert("XSS")></iframe>


Risk:
=====
1.1
The security risk of the  blind SQL injection  vulnerability is estimated as critical.

1.2
The security risk of the persistent input validation vulnerability is estimated as medium(+).

1.3
The security risk of the client side cross site vulnerabilities are estimated as low(+).


Credits:
========
Vulnerability Laboratory [Research Team] - Ibrahim El-Sayed (the_storm) [storm@vulnerability-lab.com] [iel-sayed.blogspot.com]


Disclaimer:
===========
The information provided in this advisory is provided as it is without any warranty. Vulnerability-Lab disclaims all warranties,
either expressed or implied, including the warranties of merchantability and capability for a particular purpose. Vulnerability-
Lab or its suppliers are not liable in any case of damage, including direct, indirect, incidental, consequential loss of business
profits or special damages, even if Vulnerability-Lab or its suppliers have been advised of the possibility of such damages. Some
states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation
may not apply. We do not approve or encourage anybody to break any vendor licenses, policies, deface websites, hack into databases
or trade with fraud/stolen material.

Domains:    www.vulnerability-lab.com   	- www.vuln-lab.com			       - www.vulnerability-lab.com/register
Contact:    admin@vulnerability-lab.com 	- support@vulnerability-lab.com 	       - research@vulnerability-lab.com
Section:    video.vulnerability-lab.com 	- forum.vulnerability-lab.com 		       - news.vulnerability-lab.com
Social:	    twitter.com/#!/vuln_lab 		- facebook.com/VulnerabilityLab 	       - youtube.com/user/vulnerability0lab
Feeds:	    vulnerability-lab.com/rss/rss.php	- vulnerability-lab.com/rss/rss_upcoming.php   - vulnerability-lab.com/rss/rss_news.php

Any modified copy or reproduction, including partially usages, of this file requires authorization from Vulnerability Laboratory.
Permission to electronically redistribute this alert in its unmodified form is granted. All other rights, including the use of other
media, are reserved by Vulnerability-Lab Research Team or its suppliers. All pictures, texts, advisories, sourcecode, videos and
other information on this website is trademark of vulnerability-lab team & the specific authors or managers. To record, list (feed),
modify, use or edit our material contact (admin@vulnerability-lab.com or support@vulnerability-lab.com) to get a permission.

    				   	Copyright ï¿½ 2012 | Vulnerability Laboratory




--
VULNERABILITY RESEARCH LABORATORY
LABORATORY RESEARCH TEAM
CONTACT: research@vulnerability-lab.com