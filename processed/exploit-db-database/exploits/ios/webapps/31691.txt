Document Title:
===============
Office Assistant Pro v2.2.2 iOS - File Include Vulnerability


References (Source):
====================
http://www.vulnerability-lab.com/get_content.php?id=1197


Release Date:
=============
2014-02-13


Vulnerability Laboratory ID (VL-ID):
====================================
1197


Common Vulnerability Scoring System:
====================================
6.9


Product & Service Introduction:
===============================
Office Assistant Pro is an All-Powerful office suite specially designed for you to deal with the Office affairs anywhere,
anytime on iPhone, iPad or iPod touch. With Office Assistant Pro, you can high-efficiently manage almost all type of
files by `ONE PAGE` model and make Notes, Reminders, Meeting Recorder as below. The powerful file manager: high-efficiently
File Management in only “ONE PAGE” and easily File Transferred between local and cloud storage. You can complete all of
your operations in `ONE PAGE`.

( Copy of the Homepage: https://itunes.apple.com/us/app/office-assistant-pro-full/id449595696 )


Abstract Advisory Information:
==============================
The Vulnerability Laboratory Research Team discovered a local file include web vulnerability in the official Beijing Elinasoft
Technologies - Office Assistant Pro v2.2.2 iOS mobile web-application.


Vulnerability Disclosure Timeline:
==================================
2014-02-13:    Public Disclosure (Vulnerability Laboratory)


Discovery Status:
=================
Published


Affected Product(s):
====================
Beijing Elinasoft  Technologies
Product: Office Assistant Pro - iOS Mobile Web Application 2.2.2


Exploitation Technique:
=======================
Local


Severity Level:
===============
High


Technical Details & Description:
================================
A local file include web vulnerability has been discovered in the official Beijing Elinasoft Office Assistant Pro v2.2.2 iOS mobile web-application.
The local file include web vulnerability allows remote attackers to unauthorized include local file/path requests or system specific path commands
to compromise the web-application or mobile device.

The web vulnerability is located in the `file name` value of the `Upload` module POST method request. Remote attackers are able to inject own files
with malicious filename to compromise the mobile application. The attack vector is persistent and the request method is POST. The local file/path
include execution occcurs in the main file dir index- or sub category item listing of the file manager. The security risk of the local file include
web vulnerability is estimated as high with a cvss (common vulnerability scoring system) count of 6.8(+)|(-)6.9.

Exploitation of the local file include web vulnerability requires no user interaction or privileged mobile web-application user account with password.
Successful exploitation of the local web vulnerability results in mobile application or connected device component compromise by unauthorized local
file include web attacks.

Request Method(s):
				[+] [POST]

Vulnerable Input(s):
				[+] Upload

Vulnerable Parameter(s):
				[+] filename

Affected Module(s):
				[+] Index File Dir Item Listing


Proof of Concept (PoC):
=======================
The local file include web vulnerability can be exploited by remote attackers without user interaction or privileged mobile application user account.
For security demonstration or to reproduce the local file include web vulnerability follow the provided information and steps below.

Manually exploitation steps to reproduce the vulnerability ...

1. Install the Beijing Elinasoft Office Assistant Pro v2.2.2 iOS mobile web-application
2. Now visit from a remot ecomputer the wifi web-interface of the service
3. Click the upload button and tamper the next request (POST method)
4. Exchange the filename value with your own malicious local file or path request
5. Continue after the intercept and refresh the index file dir
6. The malicious local file request execution occurs in the main file dir index listing
7. Successful reproduce of the vulnerability!


PoC: Index File Dir Item Listing - Upload > [filename]

<tbody><tr><td>Name</td><td width="20px"> </td><td>Last modified</td><td width="20px"> </td>
<td style="text-align:right">Size</td></tr><tr><td colspan="5"><hr></td></tr><tr><td><a href="http://192.168.2.109:8080/User%20Manual/">User Manual/</a></td>
<td> </td><td style="font-size:9pt;">12.02.2014 01:43</td><td> </td><td style="text-align:right; font-size:9pt;">--</td></tr><tr><td colspan="5"><hr></td></tr>
<tr><td><a href="http://localhost:8080/%3%2F./[LOCAL FILE INCLUDE VULNERABILITY!]'<"><%2F./[LOCAL FILE INCLUDE VULNERABILITY!]'<"></a></td><td>
 </td><td style="font-size:9pt;">12.02.2014
01:44</td><td> </td><td
style="text-align:right; font-size:9pt;">    23.8
Kb</td></tr></table></p><form action=""
method="post" enctype="multipart/form-data" name="form1"
id="form1"><input type="file" name="file" id="file"
/></label><label><input type="submit" name="button"
id="button" value="Upload"
/></label></form><p> </p><hr
/><font size="2" style="color:gray">© 2014 Elinasoft
Technologies Ltd. All Rights Reserved.</font><br><font
size="2"><a
href="http://www.x.com">http://www.x.com</a></font><br><font size="2"><a
href="http://x.com/elinasoft">http://x.com/elinasoft</a></font><br><font size="2"><a
href="http://x.com/elinasoft">http://x.com/elinasoft</a></font></body></html></iframe></a></td></tr></tbody>


--- PoC Session Logs [POST] ---


Status: 200[OK]
POST http://localhost:8080/ Load Flags[LOAD_DOCUMENT_URI  LOAD_INITIAL_DOCUMENT_URI  ] Größe des Inhalts[1739] Mime Type[application/x-unknown-content-type]
   Request Header:
      Host[localhost:8080]
      User-Agent[Mozilla/5.0 (Windows NT 6.3; WOW64; rv:26.0) Gecko/20100101 Firefox/26.0]
      Accept[text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8]
      Accept-Language[de-de,de;q=0.8,en-us;q=0.5,en;q=0.3]
      Accept-Encoding[gzip, deflate]
      Referer[http://192.168.2.109:8080/]
      Cookie[jtable%2376270709page-size=10]
      Connection[keep-alive]
   POST-Daten:
      POST_DATA[-----------------------------60102527228942
Content-Disposition: form-data; name="file"; filename="%2F./[LOCAL FILE INCLUDE VULNERABILITY!]'<"
Content-Type: image/jpeg


Reference(s): URL
http://localhost:8080/


Solution - Fix & Patch:
=======================
The local web vulnerability can be patched by a secure parse and input restriction of the vulnerable filename value.
Ensure that the POST method request of the upload function is secure to prevent file include and persistent script code injection attacks.


Security Risk:
==============
The security risk of the local file include web vulnerability is estimated as high(+).


Credits & Authors:
==================
Vulnerability Laboratory [Research Team] - Benjamin Kunz Mejri (bkm@evolution-sec.com) [www.vulnerability-lab.com]


Disclaimer & Information:
=========================
The information provided in this advisory is provided as it is without any warranty. Vulnerability Lab disclaims all warranties,
either expressed or implied, including the warranties of merchantability and capability for a particular purpose. Vulnerability-
Lab or its suppliers are not liable in any case of damage, including direct, indirect, incidental, consequential loss of business
profits or special damages, even if Vulnerability-Lab or its suppliers have been advised of the possibility of such damages. Some
states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation
may not apply. We do not approve or encourage anybody to break any vendor licenses, policies, deface websites, hack into databases
or trade with fraud/stolen material.

Domains:    www.vulnerability-lab.com   	- www.vuln-lab.com			       - www.evolution-sec.com
Contact:    admin@vulnerability-lab.com 	- research@vulnerability-lab.com 	       - admin@evolution-sec.com
Section:    www.vulnerability-lab.com/dev 	- forum.vulnerability-db.com 		       - magazine.vulnerability-db.com
Social:	    twitter.com/#!/vuln_lab 		- facebook.com/VulnerabilityLab 	       - youtube.com/user/vulnerability0lab
Feeds:	    vulnerability-lab.com/rss/rss.php	- vulnerability-lab.com/rss/rss_upcoming.php   - vulnerability-lab.com/rss/rss_news.php

Any modified copy or reproduction, including partially usages, of this file requires authorization from Vulnerability Laboratory.
Permission to electronically redistribute this alert in its unmodified form is granted. All other rights, including the use of other
media, are reserved by Vulnerability-Lab Research Team or its suppliers. All pictures, texts, advisories, source code, videos and
other information on this website is trademark of vulnerability-lab team & the specific authors or managers. To record, list (feed),
modify, use or edit our material contact (admin@vulnerability-lab.com or research@vulnerability-lab.com) to get a permission.

				Copyright © 2014 | Vulnerability Laboratory [Evolution Security]



--
VULNERABILITY LABORATORY RESEARCH TEAM
DOMAIN: www.vulnerability-lab.com
CONTACT: research@vulnerability-lab.com