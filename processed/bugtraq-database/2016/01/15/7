
Date: Fri, 15 Jan 2016 20:15:25 +0100
From: Egidio Romano <research@...mainsecurity.com>
To: bugtraq@...urityfocus.com, fulldisclosure@...lists.org
Subject: [KIS-2016-01] CakePHP <= 3.2.0 "_method" CSRF Protection Bypass Vulnerability

---------------------------------------------------------------
CakePHP <= 3.2.0 "_method" CSRF Protection Bypass Vulnerability
---------------------------------------------------------------


[-] Software Link:

http://cakephp.org


[-] Affected Versions:

Version 3.2.0 RC1 and prior 3.x versions.
Version 2.8.0 RC1 and prior 2.x versions.	


[-] Vulnerability Description:

CakePHP provides some built-in security features including CSRF and Form Tampering protection.
Under certain circumstances it might be possible to bypass such security checks, since they are
performed only when the HTTP request is e.g. POST or PUT. CakePHP’s Router class uses a number
of different indicators to detect the HTTP method being used, like the "_method" POST parameter
and the "X_HTTP_METHOD_OVERRIDE" and "REQUEST_METHOD" headers. By abusing this behavior an
attacker might be able to carry out CSRF attacks against CakePHP applications which do not
check the HTTP method being used before executing side-effects. This is possible by overriding
the HTTP method with a web page like this:

<html>
<body>
<form action="http://[HOST]/user/add" method="POST">
<input name="_method" type="hidden" value="CSRF" />
<input name="user" type="hidden" value="hacker" />
<input name="password" type="hidden" value="pwd" />
</form>
<script>document.forms[0].submit()</script>
</body>
</html>


[-] Solution:

No official solution is currently available. The vendor updated the official documentation
stating that developers should always check the HTTP method before executing side-effects.

NOTE: version 3.1.5 includes a bugfix for this issue stating "CSRF validation is applied to
all HTTP methods that are not ‘GET’, ‘OPTIONS’ or ‘HEAD’. This prevents invalid HTTP methods
from bypassing CSRF validation.", however this is a partial fix which does not solve the
vulnerability, because the bypass might still work by using one of the unprotected HTTP methods.


[-] Disclosure Timeline:

[10/11/2015] - Vendor notified
[26/11/2015] - Vendor tried to mitigate the issue with the following commit: https://git.io/vzcda
[01/12/2015] - Vendor response stating this issue has been addressed in version 3.1.5 and the documentation has been updated
[01/12/2015] - CVE number requested
[01/12/2015] - CVE number assigned
[12/01/2016] - Public disclosure


[-] CVE Reference:

The Common Vulnerabilities and Exposures project (cve.mitre.org)
has assigned the name CVE-2015-8379 to this vulnerability.


[-] Credits:

Vulnerability discovered by Egidio Romano of Minded Security.


[-] Original Advisory:

http://karmainsecurity.com/KIS-2016-01


[-] Other References:

http://blog.mindedsecurity.com/2016/01/request-parameter-method-may-lead-to.html
