diff --git a/controle/QuadroHorarioControle.php b/controle/QuadroHorarioControle.php
index d7e278b8..352b5af0 100755
--- a/controle/QuadroHorarioControle.php
+++ b/controle/QuadroHorarioControle.php
@@ -5,28 +5,42 @@ class QuadroHorarioControle
 {
     // Tipos
 
-    public function listarTipo(){
+    public function listarTipo()
+    {
         extract($_REQUEST);
         (new QuadroHorarioDAO())->listarTipos();
         header("Location: $nextPage");
     }
 
-    public function adicionarTipo(){
-        extract($_REQUEST);
+    public function adicionarTipo()
+    {
+        $tipo = trim(filter_input(INPUT_POST, 'tipo', FILTER_SANITIZE_STRING));
+        $nextPage = trim(filter_input(INPUT_POST, 'nextPage', FILTER_SANITIZE_URL));
+
+        if (!$tipo || strlen($tipo) == 0) {
+            http_response_code(400);
+            echo json_encode(['erro' => 'O tipo não pode ser vazio.']);
+            exit();
+        }
+
         session_start();
         try {
             $log = (new QuadroHorarioDAO())->adicionarTipo($tipo);;
             $_SESSION['msg'] = $log;
         } catch (PDOException $e) {
-            echo("Erro ao adicionar tipo '$tipo' ao banco de dados: " . $e->getMessage());
+            echo ("Erro ao adicionar tipo '$tipo' ao banco de dados: " . $e->getMessage());
             $_SESSION['msg'] = "Erro ao adicionar tipo: " . $e->getMessage();
             $_SESSION['flag'] = "erro";
         }
         $_SESSION['btnVoltar'] = true;
-        header("Location: $nextPage");
+
+        if ($nextPage) {
+            header("Location: $nextPage");
+        }
     }
 
-    public function removerTipo(){
+    public function removerTipo()
+    {
         extract($_REQUEST);
         $log = (new QuadroHorarioDAO)->removerTipo($id);
         session_start();
@@ -36,17 +50,19 @@ public function removerTipo(){
 
     // Escalas
 
-    public function listarEscala(){
+    public function listarEscala()
+    {
         extract($_REQUEST);
         (new QuadroHorarioDAO())->listarEscalas();
         header("Location: $nextPage");
     }
 
-    public function adicionarEscala(){
+    public function adicionarEscala()
+    {
         $escala = trim(filter_input(INPUT_POST, 'escala', FILTER_SANITIZE_STRING));
         $nextPage = trim(filter_input(INPUT_POST, 'nextPage', FILTER_SANITIZE_URL));
 
-        if(!$escala || strlen($escala) == 0){
+        if (!$escala || strlen($escala) == 0) {
             http_response_code(400);
             echo json_encode(['erro' => 'A escala não pode ser vazia.']);
             exit();
@@ -57,22 +73,23 @@ public function adicionarEscala(){
             $log = (new QuadroHorarioDAO())->adicionarEscala($escala);
             $_SESSION['msg'] = $log;
         } catch (PDOException $e) {
-            echo("Erro ao adicionar escala '$escala' ao banco de dados: " . $e->getMessage());
+            echo ("Erro ao adicionar escala '$escala' ao banco de dados: " . $e->getMessage());
             $_SESSION['msg'] = "Erro ao adicionar escala: " . $e->getMessage();
             $_SESSION['flag'] = "erro";
         }
         $_SESSION['btnVoltar'] = true;
 
-        if($nextPage){
+        if ($nextPage) {
             header("Location: $nextPage");
         }
     }
 
-    public function removerEscala(){
+    public function removerEscala()
+    {
         extract($_REQUEST);
         $log = (new QuadroHorarioDAO)->removerEscala($id);
         session_start();
         $_SESSION['msg'] = $log;
         header("Location: $nextPage");
     }
-}
\ No newline at end of file
+}
diff --git a/html/funcionario/cadastro_funcionario.php b/html/funcionario/cadastro_funcionario.php
index d4a3d3c0..8a17754d 100755
--- a/html/funcionario/cadastro_funcionario.php
+++ b/html/funcionario/cadastro_funcionario.php
@@ -286,7 +286,7 @@
                         $pdo = Conexao::connect();
                         $escala = $pdo->query("SELECT * FROM escala_quadro_horario;")->fetchAll(PDO::FETCH_ASSOC);
                         foreach ($escala as $key => $value) {
-                          echo ("<option value=" . $value["id_escala"] . ">" . $value["descricao"] . "</option>");
+                          echo ("<option value=" . $value["id_escala"] . ">" . htmlspecialchars($value["descricao"]) . "</option>");
                         }
                         ?>
                       </select>
@@ -302,7 +302,7 @@
                         $pdo = Conexao::connect();
                         $tipo = $pdo->query("SELECT * FROM tipo_quadro_horario;")->fetchAll(PDO::FETCH_ASSOC);
                         foreach ($tipo as $key => $value) {
-                          echo ("<option value=" . $value["id_tipo"] . ">" . $value["descricao"] . "</option>");
+                          echo ("<option value=" . $value["id_tipo"] . ">" . htmlspecialchars($value["descricao"]) . "</option>");
                         }
                         ?>
                       </select>
