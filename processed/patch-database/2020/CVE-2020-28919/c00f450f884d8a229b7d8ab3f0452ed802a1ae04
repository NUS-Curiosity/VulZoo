diff --git a/cmk/gui/escaping.py b/cmk/gui/escaping.py
index 1761d449e23..03dcdda9ed3 100644
--- a/cmk/gui/escaping.py
+++ b/cmk/gui/escaping.py
@@ -30,8 +30,9 @@
 
 _UNESCAPER_TEXT = re.compile(
     r'&lt;(/?)(h1|h2|b|tt|i|u|br(?: /)?|nobr(?: /)?|pre|a|sup|p|li|ul|ol)&gt;')
-_QUOTE = re.compile(r"(?:&quot;|&#x27;)")
-_A_HREF = re.compile(r'&lt;a href=((?:&quot;|&#x27;).*?(?:&quot;|&#x27;))&gt;')
+_A_HREF = re.compile(
+    r'&lt;a href=(?:(?:&quot;|&#x27;)(.*?)(?:&quot;|&#x27;))(?: target=(?:(?:&quot;|&#x27;)(.*?)(?:&quot;|&#x27;)))?&gt;'
+)
 
 
 # TODO: Cleanup the accepted types!
@@ -111,8 +112,16 @@ def escape_text(text: EscapableEntity) -> str:
     text = escape_attribute(text)
     text = _UNESCAPER_TEXT.sub(r'<\1\2>', text)
     for a_href in _A_HREF.finditer(text):
-        text = text.replace(a_href.group(0), u"<a href=%s>" % _QUOTE.sub(u"\"", a_href.group(1)))
-    return text.replace(u"&amp;nbsp;", u"&nbsp;")
+        href = a_href.group(1)
+        target = a_href.group(2)
+
+        if target:
+            unescaped_tag = "<a href=\"%s\" target=\"%s\">" % (href, target)
+        else:
+            unescaped_tag = "<a href=\"%s\">" % href
+
+        text = text.replace(a_href.group(0), unescaped_tag)
+    return text.replace("&amp;nbsp;", u"&nbsp;")
 
 
 def strip_scripts(ht: str) -> str:
diff --git a/tests/unit/cmk/gui/test_htmllib_Escaper.py b/tests/unit/cmk/gui/test_htmllib_Escaper.py
index c96ef1b6aea..3a34499bad4 100644
--- a/tests/unit/cmk/gui/test_htmllib_Escaper.py
+++ b/tests/unit/cmk/gui/test_htmllib_Escaper.py
@@ -56,6 +56,9 @@ def test_unescape_attribute(inp, out):
         ("<ol></ol>", None),
         ("<a href=\"xyz\">abc</a>", None),
         ("<a href=\"xyz\" target=\"123\">abc</a>", None),
+        # Links with target 1st and href 2nd will not be unescaped
+        ("<a target=\"123\" href=\"xyz\">abc</a>",
+         "&lt;a target=&quot;123&quot; href=&quot;xyz&quot;&gt;abc</a>"),
         ("blah<a href=\"link0\">aaa</a>blah<a href=\"link1\" target=\"ttt\">bbb</a>", None),
         ("\"I am not a link\" target=\"still not a link\"",
          "&quot;I am not a link&quot; target=&quot;still not a link&quot;"),
@@ -69,6 +72,8 @@ def test_unescape_attribute(inp, out):
             "<a href=\"xyz\">abc</a>&lt;script&gt;alert(1)&lt;/script&gt;<a href=\"xyz\">abc</a>",
         ),
         ("&nbsp;", None),
+        # At the moment also javascript URLs are accepted. This will be refused in the next step
+        ("<a href=\"javascript:alert(1)\">abc</a>", None),
     ])
 def test_escape_text(inp, out):
     if out is None:
