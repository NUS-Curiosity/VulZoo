diff --git a/src/PrestaShopBundle/Controller/Admin/AttachementProductController.php b/src/PrestaShopBundle/Controller/Admin/AttachementProductController.php
index 150ec246ab4bd..cce49b897c08e 100644
--- a/src/PrestaShopBundle/Controller/Admin/AttachementProductController.php
+++ b/src/PrestaShopBundle/Controller/Admin/AttachementProductController.php
@@ -26,6 +26,7 @@
 
 namespace PrestaShopBundle\Controller\Admin;
 
+use PrestaShopBundle\Security\Annotation\AdminSecurity;
 use Symfony\Component\HttpFoundation\JsonResponse;
 use Symfony\Component\HttpFoundation\Request;
 
@@ -37,10 +38,12 @@ class AttachementProductController extends FrameworkBundleAdminController
     /**
      * Manage form add product attachment.
      *
+     * @AdminSecurity("is_granted(['create', 'update'], 'ADMINPRODUCTS_')")
+     *
      * @param int $idProduct
      * @param Request $request
      *
-     * @return string
+     * @return JsonResponse
      */
     public function addAction($idProduct, Request $request)
     {
diff --git a/src/PrestaShopBundle/Controller/Admin/CombinationController.php b/src/PrestaShopBundle/Controller/Admin/CombinationController.php
index 86f7faaa0f870..d05f556cf68ab 100644
--- a/src/PrestaShopBundle/Controller/Admin/CombinationController.php
+++ b/src/PrestaShopBundle/Controller/Admin/CombinationController.php
@@ -27,11 +27,19 @@
 namespace PrestaShopBundle\Controller\Admin;
 
 use PrestaShopBundle\Form\Admin\Product\ProductCombination;
+use PrestaShopBundle\Security\Annotation\AdminSecurity;
 use Symfony\Component\HttpFoundation\JsonResponse;
 use Symfony\Component\HttpFoundation\Response;
 
 class CombinationController extends FrameworkBundleAdminController
 {
+    /**
+     * Generate combination
+     *
+     * @AdminSecurity("is_granted(['create', 'update'], 'ADMINPRODUCTS_')")
+     *
+     * @return Response
+     */
     public function generateCombinationFormAction($combinationIds)
     {
         $response = new Response();
@@ -62,11 +70,13 @@ public function generateCombinationFormAction($combinationIds)
     }
 
     /**
-     * get All Combinations for a product.
+     * Get all Combinations for a product.
+     *
+     * @AdminSecurity("is_granted(['read'], 'ADMINPRODUCTS_')")
      *
      * @param int $idProduct The product id
      *
-     * @return string Json
+     * @return JsonResponse
      */
     public function getProductCombinationsAction($idProduct)
     {
diff --git a/src/PrestaShopBundle/Controller/Admin/SpecificPriceController.php b/src/PrestaShopBundle/Controller/Admin/SpecificPriceController.php
index 9973beb05f244..0c97b5cfe8f4f 100644
--- a/src/PrestaShopBundle/Controller/Admin/SpecificPriceController.php
+++ b/src/PrestaShopBundle/Controller/Admin/SpecificPriceController.php
@@ -28,10 +28,11 @@
 
 use DateTime;
 use Exception;
+use PrestaShopBundle\Form\Admin\Product\ProductSpecificPrice as SpecificPriceFormType;
+use PrestaShopBundle\Security\Annotation\AdminSecurity;
 use PrestaShop\PrestaShop\Adapter\Product\AdminProductWrapper;
 use PrestaShop\PrestaShop\Core\Foundation\Database\EntityDataInconsistencyException;
 use PrestaShop\PrestaShop\Core\Foundation\Database\EntityNotFoundException;
-use PrestaShopBundle\Form\Admin\Product\ProductSpecificPrice as SpecificPriceFormType;
 use Sensio\Bundle\FrameworkExtraBundle\Configuration\Template;
 use Symfony\Component\HttpFoundation\JsonResponse;
 use Symfony\Component\HttpFoundation\Request;
@@ -43,11 +44,13 @@
 class SpecificPriceController extends FrameworkBundleAdminController
 {
     /**
-     * get specific price list for a product.
+     * Get specific price list for a product.
+     *
+     * @AdminSecurity("is_granted(['read'], 'ADMINPRODUCTS_')")
      *
      * @param $idProduct The product ID
      *
-     * @return string JSON
+     * @return JsonResponse
      */
     public function listAction($idProduct)
     {
@@ -86,9 +89,11 @@ public function listAction($idProduct)
     /**
      * Add specific price Form process.
      *
+     * @AdminSecurity("is_granted(['create', 'update'], 'ADMINPRODUCTS_')")
+     *
      * @param Request $request The request
      *
-     * @return string
+     * @return JsonResponse
      */
     public function addAction(Request $request)
     {
@@ -111,6 +116,8 @@ public function addAction(Request $request)
      *
      * @Template("@PrestaShop/Admin/Product/ProductPage/Forms/form_specific_price.html.twig")
      *
+     * @AdminSecurity("is_granted(['create', 'update'], 'ADMINPRODUCTS_')")
+     *
      * @param int $idSpecificPrice
      *
      * @return array
@@ -157,10 +164,12 @@ public function getUpdateFormAction($idSpecificPrice)
     /**
      * Update specific price Form process.
      *
+     * @AdminSecurity("is_granted(['create', 'update'], 'ADMINPRODUCTS_')")
+     *
      * @param int idSpecificPrice
      * @param Request $request
      *
-     * @return string
+     * @return JsonResponse
      */
     public function updateAction($idSpecificPrice, Request $request)
     {
@@ -185,10 +194,12 @@ public function updateAction($idSpecificPrice, Request $request)
     /**
      * Delete a specific price.
      *
+     * @AdminSecurity("is_granted(['delete'], 'ADMINPRODUCTS_')")
+     *
      * @param int $idSpecificPrice The specific price ID
      * @param Request $request The request
      *
-     * @return string
+     * @return JsonResponse
      */
     public function deleteAction($idSpecificPrice, Request $request)
     {
@@ -253,7 +264,7 @@ private function formatSpecificPriceToPrefillForm($id, $price)
     /**
      * @param string $dateAsString
      *
-     * @return string|null If date is 0000-00-00 00:00:00, null is returned
+     * @return JsonResponse|null If date is 0000-00-00 00:00:00, null is returned
      *
      * @throws \PrestaShopDatabaseExceptionCore if date is not valid
      */
