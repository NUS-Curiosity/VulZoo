diff --git a/internal/x3f_tools.h b/internal/x3f_tools.h
index 6d8012d8..7e1de0ec 100644
--- a/internal/x3f_tools.h
+++ b/internal/x3f_tools.h
@@ -213,6 +213,7 @@ typedef struct x3f_huffnode_s
 typedef struct x3f_hufftree_s
 {
   uint32_t free_node_index; /* Free node index in huffman tree array */
+  uint32_t total_node_index;
   x3f_huffnode_t *nodes;    /* Coding tree */
 } x3f_hufftree_t;
 
diff --git a/src/x3f/x3f_utils_patched.cpp b/src/x3f/x3f_utils_patched.cpp
index 9ed2da54..8d59df06 100644
--- a/src/x3f/x3f_utils_patched.cpp
+++ b/src/x3f/x3f_utils_patched.cpp
@@ -179,6 +179,7 @@ static void new_huffman_tree(x3f_hufftree_t *HTP, int bits)
   int leaves = 1 << bits;
 
   HTP->free_node_index = 0;
+  HTP->total_node_index = HUF_TREE_MAX_NODES(leaves);
   HTP->nodes = (x3f_huffnode_t *)calloc(1, HUF_TREE_MAX_NODES(leaves) *
                                                sizeof(x3f_huffnode_t));
 }
@@ -708,6 +709,8 @@ static char *display_code(int length, uint32_t code, char *buffer)
 
 static x3f_huffnode_t *new_node(x3f_hufftree_t *tree)
 {
+	if (tree->free_node_index >= tree->total_node_index)
+		throw LIBRAW_EXCEPTION_IO_CORRUPT;
   x3f_huffnode_t *t = &tree->nodes[tree->free_node_index];
 
   t->branch[0] = NULL;
