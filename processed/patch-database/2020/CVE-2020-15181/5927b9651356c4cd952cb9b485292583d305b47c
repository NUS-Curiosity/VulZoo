diff --git a/.gitignore b/.gitignore
index 91d066c9..039cbe4c 100644
--- a/.gitignore
+++ b/.gitignore
@@ -1,4 +1,5 @@
 *.iml
 /.idea/
-/resetPassword/target/
-/resetPassword-share/target/
+/_docker/logs.txt
+/alfresco-resetpassword/target/
+/share-resetpassword/target/
diff --git a/README.md b/README.md
index 4afb179e..6a0f3ce3 100644
--- a/README.md
+++ b/README.md
@@ -26,13 +26,15 @@ Alfresco Reset Password add-on is a great thing that allows you to solve missing
  ![](readme_resources/3-config.png)
 
 # Compatibility was tested on versions:
+ - Alfresco 5.0d
+ - Alfresco 5.1
  - Alfresco 5.2
- - Alfresco 6.0.7
- - Alfresco 6.2.0
+ - Alfresco 6.0.7-ga
+ - Alfresco 6.2.0-ga
 
 # How to build
 ### The following tools must be installed:
-- Java8
+- Java11
 - Maven3
 
 ### Required settings
@@ -48,6 +50,9 @@ Alfresco Reset Password add-on is a great thing that allows you to solve missing
    mail.from.enabled=false
    mail.from.default={default sending email}
    ```
+- It is highly recommended to change secure salt property as well that us used in token generation.
+To generate new one use any BCrypt hash generator. First 29 characters is salt
+```fs.passreset.salt=```
 
 ### Build steps
 1. Clone repo
@@ -72,8 +77,8 @@ $ mvn clean package
 
 1. Compile AMPs for alfresco and share how described above
 2. Stop Alfresco
-3. Copy file ResetPasswordAddon/resetPassword/target/reset-password-repo.amp into ${Alfresco_HOME}/amps folder
-4. Copy file ResetPasswordAddon/resetPassword-share/target/reset-password-share.amp into ${Alfresco_HOME}/amps_share folder
+3. Copy file ResetPasswordAddon/resetPassword/target/reset-password-repo-${version}.amp into ${Alfresco_HOME}/amps folder
+4. Copy file ResetPasswordAddon/resetPassword-share/target/reset-password-share-${version}.amp into ${Alfresco_HOME}/amps_share folder
 5. Apply AMPs by executing command from command line
 ```sh
 $ cd ${Alfresco_HOME}/bin
@@ -81,3 +86,24 @@ $ apply_amps.sh -force
 ```
 6. Start Alfresco
 
+##How to setup dev environment:
+You need to have installed docker and configured to use without root privileges https://docs.docker.com/install
+
+1. Add **Remote** Debugger cofiguration.
+![](readme_resources/1-configuration.png)
+
+1. Configure **Before launch: Tool window** and point at **start.sh** or **start.bat** as executable script.
+(files within _docker folder should be executable).
+![](readme_resources/4-configuration.png)
+![](readme_resources/2-configuration.png)
+
+1. Point at **logs.txt** as logs file.
+![](readme_resources/3-configuration.png)
+
+All alfresco configuration placed in **docker-compose.yml**. You can place additional configuration there if you need
+
+To stop docker containers use **stop-all.sh** or **stop-all.bat** script.
+**start.sh|bat** script also stops containers and starts again
+
+To debug Share app java code create new **Remote** configuration. Use port 5006
+
diff --git a/_docker/REFRESH-WS-intelij.http b/_docker/REFRESH-WS-intelij.http
new file mode 100755
index 00000000..46f919c5
--- /dev/null
+++ b/_docker/REFRESH-WS-intelij.http
@@ -0,0 +1,7 @@
+POST http://localhost:8080/share/page/index
+Content-Type: application/x-www-form-urlencoded
+Authorization: Basic YWRtaW46YWRtaW4=
+
+reset=on
+
+###
\ No newline at end of file
diff --git a/_docker/docker-compose.yml b/_docker/docker-compose.yml
new file mode 100755
index 00000000..b4a95a79
--- /dev/null
+++ b/_docker/docker-compose.yml
@@ -0,0 +1,142 @@
+
+version: "2"
+
+services:
+    alfresco-resetpassword:
+        # image: alfresco/alfresco-content-repository-community:6.2.0-ga
+        build: ./../alfresco-resetpassword
+        environment:
+            CATALINA_OPTS: "-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=0.0.0.0:8888"
+            JAVA_OPTS : "
+                -Ddb.driver=org.postgresql.Driver
+                -Ddb.username=alfresco
+                -Ddb.password=alfresco
+                -Ddb.url=jdbc:postgresql://postgres-resetpassword:5432/alfresco
+                -Dsolr.host=solr6-resetpassword
+                -Dsolr.port=8983
+                -Dsolr.secureComms=none
+                -Dsolr.base.url=/solr
+                -Dindex.subsystem.name=solr6
+
+                -Ddeployment.method=DOCKER_COMPOSE
+                -Dcsrf.filter.enabled=false
+                -Dmessaging.subsystem.autoStart=false
+
+                -Dlocal.transform.service.enabled=true
+                -DlocalTransform.pdfrenderer.url=http://alfresco-pdf-renderer:8090/
+                -DlocalTransform.imagemagick.url=http://imagemagick:8090/
+                -DlocalTransform.libreoffice.url=http://libreoffice:8090/
+                -DlocalTransform.tika.url=http://tika:8090/
+                -DlocalTransform.misc.url=http://transform-misc:8090/
+                -Dlegacy.transform.service.enabled=true
+                -Dalfresco-pdf-renderer.url=http://alfresco-pdf-renderer:8090/
+                -Djodconverter.url=http://libreoffice:8090/
+                -Dimg.url=http://imagemagick:8090/
+                -Dtika.url=http://tika:8090/
+                -Dtransform.misc.url=http://transform-misc:8090/
+
+                -Xms1500m -Xmx1500m
+                "
+        ports:
+            - 8082:8080 #Browser port
+            - 5005:8888
+            - 2121:2121
+        links:
+            - postgres-resetpassword
+        volumes:
+            - alf_data-resetpassword:/usr/local/tomcat/alf_data
+            - ./../alfresco-resetpassword/_lib:/usr/local/tomcat/webapps/alfresco/development/lib
+            - ./../alfresco-resetpassword/target/classes:/usr/local/tomcat/webapps/alfresco/development/classes
+            - ./../alfresco-resetpassword/context.xml:/usr/local/tomcat/webapps/alfresco/META-INF/context.xml
+
+    alfresco-pdf-renderer:
+        image: alfresco/alfresco-pdf-renderer:2.1.0
+        mem_limit: 1g
+        environment:
+            JAVA_OPTS: " -Xms256m -Xmx512m"
+        expose:
+            - 8090
+
+    imagemagick:
+        image: alfresco/alfresco-imagemagick:2.1.0
+        mem_limit: 1g
+        environment:
+            JAVA_OPTS: " -Xms256m -Xmx512m"
+        expose:
+            - 8090
+
+    libreoffice:
+        image: alfresco/alfresco-libreoffice:2.1.0
+        mem_limit: 1g
+        environment:
+            JAVA_OPTS: " -Xms256m -Xmx512m"
+        expose:
+            - 8090
+
+    tika:
+        image: alfresco/alfresco-tika:2.1.0
+        mem_limit: 1g
+        environment:
+            JAVA_OPTS: " -Xms256m -Xmx512m"
+        expose:
+            - 8090
+
+    transform-misc:
+        image: alfresco/alfresco-transform-misc:2.1.0
+        mem_limit: 1g
+        environment:
+            JAVA_OPTS: " -Xms256m -Xmx512m"
+        expose:
+            - 8090
+
+
+    share-resetpassword:
+        # image: alfresco/alfresco-share:6.2.0
+        build: ./../share-resetpassword
+        environment:
+            - REPO_HOST=alfresco-resetpassword
+            - REPO_PORT=8080
+            - JAVA_OPTS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5006
+        ports:
+            - 8080:8080
+            - 5006:5006
+        volumes:
+            - ./../share-resetpassword/_lib:/usr/local/tomcat/webapps/share/development/lib
+            - ./../share-resetpassword/target/classes:/usr/local/tomcat/webapps/share/development/classes
+            - ./../share-resetpassword/context.xml:/usr/local/tomcat/webapps/share/META-INF/context.xml
+            - ./../share-resetpassword/src/main/resources/web:/usr/local/tomcat/webapps/share/development/web
+
+    postgres-resetpassword:
+        image: postgres:11.4
+        environment:
+            - POSTGRES_PASSWORD=alfresco
+            - POSTGRES_USER=alfresco
+            - POSTGRES_DB=alfresco
+        command: postgres -c max_connections=300 -c log_min_messages=LOG
+        ports:
+            - 5435:5432
+
+    solr6-resetpassword:
+        image: alfresco/alfresco-search-services:1.4.0
+        environment:
+            #Solr needs to know how to register itself with Alfresco
+            - SOLR_ALFRESCO_HOST=alfresco-resetpassword
+            - SOLR_ALFRESCO_PORT=8080
+            #Alfresco needs to know how to call solr
+            - SOLR_SOLR_HOST=solr6-resetpassword
+            - SOLR_SOLR_PORT=8983
+            #Create the default alfresco and archive cores
+            - SOLR_CREATE_ALFRESCO_DEFAULTS=alfresco,archive
+            - ALFRESCO_SECURE_COMMS=none
+        ports:
+            - 8983
+
+    activemq-resetpassword:
+        image: alfresco/alfresco-activemq:5.15.8
+        ports:
+            - 8161 # Web Console
+            - 5672 # AMQP
+            - 61616 # OpenWire
+            - 61613 # STOMP
+volumes:
+    alf_data-resetpassword:
\ No newline at end of file
diff --git a/_docker/linux/docker-compose-linux b/_docker/linux/docker-compose-linux
new file mode 100755
index 00000000..2a9e942d
Binary files /dev/null and b/_docker/linux/docker-compose-linux differ
diff --git a/_docker/linux/start.sh b/_docker/linux/start.sh
new file mode 100755
index 00000000..ee572b51
--- /dev/null
+++ b/_docker/linux/start.sh
@@ -0,0 +1,8 @@
+mvn -f ../../pom.xml clean package
+
+rm ../logs.txt
+./docker-compose-linux -f ../docker-compose.yml stop
+./docker-compose-linux -f ../docker-compose.yml up --no-start --no-recreate
+./docker-compose-linux -f ../docker-compose.yml start
+./docker-compose-linux -f ../docker-compose.yml logs -f --tail=0  >> ../logs.txt &
+sleep 5
\ No newline at end of file
diff --git a/_docker/linux/stop-all.sh b/_docker/linux/stop-all.sh
new file mode 100755
index 00000000..2dc89504
--- /dev/null
+++ b/_docker/linux/stop-all.sh
@@ -0,0 +1,2 @@
+BASEDIR=$(dirname "$0")
+$BASEDIR/docker-compose-linux -f $BASEDIR/../docker-compose.yml stop
\ No newline at end of file
diff --git a/_docker/windows/docker-compose-Windows-x86_64.exe b/_docker/windows/docker-compose-Windows-x86_64.exe
new file mode 100755
index 00000000..020955cc
Binary files /dev/null and b/_docker/windows/docker-compose-Windows-x86_64.exe differ
diff --git a/_docker/windows/start.bat b/_docker/windows/start.bat
new file mode 100755
index 00000000..165023b7
--- /dev/null
+++ b/_docker/windows/start.bat
@@ -0,0 +1,11 @@
+@ECHO OFF
+chcp 65001
+set BASEDIR=%~dp0
+
+call %BASEDIR%docker-compose-Windows-x86_64.exe -f %BASEDIR%..\docker-compose.yml stop
+call mvn -f %BASEDIR%..\..\pom.xml clean package
+del %BASEDIR%..\logs.txt
+call %BASEDIR%docker-compose-Windows-x86_64.exe -f %BASEDIR%..\docker-compose.yml up  --no-recreate --no-start
+start /B %BASEDIR%docker-compose-Windows-x86_64.exe -f %BASEDIR%..\docker-compose.yml start
+PING localhost -n 20 >NUL
+start /B %BASEDIR%docker-compose-Windows-x86_64.exe -f %BASEDIR%..\docker-compose.yml logs -f --tail=0 > %BASEDIR%..\logs.txt
diff --git a/_docker/windows/stop-all.bat b/_docker/windows/stop-all.bat
new file mode 100755
index 00000000..6bae7673
--- /dev/null
+++ b/_docker/windows/stop-all.bat
@@ -0,0 +1,2 @@
+set BASEDIR=%~dp0
+call %BASEDIR%docker-compose-Windows-x86_64.exe -f %BASEDIR%..\docker-compose.yml stop
\ No newline at end of file
diff --git a/_documentation/readme.md b/_documentation/readme.md
deleted file mode 100644
index 8223b835..00000000
--- a/_documentation/readme.md
+++ /dev/null
@@ -1,6 +0,0 @@
-###This add-on supports *Alfresco Multitenancy*
-
-If you install this add-on after creation tenants, you need:
-
- - to upload file **{alfresco.installation.folder}/tomcat/webapps/alfresco/WEB-INF/classes/alfresco/extension/workflow/ResetPasswordProcess.bpmn20.xml** into alfresco repository **/Data Dictionary/Workflow Definitions** folder (into each tenant):
- - to upload file **{alfresco.installation.folder}/tomcat/webapps/alfresco/WEB-INF/classes/alfresco/module/resetPassword/bootstrap/reset-password.ftl** into alfresco repository **/Data Dictionary/Email Templates/Workflow Notification** folder (into each tenant):
diff --git a/_documentation/reset-password.ftl b/_documentation/reset-password.ftl
deleted file mode 100644
index b1a44f95..00000000
--- a/_documentation/reset-password.ftl
+++ /dev/null
@@ -1,90 +0,0 @@
-<html>
-<head>
-    <style type="text/css"><!--
-    body {
-        font-family: Arial, sans-serif;
-        font-size: 14px;
-        color: #4c4c4c;
-    }
-
-    a, a:visited {
-        color: #0072cf;
-    }
-
-    --></style>
-</head>
-
-<body bgcolor="#dddddd">
-<table width="100%" cellpadding="20" cellspacing="0" border="0" bgcolor="#dddddd">
-    <tr>
-        <td width="100%" align="center">
-            <table width="70%" cellpadding="0" cellspacing="0" bgcolor="white"
-                   style="background-color: white; border: 1px solid #aaaaaa;">
-                <tr>
-                    <td width="100%">
-                        <table width="100%" cellpadding="0" cellspacing="0" border="0">
-                            <tr>
-                                <td style="padding: 10px 30px 0px;">
-                                    <table width="100%" cellpadding="0" cellspacing="0" border="0">
-                                        <tr>
-                                            <td>
-                                                <table cellpadding="0" cellspacing="0" border="0">
-                                                    <tr>
-                                                        <td>
-                                                            <img src="${shareUrl}/res/components/images/no-user-photo-64.png"
-                                                                 alt="" width="64" height="64" border="0"
-                                                                 style="padding-right: 20px;"/>
-                                                        </td>
-                                                        <td>
-                                                            <div style="font-size: 22px; padding-bottom: 4px;">
-                                                                Change password for Alfresco ${productName!""} account
-                                                            </div>
-                                                            <div style="font-size: 13px;">
-                                                            ${date?datetime?string.full}
-                                                            </div>
-                                                        </td>
-                                                    </tr>
-                                                </table>
-                                                <div style="font-size: 14px; margin: 12px 0px 24px 0px; padding-top: 10px; border-top: 1px solid #aaaaaa;">
-                                                    <p>Dear ${assignee.firstname},</p>
-
-                                                    <p>we received a request for password change
-                                                        at ${shareUrl}</p>
-
-                                                    <br/><a href="${shareUrl}/page/changePassWF?userToken=${userToken}&taskId=${taskId}&token=${token}">Go to
-                                                    this link</a> to set your new password.
-                                                    The link will be active for 24 hours.</p>
-
-                                                    <p>Sincerely,<br/>
-                                                        Alfresco ${productName!""}</p>
-                                                </div>
-                                            </td>
-                                        </tr>
-                                    </table>
-                                </td>
-                            </tr>
-                            <tr>
-                                <td>
-                                    <div style="border-top: 1px solid #aaaaaa;">&nbsp;</div>
-                                </td>
-                            </tr>
-                            <tr>
-                                <td>
-                                    <div style="border-bottom: 1px solid #aaaaaa;">&nbsp;</div>
-                                </td>
-                            </tr>
-                            <tr>
-                                <td style="padding: 10px 30px;">
-                                    <img src="${shareUrl}/themes/default/images/app-logo.png" alt="" width="145"
-                                         height="32" border="0"/>
-                                </td>
-                            </tr>
-                        </table>
-                    </td>
-                </tr>
-            </table>
-        </td>
-    </tr>
-</table>
-</body>
-</html>
\ No newline at end of file
diff --git a/_lib/ml-ant-http-1.1.1.jar b/_lib/ml-ant-http-1.1.1.jar
deleted file mode 100644
index 0c311931..00000000
Binary files a/_lib/ml-ant-http-1.1.1.jar and /dev/null differ
diff --git a/alfresco-resetpassword/Dockerfile b/alfresco-resetpassword/Dockerfile
new file mode 100644
index 00000000..fab363d8
--- /dev/null
+++ b/alfresco-resetpassword/Dockerfile
@@ -0,0 +1,13 @@
+FROM alfresco/alfresco-content-repository-community:6.2.0-ga
+
+ARG TOMCAT_DIR=/usr/local/tomcat
+
+USER root
+
+
+# Copy Dockerfile to avoid an error if no AMPs exist
+COPY Dockerfile _amps/*.amp $TOMCAT_DIR/amps/
+RUN java -jar $TOMCAT_DIR/alfresco-mmt/alfresco-mmt*.jar install \
+              $TOMCAT_DIR/amps $TOMCAT_DIR/webapps/alfresco -directory -nobackup -force
+
+USER ${USERNAME}
\ No newline at end of file
diff --git a/alfresco-resetpassword/_amps/README.txt b/alfresco-resetpassword/_amps/README.txt
new file mode 100644
index 00000000..e69de29b
diff --git a/alfresco-resetpassword/_lib/README.txt b/alfresco-resetpassword/_lib/README.txt
new file mode 100644
index 00000000..e69de29b
diff --git a/alfresco-resetpassword/amp.xml b/alfresco-resetpassword/amp.xml
new file mode 100644
index 00000000..f6d7e91a
--- /dev/null
+++ b/alfresco-resetpassword/amp.xml
@@ -0,0 +1,39 @@
+<assembly xmlns="http://maven.apache.org/ASSEMBLY/2.0.0"
+          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+          xsi:schemaLocation="http://maven.apache.org/ASSEMBLY/2.0.0 http://maven.apache.org/xsd/assembly-2.0.0.xsd">
+
+    <id>build-amp-file</id>
+    <formats>
+        <format>amp</format>
+    </formats>
+
+
+    <includeBaseDirectory>false</includeBaseDirectory>
+
+    <files>
+        <!-- Filter module.properties and put at top level in the AMP -->
+        <file>
+            <source>src/main/resources/alfresco/module/resetPassword/module.properties</source>
+            <filtered>true</filtered>
+        </file>
+    </files>
+
+    <fileSets>
+        <fileSet>
+            <directory>src/main/config</directory>
+            <outputDirectory>config</outputDirectory>
+            <filtered>false</filtered>
+        </fileSet>
+    </fileSets>
+
+    <!-- Include the project artifact (JAR) in the /lib directory in the AMP, and any 3rd party libraries (JARs)
+         used by the customization.
+    -->
+    <dependencySets>
+        <dependencySet>
+            <outputDirectory>lib</outputDirectory>
+            <useProjectArtifact>true</useProjectArtifact>
+        </dependencySet>
+    </dependencySets>
+
+</assembly>
\ No newline at end of file
diff --git a/alfresco-resetpassword/context.xml b/alfresco-resetpassword/context.xml
new file mode 100644
index 00000000..607ec281
--- /dev/null
+++ b/alfresco-resetpassword/context.xml
@@ -0,0 +1,29 @@
+<?xml version='1.0' encoding='utf-8'?>
+
+<Context>
+    <Resources className="org.apache.catalina.webresources.StandardRoot">
+        <PreResources className="org.apache.catalina.webresources.DirResourceSet"
+                      base="/usr/local/tomcat/webapps/alfresco/development/classes"
+                      webAppMount="/WEB-INF/classes"/>
+        <JarResources className="org.apache.catalina.webresources.DirResourceSet"
+                      base="/usr/local/tomcat/webapps/alfresco/development/lib"
+                      webAppMount="/WEB-INF/lib"/>
+    </Resources>
+
+<!-- Uncomment in $CATALINA_BASE/conf/[enginename]/[hostname]/alfresco.xml to define your own datasource. Add value attributes to each of the environment tags below to define your environment settings. -->
+<!-- Resource defaultTransactionIsolation="-1" defaultAutoCommit="false" maxActive="100" initialSize="10" password="alfresco" username="alfresco" url="jdbc:mysql:///alfresco" driverClassName="org.gjt.mm.mysql.Driver" type="javax.sql.DataSource" auth="Container" name="jdbc/dataSource"/-->
+<Environment override="false" type="java.lang.Boolean" name="properties/startup.enable"
+             description="A flag that globally enables or disables startup of the major Alfresco subsystems."
+             value="true"/>
+<Environment override="false" type="java.lang.String" name="properties/dir.root"
+             description="The filesystem directory below which content and index data is stored. Should be on a shared disk if this is a clustered installation."/>
+<Environment override="false" type="java.lang.String" name="properties/hibernate.dialect"
+             description="The fully qualified name of a org.hibernate.dialect.Dialect subclass that allows Hibernate to generate SQL optimized for a particular relational database. Choose from org.hibernate.dialect.DerbyDialect, org.hibernate.dialect.MySQLInnoDBDialect, org.alfresco.repo.domain.hibernate.dialect.AlfrescoOracle9Dialect, org.alfresco.repo.domain.hibernate.dialect.AlfrescoSybaseAnywhereDialect, org.alfresco.repo.domain.hibernate.dialect.AlfrescoSQLServerDialect, org.hibernate.dialect.PostgreSQLDialect"/>
+<Environment override="false" type="java.lang.String" name="properties/hibernate.query.substitutions"
+             description="Mapping from tokens in Hibernate queries to SQL tokens. For PostgreSQL, set this to &quot;true TRUE, false FALSE&quot;."/>
+<Environment override="false" type="java.lang.Boolean" name="properties/hibernate.jdbc.use_get_generated_keys"
+             description="Enable use of JDBC3 PreparedStatement.getGeneratedKeys() to retrieve natively generated keys after insert. Requires JDBC3+ driver. Set to false if your driver has problems with the Hibernate identifier generators. By default, tries to determine the driver capabilities using connection metadata."/>
+<Environment override="false" type="java.lang.String" name="properties/hibernate.default_schema"
+             description="Qualify unqualified table names with the given schema/tablespace in generated SQL. It may be necessary to set this when the target database has more than one schema."/>
+</Context>
+
diff --git a/alfresco-resetpassword/pom.xml b/alfresco-resetpassword/pom.xml
new file mode 100644
index 00000000..c87624bd
--- /dev/null
+++ b/alfresco-resetpassword/pom.xml
@@ -0,0 +1,93 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <modelVersion>4.0.0</modelVersion>
+    <parent>
+        <artifactId>resetpassword</artifactId>
+        <groupId>com.flex-solution</groupId>
+        <version>1.2.0.RC1</version>
+    </parent>
+
+    <artifactId>reset-password-repo</artifactId>
+    <version>1.2.0.RC1</version>
+    <name>Reset Password Repo AMP</name>
+    <packaging>jar</packaging>
+
+    <dependencies>
+        <dependency>
+            <groupId>org.alfresco</groupId>
+            <artifactId>content-services-community</artifactId>
+            <version>6.2.0-ga</version>
+            <scope>provided</scope>
+            <type>pom</type>
+        </dependency>
+    </dependencies>
+
+    <build>
+        <resources>
+            <resource>
+                <directory>src/main/resources</directory>
+                <filtering>true</filtering>
+            </resource>
+            <resource>
+                <directory>src/main/config</directory>
+                <filtering>true</filtering>
+            </resource>
+        </resources>
+        <plugins>
+            <plugin>
+                <groupId>org.apache.maven.plugins</groupId>
+                <artifactId>maven-compiler-plugin</artifactId>
+                <configuration>
+                    <source>8</source>
+                    <target>8</target>
+                </configuration>
+            </plugin>
+
+            <plugin>
+                <artifactId>maven-dependency-plugin</artifactId>
+                <executions>
+                    <execution>
+                        <phase>package</phase>
+                        <goals>
+                            <goal>copy-dependencies</goal>
+                        </goals>
+                        <configuration>
+                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
+                            <excludeScope>provided</excludeScope>
+                        </configuration>
+                    </execution>
+                </executions>
+            </plugin>
+
+            <plugin>
+                <artifactId>maven-assembly-plugin</artifactId>
+                <version>2.6</version>
+                <executions>
+                    <execution>
+                        <id>build-amp-file</id>
+                        <phase>package</phase>
+                        <goals>
+                            <goal>single</goal>
+                        </goals>
+
+                        <configuration>
+                            <appendAssemblyId>false</appendAssemblyId>
+                            <descriptors>
+                                <descriptor>amp.xml</descriptor>
+                            </descriptors>
+                        </configuration>
+                    </execution>
+                </executions>
+                <dependencies>
+                    <dependency>
+                        <groupId>org.alfresco.maven.plugin</groupId>
+                        <artifactId>alfresco-maven-plugin</artifactId>
+                        <version>3.1.0</version>
+                    </dependency>
+                </dependencies>
+            </plugin>
+        </plugins>
+    </build>
+
+</project>
diff --git a/alfresco-resetpassword/src/main/config/README.txt b/alfresco-resetpassword/src/main/config/README.txt
new file mode 100644
index 00000000..e69de29b
diff --git a/resetPassword/src/main/amp/config/alfresco/module/resetPassword/bootstrap/emailTemplate/reset-password.ftl b/alfresco-resetpassword/src/main/config/alfresco/module/resetPassword/bootstrap/emailTemplate/reset-password.ftl
old mode 100644
new mode 100755
similarity index 97%
rename from resetPassword/src/main/amp/config/alfresco/module/resetPassword/bootstrap/emailTemplate/reset-password.ftl
rename to alfresco-resetpassword/src/main/config/alfresco/module/resetPassword/bootstrap/emailTemplate/reset-password.ftl
index b1a44f95..7117e0b4
--- a/resetPassword/src/main/amp/config/alfresco/module/resetPassword/bootstrap/emailTemplate/reset-password.ftl
+++ b/alfresco-resetpassword/src/main/config/alfresco/module/resetPassword/bootstrap/emailTemplate/reset-password.ftl
@@ -51,7 +51,7 @@
                                                     <p>we received a request for password change
                                                         at ${shareUrl}</p>
 
-                                                    <br/><a href="${shareUrl}/page/changePassWF?userToken=${userToken}&taskId=${taskId}&token=${token}">Go to
+                                                    <br/><a href="${shareUrl}/page/changePassWF?token=${token}">Go to
                                                     this link</a> to set your new password.
                                                     The link will be active for 24 hours.</p>
 
diff --git a/resetPassword/src/main/java/com/flexsolution/resetpassword/exceptions/EmailTemplateException.java b/alfresco-resetpassword/src/main/java/com/flexsolution/resetpassword/exceptions/EmailTemplateException.java
similarity index 100%
rename from resetPassword/src/main/java/com/flexsolution/resetpassword/exceptions/EmailTemplateException.java
rename to alfresco-resetpassword/src/main/java/com/flexsolution/resetpassword/exceptions/EmailTemplateException.java
diff --git a/resetPassword/src/main/java/com/flexsolution/resetpassword/namespaces/ResetPasswordNameSpace.java b/alfresco-resetpassword/src/main/java/com/flexsolution/resetpassword/namespaces/ResetPasswordNameSpace.java
similarity index 100%
rename from resetPassword/src/main/java/com/flexsolution/resetpassword/namespaces/ResetPasswordNameSpace.java
rename to alfresco-resetpassword/src/main/java/com/flexsolution/resetpassword/namespaces/ResetPasswordNameSpace.java
diff --git a/resetPassword/src/main/java/com/flexsolution/resetpassword/patch/AlfrescoFileVisitor.java b/alfresco-resetpassword/src/main/java/com/flexsolution/resetpassword/patch/AlfrescoFileVisitor.java
similarity index 100%
rename from resetPassword/src/main/java/com/flexsolution/resetpassword/patch/AlfrescoFileVisitor.java
rename to alfresco-resetpassword/src/main/java/com/flexsolution/resetpassword/patch/AlfrescoFileVisitor.java
diff --git a/resetPassword/src/main/java/com/flexsolution/resetpassword/patch/CopyStructurePatch.java b/alfresco-resetpassword/src/main/java/com/flexsolution/resetpassword/patch/CopyStructurePatch.java
similarity index 100%
rename from resetPassword/src/main/java/com/flexsolution/resetpassword/patch/CopyStructurePatch.java
rename to alfresco-resetpassword/src/main/java/com/flexsolution/resetpassword/patch/CopyStructurePatch.java
diff --git a/resetPassword/src/main/java/com/flexsolution/resetpassword/services/script/ScriptPasswordService.java b/alfresco-resetpassword/src/main/java/com/flexsolution/resetpassword/services/script/ScriptPasswordService.java
similarity index 100%
rename from resetPassword/src/main/java/com/flexsolution/resetpassword/services/script/ScriptPasswordService.java
rename to alfresco-resetpassword/src/main/java/com/flexsolution/resetpassword/services/script/ScriptPasswordService.java
diff --git a/resetPassword/src/main/java/com/flexsolution/resetpassword/util/EmailHelper.java b/alfresco-resetpassword/src/main/java/com/flexsolution/resetpassword/util/EmailHelper.java
similarity index 95%
rename from resetPassword/src/main/java/com/flexsolution/resetpassword/util/EmailHelper.java
rename to alfresco-resetpassword/src/main/java/com/flexsolution/resetpassword/util/EmailHelper.java
index 33744296..d7c19ea4 100644
--- a/resetPassword/src/main/java/com/flexsolution/resetpassword/util/EmailHelper.java
+++ b/alfresco-resetpassword/src/main/java/com/flexsolution/resetpassword/util/EmailHelper.java
@@ -9,7 +9,7 @@
 
 import java.util.List;
 
-public class EmailHelper extends BaseScopableProcessorExtension{
+public class EmailHelper extends BaseScopableProcessorExtension {
 
     private ServiceRegistry services;
     private Repository repositoryHelper;
diff --git a/resetPassword/src/main/java/com/flexsolution/resetpassword/util/Sudo.java b/alfresco-resetpassword/src/main/java/com/flexsolution/resetpassword/util/Sudo.java
similarity index 100%
rename from resetPassword/src/main/java/com/flexsolution/resetpassword/util/Sudo.java
rename to alfresco-resetpassword/src/main/java/com/flexsolution/resetpassword/util/Sudo.java
diff --git a/alfresco-resetpassword/src/main/java/com/flexsolution/resetpassword/util/TokenGenerator.java b/alfresco-resetpassword/src/main/java/com/flexsolution/resetpassword/util/TokenGenerator.java
new file mode 100755
index 00000000..1ca5659b
--- /dev/null
+++ b/alfresco-resetpassword/src/main/java/com/flexsolution/resetpassword/util/TokenGenerator.java
@@ -0,0 +1,38 @@
+package com.flexsolution.resetpassword.util;
+
+import org.alfresco.error.AlfrescoRuntimeException;
+import org.alfresco.repo.jscript.BaseScopableProcessorExtension;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+import org.springframework.security.crypto.bcrypt.BCrypt;
+
+import java.util.Properties;
+import java.util.UUID;
+
+
+public class TokenGenerator extends BaseScopableProcessorExtension {
+    private static final String SALT_KEY = "fs.passreset.salt";
+    private static final Logger logger = LoggerFactory.getLogger(TokenGenerator.class);
+
+    private Properties globalProps;
+
+    public String genToken (String userName) {
+        String salt = globalProps.getProperty(SALT_KEY);
+        if(salt == null || salt.equals("")) {
+            logger.error("Property fs.passreset.salt is missing");
+            throw new AlfrescoRuntimeException("Reset Password addon is not configured");
+        }
+        String token = BCrypt.hashpw(userName, salt).substring(salt.length());
+        return token + UUID.randomUUID().toString().substring(0, 14);
+    }
+
+    public String getHashFromToken (String token) {
+        return token.substring(0, token.length() - 14);
+    }
+
+    public void setGlobalProps (Properties globalProps) {
+        this.globalProps = globalProps;
+    }
+}
+
+
diff --git a/alfresco-resetpassword/src/main/java/com/flexsolution/resetpassword/util/WorkflowHelper.java b/alfresco-resetpassword/src/main/java/com/flexsolution/resetpassword/util/WorkflowHelper.java
new file mode 100755
index 00000000..f3358956
--- /dev/null
+++ b/alfresco-resetpassword/src/main/java/com/flexsolution/resetpassword/util/WorkflowHelper.java
@@ -0,0 +1,89 @@
+package com.flexsolution.resetpassword.util;
+
+import org.activiti.engine.HistoryService;
+import org.activiti.engine.history.HistoricTaskInstance;
+import org.activiti.engine.history.HistoricTaskInstanceQuery;
+import org.alfresco.repo.security.authentication.AuthenticationUtil;
+import org.alfresco.repo.tenant.TenantUtil;
+import org.alfresco.repo.workflow.activiti.ActivitiConstants;
+import org.alfresco.service.cmr.workflow.WorkflowService;
+import org.alfresco.service.cmr.workflow.WorkflowTask;
+import org.alfresco.service.cmr.workflow.WorkflowTaskQuery;
+import org.alfresco.service.cmr.workflow.WorkflowTaskState;
+import org.alfresco.util.Pair;
+import org.apache.log4j.Logger;
+
+import java.util.List;
+
+public class WorkflowHelper {
+
+    private static WorkflowService workflowService;
+
+    private static Logger logger = Logger.getLogger(WorkflowHelper.class);
+
+    private static HistoryService activitiHistoryService;
+
+    public static void cancelPreviousWorkflows(final String userName) {
+
+        Pair<String, String> userTenant = AuthenticationUtil.getUserTenant(userName);
+
+        final String tenantDomain = userTenant.getSecond();
+
+        TenantUtil.runAsUserTenant(new TenantUtil.TenantRunAsWork<Object>() {
+            @Override
+            public Object doWork() throws Exception {
+
+                List<WorkflowTask> workflowTasks = getTasksInProgress(userName);
+
+                if(logger.isDebugEnabled()) {
+                    logger.debug("Found workflow tasks = " + workflowTasks.size());
+                }
+
+                for (WorkflowTask task : workflowTasks) {
+                    if (logger.isDebugEnabled()) {
+                        logger.debug("Current task: " + task.getName());
+                    }
+
+                    if ("fs-reset:review".equals(task.getName())) {
+                        if (logger.isDebugEnabled()) {
+                            logger.debug("Try to end task " + task.toString());
+                        }
+                        workflowService.cancelWorkflow(task.getPath().getInstance().getId());
+                    }
+                }
+                return null;
+            }
+        }, userName, tenantDomain);
+    }
+
+    public static List<HistoricTaskInstance> getResetPassTasksByUserTokenAcrossTenants (String token){
+        HistoricTaskInstanceQuery query = activitiHistoryService.createHistoricTaskInstanceQuery()
+                .includeProcessVariables()
+                .unfinished()
+                .processVariableValueEquals("fs-reset:token", token);
+
+        return query.list();
+    }
+
+    private static List<WorkflowTask> getTasksInProgress(String userName) {
+
+        WorkflowTaskQuery query = new WorkflowTaskQuery();
+        query.setEngineId(ActivitiConstants.ENGINE_ID);
+        query.setTaskState(WorkflowTaskState.IN_PROGRESS);
+        query.setActorId(userName);
+
+        if (logger.isDebugEnabled()) {
+            logger.debug("Try to delete workflows...");
+        }
+
+        return workflowService.queryTasks(query, true);
+    }
+
+    public void setWorkflowService(WorkflowService workflowService) {
+        WorkflowHelper.workflowService = workflowService;
+    }
+
+    public void setActivitiHistoryService (HistoryService activitiHistoryService) {
+        WorkflowHelper.activitiHistoryService = activitiHistoryService;
+    }
+}
\ No newline at end of file
diff --git a/alfresco-resetpassword/src/main/java/com/flexsolution/resetpassword/webscripts/ApplyChangedPasswordPost.java b/alfresco-resetpassword/src/main/java/com/flexsolution/resetpassword/webscripts/ApplyChangedPasswordPost.java
new file mode 100755
index 00000000..39a6f9c5
--- /dev/null
+++ b/alfresco-resetpassword/src/main/java/com/flexsolution/resetpassword/webscripts/ApplyChangedPasswordPost.java
@@ -0,0 +1,125 @@
+package com.flexsolution.resetpassword.webscripts;
+
+import com.flexsolution.resetpassword.util.TokenGenerator;
+import com.flexsolution.resetpassword.util.WorkflowHelper;
+import org.activiti.engine.history.HistoricTaskInstance;
+import org.alfresco.error.AlfrescoRuntimeException;
+import org.alfresco.repo.security.authentication.AuthenticationUtil;
+import org.alfresco.repo.tenant.TenantUtil;
+import org.alfresco.repo.workflow.activiti.ActivitiConstants;
+import org.alfresco.service.cmr.security.MutableAuthenticationService;
+import org.alfresco.service.cmr.workflow.WorkflowService;
+import org.json.JSONObject;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+import org.springframework.extensions.surf.util.Content;
+import org.springframework.extensions.webscripts.*;
+
+import java.util.HashMap;
+import java.util.List;
+import java.util.Map;
+import java.util.Objects;
+
+public class ApplyChangedPasswordPost extends DeclarativeWebScript {
+
+    public static final String NEW_PAS = "new-password";
+    public static final String NEW_PAS_CONFIRM = "new-password-confirm";
+    public static final String TOKEN = "userToken";
+
+
+    private WorkflowService workflowService;
+    private MutableAuthenticationService authenticationService;
+    private TokenGenerator tokenGenerator;
+
+    private static final Logger logger = LoggerFactory.getLogger(ApplyChangedPasswordPost.class);
+
+    @Override
+    protected Map<String, Object> executeImpl (WebScriptRequest req, Status status, Cache cache) {
+
+        final Map<String, String> data = getDataFromRequest(req);
+
+        String pass = data.get(NEW_PAS);
+        String confirmPass = data.get(NEW_PAS_CONFIRM);
+
+        if(!Objects.equals(pass, confirmPass)) {
+            logger.error("Password and confirm password are not equal");
+            throw new AlfrescoRuntimeException("Password and confirm password are not equal");
+        }
+
+        String incomingToken = data.get(TOKEN);
+        List<HistoricTaskInstance> candidateTasks = WorkflowHelper.getResetPassTasksByUserTokenAcrossTenants(incomingToken);
+
+        if(candidateTasks.isEmpty()) {
+            logger.error("Invalid 'change password' request received. Process by token={} does not exist or has been finished", incomingToken);
+            throw new AlfrescoRuntimeException("Request to change password is not valid");
+        }
+        if(candidateTasks.size() != 1) {
+            logger.error("Found more than one process by token={}", incomingToken);
+            throw new AlfrescoRuntimeException("Request to change password is not valid");
+        }
+        final HistoricTaskInstance historicTaskInstance = candidateTasks.get(0);
+
+        String assignee = historicTaskInstance.getAssignee();
+        String hashForCurrentAssignee = tokenGenerator.getHashFromToken(tokenGenerator.genToken(assignee));
+
+        if(!hashForCurrentAssignee.equals(tokenGenerator.getHashFromToken(incomingToken))) {
+            logger.error("Invalid 'change password' request received. Token={} is not valid for user {}", incomingToken, assignee);
+            throw new AlfrescoRuntimeException("Request to change password is not valid");
+        }
+
+        String tenant_domain = (String) historicTaskInstance.getProcessVariables().get(ActivitiConstants.VAR_TENANT_DOMAIN);
+
+        if(tenant_domain == null) {
+            tenant_domain = "";
+        }
+
+        // clear context - to avoid MT concurrency issue (causing domain mismatch)
+        AuthenticationUtil.clearCurrentSecurityContext();
+
+        TenantUtil.runAsSystemTenant(new TenantUtil.TenantRunAsWork<Object>() {
+
+            @Override
+            public Object doWork () throws Exception {
+                String activitiTaskId = "activiti$" + historicTaskInstance.getId();
+                authenticationService.setAuthentication(assignee, pass.toCharArray());
+                workflowService.endTask(activitiTaskId, null);
+                return null;
+            }
+        }, tenant_domain);
+
+        return new HashMap<String, Object>() {{
+            put("message", "OK");
+        }};
+    }
+
+    private Map<String, String> getDataFromRequest (WebScriptRequest req) {
+
+        HashMap<String, String> result = new HashMap<>();
+        Content content = req.getContent();
+
+        try {
+            JSONObject jsonObject = new JSONObject(content.getContent());
+
+            result.put(TOKEN, jsonObject.getString(TOKEN));
+            result.put(NEW_PAS, jsonObject.getString(NEW_PAS));
+            result.put(NEW_PAS_CONFIRM, jsonObject.getString(NEW_PAS_CONFIRM));
+
+        } catch (Exception e) {
+            logger.error(e.getMessage());
+            throw new WebScriptException("Failed to get data from request. Please, contact system administrator");
+        }
+        return result;
+    }
+
+    public void setWorkflowService (WorkflowService workflowService) {
+        this.workflowService = workflowService;
+    }
+
+    public void setAuthenticationService (MutableAuthenticationService authenticationService) {
+        this.authenticationService = authenticationService;
+    }
+
+    public void setTokenGenerator (TokenGenerator tokenGenerator) {
+        this.tokenGenerator = tokenGenerator;
+    }
+}
\ No newline at end of file
diff --git a/alfresco-resetpassword/src/main/java/com/flexsolution/resetpassword/webscripts/ResetPasswordPost.java b/alfresco-resetpassword/src/main/java/com/flexsolution/resetpassword/webscripts/ResetPasswordPost.java
new file mode 100644
index 00000000..fe793a5a
--- /dev/null
+++ b/alfresco-resetpassword/src/main/java/com/flexsolution/resetpassword/webscripts/ResetPasswordPost.java
@@ -0,0 +1,214 @@
+package com.flexsolution.resetpassword.webscripts;
+
+import com.flexsolution.resetpassword.util.WorkflowHelper;
+import org.alfresco.model.ContentModel;
+import org.alfresco.repo.model.Repository;
+import org.alfresco.repo.security.authentication.AuthenticationUtil;
+import org.alfresco.repo.tenant.TenantContextHolder;
+import org.alfresco.repo.workflow.WorkflowModel;
+import org.alfresco.service.cmr.repository.*;
+import org.alfresco.service.cmr.search.SearchService;
+import org.alfresco.service.cmr.security.PersonService;
+import org.alfresco.service.cmr.workflow.WorkflowDefinition;
+import org.alfresco.service.cmr.workflow.WorkflowService;
+import org.alfresco.service.namespace.NamespaceService;
+import org.alfresco.service.namespace.QName;
+import org.json.JSONException;
+import org.json.JSONObject;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.extensions.surf.util.Content;
+import org.springframework.extensions.webscripts.*;
+
+import java.io.IOException;
+import java.io.Serializable;
+import java.util.HashMap;
+import java.util.List;
+import java.util.Map;
+
+public class ResetPasswordPost extends DeclarativeWebScript {
+
+    @Autowired
+    private ContentService contentService;
+
+    @Autowired
+    private NodeService nodeService;
+
+    @Autowired
+    private Repository repository;
+
+    @Autowired
+    private SearchService searchService;
+
+    @Autowired
+    private NamespaceService namespaceService;
+
+    private WorkflowService workflowService;
+    private PersonService personService;
+
+    private static final String RESET_PASS_EMAIL_TEMPLATE_XPATH = "app:dictionary/app:email_templates/cm:workflownotification/cm:reset-password.ftl";
+    private static final String WORKFLOW_NOTIFICATION_XPATH = "app:dictionary/app:email_templates/cm:workflownotification";
+
+    private static final String RESET_PASS_FILE_NAME = "reset-password.ftl";
+
+    private static final Logger logger = LoggerFactory.getLogger(ResetPasswordPost.class);
+
+    @Override
+    public Map<String, Object> executeImpl (WebScriptRequest req, Status status, Cache cache) {
+
+        final String userName = getUserNameFromRequest(req);
+
+        // clear context - to avoid MT concurrency issue (causing domain mismatch)
+        AuthenticationUtil.clearCurrentSecurityContext();
+
+        final String tenantDomain = AuthenticationUtil.getUserTenant(userName).getSecond();
+
+        createEmailTemplateIfNotExists(tenantDomain);
+
+        TenantContextHolder.setTenantDomain(tenantDomain);
+        AuthenticationUtil.setRunAsUser(userName);
+
+        NodeRef user = getUserByUserName(userName);
+
+        WorkflowHelper.cancelPreviousWorkflows(userName);
+
+        logger.debug("Try to start workflow with user " + userName);
+
+        startWorkFlow(user);
+
+        logger.debug("Workflow has been started");
+
+        return null;
+    }
+
+    private void createEmailTemplateIfNotExists (String tenantDomain) {
+        AuthenticationUtil.runAsSystem(new AuthenticationUtil.RunAsWork<Object>() {
+            @Override
+            public Object doWork () throws Exception {
+                if(!emailTemplateExists(tenantDomain)) {
+                    addEmailTemplate(tenantDomain);
+                }
+                return null;
+            }
+        });
+    }
+
+    private boolean emailTemplateExists (String tenantDomain) {
+
+        TenantContextHolder.setTenantDomain(tenantDomain);
+
+        NodeRef companyHome = repository.getCompanyHome();
+
+        List<NodeRef> emailTemplateFiles = searchService.selectNodes(companyHome, RESET_PASS_EMAIL_TEMPLATE_XPATH, null, namespaceService, false);
+
+        return !emailTemplateFiles.isEmpty();
+    }
+
+    private void addEmailTemplate (String tenantDomain) {
+
+        TenantContextHolder.setTenantDomain(tenantDomain);
+
+        NodeRef companyHome = repository.getCompanyHome();
+
+        List<NodeRef> workflowNotificationFolder = searchService.selectNodes(companyHome, WORKFLOW_NOTIFICATION_XPATH, null, namespaceService, false);
+
+        Map<QName, Serializable> properties = new HashMap<>();
+        properties.put(ContentModel.PROP_NAME, RESET_PASS_FILE_NAME);
+
+        ChildAssociationRef newEmailTemplateCreated = nodeService.createNode(workflowNotificationFolder.get(0),
+                ContentModel.ASSOC_CONTAINS,
+                QName.createQName(NamespaceService.CONTENT_MODEL_1_0_URI, QName.createValidLocalName(RESET_PASS_FILE_NAME)),
+                ContentModel.TYPE_CONTENT,
+                properties);
+        ContentWriter invWriter = contentService.getWriter(newEmailTemplateCreated.getChildRef(), ContentModel.PROP_CONTENT, true);
+
+        String adminTenant = "";
+
+        TenantContextHolder.setTenantDomain(adminTenant);
+
+        companyHome = repository.getCompanyHome();
+
+        List<NodeRef> emailTemplateFiles = searchService.selectNodes(companyHome, RESET_PASS_EMAIL_TEMPLATE_XPATH, null, namespaceService, false);
+
+        NodeRef emailTemplate = emailTemplateFiles.get(0);
+
+        ContentReader reader = contentService.getReader(emailTemplate, ContentModel.PROP_CONTENT);
+
+        TenantContextHolder.setTenantDomain(tenantDomain);
+
+        invWriter.putContent(reader);
+
+    }
+
+    private void startWorkFlow (final NodeRef user) {
+
+        WorkflowDefinition workflowDefinition = workflowService.getDefinitionByName("activiti$resetPasswordFlex");
+
+        if(workflowDefinition == null) {
+            logger.error("Workflow definition is not found activiti$resetPasswordFlex");
+            throw new WebScriptException(500, "Sorry. Internal error. Try later");
+        }
+
+        Map<QName, Serializable> param = new HashMap<>();
+
+        logger.debug("Try to set assignee");
+
+        param.put(WorkflowModel.ASSOC_ASSIGNEE, user);
+
+        logger.debug("Assignee: {}", param.get(WorkflowModel.ASSOC_ASSIGNEE));
+
+        logger.debug("Try to set description");
+
+        param.put(WorkflowModel.PROP_DESCRIPTION, "Request to change password");
+
+        logger.debug("Try to set owner");
+
+        param.put(ContentModel.PROP_OWNER, AuthenticationUtil.getAdminUserName());
+
+        logger.debug("Try to start workflow...");
+
+        workflowService.startWorkflow(workflowDefinition.getId(), param);
+    }
+
+    private NodeRef getUserByUserName (final String userName) {
+
+        return AuthenticationUtil.runAsSystem(new AuthenticationUtil.RunAsWork<NodeRef>() {
+            @Override
+            public NodeRef doWork () throws Exception {
+                NodeRef user = personService.getPersonOrNull(userName);
+                if(user == null) {
+                    logger.error("Failed to find user with username={}", userName);
+                    throw new WebScriptException(404, "error.userNotFound");
+                }
+                return user;
+            }
+        });
+    }
+
+    private String getUserNameFromRequest (WebScriptRequest request) {
+        Content content = request.getContent();
+
+        String userName;
+
+        try {
+            JSONObject jsonObject = new JSONObject(content.getContent());
+
+            userName = jsonObject.getString("userName");
+
+        } catch (JSONException | IOException e) {
+            logger.error(e.getMessage());
+            throw new WebScriptException(500, "Sorry. Internal error. Try later");
+        }
+
+        return userName;
+    }
+
+    public void setWorkflowService (WorkflowService workflowService) {
+        this.workflowService = workflowService;
+    }
+
+    public void setPersonService (PersonService personService) {
+        this.personService = personService;
+    }
+}
diff --git a/alfresco-resetpassword/src/main/java/com/flexsolution/resetpassword/webscripts/TaskIsCompletePost.java b/alfresco-resetpassword/src/main/java/com/flexsolution/resetpassword/webscripts/TaskIsCompletePost.java
new file mode 100755
index 00000000..50d24747
--- /dev/null
+++ b/alfresco-resetpassword/src/main/java/com/flexsolution/resetpassword/webscripts/TaskIsCompletePost.java
@@ -0,0 +1,54 @@
+package com.flexsolution.resetpassword.webscripts;
+
+import com.flexsolution.resetpassword.util.WorkflowHelper;
+import org.activiti.engine.history.HistoricTaskInstance;
+import org.alfresco.error.AlfrescoRuntimeException;
+import org.json.JSONObject;
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+import org.springframework.extensions.surf.util.Content;
+import org.springframework.extensions.webscripts.Cache;
+import org.springframework.extensions.webscripts.DeclarativeWebScript;
+import org.springframework.extensions.webscripts.Status;
+import org.springframework.extensions.webscripts.WebScriptRequest;
+
+import java.util.HashMap;
+import java.util.List;
+import java.util.Map;
+
+public class TaskIsCompletePost extends DeclarativeWebScript {
+
+    private static final Logger logger = LoggerFactory.getLogger(TaskIsCompletePost.class);
+
+    @Override
+    protected Map<String, Object> executeImpl (WebScriptRequest req, Status status, Cache cache) {
+
+        try {
+            Content content = req.getContent();
+            final JSONObject jsonObject = new JSONObject(content.getContent());
+            final String resetPasswordToken = jsonObject.getString("token");
+
+            if(resetPasswordToken == null) {
+                logger.error("Invalid 'change password' request received. User token is null");
+                throw new AlfrescoRuntimeException("Request to change password is not valid");
+            }
+
+            List<HistoricTaskInstance> cnadidateTasks = WorkflowHelper.getResetPassTasksByUserTokenAcrossTenants(resetPasswordToken);
+
+            if(cnadidateTasks.isEmpty()) {
+                logger.error("Invalid 'change password' request received. Process by token={} does not exist or has been finished", resetPasswordToken);
+                throw new AlfrescoRuntimeException("Request to change password is not valid");
+            }
+            if(cnadidateTasks.size() != 1) {
+                logger.error("Found more than one process by token={}", resetPasswordToken);
+                throw new AlfrescoRuntimeException("Request to change password is not valid");
+            }
+            return new HashMap<String, Object>(){{
+                put("message", "OK");
+            }};
+        } catch (Exception e) {
+            logger.error(e.getMessage());
+            throw new AlfrescoRuntimeException("Failed to retrieve data from json");
+        }
+    }
+}
\ No newline at end of file
diff --git a/resetPassword/src/main/amp/config/alfresco/extension/templates/webscripts/com/flex-solution/applyChangedPassword/applyChangedPassword.post.desc.xml b/alfresco-resetpassword/src/main/resources/alfresco/extension/templates/webscripts/com/flex-solution/applyChangedPassword/applyChangedPassword.post.desc.xml
similarity index 100%
rename from resetPassword/src/main/amp/config/alfresco/extension/templates/webscripts/com/flex-solution/applyChangedPassword/applyChangedPassword.post.desc.xml
rename to alfresco-resetpassword/src/main/resources/alfresco/extension/templates/webscripts/com/flex-solution/applyChangedPassword/applyChangedPassword.post.desc.xml
diff --git a/resetPassword/src/main/amp/config/alfresco/extension/templates/webscripts/com/flex-solution/applyChangedPassword/applyChangedPassword.post.json.ftl b/alfresco-resetpassword/src/main/resources/alfresco/extension/templates/webscripts/com/flex-solution/applyChangedPassword/applyChangedPassword.post.json.ftl
similarity index 100%
rename from resetPassword/src/main/amp/config/alfresco/extension/templates/webscripts/com/flex-solution/applyChangedPassword/applyChangedPassword.post.json.ftl
rename to alfresco-resetpassword/src/main/resources/alfresco/extension/templates/webscripts/com/flex-solution/applyChangedPassword/applyChangedPassword.post.json.ftl
diff --git a/resetPassword/src/main/amp/config/alfresco/extension/templates/webscripts/com/flex-solution/reset-pass-lib.js b/alfresco-resetpassword/src/main/resources/alfresco/extension/templates/webscripts/com/flex-solution/reset-pass-lib.js
similarity index 100%
rename from resetPassword/src/main/amp/config/alfresco/extension/templates/webscripts/com/flex-solution/reset-pass-lib.js
rename to alfresco-resetpassword/src/main/resources/alfresco/extension/templates/webscripts/com/flex-solution/reset-pass-lib.js
diff --git a/resetPassword/src/main/amp/config/alfresco/extension/templates/webscripts/com/flex-solution/reset-password/reset-password.post.desc.xml b/alfresco-resetpassword/src/main/resources/alfresco/extension/templates/webscripts/com/flex-solution/reset-password/reset-password.post.desc.xml
similarity index 100%
rename from resetPassword/src/main/amp/config/alfresco/extension/templates/webscripts/com/flex-solution/reset-password/reset-password.post.desc.xml
rename to alfresco-resetpassword/src/main/resources/alfresco/extension/templates/webscripts/com/flex-solution/reset-password/reset-password.post.desc.xml
diff --git a/resetPassword/src/main/amp/config/alfresco/extension/templates/webscripts/com/flex-solution/reset-password/reset-password.post.json.ftl b/alfresco-resetpassword/src/main/resources/alfresco/extension/templates/webscripts/com/flex-solution/reset-password/reset-password.post.json.ftl
similarity index 100%
rename from resetPassword/src/main/amp/config/alfresco/extension/templates/webscripts/com/flex-solution/reset-password/reset-password.post.json.ftl
rename to alfresco-resetpassword/src/main/resources/alfresco/extension/templates/webscripts/com/flex-solution/reset-password/reset-password.post.json.ftl
diff --git a/resetPassword/src/main/amp/config/alfresco/extension/templates/webscripts/com/flex-solution/reset-password/reset-password.post.properties b/alfresco-resetpassword/src/main/resources/alfresco/extension/templates/webscripts/com/flex-solution/reset-password/reset-password.post.properties
similarity index 100%
rename from resetPassword/src/main/amp/config/alfresco/extension/templates/webscripts/com/flex-solution/reset-password/reset-password.post.properties
rename to alfresco-resetpassword/src/main/resources/alfresco/extension/templates/webscripts/com/flex-solution/reset-password/reset-password.post.properties
diff --git a/resetPassword/src/main/amp/config/alfresco/extension/templates/webscripts/com/flex-solution/taskIsComplete/taskIsComplete.post.desc.xml b/alfresco-resetpassword/src/main/resources/alfresco/extension/templates/webscripts/com/flex-solution/taskIsComplete/taskIsComplete.post.desc.xml
similarity index 100%
rename from resetPassword/src/main/amp/config/alfresco/extension/templates/webscripts/com/flex-solution/taskIsComplete/taskIsComplete.post.desc.xml
rename to alfresco-resetpassword/src/main/resources/alfresco/extension/templates/webscripts/com/flex-solution/taskIsComplete/taskIsComplete.post.desc.xml
diff --git a/resetPassword/src/main/amp/config/alfresco/extension/templates/webscripts/com/flex-solution/taskIsComplete/taskIsComplete.post.json.ftl b/alfresco-resetpassword/src/main/resources/alfresco/extension/templates/webscripts/com/flex-solution/taskIsComplete/taskIsComplete.post.json.ftl
similarity index 100%
rename from resetPassword/src/main/amp/config/alfresco/extension/templates/webscripts/com/flex-solution/taskIsComplete/taskIsComplete.post.json.ftl
rename to alfresco-resetpassword/src/main/resources/alfresco/extension/templates/webscripts/com/flex-solution/taskIsComplete/taskIsComplete.post.json.ftl
diff --git a/resetPassword/src/main/amp/config/alfresco/extension/templates/webscripts/com/flex-solution/taskIsComplete/taskIsComplete.post.properties b/alfresco-resetpassword/src/main/resources/alfresco/extension/templates/webscripts/com/flex-solution/taskIsComplete/taskIsComplete.post.properties
similarity index 100%
rename from resetPassword/src/main/amp/config/alfresco/extension/templates/webscripts/com/flex-solution/taskIsComplete/taskIsComplete.post.properties
rename to alfresco-resetpassword/src/main/resources/alfresco/extension/templates/webscripts/com/flex-solution/taskIsComplete/taskIsComplete.post.properties
diff --git a/_documentation/ResetPasswordProcess.bpmn20.xml b/alfresco-resetpassword/src/main/resources/alfresco/extension/workflow/ResetPasswordProcess.bpmn20.xml
old mode 100644
new mode 100755
similarity index 71%
rename from _documentation/ResetPasswordProcess.bpmn20.xml
rename to alfresco-resetpassword/src/main/resources/alfresco/extension/workflow/ResetPasswordProcess.bpmn20.xml
index af510637..f3c2bde1
--- a/_documentation/ResetPasswordProcess.bpmn20.xml
+++ b/alfresco-resetpassword/src/main/resources/alfresco/extension/workflow/ResetPasswordProcess.bpmn20.xml
@@ -15,8 +15,7 @@
                       sourceRef='start'
                       targetRef='review'/>
 
-        <userTask id="review" name="Review"
-                  activiti:formKey="fs-reset:review" activiti:assignee="${bpm_assignee.properties.userName}">
+        <userTask id="review" name="Review" activiti:formKey="fs-reset:review" activiti:assignee="${bpm_assignee.properties.userName}">
             <extensionElements>
 
                 <activiti:taskListener event="create"
@@ -29,16 +28,6 @@
                     </activiti:field>
                 </activiti:taskListener>
 
-                <activiti:taskListener event="complete"
-                                       class="org.alfresco.repo.workflow.activiti.tasklistener.ScriptTaskListener">
-                    <activiti:field name="script">
-                        <activiti:string><![CDATA[<import resource="classpath:alfresco/extension/workflow/js/reset-password.js">
-                        var obj = new ResetPassword();
-                        sudo.asTenant(bpm_assignee.properties.userName, obj.reviewComplete, obj);
-                        ]]></activiti:string>
-                    </activiti:field>
-                </activiti:taskListener>
-
             </extensionElements>
         </userTask>
 
diff --git a/resetPassword/src/main/amp/config/alfresco/extension/workflow/js/reset-password.js b/alfresco-resetpassword/src/main/resources/alfresco/extension/workflow/js/reset-password.js
old mode 100644
new mode 100755
similarity index 70%
rename from resetPassword/src/main/amp/config/alfresco/extension/workflow/js/reset-password.js
rename to alfresco-resetpassword/src/main/resources/alfresco/extension/workflow/js/reset-password.js
index 3962d8d1..ebea4ca1
--- a/resetPassword/src/main/amp/config/alfresco/extension/workflow/js/reset-password.js
+++ b/alfresco-resetpassword/src/main/resources/alfresco/extension/workflow/js/reset-password.js
@@ -10,24 +10,7 @@ var ResetPassword = function () {
         this._sendEmail("reset-password.ftl", bpm_assignee.properties.email, {})
     };
 
-    this.reviewComplete = function () {
-
-        var pass = task.getVariable("fs-reset_password");
-        pass2 = task.getVariable("fs-reset_confirmPass");
-
-        if (!isValid(pass, pass2)) {
-            throw "Confirm password does not match password or password length too short";
-        }
-
-        var password = task.getVariableLocal("fs-reset_password"),
-            userName = bpm_assignee.properties.userName;
-
-        passwordService.setPassword(userName, password);
-    };
-
     this._sendEmail = function (templateName, to) {
-        
-        
         try {
             var template = emailHelper.getLocalizedEmailTemplate("app:dictionary/app:email_templates/cm:workflownotification/cm:" + templateName);
         } catch (e) {
@@ -35,7 +18,7 @@ var ResetPassword = function () {
         }
         
         var mail = actions.create("mail");
-        var currentToken = token.genToken();
+        var currentToken = token.genToken(bpm_assignee.properties.userName);
 
         mail.parameters.template = template;
         mail.parameters.to = to;
@@ -56,12 +39,10 @@ var ResetPassword = function () {
 
     this.prepareTemplateProps = function (assignee, task, currentToken) {
         var templateProps = {};
-        templateProps["userToken"] = assignee.properties["userName"];
         templateProps["assignee"] = {
             firstname: assignee.properties["firstName"],
             lastname: assignee.properties["lastName"]
         };
-        templateProps["taskId"] = "activiti$" + task.id;
         templateProps["token"] = currentToken;
         return templateProps;
     }
diff --git a/resetPassword/src/main/amp/config/alfresco/extension/workflow/reset-workflow-model.xml b/alfresco-resetpassword/src/main/resources/alfresco/extension/workflow/reset-workflow-model.xml
old mode 100644
new mode 100755
similarity index 80%
rename from resetPassword/src/main/amp/config/alfresco/extension/workflow/reset-workflow-model.xml
rename to alfresco-resetpassword/src/main/resources/alfresco/extension/workflow/reset-workflow-model.xml
index be409e31..34513d63
--- a/resetPassword/src/main/amp/config/alfresco/extension/workflow/reset-workflow-model.xml
+++ b/alfresco-resetpassword/src/main/resources/alfresco/extension/workflow/reset-workflow-model.xml
@@ -29,15 +29,6 @@
             <title>Review</title>
             <parent>bpm:workflowTask</parent>
             <properties>
-                <property name="fs-reset:password">
-                    <type>d:text</type>
-                    <mandatory>true</mandatory>
-                </property>
-                <property name="fs-reset:confirmPass">
-                    <type>d:text</type>
-                    <mandatory>true</mandatory>
-                </property>
-
                 <property name="fs-reset:token">
                     <type>d:text</type>
                     <mandatory>true</mandatory>
diff --git a/alfresco-resetpassword/src/main/resources/alfresco/module/resetPassword/alfresco-global.properties b/alfresco-resetpassword/src/main/resources/alfresco/module/resetPassword/alfresco-global.properties
new file mode 100755
index 00000000..61fa9837
--- /dev/null
+++ b/alfresco-resetpassword/src/main/resources/alfresco/module/resetPassword/alfresco-global.properties
@@ -0,0 +1,4 @@
+alfresco.host=localhost
+share.host=localhost
+
+fs.passreset.salt=$2a$11$sGL4KAlXWsxR3ysNL8HOmu
\ No newline at end of file
diff --git a/resetPassword/src/main/amp/config/alfresco/module/resetPassword/context/bootstrap-context.xml b/alfresco-resetpassword/src/main/resources/alfresco/module/resetPassword/context/bootstrap-context.xml
similarity index 100%
rename from resetPassword/src/main/amp/config/alfresco/module/resetPassword/context/bootstrap-context.xml
rename to alfresco-resetpassword/src/main/resources/alfresco/module/resetPassword/context/bootstrap-context.xml
diff --git a/resetPassword/src/main/amp/config/alfresco/module/resetPassword/context/service-context.xml b/alfresco-resetpassword/src/main/resources/alfresco/module/resetPassword/context/service-context.xml
old mode 100644
new mode 100755
similarity index 87%
rename from resetPassword/src/main/amp/config/alfresco/module/resetPassword/context/service-context.xml
rename to alfresco-resetpassword/src/main/resources/alfresco/module/resetPassword/context/service-context.xml
index 12e7ed6d..09e51be7
--- a/resetPassword/src/main/amp/config/alfresco/module/resetPassword/context/service-context.xml
+++ b/alfresco-resetpassword/src/main/resources/alfresco/module/resetPassword/context/service-context.xml
@@ -17,13 +17,12 @@
         <property name="extensionName">
             <value>token</value>
         </property>
+        <property name="globalProps" ref="global-properties"/>
     </bean>
 
     <bean class="com.flexsolution.resetpassword.util.WorkflowHelper">
         <property name="workflowService" ref="WorkflowService"/>
-        <property name="searchService" ref="SearchService"/>
-        <property name="repository" ref="repositoryHelper"/>
-        <property name="nodeService" ref="NodeService"/>
+        <property name="activitiHistoryService" ref="activitiHistoryService"/>
     </bean>
 
 
diff --git a/resetPassword/src/main/amp/config/alfresco/module/resetPassword/context/webscript-context.xml b/alfresco-resetpassword/src/main/resources/alfresco/module/resetPassword/context/webscript-context.xml
old mode 100644
new mode 100755
similarity index 86%
rename from resetPassword/src/main/amp/config/alfresco/module/resetPassword/context/webscript-context.xml
rename to alfresco-resetpassword/src/main/resources/alfresco/module/resetPassword/context/webscript-context.xml
index c3aa17a9..6a66b90b
--- a/resetPassword/src/main/amp/config/alfresco/module/resetPassword/context/webscript-context.xml
+++ b/alfresco-resetpassword/src/main/resources/alfresco/module/resetPassword/context/webscript-context.xml
@@ -8,11 +8,12 @@
     </bean>
 
     <bean id="webscript.com.flex-solution.taskIsComplete.taskIsComplete.post" parent="webscript" class="com.flexsolution.resetpassword.webscripts.TaskIsCompletePost">
-        <property name="workflowService" ref="WorkflowService"/>
     </bean>
 
     <bean id="webscript.com.flex-solution.applyChangedPassword.applyChangedPassword.post" parent="webscript" class="com.flexsolution.resetpassword.webscripts.ApplyChangedPasswordPost">
         <property name="workflowService" ref="WorkflowService"/>
+        <property name="authenticationService" ref="AuthenticationService" />
+        <property name="tokenGenerator" ref="genToken" />
     </bean>
 
 </beans>
\ No newline at end of file
diff --git a/resetPassword/src/main/amp/config/alfresco/module/resetPassword/context/workflow-context.xml b/alfresco-resetpassword/src/main/resources/alfresco/module/resetPassword/context/workflow-context.xml
similarity index 100%
rename from resetPassword/src/main/amp/config/alfresco/module/resetPassword/context/workflow-context.xml
rename to alfresco-resetpassword/src/main/resources/alfresco/module/resetPassword/context/workflow-context.xml
diff --git a/alfresco-resetpassword/src/main/resources/alfresco/module/resetPassword/module-context.xml b/alfresco-resetpassword/src/main/resources/alfresco/module/resetPassword/module-context.xml
new file mode 100755
index 00000000..3881ef26
--- /dev/null
+++ b/alfresco-resetpassword/src/main/resources/alfresco/module/resetPassword/module-context.xml
@@ -0,0 +1,12 @@
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+       xmlns:context="http://www.springframework.org/schema/context"
+       xsi:schemaLocation="http://www.springframework.org/schema/beans
+        http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
+
+	<!-- This is filtered by Maven at build time, so that module name is single sourced. -->
+    <import resource="classpath:alfresco/module/resetPassword/context/*-context.xml" />
+
+    <context:component-scan base-package="com.flexsolution"/>
+
+</beans>
diff --git a/alfresco-resetpassword/src/main/resources/alfresco/module/resetPassword/module.properties b/alfresco-resetpassword/src/main/resources/alfresco/module/resetPassword/module.properties
new file mode 100644
index 00000000..9663ecf5
--- /dev/null
+++ b/alfresco-resetpassword/src/main/resources/alfresco/module/resetPassword/module.properties
@@ -0,0 +1,4 @@
+module.id=${project.artifactId}
+module.title=${project.name}
+module.description=${project.description}
+module.version=${project.version}
\ No newline at end of file
diff --git a/build.Sergey.properties b/build.Sergey.properties
deleted file mode 100644
index 6cafaafa..00000000
--- a/build.Sergey.properties
+++ /dev/null
@@ -1,35 +0,0 @@
-###########################CHANGE next properties##########################################
-server.root.dir=
-
-#linux/windows
-shell.file.ext=sh
-tomcat.port=8080
-
-# PROJECT
-project.dir=./
-project.share.dir=resetPassword-share
-project.repo.dir=resetPassword
-alfresco.module=resetPassword
-share.module=resetPassword-share
-share.amp.name=reset-password-share
-repo.amp.name=reset-password
-project.share.path=${project.dir}/${project.share.dir}
-project.repo.path=${project.dir}/${project.repo.dir}
-############################################################################################
-
-tomcat.dir=${server.root.dir}/tomcat
-clean.tomcat.webapps.dir=${tomcat.dir}/clean_tomcat_webaps
-full.restart=true
-webapps.dir=${tomcat.dir}/webapps
-shared.dir=${tomcat.dir}/shared
-alfresco.dir=${webapps.dir}/alfresco
-share.dir=${webapps.dir}/share
-
-
-########################################################################################
-# EMPTY PROPERTIES JUST FOR DISABLING ERRORS HIGHLIGHTING (see theme's build scripts ) #
-########################################################################################
-param.projectRepoPath=
-param.projectSharePath=
-param.coreModule=
-########################################################################################
\ No newline at end of file
diff --git a/build.USERNAME.properties b/build.USERNAME.properties
deleted file mode 100644
index 585ee6f7..00000000
--- a/build.USERNAME.properties
+++ /dev/null
@@ -1,40 +0,0 @@
-##TODO:Change USERNAME in file name to your system user name
-
-###########################CHANGE next properties##########################################
-server.root.dir=
-
-#linux/windows
-shell.file.ext=sh
-tomcat.port=8080
-
-# PROJECT
-project.share.dir=
-project.repo.dir=
-
-maven.target.alfresco.dir=
-maven.target.share.dir=
-
-share.amp.name=
-repo.amp.name=
-
-############################################################################################
-project.dir=./
-
-project.share.path=${project.dir}/${project.share.dir}
-project.repo.path=${project.dir}/${project.repo.dir}
-tomcat.dir=${server.root.dir}/tomcat
-clean.tomcat.webapps.dir=${tomcat.dir}/clean_tomcat_webaps
-full.restart=true
-webapps.dir=${tomcat.dir}/webapps
-shared.dir=${tomcat.dir}/shared
-alfresco.dir=${webapps.dir}/alfresco
-share.dir=${webapps.dir}/share
-
-
-########################################################################################
-# EMPTY PROPERTIES JUST FOR DISABLING ERRORS HIGHLIGHTING (see theme's build scripts ) #
-########################################################################################
-param.projectRepoPath=
-param.projectSharePath=
-param.coreModule=
-########################################################################################
\ No newline at end of file
diff --git a/build.dmitry.properties b/build.dmitry.properties
deleted file mode 100644
index 68e7b06c..00000000
--- a/build.dmitry.properties
+++ /dev/null
@@ -1,41 +0,0 @@
-##TODO:Change USERNAME in file name to your system user name
-
-###########################CHANGE next properties##########################################
-#server.root.dir=/home/dmitry/IdeaProjects/reset_pass_folder/alfresco-5.0.d/
-server.root.dir=/home/dmitry/IdeaProjects/reset_pass_folder/alfresco-community/
-
-#linux/windows
-shell.file.ext=sh
-tomcat.port=8080
-
-# PROJECT
-project.share.dir=resetPassword-share
-project.repo.dir=resetPassword
-
-maven.target.alfresco.dir=amp
-maven.target.share.dir=amp
-
-repo.amp.name=reset-password-repo
-share.amp.name=reset-password-share
-
-############################################################################################
-project.dir=./
-
-project.share.path=${project.dir}/${project.share.dir}
-project.repo.path=${project.dir}/${project.repo.dir}
-tomcat.dir=${server.root.dir}/tomcat
-clean.tomcat.webapps.dir=${tomcat.dir}/clean_tomcat_webaps
-full.restart=true
-webapps.dir=${tomcat.dir}/webapps
-shared.dir=${tomcat.dir}/shared
-alfresco.dir=${webapps.dir}/alfresco
-share.dir=${webapps.dir}/share
-
-
-########################################################################################
-# EMPTY PROPERTIES JUST FOR DISABLING ERRORS HIGHLIGHTING (see theme's build scripts ) #
-########################################################################################
-param.projectRepoPath=
-param.projectSharePath=
-param.coreModule=
-########################################################################################
\ No newline at end of file
diff --git a/build.main.xml b/build.main.xml
deleted file mode 100644
index 59b5c664..00000000
--- a/build.main.xml
+++ /dev/null
@@ -1,114 +0,0 @@
- <project name="alfresco-extension" basedir=".">
-
-    <import file="build.parent.xml"/>
-
-    <target name="build" description="Build AMPs">
-
-        <!--build share-->
-        <antcall target="super._full.rebuild.share.amp">
-            <param name="param.coreModule" value="${project.share.path}"/>
-        </antcall>
-
-        <!--build alfresco-->
-        <antcall target="super._full.rebuild.share.amp">
-            <param name="param.coreModule" value="${project.repo.path}"/>
-        </antcall>
-    </target>
-
-    <target name="reload-full" description="Reload full">
-        <antcall target="build"/>
-        <antcall target="reload-resources"/>
-    </target>
-
-    <target name="reload-resources" description="Reload resources">
-        <antcall target="super._reload-resources">
-            <param name="param.projectSharePath" value="${project.share.path}"/>
-            <param name="param.projectRepoPath" value="${project.repo.path}"/>
-        </antcall>
-    </target>
-
-    <target name="clean-apply-amps" description="Local clean apply" depends="build">
-
-        <antcall target="super._copy_amps_to_server">
-            <param name="param.shareModule" value="${project.share.path}"/>
-            <param name="param.alfrescoModule" value="${project.repo.path}"/>
-        </antcall>
-
-        <antcall target="super._clean-apply-amps"/>
-    </target>
-
-
-    <!-- ========================================================== -->
-
-    <!--Alfresco Javascript Debugger linux through curl-->
-    <target name="_DebuggerJsAlfresco" description="debugAlfresco">
-        <http url="http://localhost:${tomcat.port}/alfresco/service/api/javascript/debugger"
-              method="POST"
-              printrequest="false"
-              printrequestheaders="false"
-              printresponse="false"
-              printresponseheaders="false"
-              expected="200"
-              failonunexpected="true">
-            <credentials username="admin" password="admin"/>
-            <query>
-                <parameter name="visible" value="true"/>
-                <parameter name="submit" value="false"/>
-            </query>
-        </http>
-    </target>
-
-
-    <!--Share Javascript Debugger linux through curl-->
-    <target name="_DebuggerJsShare" description="debugShare">
-        <http url="http://localhost:${tomcat.port}/share/page/api/javascript/debugger"
-              method="POST"
-              printrequest="false"
-              printrequestheaders="false"
-              printresponse="false"
-              printresponseheaders="false"
-              expected="200"
-              failonunexpected="true">
-            <credentials username="admin" password="admin"/>
-            <query>
-                <parameter name="visible" value="true"/>
-                <parameter name="submit" value="false"/>
-            </query>
-        </http>
-    </target>
-
-
-
-    <target name="_SurfBugEnable" description="SurfBugEnable">
-        <http url="http://localhost:${tomcat.port}/share/page/surfBugStatus"
-              method="POST"
-              printrequest="false"
-              printrequestheaders="false"
-              printresponse="false"
-              printresponseheaders="false"
-              expected="200"
-              failonunexpected="true">
-            <credentials username="admin" password="admin"/>
-            <query>
-                <parameter name="statusUpdate" value="enabled"/>
-            </query>
-        </http>
-    </target>
-
-    <target name="_SurfBugDisable" description="SurfBugDisable">
-        <http url="http://localhost:${tomcat.port}/share/page/surfBugStatus"
-              method="POST"
-              printrequest="false"
-              printrequestheaders="false"
-              printresponse="false"
-              printresponseheaders="false"
-              expected="200"
-              failonunexpected="true">
-            <credentials username="admin" password="admin"/>
-            <query>
-                <parameter name="statusUpdate" value="disabled"/>
-            </query>
-        </http>
-    </target>
-
-</project>
diff --git a/build.parent.xml b/build.parent.xml
deleted file mode 100644
index a46d682f..00000000
--- a/build.parent.xml
+++ /dev/null
@@ -1,216 +0,0 @@
-<project name="super" basedir=".">
-
-
-    <!-- JUST FOR DISABLING ERRORS HIGHLIGHTING -->
-
-    <!-- ====================================== -->
-
-    <property file="./build.${user.name}.properties"/>
-
-    <condition property="IS_WINDOWS">
-        <os family="windows"/>
-    </condition>
-
-    <condition property="IS_UNIX">
-        <os family="unix"/>
-    </condition>
-
-
-    <path id="yuicompressor.classpath">
-        <fileset dir="./_lib">
-            <include name="*.jar"/>
-        </fileset>
-    </path>
-
-    <taskdef name="http" classname="org.missinglink.ant.task.http.HttpClientTask">
-        <classpath>
-            <path refid="yuicompressor.classpath"/>
-        </classpath>
-    </taskdef>
-
-    <path id="classpath">
-        <fileset dir="alfresco/src/lib">
-            <include name="**/*.jar"/>
-        </fileset>
-    </path>
-
-    <target name="_reload-resources">
-        <copy todir="${alfresco.dir}/WEB-INF/lib" failonerror="false" overwrite="true">
-            <fileset dir="${param.projectRepoPath}/target/${maven.target.alfresco.dir}/lib">
-                <include name="**/?*.*"/>
-            </fileset>
-        </copy>
-
-        <copy todir="${alfresco.dir}/WEB-INF/classes/alfresco"
-              overwrite="true">
-            <fileset dir="${param.projectRepoPath}/src/main/amp/config/alfresco">
-                <include name="**/*.*"/>
-            </fileset>
-        </copy>
-
-        <copy todir="${share.dir}/WEB-INF/lib"
-              failonerror="false" overwrite="true">
-            <fileset dir="${param.projectSharePath}/target/${maven.target.share.dir}/lib">
-                <include name="**/?*.*"/>
-            </fileset>
-            <!--<fileset dir="${param.projectSharePath}/target/${share.module}/lib">-->
-                <!--<include name="**/?*.*"/>-->
-            <!--</fileset>-->
-        </copy>
-
-
-        <copy taskname="copy configs" todir="${share.dir}/WEB-INF/classes" overwrite="true">
-            <fileset dir="${param.projectSharePath}/src/main/amp/config">
-                <include name="**/?*.*"/>
-            </fileset>
-        </copy>
-
-        <!--<copy taskname="override configs" todir="${share.dir}/WEB-INF/classes" overwrite="true">-->
-            <!--<fileset dir="${param.shareModule}/src/main/amp/config">-->
-                <!--<include name="**/?*.*"/>-->
-            <!--</fileset>-->
-        <!--</copy>-->
-
-        <copy taskname="copy web files" todir="${share.dir}" overwrite="true">
-            <fileset dir="${param.projectSharePath}/src/main/amp/web">
-                <include name="**/?*.*"/>
-                <exclude name="**/web.xml"/>
-            </fileset>
-
-        </copy>
-
-        <!--<copy taskname="override web files" todir="${share.dir}" overwrite="true">-->
-
-            <!--<fileset dir="${param.shareModule}/src/main/amp/web">-->
-                <!--<include name="**/?*.*"/>-->
-                <!--<exclude name="**/web.xml"/>-->
-            <!--</fileset>-->
-        <!--</copy>-->
-
-        <http url="http://localhost:${tomcat.port}/share/page/index"
-              method="POST"
-              printrequest="false"
-              printrequestheaders="false"
-              printresponse="false"
-              printresponseheaders="false"
-              expected="200"
-              failonunexpected="true">
-            <credentials username="admin" password="admin"/>
-            <query>
-                <parameter name="reset" value="on"/>
-            </query>
-        </http>
-
-        <http url="http://localhost:${tomcat.port}/alfresco/service/index"
-              method="POST"
-              printrequest="false"
-              printrequestheaders="false"
-              printresponse="false"
-              printresponseheaders="false"
-              expected="200"
-              failonunexpected="true">
-            <credentials username="admin" password="admin"/>
-            <query>
-                <parameter name="reset" value="on"/>
-            </query>
-        </http>
-
-        <http url="http://localhost:${tomcat.port}/share/page/caches/dependency/clear"
-              method="POST"
-              printrequest="false"
-              printrequestheaders="false"
-              printresponse="false"
-              printresponseheaders="false"
-              expected="200"
-              failonunexpected="true">
-            <credentials username="admin" password="admin"/>
-            <query>
-                <parameter name="reset" value="on"/>
-            </query>
-        </http>
-    </target>
-
-
-    <target name="_build.amp">
-        <antcall target="_build.amp.windows">
-            <param name="param.module" value="${param.module}"/>
-        </antcall>
-        <antcall target="_build.amp.linux">
-            <param name="param.module" value="${param.module}"/>
-        </antcall>
-    </target>
-
-
-    <target name="_build.amp.windows" if="IS_WINDOWS">
-        <!--under windows-->
-        <exec executable="${build.executable}" dir="${param.module}">
-            <arg value="/c"/>
-            <arg line="mvn -c clean package"/>
-        </exec>
-    </target>
-
-    <target name="_build.amp.linux" if="IS_UNIX">
-        <exec command="mvn -f ${param.module}/pom.xml clean package"/>
-    </target>
-
-    <target name="_full.rebuild.share.amp">
-        <!--build core share module-->
-        <antcall target="_build.amp">
-            <param name="param.module" value="${param.coreModule}"/>
-        </antcall>
-
-    </target>
-
-    <!--=============================================================-->
-    <target name="_copy_amps_to_server">
-        <copy todir="${server.root.dir}/amps_share/" overwrite="true"
-              file="${param.shareModule}/target/${share.amp.name}.amp"/>
-        <copy todir="${server.root.dir}/amps/" overwrite="true"
-              file="${param.alfrescoModule}/target/${repo.amp.name}.amp"/>
-    </target>
-
-    <target name="_clean-apply-amps">
-        <antcall target="_ifFolderMissing"/>
-        <antcall target="_clean-webaps-folder"/>
-        <antcall target="_ifFolderExist"/>
-    </target>
-
-    <!--description="apply amps only if we have a copy webapps folder"-->
-    <target name="_ifFolderExist" depends="_dir.check" if="dir.exists">
-        <echo>${clean.tomcat.webapps.dir} exists, apply amps</echo>
-        <exec executable="${server.root.dir}/bin/apply_amps.${shell.file.ext}" dir="${server.root.dir}/bin">
-            <arg value="nowait"/>
-            <arg value="-force"/>
-        </exec>
-    </target>
-
-    <!--description="before clean apply make a copy"-->
-    <target name="_ifFolderMissing" depends="_dir.check" unless="dir.exists">
-        <echo>${clean.tomcat.webapps.dir} missing, make a copy"</echo>
-        <antcall target="__before_clean_make_a_copy"/>
-    </target>
-
-    <target name="_dir.check">
-        <condition property="dir.exists">
-            <available file="${clean.tomcat.webapps.dir}" type="dir"/>
-        </condition>
-    </target>
-
-
-    <target name="_clean-webaps-folder" if="${full.restart}">
-        <echo>clear webaps folder</echo>
-        <delete dir="${tomcat.dir}/webapps"/>
-        <copy todir="${tomcat.dir}">
-            <fileset dir="${clean.tomcat.webapps.dir}"/>
-        </copy>
-    </target>
-
-    <!--description="make a copy webaps folder"-->
-    <target name="__before_clean_make_a_copy">
-        <copy todir="${clean.tomcat.webapps.dir}/webapps">
-            <fileset dir="${tomcat.dir}/webapps"/>
-        </copy>
-    </target>
-
-
-</project>
\ No newline at end of file
diff --git a/pom.xml b/pom.xml
new file mode 100644
index 00000000..4bea08e5
--- /dev/null
+++ b/pom.xml
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <modelVersion>4.0.0</modelVersion>
+
+    <groupId>com.flex-solution</groupId>
+    <artifactId>resetpassword</artifactId>
+    <version>1.2.0.RC1</version>
+    <name>all in one</name>
+    <packaging>pom</packaging>
+
+
+    <repositories>
+        <repository>
+            <id>alfresco-public</id>
+            <url>https://artifacts.alfresco.com/nexus/content/groups/public</url>
+        </repository>
+    </repositories>
+    <pluginRepositories>
+        <pluginRepository>
+            <id>alfresco-public</id>
+            <name>Alfresco</name>
+            <url>http://artifacts.alfresco.com/nexus/content/repositories/releases</url>
+        </pluginRepository>
+    </pluginRepositories>
+
+  <modules>
+    <module>alfresco-resetpassword</module>
+    <module>share-resetpassword</module>
+  </modules>
+</project>
\ No newline at end of file
diff --git a/readme_resources/1-configuration.png b/readme_resources/1-configuration.png
new file mode 100644
index 00000000..e5ad5380
Binary files /dev/null and b/readme_resources/1-configuration.png differ
diff --git a/readme_resources/2-configuration.png b/readme_resources/2-configuration.png
new file mode 100644
index 00000000..049da7a9
Binary files /dev/null and b/readme_resources/2-configuration.png differ
diff --git a/readme_resources/3-configuration.png b/readme_resources/3-configuration.png
new file mode 100644
index 00000000..26258743
Binary files /dev/null and b/readme_resources/3-configuration.png differ
diff --git a/readme_resources/4-configuration.png b/readme_resources/4-configuration.png
new file mode 100644
index 00000000..2adaea74
Binary files /dev/null and b/readme_resources/4-configuration.png differ
diff --git a/resetPassword-share/pom.xml b/resetPassword-share/pom.xml
deleted file mode 100644
index 2ae50007..00000000
--- a/resetPassword-share/pom.xml
+++ /dev/null
@@ -1,109 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
-    <modelVersion>4.0.0</modelVersion>
-    <groupId>com.flex-solution</groupId>
-    <artifactId>reset-password-share</artifactId>
-    <version>1.1.0</version>
-    <name>Reset Password Share AMP</name>
-    <packaging>amp</packaging>
-
-    <parent>
-        <groupId>org.alfresco.maven</groupId>
-        <artifactId>alfresco-sdk-parent</artifactId>
-        <version>2.1.1</version>
-    </parent>
-
-    <!-- 
-        SDK properties have sensible defaults in the SDK parent,
-        but you can override the properties below to use another version.
-        For more available properties see the alfresco-sdk-parent POM.
-       -->
-    <properties>
-        <!-- The following are default values for data location and Alfresco version.
-             Uncomment if you need to change
-        <alfresco.version>${alfresco.community.default.version}</alfresco.version> -->
-
-        <!-- This control the root logging level for all apps uncomment and change, defaults to WARN
-            <app.log.root.level>WARN</app.log.root.level>
-        -->
-
-        <!-- Set the enviroment to use, this controls which properties will be picked in src/test/properties
-             for embedded run, defaults to the 'local' environment. See SDK Parent POM for more info.
-        <env>other environment name</env>
-        -->
-
-        <!-- The Maven artifact ID to use when loading the Share.WAR that the AMP should be applied to,
-                    defaults to the alfresco.war artifact ID, so we need to override here. -->
-        <app.amp.client.war.artifactId>${alfresco.share.artifactId}</app.amp.client.war.artifactId>
-
-        <!-- Since Alfresco.WAR (i.e. the Repository) is already running on port 8080, we run Share.WAR on port 8081 -->
-        <maven.tomcat.port>8081</maven.tomcat.port>
-
-        <!-- Used in share-config-custom.xml. By default points to local installation of Alfresco Repo -->
-        <!--<alfresco.repo.url>http://localhost:8080/alfresco</alfresco.repo.url>-->
-
-    </properties>
-
-    <!-- Here we realize the connection with the Alfresco selected platform 
-        (e.g.version and edition) -->
-    <dependencyManagement>
-        <dependencies>
-            <!-- This will import the dependencyManagement for all artifacts in the selected Alfresco version/edition
-                (see http://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html#Importing_Dependencies) 
-                NOTE: You still need to define dependencies in your POM, but you can omit version as it's enforced by this dependencyManagement. NOTE: It defaults 
-                to the latest version this SDK pom has been tested with, but alfresco version can/should be overridden in your project's pom -->
-            <dependency>
-                <groupId>${alfresco.groupId}</groupId>
-                <artifactId>alfresco-platform-distribution</artifactId>
-                <version>${alfresco.version}</version>
-                <type>pom</type>
-                <scope>import</scope>
-            </dependency>
-        </dependencies>
-    </dependencyManagement>
-
-    <!-- Following dependencies are needed for compiling Java code in src/main/java;  -->
-    <dependencies>
-        <dependency>
-            <groupId>${alfresco.groupId}</groupId>
-            <artifactId>share</artifactId>
-            <version>${alfresco.version}</version>
-            <classifier>classes</classifier>
-            <scope>provided</scope>
-        </dependency>
-        <dependency>
-            <groupId>org.springframework.extensions.surf</groupId>
-            <artifactId>spring-surf-api</artifactId>
-            <scope>provided</scope>
-        </dependency>
-    </dependencies>
-
-    <build>
-        <plugins>
-            <!-- Compress JavaScript files and store as *-min.js -->
-            <plugin>
-                <groupId>net.alchim31.maven</groupId>
-                <artifactId>yuicompressor-maven-plugin</artifactId>
-            </plugin>
-        </plugins>
-    </build>
-
-    <profiles>
-        <!--
-            Brings in the extra Enterprise specific share classes,
-            if the 'enterprise' profile has been activated, needs to be activated manually. -->
-        <profile>
-            <id>enterprise</id>
-            <dependencies>
-                <dependency>
-                    <groupId>${alfresco.groupId}</groupId>
-                    <artifactId>share-enterprise</artifactId>
-                    <version>${alfresco.version}</version>
-                    <classifier>classes</classifier>
-                    <scope>provided</scope>
-                </dependency>
-            </dependencies>
-        </profile>
-    </profiles>
-</project>
\ No newline at end of file
diff --git a/resetPassword-share/run.bat b/resetPassword-share/run.bat
deleted file mode 100644
index 0695b675..00000000
--- a/resetPassword-share/run.bat
+++ /dev/null
@@ -1,20 +0,0 @@
-::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
-::      Dev environment startup script for Alfresco Community.    ::
-::                                                                ::
-::      Downloads the spring-loaded lib if not existing and       ::
-::      runs the Share AMP applied to Share WAR.                  ::
-::      Note. requires Alfresco.war to be running in another      ::
-::      Tomcat on port 8080.                                      ::
-::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
-@echo off
-
-set springloadedfile=%HOME%\.m2\repository\org\springframework\springloaded\1.2.3.RELEASE\springloaded-1.2.3.RELEASE.jar
-
-if not exist %springloadedfile% (
-  mvn validate -Psetup
-)
-
-set MAVEN_OPTS=-javaagent:"%springloadedfile%" -noverify
-
-mvn integration-test -Pamp-to-war -nsu
-:: mvn integration-test -Pamp-to-war 
diff --git a/resetPassword-share/run.sh b/resetPassword-share/run.sh
deleted file mode 100644
index c8c46cad..00000000
--- a/resetPassword-share/run.sh
+++ /dev/null
@@ -1,10 +0,0 @@
-#!/bin/bash
-# Downloads the spring-loaded lib if not existing and runs the Share AMP applied to Share WAR
-# Note. requires Alfresco.war to be running in another Tomcat on port 8080
-springloadedfile=~/.m2/repository/org/springframework/springloaded/1.2.3.RELEASE/springloaded-1.2.3.RELEASE.jar
-
-if [ ! -f $springloadedfile ]; then
-mvn validate -Psetup
-fi
-
-MAVEN_OPTS="-javaagent:$springloadedfile -noverify" mvn integration-test -Pamp-to-war
diff --git a/resetPassword-share/src/main/resources/META-INF/resources/test.html b/resetPassword-share/src/main/resources/META-INF/resources/test.html
deleted file mode 100644
index 53ec260b..00000000
--- a/resetPassword-share/src/main/resources/META-INF/resources/test.html
+++ /dev/null
@@ -1,6 +0,0 @@
-<html>
-    <body>
-        <p>This is a test web resource loaded from the JAR/META-INF/resources. 
-        This, per Servlet 3 spec is mapped to the root of the webapp</p> 
-    </body>
-</html>
\ No newline at end of file
diff --git a/resetPassword-share/src/main/resources/META-INF/share-config-custom.xml b/resetPassword-share/src/main/resources/META-INF/share-config-custom.xml
deleted file mode 100644
index 9a8db0da..00000000
--- a/resetPassword-share/src/main/resources/META-INF/share-config-custom.xml
+++ /dev/null
@@ -1,50 +0,0 @@
-<alfresco-config>
-
-    <config evaluator="string-compare" condition="Workflow">
-        <hidden-workflows>
-            <workflow name="activiti$resetPassword"/>
-        </hidden-workflows>
-    </config>
-
-    <config evaluator="string-compare" condition="activiti$resetPassword">
-        <forms>
-            <form>
-                <field-visibility>
-                    <show id="bpm:workflowDescription"/>
-                    <show id="bpm:assignee"/>
-                </field-visibility>
-            </form>
-        </forms>
-    </config>
-
-    <config evaluator="task-type" condition="fs-reset:review">
-        <forms>
-            <form>
-                <field-visibility>
-                    <show id="fs-reset:password"/>
-                    <show id="fs-reset:confirmPass"/>
-                    <show id="transitions"/>
-                </field-visibility>
-
-                <appearance>
-                    <field id="fs-reset:password" label-id="prop_fs-reset_password">
-                        <control template="/org/alfresco/components/form/controls/textfield.ftl">
-                            <control-param name="password">true</control-param>
-                        </control>
-                    </field>
-
-                    <field id="fs-reset:confirmPass" label-id="prop_fs-reset_confirmPass">
-                        <control template="/com/flex-solution/resetPassword/components/form/controls/passConfirmation.ftl">
-                            <control-param name="password">true</control-param>
-                        </control>
-                    </field>
-
-                    <field id="transitions">
-                        <control template="/com/flex-solution/resetPassword/components/form/controls/wfTransitions.ftl">
-                        </control>
-                    </field>
-                </appearance>
-            </form>
-        </forms>
-    </config>
-</alfresco-config>
diff --git a/resetPassword-share/src/test/resources/alfresco/web-extension/share-config-custom.xml b/resetPassword-share/src/test/resources/alfresco/web-extension/share-config-custom.xml
deleted file mode 100644
index 203f37ab..00000000
--- a/resetPassword-share/src/test/resources/alfresco/web-extension/share-config-custom.xml
+++ /dev/null
@@ -1,92 +0,0 @@
-<alfresco-config>
-
-    <config evaluator="string-compare" condition="WebFramework">
-        <web-framework>
-            <autowire>
-                <!-- Changing this to 'development' currently breaks the Admin Console.
-                     Instead we make a POST to clear Share dependency caches, see 'clear-caches-refresh-ws' profile. -->
-                <mode>production</mode> <!-- not really need in the long run, used for YUI - deprecate -->
-            </autowire>
-
-            <!--
-                 We don't need to do this when we have the new refresh mojos in the Alfresco plug-in.
-
-                 If resource caching has been disabled then all the dependency caches will be cleared
-                 before processing the Aikau jsonModel request...
-                    (i.e. this.dojoDependencyHandler.clearCaches() )
-
-                 For more information see the Aikau source code: https://github.com/Alfresco/Aikau
-            -->
-            <disable-resource-caching>false</disable-resource-caching>
-        </web-framework>
-    </config>
-
-    <!-- Global config section -->
-    <config replace="true">
-        <flags>
-            <!--
-               Developer debugging setting to turn on DEBUG mode for client scripts in the browser
-            -->
-            <client-debug>true</client-debug>
-            <!--
-               LOGGING can always be toggled at runtime when in DEBUG mode (Ctrl, Ctrl, Shift, Shift).
-               This flag automatically activates logging on page load.
-            -->
-            <client-debug-autologging>false</client-debug-autologging>
-        </flags>
-    </config>
-
-    <!--
-        Disable CSRF completely for now
-        It seems Share has issues on 4.2.x with the embedded tomcat and CSRFPolicy
-        -->
-    <config evaluator="string-compare" condition="CSRFPolicy" replace="true">
-	    <filter/>
-    </config>
-
-    <!--
-        Change so it is picked up from property where the Alfresco Repo Webapp is running
-        (e.g. http://localhost:8080/alfresco)
-        -->
-    <config evaluator="string-compare" condition="Remote">
-        <remote>
-            <endpoint>
-                <id>alfresco-noauth</id>
-                <name>Alfresco - unauthenticated access</name>
-                <description>Access to Alfresco Repository WebScripts that do not require authentication</description>
-                <connector-id>alfresco</connector-id>
-                <endpoint-url>${alfresco.repo.url}/s</endpoint-url>
-                <identity>none</identity>
-            </endpoint>
-
-            <endpoint>
-                <id>alfresco</id>
-                <name>Alfresco - user access</name>
-                <description>Access to Alfresco Repository WebScripts that require user authentication</description>
-                <connector-id>alfresco</connector-id>
-                <endpoint-url>${alfresco.repo.url}/s</endpoint-url>
-                <identity>user</identity>
-            </endpoint>
-
-            <endpoint>
-                <id>alfresco-feed</id>
-                <name>Alfresco Feed</name>
-                <description>Alfresco Feed - supports basic HTTP authentication via the EndPointProxyServlet</description>
-                <connector-id>http</connector-id>
-                <endpoint-url>${alfresco.repo.url}/s</endpoint-url>
-                <basic-auth>true</basic-auth>
-                <identity>user</identity>
-            </endpoint>
-
-            <endpoint>
-                <id>activiti-admin</id>
-                <name>Activiti Admin UI - user access</name>
-                <description>Access to Activiti Admin UI, that requires user authentication</description>
-                <connector-id>activiti-admin-connector</connector-id>
-                <endpoint-url>${alfresco.repo.url}/activiti-admin</endpoint-url>
-                <identity>user</identity>
-            </endpoint>
-        </remote>
-    </config>
-</alfresco-config>
-
diff --git a/resetPassword-share/src/test/resources/log4j.properties b/resetPassword-share/src/test/resources/log4j.properties
deleted file mode 100644
index 280996b9..00000000
--- a/resetPassword-share/src/test/resources/log4j.properties
+++ /dev/null
@@ -1,52 +0,0 @@
-# This file is copied from Alfresco Share 5.0.d
-# Overrides tomcat/webapps/share/WEB-INF/classes/log4j,properties
-# and sets new file location from property and log level from property.
-#
-
-# Set root logger level to error
-log4j.rootLogger=${app.log.root.level}, Console, File
-
-###### Console appender definition #######
-
-# All outputs currently set to be a ConsoleAppender.
-log4j.appender.Console=org.apache.log4j.ConsoleAppender
-log4j.appender.Console.layout=org.apache.log4j.PatternLayout
-
-# use log4j NDC to replace %x with tenant domain / username
-log4j.appender.Console.layout.ConversionPattern=%d{ISO8601} %x %-5p [%c{3}] [%t] %m%n
-#log4j.appender.Console.layout.ConversionPattern=%d{ABSOLUTE} %-5p [%c] %m%n
-
-###### File appender definition #######
-log4j.appender.File=org.apache.log4j.DailyRollingFileAppender
-log4j.appender.File.File=${app.log.dir}alfresco.log
-log4j.appender.File.Append=true
-log4j.appender.File.DatePattern='.'yyyy-MM-dd
-log4j.appender.File.layout=org.apache.log4j.PatternLayout
-log4j.appender.File.layout.ConversionPattern=%d{yyyy-MM-dd} %d{ABSOLUTE} %-5p [%c] [%t] %m%n
-
-# Spring
-log4j.logger.org.springframework=warn
-# Turn off Spring remoting warnings that should really be info or debug.
-log4j.logger.org.springframework.remoting.support=error
-log4j.logger.org.springframework.util=error
-
-# MyFaces
-log4j.logger.org.apache.myfaces.util.DebugUtils=info
-log4j.logger.org.apache.myfaces.el.VariableResolverImpl=error
-log4j.logger.org.apache.myfaces.application.jsp.JspViewHandlerImpl=error
-log4j.logger.org.apache.myfaces.taglib=error
-
-# Alfresco
-log4j.logger.org.alfresco=error
-log4j.logger.org.alfresco.config=warn
-log4j.logger.org.alfresco.config.JndiObjectFactoryBean=warn
-log4j.logger.org.alfresco.web=info
-
-# Web Framework
-log4j.logger.org.springframework.extensions.webscripts=info
-log4j.logger.org.springframework.extensions.webscripts.ScriptLogger=warn
-log4j.logger.org.springframework.extensions.webscripts.ScriptDebugger=off
-
-# Freemarker
-# Note the freemarker.runtime logger is used to log non-fatal errors that are handled by Alfresco's retrying transaction handler
-log4j.logger.freemarker.runtime=
\ No newline at end of file
diff --git a/resetPassword-share/tomcat/context.xml b/resetPassword-share/tomcat/context.xml
deleted file mode 100644
index 58a995fa..00000000
--- a/resetPassword-share/tomcat/context.xml
+++ /dev/null
@@ -1,29 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!-- ===================================================================================================================
-    This context file is used only in a development IDE for rapid development,
-    it is never released with the Alfresco.war
-    =================================================================================================================-->
-
-<!-- Setup docBase to something like share-amp/target/share-amp-war
-     and path to /share -->
-<Context docBase="${app.amp.client.war.folder}" path="${share.client.contextPath}">
-
-  <Resources className="org.apache.naming.resources.VirtualDirContext"
-    extraResourcePaths="/=${project.build.directory}/${project.build.finalName}/web" />
-
-  <!-- Configure where the Share (share.war) web application can load classes, test classes, and config -->
-  <!-- Setup the virtual class path like this:
-       1) target/classes
-       2) target/${project.build.finalName}/config
-       3) target/test-classes
-
-       This way mvn compile can be invoked and all changes will be picked up
-  -->
-  <Loader searchVirtualFirst="true"
-          className="org.apache.catalina.loader.VirtualWebappLoader"
-          virtualClasspath="${project.build.outputDirectory};${project.build.directory}/${project.build.finalName}/config;${project.build.testOutputDirectory}" />
-
-  <!-- This enables hot reloading of web resources from uncompressed jars (while in prod they would be loaded from  WEB-INF/lib/{\*.jar}/META-INF/resources -->
-  <JarScanner scanAllDirectories="true" />
-  
-</Context>
diff --git a/resetPassword/pom.xml b/resetPassword/pom.xml
deleted file mode 100644
index d5b930b6..00000000
--- a/resetPassword/pom.xml
+++ /dev/null
@@ -1,114 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
-    <modelVersion>4.0.0</modelVersion>
-    <groupId>com.flex-solution</groupId>
-    <artifactId>reset-password-repo</artifactId>
-    <version>1.1.0</version>
-    <build>
-        <plugins>
-            <plugin>
-                <groupId>org.apache.maven.plugins</groupId>
-                <artifactId>maven-compiler-plugin</artifactId>
-                <configuration>
-                    <source>8</source>
-                    <target>8</target>
-                </configuration>
-            </plugin>
-        </plugins>
-    </build>
-    <name>Reset Password Repo AMP</name>
-    <packaging>amp</packaging>
-
-    <parent>
-        <groupId>org.alfresco.maven</groupId>
-        <artifactId>alfresco-sdk-parent</artifactId>
-        <version>2.1.1</version>
-    </parent>
-
-    <!-- 
-        SDK properties have sensible defaults in the SDK parent,
-        but you can override the properties below to use another version.
-        For more available properties see the alfresco-sdk-parent POM.
-       -->
-    <properties>
-        <!-- The following are default values for data location and Alfresco Community version.
-             Uncomment if you need to change (Note. current default version for Enterprise edition is 5.0.1)
-          <alfresco.version>5.0.d</alfresco.version>
-          <alfresco.data.location>/absolute/path/to/alf_data_dev</alfresco.data.location> -->
-
-        <!-- This control the root logging level for all apps uncomment and change, defaults to WARN
-            <app.log.root.level>WARN</app.log.root.level>
-        -->
-
-        <!-- Set the enviroment to use, this controls which properties will be picked in src/test/properties
-             for embedded run, defaults to the 'local' environment. See SDK Parent POM for more info.
-        <env>local</env>
-        -->
-    </properties>
-
-    <!-- Here we realize the connection with the Alfresco selected platform 
-        (e.g.version and edition) -->
-    <dependencyManagement>
-        <dependencies>
-            <!-- Setup what versions of the different Alfresco artifacts that will be used (depends on alfresco.version),
-                 so we don't have to specify version in any of the dependency definitions in our POM.
-                 For more info see:
-                    http://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html#Importing_Dependencies
-            -->
-            <dependency>
-                <groupId>${alfresco.groupId}</groupId>
-                <artifactId>alfresco-platform-distribution</artifactId>
-                <version>${alfresco.version}</version>
-                <type>pom</type>
-                <scope>import</scope>
-            </dependency>
-        </dependencies>
-    </dependencyManagement>
-
-    <dependencies>
-        <!-- Following dependencies are needed for compiling Java code in src/main/java;
-             <scope>provided</scope> is inherited for each of the following;
-             for more info, please refer to alfresco-platform-distribution POM -->
-        <dependency>
-            <groupId>${alfresco.groupId}</groupId>
-            <artifactId>alfresco-repository</artifactId>
-        </dependency>
-    </dependencies>
-
-    <profiles>
-        <!--
-            Brings in the extra Enterprise specific repository classes,
-            if the 'enterprise' profile has been activated, needs to be activated manually.
-            -->
-        <profile>
-            <id>enterprise</id>
-            <dependencies>
-                <dependency>
-                    <groupId>${alfresco.groupId}</groupId>
-                    <artifactId>alfresco-repository</artifactId>
-                    <version>${alfresco.version}</version>
-                    <scope>provided</scope>
-                </dependency>
-            </dependencies>
-        </profile>
-
-        <!--
-            If the 'amp-to-war' profile is enabled then make sure to bring in the alfresco-rad module,
-            which has the H2 scripts and other RAD features.
-
-            TODO: TO INVESTIGATE: This dependency is already defined in the parent SDK pom in the 'amp-to-war' profile
-                  but this does not work, it is not include...
-
-        <profile>
-            <id>amp-to-war</id>
-            <dependencies>
-                <dependency>
-                    <groupId>org.alfresco.maven</groupId>
-                    <artifactId>alfresco-rad</artifactId>
-                    <version>${maven.alfresco.version}</version>
-                </dependency>
-            </dependencies>
-        </profile> -->
-    </profiles>
-</project>
diff --git a/resetPassword/run.bat b/resetPassword/run.bat
deleted file mode 100644
index 594f2944..00000000
--- a/resetPassword/run.bat
+++ /dev/null
@@ -1,19 +0,0 @@
-::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
-::      Dev environment startup script for Alfresco Community.    ::
-::                                                                ::
-::      Downloads the spring-loaded lib if not existing and       ::
-::      runs the Repo AMP applied to Alfresco WAR.                ::
-::      Note. the Share WAR is not deployed.                      ::
-::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
-@echo off
-
-set springloadedfile=%HOME%\.m2\repository\org\springframework\springloaded\1.2.3.RELEASE\springloaded-1.2.3.RELEASE.jar
-
-if not exist %springloadedfile% (
-  mvn validate -Psetup
-)
-
-set MAVEN_OPTS=-javaagent:"%springloadedfile%" -noverify -Xms256m -Xmx2G
-
-mvn integration-test -Pamp-to-war -nsu
-:: mvn integration-test -Pamp-to-war 
diff --git a/resetPassword/run.sh b/resetPassword/run.sh
deleted file mode 100644
index eeddce43..00000000
--- a/resetPassword/run.sh
+++ /dev/null
@@ -1,11 +0,0 @@
-#!/bin/bash
-# Downloads the spring-loaded lib if not existing and      
-# runs the Repo AMP applied to Alfresco WAR.           
-# Note. the Share WAR is not deployed.              
-springloadedfile=~/.m2/repository/org/springframework/springloaded/1.2.3.RELEASE/springloaded-1.2.3.RELEASE.jar
-
-if [ ! -f $springloadedfile ]; then
-mvn validate -Psetup
-fi
-
-MAVEN_OPTS="-javaagent:$springloadedfile -noverify -Xms256m -Xmx2G" mvn integration-test -Pamp-to-war
diff --git a/resetPassword/src/main/amp/config/alfresco/extension/workflow/ResetPasswordProcess.bpmn20.xml b/resetPassword/src/main/amp/config/alfresco/extension/workflow/ResetPasswordProcess.bpmn20.xml
deleted file mode 100644
index af510637..00000000
--- a/resetPassword/src/main/amp/config/alfresco/extension/workflow/ResetPasswordProcess.bpmn20.xml
+++ /dev/null
@@ -1,61 +0,0 @@
-<?xml version="1.0" encoding="UTF-8" ?>
-
-<definitions xmlns="http://www.omg.org/spec/BPMN/20100524/MODEL"
-             xmlns:activiti="http://activiti.org/bpmn"
-             xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI"
-             xmlns:omgdc="http://www.omg.org/spec/DD/20100524/DC"
-             xmlns:omgdi="http://www.omg.org/spec/DD/20100524/DI" typeLanguage="http://www.w3.org/2001/XMLSchema"
-             expressionLanguage="http://www.w3.org/1999/XPath" targetNamespace="http://alfresco.org">
-
-    <process id="resetPasswordFlex" name="Reset Password" isExecutable="true">
-
-        <startEvent id="start"
-                    activiti:formKey="fs-reset:start"/>
-        <sequenceFlow id='flow1'
-                      sourceRef='start'
-                      targetRef='review'/>
-
-        <userTask id="review" name="Review"
-                  activiti:formKey="fs-reset:review" activiti:assignee="${bpm_assignee.properties.userName}">
-            <extensionElements>
-
-                <activiti:taskListener event="create"
-                                       class="org.alfresco.repo.workflow.activiti.tasklistener.ScriptTaskListener">
-                    <activiti:field name="script">
-                        <activiti:string><![CDATA[<import resource="classpath:alfresco/extension/workflow/js/reset-password.js">
-                        var obj = new ResetPassword();
-                        sudo.asTenant(bpm_assignee.properties.userName, obj.reviewCreate, obj);
-                        ]]></activiti:string>
-                    </activiti:field>
-                </activiti:taskListener>
-
-                <activiti:taskListener event="complete"
-                                       class="org.alfresco.repo.workflow.activiti.tasklistener.ScriptTaskListener">
-                    <activiti:field name="script">
-                        <activiti:string><![CDATA[<import resource="classpath:alfresco/extension/workflow/js/reset-password.js">
-                        var obj = new ResetPassword();
-                        sudo.asTenant(bpm_assignee.properties.userName, obj.reviewComplete, obj);
-                        ]]></activiti:string>
-                    </activiti:field>
-                </activiti:taskListener>
-
-            </extensionElements>
-        </userTask>
-
-        <boundaryEvent id="timer" name="Timer" attachedToRef="review">
-            <timerEventDefinition>
-                <timeDuration>PT24H</timeDuration>
-            </timerEventDefinition>
-        </boundaryEvent>
-
-        <sequenceFlow id='flow2'
-                      sourceRef='review'
-                      targetRef='theEnd'/>
-
-        <sequenceFlow id="flow3" sourceRef="timer" targetRef="theEnd"/>
-
-        <endEvent id="theEnd"/>
-
-    </process>
-
-</definitions>
\ No newline at end of file
diff --git a/resetPassword/src/main/amp/config/alfresco/module/resetPassword/log4j.properties b/resetPassword/src/main/amp/config/alfresco/module/resetPassword/log4j.properties
deleted file mode 100644
index 8bd5efcc..00000000
--- a/resetPassword/src/main/amp/config/alfresco/module/resetPassword/log4j.properties
+++ /dev/null
@@ -1,40 +0,0 @@
-# Licensed to the Apache Software Foundation (ASF) under one or more
-# contributor license agreements.  See the NOTICE file distributed with
-# this work for additional information regarding copyright ownership.
-# The ASF licenses this file to You under the Apache License, Version 2.0
-# (the "License"); you may not use this file except in compliance with
-# the License.  You may obtain a copy of the License at
-#
-# http://www.apache.org/licenses/LICENSE-2.0
-#
-# Unless required by applicable law or agreed to in writing, software
-# distributed under the License is distributed on an "AS IS" BASIS,
-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-# See the License for the specific language governing permissions and
-# limitations under the License.
-#-----------------------------------------------------------------------
-# resetPassword module log4j.properties
-#
-#   NOTE
-#   ----
-#      Log4j uses the following logging levels:
-#      debug,info,warn,error,fatal
-#
-#      To set the logging level of {fullClassName} to {loglevel},
-#      add a line to this file of the following form:
-#   
-#               log4j.logger.{fullClassName}={loglevel}
-#
-#      For example, to make 'com.example.MyExample' produce 'debug'
-#      logs, add a line like this:
-#   
-#               log4j.logger.com.example.MyExample=debug
-#
-#
-#   WARNING
-#   -------
-#       Log properties in this log4j.properties file override/augment
-#       those in the webapp's main log4j.properties.
-#    
-#-----------------------------------------------------------------------
-log4j.logger.com.flexsolution.demoamp.DemoComponent=debug
diff --git a/resetPassword/src/main/amp/config/alfresco/module/resetPassword/module-context.xml b/resetPassword/src/main/amp/config/alfresco/module/resetPassword/module-context.xml
deleted file mode 100644
index c1408630..00000000
--- a/resetPassword/src/main/amp/config/alfresco/module/resetPassword/module-context.xml
+++ /dev/null
@@ -1,24 +0,0 @@
-<?xml version='1.0' encoding='UTF-8'?>
-<!--
-	Licensed to the Apache Software Foundation (ASF) under one or more
-	contributor license agreements. 
-	The ASF licenses this file to You under the Apache License, Version 2.0
-	(the "License"); you may not use this file except in compliance with
-	the License.  You may obtain a copy of the License at
-	
-	http://www.apache.org/licenses/LICENSE-2.0
-	
-	Unless required by applicable law or agreed to in writing, software
-	distributed under the License is distributed on an "AS IS" BASIS,
-	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-	See the License for the specific language governing permissions and
-	limitations under the License.
-	
--->
-<!DOCTYPE beans PUBLIC '-//SPRING//DTD BEAN//EN' 'http://www.springframework.org/dtd/spring-beans.dtd'>
-
-<beans>
-	<!-- This is filtered by Maven at build time, so that module name is single sourced. -->
-    <import resource="classpath:alfresco/module/resetPassword/context/*-context.xml" />
-
-</beans>
diff --git a/resetPassword/src/main/amp/module.properties b/resetPassword/src/main/amp/module.properties
deleted file mode 100644
index 2afa1baf..00000000
--- a/resetPassword/src/main/amp/module.properties
+++ /dev/null
@@ -1,48 +0,0 @@
-# Licensed to the Apache Software Foundation (ASF) under one or more
-# contributor license agreements.  See the NOTICE file distributed with
-# this work for additional information regarding copyright ownership.
-# The ASF licenses this file to You under the Apache License, Version 2.0
-# (the "License"); you may not use this file except in compliance with
-# the License.  You may obtain a copy of the License at
-#
-# http://www.apache.org/licenses/LICENSE-2.0
-#
-# Unless required by applicable law or agreed to in writing, software
-# distributed under the License is distributed on an "AS IS" BASIS,
-# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-# See the License for the specific language governing permissions and
-# limitations under the License.
-
-
-
-# SDK Sample module
-
-# ==== Beginning of Alfresco required/optional properties ====== #
-# NB: These properties are filtered at build time by Maven, single
-# sourcing from POM properties  
-module.id=${project.artifactId}
-#module.aliases=myModule-123, my-module
-module.title=${project.name}
-module.description=${project.description}
-module.version=${noSnapshotVersion}
-
-# The following optional properties can be used to prevent the module from being added
-# to inappropriate versions of the WAR file.
-# module.repo.version.min=2.0
-# module.repo.version.max=2.1
-
-# FIXME: This dependencies should come out of mvn dependencies on amp
-
-# The following describe dependencies on other modules
-# Depends on net.sf.myproject.module.SupportModuleA version ${version} or later
-# module.depends.net.sf.myproject.module.SupportModuleA=${version}-*
-# Depends on net.sf.myproject.module.SupportModuleA version ${version} to 2.0
-# module.depends.net.sf.myproject.module.SupportModuleB=${version}-2.0
-# Depends on net.sf.myproject.module.SupportModuleC - any version
-# module.depends.net.sf.myproject.module.SupportModuleB=*
-
-
-# ==== End of Alfresco required/optional properties ======= #
-
-
-# ==== Beginning of module required properties/optional ====== #
\ No newline at end of file
diff --git a/resetPassword/src/main/java/com/flexsolution/resetpassword/util/TokenGenerator.java b/resetPassword/src/main/java/com/flexsolution/resetpassword/util/TokenGenerator.java
deleted file mode 100644
index e5b80bea..00000000
--- a/resetPassword/src/main/java/com/flexsolution/resetpassword/util/TokenGenerator.java
+++ /dev/null
@@ -1,15 +0,0 @@
-package com.flexsolution.resetpassword.util;
-
-import org.alfresco.repo.jscript.BaseScopableProcessorExtension;
-
-import java.util.UUID;
-
-
-public class TokenGenerator extends BaseScopableProcessorExtension {
-
-    public String genToken() {
-        return UUID.randomUUID().toString();
-    }
-}
-
-
diff --git a/resetPassword/src/main/java/com/flexsolution/resetpassword/util/WorkflowHelper.java b/resetPassword/src/main/java/com/flexsolution/resetpassword/util/WorkflowHelper.java
deleted file mode 100644
index 0990de50..00000000
--- a/resetPassword/src/main/java/com/flexsolution/resetpassword/util/WorkflowHelper.java
+++ /dev/null
@@ -1,147 +0,0 @@
-package com.flexsolution.resetpassword.util;
-
-import org.alfresco.repo.model.Repository;
-import org.alfresco.repo.security.authentication.AuthenticationUtil;
-import org.alfresco.repo.tenant.TenantContextHolder;
-import org.alfresco.repo.tenant.TenantUtil;
-import org.alfresco.repo.workflow.activiti.ActivitiConstants;
-import org.alfresco.service.cmr.repository.NodeRef;
-import org.alfresco.service.cmr.repository.NodeService;
-import org.alfresco.service.cmr.search.ResultSet;
-import org.alfresco.service.cmr.search.SearchParameters;
-import org.alfresco.service.cmr.search.SearchService;
-import org.alfresco.service.cmr.workflow.*;
-import org.alfresco.service.namespace.QName;
-import org.alfresco.util.Pair;
-import org.apache.log4j.Logger;
-import org.springframework.extensions.webscripts.WebScriptException;
-
-import java.util.List;
-
-public class WorkflowHelper {
-
-    private static WorkflowService workflowService;
-
-    private static final String SEARCH_QUERY = "TYPE:\"bpm:workflowdefinition\" AND =@cm\\:name:\"ResetPasswordProcess.bpmn20.xml\"";
-    private static final String DEPLOY_DEFINITION_ERROR = "Failed to load 'activiti$resetPassword' definition: file 'ResetPasswordProcess.bpmn20.xml' not found";
-    private static final QName ENGINE_ID = QName.createQName("http://www.alfresco.org/model/bpm/1.0", "engineId");
-
-    private static Logger logger = Logger.getLogger(WorkflowHelper.class);
-
-    private static SearchService searchService;
-    private static Repository repository;
-    private static NodeService nodeService;
-
-    public static void cancelPreviousWorkflows(final String userName) {
-
-        Pair<String, String> userTenant = AuthenticationUtil.getUserTenant(userName);
-
-        final String tenantDomain = userTenant.getSecond();
-
-        TenantUtil.runAsUserTenant(new TenantUtil.TenantRunAsWork<Object>() {
-            @Override
-            public Object doWork() throws Exception {
-                TenantContextHolder.setTenantDomain(tenantDomain);
-
-                List<WorkflowTask> workflowTasks = getTasksInProgress(userName);
-
-                if(logger.isDebugEnabled()) {
-                    logger.debug("Found workflow tasks = " + workflowTasks.size());
-                }
-
-                for (WorkflowTask task : workflowTasks) {
-                    if (logger.isDebugEnabled()) {
-                        logger.debug("Current task: " + task.getName());
-                    }
-
-                    if ("fs-reset:review".equals(task.getName())) {
-                        if (logger.isDebugEnabled()) {
-                            logger.debug("Try to end task " + task.toString());
-                        }
-                        workflowService.cancelWorkflow(task.getPath().getInstance().getId());
-                    }
-                }
-                return null;
-            }
-        }, userName, tenantDomain);
-    }
-
-    public static WorkflowDefinition deployResetPasswordWorkflow() {
-
-        workflowService.deployDefinition(getWorkflowDefinitionNodeRef());
-
-        return workflowService.getDefinitionByName("activiti$resetPasswordFlex");
-    }
-
-    private static NodeRef getWorkflowDefinitionNodeRef() {
-
-        ResultSet results = null;
-
-        try {
-            results = searchService.query(getSearchParameters());
-
-            if (logger.isDebugEnabled()) {
-                logger.debug("Result length " + results.length());
-            }
-
-            if (results.length() < 1) {
-                logger.error(DEPLOY_DEFINITION_ERROR);
-                throw new WebScriptException(404, DEPLOY_DEFINITION_ERROR);
-            }
-
-            NodeRef wfDefNode = results.getNodeRef(0);
-
-            nodeService.setProperty(wfDefNode, ENGINE_ID, ActivitiConstants.ENGINE_ID);
-
-            return wfDefNode;
-
-        } finally {
-            if (results != null) {
-                results.close();
-            }
-        }
-    }
-
-    private static SearchParameters getSearchParameters() {
-
-        SearchParameters parameters = new SearchParameters();
-
-        parameters.addStore(repository.getCompanyHome().getStoreRef());
-
-        parameters.setLanguage(SearchService.LANGUAGE_FTS_ALFRESCO);
-
-        parameters.setQuery(SEARCH_QUERY);
-
-        return parameters;
-    }
-
-    private static List<WorkflowTask> getTasksInProgress(String userName) {
-
-        WorkflowTaskQuery query = new WorkflowTaskQuery();
-        query.setEngineId(ActivitiConstants.ENGINE_ID);
-        query.setTaskState(WorkflowTaskState.IN_PROGRESS);
-        query.setActorId(userName);
-
-        if (logger.isDebugEnabled()) {
-            logger.debug("Try to delete workflows...");
-        }
-
-        return workflowService.queryTasks(query, true);
-    }
-
-    public void setWorkflowService(WorkflowService workflowService) {
-        WorkflowHelper.workflowService = workflowService;
-    }
-
-    public void setSearchService(SearchService searchService) {
-        WorkflowHelper.searchService = searchService;
-    }
-
-    public void setRepository(Repository repository) {
-        WorkflowHelper.repository = repository;
-    }
-
-    public void setNodeService(NodeService nodeService) {
-        WorkflowHelper.nodeService = nodeService;
-    }
-}
\ No newline at end of file
diff --git a/resetPassword/src/main/java/com/flexsolution/resetpassword/webscripts/ApplyChangedPasswordPost.java b/resetPassword/src/main/java/com/flexsolution/resetpassword/webscripts/ApplyChangedPasswordPost.java
deleted file mode 100644
index 6076f770..00000000
--- a/resetPassword/src/main/java/com/flexsolution/resetpassword/webscripts/ApplyChangedPasswordPost.java
+++ /dev/null
@@ -1,96 +0,0 @@
-package com.flexsolution.resetpassword.webscripts;
-
-import com.flexsolution.resetpassword.namespaces.ResetPasswordNameSpace;
-import org.alfresco.repo.security.authentication.AuthenticationUtil;
-import org.alfresco.repo.tenant.TenantContextHolder;
-import org.alfresco.repo.tenant.TenantUtil;
-import org.alfresco.service.cmr.workflow.WorkflowService;
-import org.alfresco.service.cmr.workflow.WorkflowTask;
-import org.alfresco.service.namespace.QName;
-import org.apache.log4j.Logger;
-import org.json.JSONObject;
-import org.springframework.extensions.surf.util.Content;
-import org.springframework.extensions.webscripts.*;
-
-import java.io.Serializable;
-import java.util.HashMap;
-import java.util.Map;
-
-public class ApplyChangedPasswordPost extends DeclarativeWebScript{
-
-    public static final String DOMAIN_PROP = "domain";
-    public static final String TASK_ID = "taskId";
-    public static final String NEW_PAS = "new-password";
-    public static final String NEW_PAS_CONFIRM = "new-password-confirm";
-    public static final String USER_NAME = "userName";
-    public static final String USER_TOKEN = "userToken";
-
-    private WorkflowService workflowService;
-
-    private static final Logger logger = Logger.getLogger(ApplyChangedPasswordPost.class);
-
-    @Override
-    protected Map<String, Object> executeImpl(WebScriptRequest req, Status status, Cache cache) {
-
-        // clear context - to avoid MT concurrency issue (causing domain mismatch)
-        AuthenticationUtil.clearCurrentSecurityContext();
-
-        final Map<String,String> data = getDataFromRequest(req);
-
-        TenantUtil.runAsUserTenant(new TenantUtil.TenantRunAsWork<Object>() {
-                @Override
-                public Object doWork() throws Exception {
-                    TenantContextHolder.setTenantDomain(data.get(DOMAIN_PROP));
-
-                    WorkflowTask task = workflowService.getTaskById(data.get(TASK_ID));
-
-                    final Map<QName,Serializable> properties = task.getProperties();
-                    properties.put(ResetPasswordNameSpace.QNAME_PASSWORD, data.get(NEW_PAS));
-                    properties.put(ResetPasswordNameSpace.QNAME_CONFIRM_PASS, data.get(NEW_PAS_CONFIRM));
-
-                    AuthenticationUtil.runAsSystem(new AuthenticationUtil.RunAsWork<Object>() {
-                        @Override
-                        public Object doWork() throws Exception {
-                            workflowService.updateTask(data.get(TASK_ID), properties, null, null);
-                            workflowService.endTask(data.get(TASK_ID), null);
-                            return null;
-                        }
-                    });
-                    return null;
-                }
-            }, data.get(USER_NAME), data.get(DOMAIN_PROP));
-
-        return new HashMap<>();
-    }
-
-    private Map<String, String> getDataFromRequest(WebScriptRequest req) {
-
-        HashMap <String, String> result = new HashMap<>();
-
-        Content content = req.getContent();
-
-        try {
-            JSONObject jsonObject = new JSONObject(content.getContent());
-
-            String userName = jsonObject.getString(USER_TOKEN);
-
-            result.put(USER_NAME, userName);
-            result.put(DOMAIN_PROP, AuthenticationUtil.getUserTenant(userName).getSecond());
-
-            result.put(NEW_PAS, jsonObject.getString(NEW_PAS));
-            result.put(NEW_PAS_CONFIRM, jsonObject.getString(NEW_PAS_CONFIRM));
-            result.put(TASK_ID, jsonObject.getString(TASK_ID));
-
-        } catch (Exception e) {
-            logger.error(e);
-            throw new WebScriptException("Failed to get data from request. Please, contact system administrator");
-        }
-
-        return result;
-
-    }
-
-    public void setWorkflowService(WorkflowService workflowService) {
-        this.workflowService = workflowService;
-    }
-}
\ No newline at end of file
diff --git a/resetPassword/src/main/java/com/flexsolution/resetpassword/webscripts/ResetPasswordPost.java b/resetPassword/src/main/java/com/flexsolution/resetpassword/webscripts/ResetPasswordPost.java
deleted file mode 100644
index 56c0f2ef..00000000
--- a/resetPassword/src/main/java/com/flexsolution/resetpassword/webscripts/ResetPasswordPost.java
+++ /dev/null
@@ -1,219 +0,0 @@
-package com.flexsolution.resetpassword.webscripts;
-
-import com.flexsolution.resetpassword.util.WorkflowHelper;
-import org.alfresco.model.ContentModel;
-import org.alfresco.repo.model.Repository;
-import org.alfresco.repo.security.authentication.AuthenticationUtil;
-import org.alfresco.repo.tenant.TenantContextHolder;
-import org.alfresco.repo.workflow.WorkflowModel;
-import org.alfresco.service.cmr.repository.*;
-import org.alfresco.service.cmr.search.SearchService;
-import org.alfresco.service.cmr.security.PersonService;
-import org.alfresco.service.cmr.workflow.*;
-import org.alfresco.service.namespace.NamespaceService;
-import org.alfresco.service.namespace.QName;
-import org.apache.log4j.Logger;
-import org.json.JSONException;
-import org.json.JSONObject;
-import org.springframework.beans.factory.annotation.Autowired;
-import org.springframework.extensions.surf.util.Content;
-import org.springframework.extensions.webscripts.*;
-
-import java.io.IOException;
-import java.io.Serializable;
-import java.util.HashMap;
-import java.util.List;
-import java.util.Map;
-
-public class ResetPasswordPost extends DeclarativeWebScript {
-
-    @Autowired
-    private ContentService contentService;
-
-    @Autowired
-    private NodeService nodeService;
-
-    @Autowired
-    private Repository repository;
-
-    @Autowired
-    private SearchService searchService;
-
-    @Autowired
-    private NamespaceService namespaceService;
-
-    private WorkflowService workflowService;
-    private PersonService personService;
-
-    private static final String RESET_PASS_EMAIL_TEMPLATE_XPATH = "app:dictionary/app:email_templates/cm:workflownotification/cm:reset-password.ftl";
-    private static final String WORKFLOW_NOTIFICATION_XPATH = "app:dictionary/app:email_templates/cm:workflownotification";
-
-    private static final String RESET_PASS_FILE_NAME = "reset-password.ftl";
-
-    private static final Logger logger = Logger.getLogger(ResetPasswordPost.class);
-
-    @Override
-    public Map<String, Object> executeImpl(WebScriptRequest req, Status status, Cache cache) {
-
-        final String userName = getUserNameFromRequest(req);
-
-        // clear context - to avoid MT concurrency issue (causing domain mismatch)
-        AuthenticationUtil.clearCurrentSecurityContext();
-
-        final String tenantDomain = AuthenticationUtil.getUserTenant(userName).getSecond();
-
-        createEmailTemplateIfNotExists(tenantDomain);
-
-        TenantContextHolder.setTenantDomain(tenantDomain);
-
-        NodeRef user = getUserByUserName(userName);
-
-        WorkflowHelper.cancelPreviousWorkflows(userName);
-
-        logger.debug("Try to start workflow with user " + userName);
-
-        startWorkFlow(user, AuthenticationUtil.getUserTenant(userName).getSecond());
-
-        logger.debug("Workflow has been started");
-
-        return null;
-    }
-
-    private void createEmailTemplateIfNotExists(String tenantDomain){
-        AuthenticationUtil.runAsSystem(new AuthenticationUtil.RunAsWork<Object>() {
-            @Override
-            public Object doWork () throws Exception {
-                if(!emailTemplateExists(tenantDomain)){
-                    addEmailTemplate(tenantDomain);
-                }
-                return null;
-            }
-        });
-    }
-
-    private boolean emailTemplateExists(String tenantDomain){
-
-                TenantContextHolder.setTenantDomain(tenantDomain);
-
-                NodeRef companyHome = repository.getCompanyHome();
-
-                List<NodeRef> emailTemplateFiles = searchService.selectNodes(companyHome, RESET_PASS_EMAIL_TEMPLATE_XPATH, null, namespaceService, false);
-
-                return !emailTemplateFiles.isEmpty();
-    }
-
-    private void addEmailTemplate(String tenantDomain){
-
-                TenantContextHolder.setTenantDomain(tenantDomain);
-
-                NodeRef companyHome = repository.getCompanyHome();
-
-                List<NodeRef> workflowNotificationFolder = searchService.selectNodes(companyHome, WORKFLOW_NOTIFICATION_XPATH, null, namespaceService, false);
-
-                Map<QName, Serializable> properties = new HashMap<>();
-                properties.put(ContentModel.PROP_NAME, RESET_PASS_FILE_NAME);
-
-                ChildAssociationRef newEmailTemplateCreated = nodeService.createNode(workflowNotificationFolder.get(0),
-                        ContentModel.ASSOC_CONTAINS,
-                        QName.createQName(NamespaceService.CONTENT_MODEL_1_0_URI, QName.createValidLocalName(RESET_PASS_FILE_NAME)),
-                        ContentModel.TYPE_CONTENT,
-                        properties);
-                ContentWriter invWriter = contentService.getWriter(newEmailTemplateCreated.getChildRef(), ContentModel.PROP_CONTENT, true);
-
-                String adminTenant = "";
-
-                TenantContextHolder.setTenantDomain(adminTenant);
-
-                companyHome = repository.getCompanyHome();
-
-                List<NodeRef> emailTemplateFiles = searchService.selectNodes(companyHome, RESET_PASS_EMAIL_TEMPLATE_XPATH, null, namespaceService, false);
-
-                NodeRef emailTemplate = emailTemplateFiles.get(0);
-
-                ContentReader reader = contentService.getReader(emailTemplate,ContentModel.PROP_CONTENT);
-
-                TenantContextHolder.setTenantDomain(tenantDomain);
-
-                invWriter.putContent(reader);
-
-    }
-
-    private void startWorkFlow(final NodeRef user, final String tenantDomain) {
-        AuthenticationUtil.runAsSystem(new AuthenticationUtil.RunAsWork<Object>() {
-            @Override
-            public Object doWork() throws Exception {
-
-                TenantContextHolder.setTenantDomain(tenantDomain);
-
-                WorkflowDefinition workflowDefinition = workflowService.getDefinitionByName("activiti$resetPasswordFlex");
-
-                if (workflowDefinition == null) {
-                    workflowDefinition = WorkflowHelper.deployResetPasswordWorkflow();
-                }
-
-                Map<QName, Serializable> param = new HashMap<>();
-
-                logger.debug("Try to set assignee");
-
-                param.put(WorkflowModel.ASSOC_ASSIGNEE, user);
-
-                logger.debug("Assignee: " + param.get(WorkflowModel.ASSOC_ASSIGNEE));
-
-                logger.debug("Try to set description");
-
-                param.put(WorkflowModel.PROP_DESCRIPTION, "Request to change password");
-
-                logger.debug("Try to set owner");
-
-                param.put(ContentModel.PROP_OWNER, user);
-
-                logger.debug("Try to start workflow...");
-
-                workflowService.startWorkflow(workflowDefinition.getId(), param);
-
-                return null;
-            }
-        });
-    }
-
-    private NodeRef getUserByUserName(final String userName) {
-
-        return AuthenticationUtil.runAsSystem(new AuthenticationUtil.RunAsWork<NodeRef>() {
-            @Override
-            public NodeRef doWork() throws Exception {
-                NodeRef user = personService.getPersonOrNull(userName);
-                if (user == null) {
-                    logger.error("Failed to find user with username " + userName);
-                    throw new WebScriptException(404, "error.userNotFound");
-                }
-                return user;
-            }
-        });
-    }
-
-    private String getUserNameFromRequest(WebScriptRequest request) {
-        Content content = request.getContent();
-
-        String userName;
-
-        try {
-            JSONObject jsonObject = new JSONObject(content.getContent());
-
-            userName = jsonObject.getString("userName");
-
-        } catch (JSONException | IOException e) {
-            logger.error(e);
-            throw new WebScriptException(500, "Sorry. Internal error. Try later");
-        }
-
-        return userName;
-    }
-
-    public void setWorkflowService(WorkflowService workflowService) {
-        this.workflowService = workflowService;
-    }
-
-    public void setPersonService(PersonService personService) {
-        this.personService = personService;
-    }
-}
diff --git a/resetPassword/src/main/java/com/flexsolution/resetpassword/webscripts/TaskIsCompletePost.java b/resetPassword/src/main/java/com/flexsolution/resetpassword/webscripts/TaskIsCompletePost.java
deleted file mode 100644
index 51f20755..00000000
--- a/resetPassword/src/main/java/com/flexsolution/resetpassword/webscripts/TaskIsCompletePost.java
+++ /dev/null
@@ -1,69 +0,0 @@
-package com.flexsolution.resetpassword.webscripts;
-
-import com.flexsolution.resetpassword.namespaces.ResetPasswordNameSpace;
-import org.alfresco.error.AlfrescoRuntimeException;
-import org.alfresco.repo.security.authentication.AuthenticationUtil;
-import org.alfresco.repo.tenant.TenantContextHolder;
-import org.alfresco.repo.tenant.TenantUtil;
-import org.alfresco.service.cmr.workflow.WorkflowService;
-import org.alfresco.service.cmr.workflow.WorkflowTask;
-import org.alfresco.service.cmr.workflow.WorkflowTaskState;
-
-import org.apache.log4j.Logger;
-import org.json.JSONException;
-import org.json.JSONObject;
-import org.springframework.extensions.surf.util.Content;
-import org.springframework.extensions.webscripts.*;
-
-import java.io.IOException;
-import java.util.Map;
-
-public class TaskIsCompletePost extends DeclarativeWebScript {
-
-    private WorkflowService workflowService;
-
-    private static final Logger logger = Logger.getLogger(TaskIsCompletePost.class);
-
-    @Override
-    protected Map<String, Object> executeImpl(WebScriptRequest req, Status status, Cache cache) {
-        // clear context - to avoid MT concurrency issue (causing domain mismatch)
-        AuthenticationUtil.clearCurrentSecurityContext();
-
-        Content content = req.getContent();
-
-        try {
-            final JSONObject jsonObject = new JSONObject(content.getContent());
-
-            final String userName = jsonObject.getString("user");
-            final String domain = AuthenticationUtil.getUserTenant(userName).getSecond();
-
-            TenantUtil.runAsUserTenant(new TenantUtil.TenantRunAsWork<Object>() {
-                @Override
-                public Object doWork() throws Exception {
-                    TenantContextHolder.setTenantDomain(domain);
-                    WorkflowTask task = workflowService.getTaskById(jsonObject.getString("taskId"));
-                    if(task == null
-                            || task.getState().equals(WorkflowTaskState.COMPLETED)
-                            || !task.getProperties().get(ResetPasswordNameSpace.QNAME_TOKEN).equals(jsonObject.getString("token"))){
-                        logger.warn("Invalid 'change password' request received");
-                        if (task != null){
-                            logger.warn("Details can be found in this task: " + task.toString());
-                        }
-                        throw new AlfrescoRuntimeException("Request to change password is not valid");
-                    }
-                    return null;
-                }
-            }, userName, domain);
-
-        } catch (JSONException | IOException e) {
-            logger.error(e);
-            throw new AlfrescoRuntimeException("Failed to retrieve data from json");
-        }
-
-        return null;
-    }
-
-    public void setWorkflowService(WorkflowService workflowService) {
-        this.workflowService = workflowService;
-    }
-}
\ No newline at end of file
diff --git a/resetPassword/src/test/properties/local/alfresco-global.properties b/resetPassword/src/test/properties/local/alfresco-global.properties
deleted file mode 100644
index eed88e1b..00000000
--- a/resetPassword/src/test/properties/local/alfresco-global.properties
+++ /dev/null
@@ -1,68 +0,0 @@
-#    Licensed to the Apache Software Foundation (ASF) under one or more
-#    contributor license agreements.  See the NOTICE file distributed with
-#    this work for additional information regarding copyright ownership.
-#    The ASF licenses this file to You under the Apache License, Version 2.0
-#    (the "License"); you may not use this file except in compliance with
-#    the License.  You may obtain a copy of the License at
-#    
-#    http://www.apache.org/licenses/LICENSE-2.0
-#    
-#    Unless required by applicable law or agreed to in writing, software
-#    distributed under the License is distributed on an "AS IS" BASIS,
-#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-#    See the License for the specific language governing permissions and
-#    limitations under the License.
-# RUN TIME PROPERTIES
-# -------------------
-
-########################################################################################################################
-# Alfresco configuration for running locally
-#
-# Configuration when running Tomcat embedded from Maven.
-# This will create the alf_data_dev directory relative to Tomcat run folder.
-# Property values from the POM but it can also be edited here.
-########################################################################################################################
-
-dir.root=${alfresco.data.location}
-
-# Alfresco Repo Webapp (alfresco.war) context, ports etc
-alfresco.context=alfresco
-alfresco.host=localhost
-alfresco.port=8080
-alfresco.protocol=http
-
-# Alfresco Share Webapp (share.war) context, ports etc
-share.context=share
-share.host=localhost
-share.port=8080
-share.protocol=http
-
-# Don't try and recover any index
-index.recovery.mode=NONE
-# As we run embedded, we set Lucene
-# TODO: Find a better solution for indexing, as buildonly (embedded Lucene) is deprecated and going to be removed soon
-index.subsystem.name=buildonly
-
-# These jobs seem to require Lucene (Unsupported Operation with Solr) so we disable them / set to future date
-# See https://forums.alfresco.com/en/viewtopic.php?f=52&t=41597
-# If you want to enable them (and so full WQS functionality), please also set index.subsystem.name=lucene
-wcmqs.dynamicCollectionProcessor.schedule=0 30 2 * * ? 2060
-wcmqs.feedbackProcessor.schedule=0 40 2 * * ? 2060
-wcmqs.publishQueueProcessor.schedule=0 50 2 * * ? 2060
-
-# Fail or not when there are node integrity checker errors
-integrity.failOnError=true
-
-# Database connection properties
-db.driver=${alfresco.db.datasource.class}
-db.url=${alfresco.db.url}
-db.username=${alfresco.db.username}
-db.password=${alfresco.db.password}
-db.pool.initial=10
-db.pool.max=100
-hibernate.dialect=org.hibernate.dialect.H2Dialect
-
-# File servers related properties
-# For local runs we disable CIFS and FTP
-cifs.enabled=false
-ftp.enabled=false
\ No newline at end of file
diff --git a/resetPassword/src/test/resources/log4j.properties b/resetPassword/src/test/resources/log4j.properties
deleted file mode 100644
index bf4a4721..00000000
--- a/resetPassword/src/test/resources/log4j.properties
+++ /dev/null
@@ -1,266 +0,0 @@
-# This is a full override of Alfresco 4.2.b log4j.properties
-# This file overwrites the alfresco.war log4j.properties
-
-# Set root logger level to error
-log4j.rootLogger=${app.log.root.level}, Console, File
-
-###### Console appender definition #######
-
-# All outputs currently set to be a ConsoleAppender.
-log4j.appender.Console=org.apache.log4j.ConsoleAppender
-log4j.appender.Console.layout=org.apache.log4j.PatternLayout
-
-# use log4j NDC to replace %x with tenant domain / username
-log4j.appender.Console.layout.ConversionPattern=%d{ISO8601} %x %-5p [%c{3}] [%t] %m%n 
-#log4j.appender.Console.layout.ConversionPattern=%d{ABSOLUTE} %-5p [%c] %m%n
-
-###### File appender definition #######
-log4j.appender.File=org.apache.log4j.DailyRollingFileAppender
-log4j.appender.File.File=${app.log.dir}alfresco.log
-log4j.appender.File.Append=true
-log4j.appender.File.DatePattern='.'yyyy-MM-dd
-log4j.appender.File.layout=org.apache.log4j.PatternLayout
-log4j.appender.File.layout.ConversionPattern=%d{ABSOLUTE} %-5p [%c] %m%n
-
-###### Hibernate specific appender definition #######
-#log4j.appender.file=org.apache.log4j.FileAppender
-#log4j.appender.file.File=hibernate.log
-#log4j.appender.file.layout=org.apache.log4j.PatternLayout
-#log4j.appender.file.layout.ConversionPattern=%d{ABSOLUTE} %5p %c{1}:%L - %m%n
-
-###### Log level overrides #######
-
-# Commented-in loggers will be exposed as JMX MBeans (refer to org.alfresco.repo.admin.Log4JHierarchyInit)
-# Hence, generally useful loggers should be listed with at least ERROR level to allow simple runtime
-# control of the level via a suitable JMX Console. Also, any other loggers can be added transiently via
-# Log4j addLoggerMBean as long as the logger exists and has been loaded.
-
-# Hibernate
-log4j.logger.org.hibernate=error
-log4j.logger.org.hibernate.util.JDBCExceptionReporter=fatal
-log4j.logger.org.hibernate.event.def.AbstractFlushingEventListener=fatal
-log4j.logger.org.hibernate.type=warn
-log4j.logger.org.hibernate.cfg.SettingsFactory=warn
-
-# Spring
-log4j.logger.org.springframework=warn
-# Turn off Spring remoting warnings that should really be info or debug.
-log4j.logger.org.springframework.remoting.support=error
-log4j.logger.org.springframework.util=error
-
-# Axis/WSS4J
-log4j.logger.org.apache.axis=info
-log4j.logger.org.apache.ws=info
-
-# CXF
-log4j.logger.org.apache.cxf=error
-
-# MyFaces
-log4j.logger.org.apache.myfaces.util.DebugUtils=info
-log4j.logger.org.apache.myfaces.el.VariableResolverImpl=error
-log4j.logger.org.apache.myfaces.application.jsp.JspViewHandlerImpl=error
-log4j.logger.org.apache.myfaces.taglib=error
-
-# OpenOfficeConnection
-log4j.logger.net.sf.jooreports.openoffice.connection=fatal
-
-# log prepared statement cache activity ###
-log4j.logger.org.hibernate.ps.PreparedStatementCache=info
-
-# Alfresco
-log4j.logger.org.alfresco=error
-log4j.logger.org.alfresco.repo.admin=info
-log4j.logger.org.alfresco.repo.cache.TransactionalCache=warn
-log4j.logger.org.alfresco.repo.model.filefolder=warn
-log4j.logger.org.alfresco.repo.tenant=info
-log4j.logger.org.alfresco.repo.avm=info
-log4j.logger.org.alfresco.config=warn
-log4j.logger.org.alfresco.config.JndiObjectFactoryBean=warn
-log4j.logger.org.alfresco.config.JBossEnabledWebApplicationContext=warn
-log4j.logger.org.alfresco.repo.management.subsystems=warn
-log4j.logger.org.alfresco.repo.management.subsystems.ChildApplicationContextFactory=info
-log4j.logger.org.alfresco.repo.management.subsystems.ChildApplicationContextFactory$ChildApplicationContext=warn
-log4j.logger.org.alfresco.repo.security.sync=info
-log4j.logger.org.alfresco.repo.security.person=info
-
-log4j.logger.org.alfresco.sample=info
-log4j.logger.org.alfresco.web=info
-#log4j.logger.org.alfresco.web.app.AlfrescoNavigationHandler=debug
-#log4j.logger.org.alfresco.web.ui.repo.component.UIActions=debug
-#log4j.logger.org.alfresco.web.ui.repo.tag.PageTag=debug
-#log4j.logger.org.alfresco.web.bean.clipboard=debug
-log4j.logger.org.alfresco.repo.webservice=info
-log4j.logger.org.alfresco.service.descriptor.DescriptorService=info
-#log4j.logger.org.alfresco.web.page=debug
-
-log4j.logger.org.alfresco.repo.importer.ImporterBootstrap=error
-#log4j.logger.org.alfresco.repo.importer.ImporterBootstrap=info
-
-log4j.logger.org.alfresco.web.ui.common.Utils=error
-#log4j.logger.org.alfresco.web.ui.common.Utils=info
-
-log4j.logger.org.alfresco.repo.admin.patch.PatchExecuter=info
-log4j.logger.org.alfresco.repo.domain.patch.ibatis.PatchDAOImpl=info
-
-# Specific patches
-log4j.logger.org.alfresco.repo.admin.patch.impl.DeploymentMigrationPatch=info
-log4j.logger.org.alfresco.repo.version.VersionMigrator=info
-log4j.logger.org.alfresco.repo.admin.patch.impl.ResetWCMToGroupBasedPermissionsPatch=info
-
-log4j.logger.org.alfresco.repo.module.ModuleServiceImpl=info
-log4j.logger.org.alfresco.repo.domain.schema.SchemaBootstrap=info
-log4j.logger.org.alfresco.repo.admin.ConfigurationChecker=info
-log4j.logger.org.alfresco.repo.node.index.AbstractReindexComponent=warn
-log4j.logger.org.alfresco.repo.node.index.IndexTransactionTracker=warn
-log4j.logger.org.alfresco.repo.node.index.FullIndexRecoveryComponent=info
-log4j.logger.org.alfresco.repo.node.index.AVMFullIndexRecoveryComponent=info
-log4j.logger.org.alfresco.util.OpenOfficeConnectionTester=info
-log4j.logger.org.alfresco.repo.node.db.hibernate.HibernateNodeDaoServiceImpl=warn
-log4j.logger.org.alfresco.repo.domain.hibernate.DirtySessionMethodInterceptor=warn
-log4j.logger.org.alfresco.repo.transaction.RetryingTransactionHelper=warn
-log4j.logger.org.alfresco.util.transaction.SpringAwareUserTransaction.trace=warn
-log4j.logger.org.alfresco.util.AbstractTriggerBean=warn
-log4j.logger.org.alfresco.enterprise.repo.cache.cluster.KeepAliveHeartbeatReceiver=info
-log4j.logger.org.alfresco.repo.version.Version2ServiceImpl=warn
-
-#log4j.logger.org.alfresco.web.app.DebugPhaseListener=debug
-
-log4j.logger.org.alfresco.repo.workflow=info
-
-# CIFS server debugging
-log4j.logger.org.alfresco.smb.protocol=error
-#log4j.logger.org.alfresco.smb.protocol.auth=debug
-#log4j.logger.org.alfresco.acegi=debug
-
-# FTP server debugging
-log4j.logger.org.alfresco.ftp.protocol=error
-#log4j.logger.org.alfresco.ftp.server=debug
-
-# WebDAV debugging
-#log4j.logger.org.alfresco.webdav.protocol=debug
-log4j.logger.org.alfresco.webdav.protocol=error
-
-# NTLM servlet filters
-#log4j.logger.org.alfresco.web.app.servlet.NTLMAuthenticationFilter=debug
-#log4j.logger.org.alfresco.repo.webdav.auth.NTLMAuthenticationFilter=debug
-
-# Kerberos servlet filters
-#log4j.logger.org.alfresco.web.app.servlet.KerberosAuthenticationFilter=debug
-#log4j.logger.org.alfresco.repo.webdav.auth.KerberosAuthenticationFilter=debug
-
-# File servers
-log4j.logger.org.alfresco.fileserver=warn
-
-# Repo filesystem debug logging
-#log4j.logger.org.alfresco.filesys.repo.ContentDiskDriver=debug
-
-# AVM filesystem debug logging
-#log4j.logger.org.alfresco.filesys.avm.AVMDiskDriver=debug
-
-# Integrity message threshold - if 'failOnViolation' is off, then WARNINGS are generated
-log4j.logger.org.alfresco.repo.node.integrity=ERROR
-
-# Indexer debugging
-log4j.logger.org.alfresco.repo.search.Indexer=error
-#log4j.logger.org.alfresco.repo.search.Indexer=debug
-
-log4j.logger.org.alfresco.repo.search.impl.lucene.index=error
-log4j.logger.org.alfresco.repo.search.impl.lucene.fts.FullTextSearchIndexerImpl=warn
-#log4j.logger.org.alfresco.repo.search.impl.lucene.index=DEBUG
-
-# Audit debugging
-# log4j.logger.org.alfresco.repo.audit=DEBUG
-# log4j.logger.org.alfresco.repo.audit.model=DEBUG
-
-# Forms debugging
-# log4j.logger.org.alfresco.web.forms=debug
-# log4j.logger.org.chiba.xml.xforms=debug
-log4j.logger.org.alfresco.web.forms.xforms.XFormsBean=error
-log4j.logger.org.alfresco.web.forms.XSLTRenderingEngine=error
-
-# Property sheet and modelling debugging
-# change to error to hide the warnings about missing properties and associations
-log4j.logger.alfresco.missingProperties=warn
-log4j.logger.org.alfresco.web.ui.repo.component.property.UIChildAssociation=warn
-log4j.logger.org.alfresco.web.ui.repo.component.property.UIAssociation=warn
-#log4j.logger.org.alfresco.web.ui.repo.component.property=debug
-
-# Dictionary/Model debugging
-log4j.logger.org.alfresco.repo.dictionary=warn
-log4j.logger.org.alfresco.repo.dictionary.types.period=warn
-
-# Virtualization Server Registry
-log4j.logger.org.alfresco.mbeans.VirtServerRegistry=error
-
-# Spring context runtime property setter
-log4j.logger.org.alfresco.util.RuntimeSystemPropertiesSetter=info
-
-# Debugging options for clustering
-log4j.logger.org.alfresco.repo.content.ReplicatingContentStore=error
-log4j.logger.org.alfresco.repo.content.replication=error
-
-#log4j.logger.org.alfresco.repo.deploy.DeploymentServiceImpl=debug
-
-# Activity service
-log4j.logger.org.alfresco.repo.activities=warn
-
-# User usage tracking
-log4j.logger.org.alfresco.repo.usage=info
-
-# Sharepoint
-log4j.logger.org.alfresco.module.vti=info
-
-# Forms Engine
-log4j.logger.org.alfresco.repo.forms=info
-log4j.logger.org.alfresco.web.config.forms=info
-log4j.logger.org.alfresco.web.scripts.forms=info
-
-# CMIS
-log4j.logger.org.alfresco.opencmis=error
-log4j.logger.org.alfresco.opencmis.AlfrescoCmisServiceInterceptor=error
-log4j.logger.org.alfresco.cmis=error
-log4j.logger.org.alfresco.cmis.dictionary=warn
-log4j.logger.org.apache.chemistry.opencmis=info
-
-# IMAP
-log4j.logger.org.alfresco.repo.imap=info
-
-# JBPM
-# Note: non-fatal errors (eg. logged during job execution) should be handled by Alfresco's retrying transaction handler 
-log4j.logger.org.jbpm.graph.def.GraphElement=fatal
-
-#log4j.logger.org.alfresco.repo.googledocs=debug
-
-###### Scripting #######
-
-# Web Framework
-log4j.logger.org.springframework.extensions.webscripts=info
-log4j.logger.org.springframework.extensions.webscripts.ScriptLogger=warn
-log4j.logger.org.springframework.extensions.webscripts.ScriptDebugger=off
-
-# Repository
-log4j.logger.org.alfresco.repo.web.scripts=warn
-log4j.logger.org.alfresco.repo.web.scripts.BaseWebScriptTest=info
-log4j.logger.org.alfresco.repo.web.scripts.AlfrescoRhinoScriptDebugger=off
-log4j.logger.org.alfresco.repo.jscript=error
-log4j.logger.org.alfresco.repo.jscript.ScriptLogger=warn
-log4j.logger.org.alfresco.repo.cmis.rest.CMISTest=info
-
-log4j.logger.org.alfresco.repo.avm.actions=info
-
-# Freemarker
-# Note the freemarker.runtime logger is used to log non-fatal errors that are handled by Alfresco's retrying transaction handler
-log4j.logger.freemarker.runtime=
-
-# Metadata extraction
-log4j.logger.org.alfresco.repo.content.metadata.AbstractMappingMetadataExtracter=warn
-
-# Reduces PDFont error level due to ALF-7105
-log4j.logger.org.apache.pdfbox.pdmodel.font.PDSimpleFont=fatal
-log4j.logger.org.apache.pdfbox.pdmodel.font.PDFont=fatal
-log4j.logger.org.apache.pdfbox.pdmodel.font.PDCIDFont=fatal
-
-# no index support
-log4j.logger.org.alfresco.repo.search.impl.noindex.NoIndexIndexer=fatal
-log4j.logger.org.alfresco.repo.search.impl.noindex.NoIndexSearchService=fatal
-log4j.logger.org.alfresco.demoamp.test=DEBUG
\ No newline at end of file
diff --git a/resetPassword/tomcat/context.xml b/resetPassword/tomcat/context.xml
deleted file mode 100644
index 3a6aef29..00000000
--- a/resetPassword/tomcat/context.xml
+++ /dev/null
@@ -1,31 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!-- ===================================================================================================================
-    This context file is used only in a development IDE for rapid development,
-    it is never released with the Alfresco.war
-    =================================================================================================================-->
-
-<!-- Setup docBase to something like repo-amp/target/repo-amp-war
-     and path to /alfresco
-     The Alfresco.war 5.0 does not have a webapp (it used to have Alfresco Explorer but not anymore)
-     that we will access, so this docBase might not be needed
--->
-<Context docBase="${app.amp.client.war.folder}" path="${alfresco.client.contextPath}">
-
-  <Resources className="org.apache.naming.resources.VirtualDirContext"
-             extraResourcePaths="/=${project.build.directory}/${project.build.finalName}/web" />
-
-    <!-- Setup the virtual class path like this:
-         1) target/classes
-         2) target/${project.build.finalName}/config
-         3) target/test-classes
-
-         This way mvn compile can be invoked and all changes will be picked up
-    -->
-    <Loader searchVirtualFirst="true"
-            className="org.apache.catalina.loader.VirtualWebappLoader"
-            virtualClasspath="${project.build.outputDirectory};${project.build.directory}/${project.build.finalName}/config;${project.build.testOutputDirectory}" />
-
-
-    <!-- This enables hot reloading of web resources from uncompressed jars (while in prod they would be loaded from  WEB-INF/lib/{\*.jar}/META-INF/resources -->
-    <JarScanner scanAllDirectories="true" />
-</Context>
diff --git a/share-resetpassword/Dockerfile b/share-resetpassword/Dockerfile
new file mode 100644
index 00000000..cf5da8eb
--- /dev/null
+++ b/share-resetpassword/Dockerfile
@@ -0,0 +1,13 @@
+FROM alfresco/alfresco-share:6.2.0
+
+ARG TOMCAT_DIR=/usr/local/tomcat
+
+USER root
+
+
+# Copy Dockerfile to avoid an error if no AMPs exist
+COPY Dockerfile _amps/*.amp $TOMCAT_DIR/amps_share/
+RUN java -jar $TOMCAT_DIR/alfresco-mmt/alfresco-mmt*.jar install \
+              $TOMCAT_DIR/amps_share $TOMCAT_DIR/webapps/share -directory -nobackup -force
+
+USER ${USERNAME}
\ No newline at end of file
diff --git a/share-resetpassword/_amps/README.txt b/share-resetpassword/_amps/README.txt
new file mode 100644
index 00000000..e69de29b
diff --git a/share-resetpassword/_lib/README.txt b/share-resetpassword/_lib/README.txt
new file mode 100644
index 00000000..e69de29b
diff --git a/share-resetpassword/amp.xml b/share-resetpassword/amp.xml
new file mode 100644
index 00000000..49896c40
--- /dev/null
+++ b/share-resetpassword/amp.xml
@@ -0,0 +1,48 @@
+<assembly xmlns="http://maven.apache.org/ASSEMBLY/2.0.0"
+          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+          xsi:schemaLocation="http://maven.apache.org/ASSEMBLY/2.0.0 http://maven.apache.org/xsd/assembly-2.0.0.xsd">
+
+    <id>build-amp-file</id>
+    <formats>
+        <format>amp</format>
+    </formats>
+
+
+    <includeBaseDirectory>false</includeBaseDirectory>
+
+    <files>
+        <!-- Filter module.properties and put at top level in the AMP -->
+        <file>
+            <source>src/main/resources/module.properties</source>
+            <filtered>true</filtered>
+        </file>
+        <file>
+            <source>src/main/resources/file-mapping.properties</source>
+            <filtered>true</filtered>
+        </file>
+    </files>
+
+    <fileSets>
+        <fileSet>
+            <directory>src/main/config</directory>
+            <outputDirectory>config</outputDirectory>
+            <filtered>false</filtered>
+        </fileSet>
+        <fileSet>
+            <directory>src/main/resources/web</directory>
+            <outputDirectory>web</outputDirectory>
+            <filtered>false</filtered>
+        </fileSet>
+    </fileSets>
+
+    <!-- Include the project artifact (JAR) in the /lib directory in the AMP, and any 3rd party libraries (JARs)
+         used by the customization.
+    -->
+    <dependencySets>
+        <dependencySet>
+            <outputDirectory>lib</outputDirectory>
+            <useProjectArtifact>true</useProjectArtifact>
+        </dependencySet>
+    </dependencySets>
+
+</assembly>
\ No newline at end of file
diff --git a/share-resetpassword/context.xml b/share-resetpassword/context.xml
new file mode 100644
index 00000000..7c59a54e
--- /dev/null
+++ b/share-resetpassword/context.xml
@@ -0,0 +1,16 @@
+<?xml version='1.0' encoding='utf-8'?>
+
+<Context>
+    <Resources className="org.apache.catalina.webresources.StandardRoot">
+        <PreResources className="org.apache.catalina.webresources.DirResourceSet"
+                      base="/usr/local/tomcat/webapps/share/development/classes"
+                      webAppMount="/WEB-INF/classes"/>
+        <PreResources className="org.apache.catalina.webresources.DirResourceSet"
+                      base="/usr/local/tomcat/webapps/share/development/web"
+                      webAppMount="/"/>
+        <JarResources className="org.apache.catalina.webresources.DirResourceSet"
+                      base="/usr/local/tomcat/webapps/share/development/lib"
+                      webAppMount="/WEB-INF/lib"/>
+    </Resources>
+</Context>
+
diff --git a/share-resetpassword/pom.xml b/share-resetpassword/pom.xml
new file mode 100644
index 00000000..87a15c55
--- /dev/null
+++ b/share-resetpassword/pom.xml
@@ -0,0 +1,133 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <modelVersion>4.0.0</modelVersion>
+    <parent>
+        <artifactId>resetpassword</artifactId>
+        <groupId>com.flex-solution</groupId>
+        <version>1.2.0.RC1</version>
+    </parent>
+
+    <artifactId>reset-password-share</artifactId>
+    <version>1.2.0.RC1</version>
+    <name>Reset Password Share AMP</name>
+    <packaging>jar</packaging>
+
+    <dependencies>
+        <dependency>
+            <groupId>org.alfresco</groupId>
+            <artifactId>share</artifactId>
+            <version>6.0.b</version>
+            <scope>provided</scope>
+            <type>pom</type>
+        </dependency>
+        <dependency>
+            <groupId>org.alfresco</groupId>
+            <artifactId>share</artifactId>
+            <version>6.0.b</version>
+            <scope>provided</scope>
+            <type>war</type>
+        </dependency>
+    </dependencies>
+
+    <build>
+        <resources>
+            <resource>
+                <directory>src/main/resources</directory>
+                <filtering>true</filtering>
+                <excludes>
+                    <exclude>web/**</exclude>
+                </excludes>
+            </resource>
+            <resource>
+                <directory>src/main/config</directory>
+                <filtering>true</filtering>
+            </resource>
+        </resources>
+
+        <plugins>
+
+            <plugin>
+                <groupId>org.apache.maven.plugins</groupId>
+                <artifactId>maven-compiler-plugin</artifactId>
+                <configuration>
+                    <source>8</source>
+                    <target>8</target>
+                </configuration>
+            </plugin>
+
+            <plugin>
+                <artifactId>maven-dependency-plugin</artifactId>
+                <executions>
+                    <execution>
+                        <phase>package</phase>
+                        <goals>
+                            <goal>copy-dependencies</goal>
+                        </goals>
+                        <configuration>
+                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
+                            <excludeScope>provided</excludeScope>
+                        </configuration>
+                    </execution>
+                </executions>
+            </plugin>
+
+            <plugin>
+                <artifactId>maven-resources-plugin</artifactId>
+                <version>3.0.2</version>
+                <executions>
+                    <execution>
+                        <id>copy-resources</id>
+                        <phase>package</phase>
+                        <goals>
+                            <goal>copy-resources</goal>
+                        </goals>
+                        <configuration>
+                            <outputDirectory>${project.build.outputDirectory}</outputDirectory>
+                            <resources>
+                                <resource>
+                                    <directory>src/main/resources/web</directory>
+                                    <includes>
+                                        <include>**/**</include>
+                                    </includes>
+                                    <targetPath>../web</targetPath>
+                                    <filtering>false</filtering>
+                                </resource>
+                            </resources>
+                        </configuration>
+                    </execution>
+                </executions>
+            </plugin>
+
+            <plugin>
+                <artifactId>maven-assembly-plugin</artifactId>
+                <version>2.6</version>
+                <executions>
+                    <execution>
+                        <id>build-amp-file</id>
+                        <phase>package</phase>
+                        <goals>
+                            <goal>single</goal>
+                        </goals>
+
+                        <configuration>
+                            <appendAssemblyId>false</appendAssemblyId>
+                            <descriptors>
+                                <descriptor>amp.xml</descriptor>
+                            </descriptors>
+                        </configuration>
+                    </execution>
+                </executions>
+                <dependencies>
+                    <dependency>
+                        <groupId>org.alfresco.maven.plugin</groupId>
+                        <artifactId>alfresco-maven-plugin</artifactId>
+                        <version>3.1.0</version>
+                    </dependency>
+                </dependencies>
+            </plugin>
+
+        </plugins>
+    </build>
+
+</project>
diff --git a/share-resetpassword/src/main/config/README.txt b/share-resetpassword/src/main/config/README.txt
new file mode 100644
index 00000000..e69de29b
diff --git a/resetPassword-share/src/main/amp/config/alfresco/web-extension/messages/resetPassword-share.properties b/share-resetpassword/src/main/resources/alfresco/web-extension/messages/resetPassword-share.properties
similarity index 100%
rename from resetPassword-share/src/main/amp/config/alfresco/web-extension/messages/resetPassword-share.properties
rename to share-resetpassword/src/main/resources/alfresco/web-extension/messages/resetPassword-share.properties
diff --git a/resetPassword-share/src/main/amp/config/alfresco/web-extension/messages/resetPassword-share_de.properties b/share-resetpassword/src/main/resources/alfresco/web-extension/messages/resetPassword-share_de.properties
similarity index 100%
rename from resetPassword-share/src/main/amp/config/alfresco/web-extension/messages/resetPassword-share_de.properties
rename to share-resetpassword/src/main/resources/alfresco/web-extension/messages/resetPassword-share_de.properties
diff --git a/resetPassword-share/src/main/amp/config/alfresco/web-extension/resetPassword-share-slingshot-application-context.xml b/share-resetpassword/src/main/resources/alfresco/web-extension/share-resetpassword-slingshot-application-context.xml
similarity index 60%
rename from resetPassword-share/src/main/amp/config/alfresco/web-extension/resetPassword-share-slingshot-application-context.xml
rename to share-resetpassword/src/main/resources/alfresco/web-extension/share-resetpassword-slingshot-application-context.xml
index 5637cbf7..1b0e9119 100644
--- a/resetPassword-share/src/main/amp/config/alfresco/web-extension/resetPassword-share-slingshot-application-context.xml
+++ b/share-resetpassword/src/main/resources/alfresco/web-extension/share-resetpassword-slingshot-application-context.xml
@@ -4,16 +4,17 @@
        xsi:schemaLocation="http://www.springframework.org/schema/beans
                 http://www.springframework.org/schema/beans/spring-beans-2.5.xsd">
 
-    <!--
-     Define beans related to this Share extension here, such as
-      evaluators and resource bootstrapping.
 
-      Note. Any configuration related to the whole Share.war webapp
-            (i.e. not specific to this share extension) should be
-             placed in the tomcat/shared/classes/alfresco/web-extension/custom-slingshot-application-context.xml file
-    -->
+    <bean id="com.flexsolution.resetPassword-share.config" class="org.springframework.extensions.config.ConfigBootstrap"
+          init-method="register">
+        <property name="configService" ref="web.config"/>
+        <property name="configs">
+            <list>
+                <value>classpath:alfresco/web-extension/share-resetpassword/share-config-custom.xml</value>
+            </list>
+        </property>
+    </bean>
 
-    <!-- Add module specific messages and labels -->
     <bean id="com.flexsolution.resetPassword-share.resources"
           class="org.springframework.extensions.surf.util.ResourceBundleBootstrapComponent">
         <property name="resourceBundles">
diff --git a/share-resetpassword/src/main/resources/alfresco/web-extension/share-resetpassword/share-config-custom.xml b/share-resetpassword/src/main/resources/alfresco/web-extension/share-resetpassword/share-config-custom.xml
new file mode 100755
index 00000000..ea5c2227
--- /dev/null
+++ b/share-resetpassword/src/main/resources/alfresco/web-extension/share-resetpassword/share-config-custom.xml
@@ -0,0 +1,36 @@
+<alfresco-config>
+
+    <config evaluator="string-compare" condition="Workflow">
+        <hidden-workflows>
+            <workflow name="activiti$resetPasswordFlex"/>
+        </hidden-workflows>
+        <hidden-tasks>
+            <task type="fs-reset:*"/>
+        </hidden-tasks>
+    </config>
+
+    <config evaluator="string-compare" condition="activiti$resetPasswordFlex">
+        <forms>
+            <form>
+                <field-visibility>
+                    <show id="bpm:workflowDescription"/>
+                    <show id="bpm:assignee"/>
+                </field-visibility>
+            </form>
+        </forms>
+    </config>
+
+    <config evaluator="task-type" condition="fs-reset:review">
+        <forms>
+            <form>
+                <field-visibility>
+                    <show id="transitions"/>
+                </field-visibility>
+
+                <appearance>
+                    <field id="transitions"/>
+                </appearance>
+            </form>
+        </forms>
+    </config>
+</alfresco-config>
diff --git a/resetPassword-share/src/main/amp/config/alfresco/web-extension/site-data/extensions/resetPassword-extensions.xml b/share-resetpassword/src/main/resources/alfresco/web-extension/site-data/extensions/resetPassword-extensions.xml
similarity index 100%
rename from resetPassword-share/src/main/amp/config/alfresco/web-extension/site-data/extensions/resetPassword-extensions.xml
rename to share-resetpassword/src/main/resources/alfresco/web-extension/site-data/extensions/resetPassword-extensions.xml
diff --git a/resetPassword-share/src/main/amp/config/alfresco/web-extension/site-data/pages/changePassWF.xml b/share-resetpassword/src/main/resources/alfresco/web-extension/site-data/pages/changePassWF.xml
similarity index 100%
rename from resetPassword-share/src/main/amp/config/alfresco/web-extension/site-data/pages/changePassWF.xml
rename to share-resetpassword/src/main/resources/alfresco/web-extension/site-data/pages/changePassWF.xml
diff --git a/resetPassword-share/src/main/amp/config/alfresco/web-extension/site-data/pages/update-password.xml b/share-resetpassword/src/main/resources/alfresco/web-extension/site-data/pages/update-password.xml
similarity index 100%
rename from resetPassword-share/src/main/amp/config/alfresco/web-extension/site-data/pages/update-password.xml
rename to share-resetpassword/src/main/resources/alfresco/web-extension/site-data/pages/update-password.xml
diff --git a/resetPassword-share/src/main/amp/config/alfresco/web-extension/site-data/template-instances/changePassWF.xml b/share-resetpassword/src/main/resources/alfresco/web-extension/site-data/template-instances/changePassWF.xml
similarity index 100%
rename from resetPassword-share/src/main/amp/config/alfresco/web-extension/site-data/template-instances/changePassWF.xml
rename to share-resetpassword/src/main/resources/alfresco/web-extension/site-data/template-instances/changePassWF.xml
diff --git a/resetPassword-share/src/main/amp/config/alfresco/web-extension/site-data/template-instances/update-password.xml b/share-resetpassword/src/main/resources/alfresco/web-extension/site-data/template-instances/update-password.xml
similarity index 100%
rename from resetPassword-share/src/main/amp/config/alfresco/web-extension/site-data/template-instances/update-password.xml
rename to share-resetpassword/src/main/resources/alfresco/web-extension/site-data/template-instances/update-password.xml
diff --git a/resetPassword-share/src/main/amp/config/alfresco/web-extension/site-webscripts/com/flex-solution/resetPassword/changePassWF/changePassWF.get.desc.xml b/share-resetpassword/src/main/resources/alfresco/web-extension/site-webscripts/com/flex-solution/resetPassword/changePassWF/changePassWF.get.desc.xml
similarity index 100%
rename from resetPassword-share/src/main/amp/config/alfresco/web-extension/site-webscripts/com/flex-solution/resetPassword/changePassWF/changePassWF.get.desc.xml
rename to share-resetpassword/src/main/resources/alfresco/web-extension/site-webscripts/com/flex-solution/resetPassword/changePassWF/changePassWF.get.desc.xml
diff --git a/resetPassword-share/src/main/amp/config/alfresco/web-extension/site-webscripts/com/flex-solution/resetPassword/changePassWF/changePassWF.get.html.ftl b/share-resetpassword/src/main/resources/alfresco/web-extension/site-webscripts/com/flex-solution/resetPassword/changePassWF/changePassWF.get.html.ftl
old mode 100644
new mode 100755
similarity index 90%
rename from resetPassword-share/src/main/amp/config/alfresco/web-extension/site-webscripts/com/flex-solution/resetPassword/changePassWF/changePassWF.get.html.ftl
rename to share-resetpassword/src/main/resources/alfresco/web-extension/site-webscripts/com/flex-solution/resetPassword/changePassWF/changePassWF.get.html.ftl
index 5fed10d5..2b0099ca
--- a/resetPassword-share/src/main/amp/config/alfresco/web-extension/site-webscripts/com/flex-solution/resetPassword/changePassWF/changePassWF.get.html.ftl
+++ b/share-resetpassword/src/main/resources/alfresco/web-extension/site-webscripts/com/flex-solution/resetPassword/changePassWF/changePassWF.get.html.ftl
@@ -1,6 +1,6 @@
 <#if !showError>
 
-    <#assign id="${taskId}"/>
+    <#assign id="rp-comp"/>
 
 
     <@link href="${url.context}/res/extras/com/flex-solution/components/changePassWF.css" group="form"/>
@@ -16,7 +16,7 @@ new Alfresco.component.ChangePassWF("${id}");
 //]]></script>
 
 
-<div id="${id}-parent" class="parent-block" ">
+<div id="${id}-parent" class="parent-block">
 
 <div id="${id}" class="fields">
     <form id="${id}-form" class="formaa"
@@ -35,8 +35,7 @@ new Alfresco.component.ChangePassWF("${id}");
             <span class="formField"><input type="password" maxlength="255" id="${id}-new-password-confirm"
                                            name="new-password-confirm"/></span>
         </div>
-        <input type="hidden" name="taskId" value="${id}">
-        <input type="hidden" name="userToken" value="${userToken}">
+        <input type="hidden" name="userToken" value="${token}">
 
         <div class="buttons">
             <button id="${id}-button-ok" name="save">${msg("form.button.submit")}</button>
diff --git a/resetPassword-share/src/main/amp/config/alfresco/web-extension/site-webscripts/com/flex-solution/resetPassword/changePassWF/changePassWF.get.js b/share-resetpassword/src/main/resources/alfresco/web-extension/site-webscripts/com/flex-solution/resetPassword/changePassWF/changePassWF.get.js
old mode 100644
new mode 100755
similarity index 58%
rename from resetPassword-share/src/main/amp/config/alfresco/web-extension/site-webscripts/com/flex-solution/resetPassword/changePassWF/changePassWF.get.js
rename to share-resetpassword/src/main/resources/alfresco/web-extension/site-webscripts/com/flex-solution/resetPassword/changePassWF/changePassWF.get.js
index d9be98d2..d3f1ff04
--- a/resetPassword-share/src/main/amp/config/alfresco/web-extension/site-webscripts/com/flex-solution/resetPassword/changePassWF/changePassWF.get.js
+++ b/share-resetpassword/src/main/resources/alfresco/web-extension/site-webscripts/com/flex-solution/resetPassword/changePassWF/changePassWF.get.js
@@ -1,10 +1,6 @@
-model.taskId = page.url.args["taskId"];
 model.token = page.url.args["token"];
-model.userToken = page.url.args["userToken"];
 
 var jsonObj = {
-    taskId: model.taskId,
-    user: model.userToken,
     token: model.token
 };
 
diff --git a/resetPassword-share/src/main/amp/config/alfresco/web-extension/site-webscripts/com/flex-solution/resetPassword/components/form/controls/passConfirmation.ftl b/share-resetpassword/src/main/resources/alfresco/web-extension/site-webscripts/com/flex-solution/resetPassword/components/form/controls/passConfirmation.ftl
similarity index 100%
rename from resetPassword-share/src/main/amp/config/alfresco/web-extension/site-webscripts/com/flex-solution/resetPassword/components/form/controls/passConfirmation.ftl
rename to share-resetpassword/src/main/resources/alfresco/web-extension/site-webscripts/com/flex-solution/resetPassword/components/form/controls/passConfirmation.ftl
diff --git a/resetPassword-share/src/main/amp/config/alfresco/web-extension/site-webscripts/com/flex-solution/resetPassword/components/form/controls/wfTransitions.ftl b/share-resetpassword/src/main/resources/alfresco/web-extension/site-webscripts/com/flex-solution/resetPassword/components/form/controls/wfTransitions.ftl
similarity index 100%
rename from resetPassword-share/src/main/amp/config/alfresco/web-extension/site-webscripts/com/flex-solution/resetPassword/components/form/controls/wfTransitions.ftl
rename to share-resetpassword/src/main/resources/alfresco/web-extension/site-webscripts/com/flex-solution/resetPassword/components/form/controls/wfTransitions.ftl
diff --git a/resetPassword-share/src/main/amp/config/alfresco/web-extension/site-webscripts/com/flex-solution/resetPassword/components/guest/login.get.html.ftl b/share-resetpassword/src/main/resources/alfresco/web-extension/site-webscripts/com/flex-solution/resetPassword/components/guest/login.get.html.ftl
similarity index 100%
rename from resetPassword-share/src/main/amp/config/alfresco/web-extension/site-webscripts/com/flex-solution/resetPassword/components/guest/login.get.html.ftl
rename to share-resetpassword/src/main/resources/alfresco/web-extension/site-webscripts/com/flex-solution/resetPassword/components/guest/login.get.html.ftl
diff --git a/resetPassword-share/src/main/amp/config/alfresco/web-extension/site-webscripts/org/alfresco/README.md b/share-resetpassword/src/main/resources/alfresco/web-extension/site-webscripts/org/alfresco/README.md
similarity index 100%
rename from resetPassword-share/src/main/amp/config/alfresco/web-extension/site-webscripts/org/alfresco/README.md
rename to share-resetpassword/src/main/resources/alfresco/web-extension/site-webscripts/org/alfresco/README.md
diff --git a/resetPassword-share/src/main/amp/config/alfresco/web-extension/templates/com/flex-solution/changePassWF/changePassWF.ftl b/share-resetpassword/src/main/resources/alfresco/web-extension/templates/com/flex-solution/changePassWF/changePassWF.ftl
similarity index 100%
rename from resetPassword-share/src/main/amp/config/alfresco/web-extension/templates/com/flex-solution/changePassWF/changePassWF.ftl
rename to share-resetpassword/src/main/resources/alfresco/web-extension/templates/com/flex-solution/changePassWF/changePassWF.ftl
diff --git a/resetPassword-share/src/main/amp/config/alfresco/web-extension/templates/com/flex-solution/login/simple-guest.ftl b/share-resetpassword/src/main/resources/alfresco/web-extension/templates/com/flex-solution/login/simple-guest.ftl
similarity index 100%
rename from resetPassword-share/src/main/amp/config/alfresco/web-extension/templates/com/flex-solution/login/simple-guest.ftl
rename to share-resetpassword/src/main/resources/alfresco/web-extension/templates/com/flex-solution/login/simple-guest.ftl
diff --git a/resetPassword-share/src/main/amp/config/alfresco/web-extension/templates/com/flex-solution/password/update-password.ftl b/share-resetpassword/src/main/resources/alfresco/web-extension/templates/com/flex-solution/password/update-password.ftl
similarity index 100%
rename from resetPassword-share/src/main/amp/config/alfresco/web-extension/templates/com/flex-solution/password/update-password.ftl
rename to share-resetpassword/src/main/resources/alfresco/web-extension/templates/com/flex-solution/password/update-password.ftl
diff --git a/resetPassword-share/src/main/amp/file-mapping.properties b/share-resetpassword/src/main/resources/file-mapping.properties
similarity index 100%
rename from resetPassword-share/src/main/amp/file-mapping.properties
rename to share-resetpassword/src/main/resources/file-mapping.properties
diff --git a/resetPassword-share/src/main/amp/module.properties b/share-resetpassword/src/main/resources/module.properties
similarity index 100%
rename from resetPassword-share/src/main/amp/module.properties
rename to share-resetpassword/src/main/resources/module.properties
diff --git a/resetPassword-share/src/main/amp/web/extras/com/flex-solution/components/ResetPassword.css b/share-resetpassword/src/main/resources/web/extras/com/flex-solution/components/ResetPassword.css
similarity index 100%
rename from resetPassword-share/src/main/amp/web/extras/com/flex-solution/components/ResetPassword.css
rename to share-resetpassword/src/main/resources/web/extras/com/flex-solution/components/ResetPassword.css
diff --git a/resetPassword-share/src/main/amp/web/extras/com/flex-solution/components/ResetPassword.js b/share-resetpassword/src/main/resources/web/extras/com/flex-solution/components/ResetPassword.js
similarity index 100%
rename from resetPassword-share/src/main/amp/web/extras/com/flex-solution/components/ResetPassword.js
rename to share-resetpassword/src/main/resources/web/extras/com/flex-solution/components/ResetPassword.js
diff --git a/resetPassword-share/src/main/amp/web/extras/com/flex-solution/components/changePassWF.css b/share-resetpassword/src/main/resources/web/extras/com/flex-solution/components/changePassWF.css
similarity index 100%
rename from resetPassword-share/src/main/amp/web/extras/com/flex-solution/components/changePassWF.css
rename to share-resetpassword/src/main/resources/web/extras/com/flex-solution/components/changePassWF.css
diff --git a/resetPassword-share/src/main/amp/web/extras/com/flex-solution/components/changePassWF.js b/share-resetpassword/src/main/resources/web/extras/com/flex-solution/components/changePassWF.js
similarity index 100%
rename from resetPassword-share/src/main/amp/web/extras/com/flex-solution/components/changePassWF.js
rename to share-resetpassword/src/main/resources/web/extras/com/flex-solution/components/changePassWF.js
diff --git a/resetPassword-share/src/main/amp/web/extras/com/flex-solution/components/confirmPassword.js b/share-resetpassword/src/main/resources/web/extras/com/flex-solution/components/confirmPassword.js
similarity index 100%
rename from resetPassword-share/src/main/amp/web/extras/com/flex-solution/components/confirmPassword.js
rename to share-resetpassword/src/main/resources/web/extras/com/flex-solution/components/confirmPassword.js
diff --git a/resetPassword-share/src/main/amp/web/extras/com/flex-solution/components/wfTransitions.js b/share-resetpassword/src/main/resources/web/extras/com/flex-solution/components/wfTransitions.js
similarity index 100%
rename from resetPassword-share/src/main/amp/web/extras/com/flex-solution/components/wfTransitions.js
rename to share-resetpassword/src/main/resources/web/extras/com/flex-solution/components/wfTransitions.js
