diff --git a/CMakeLists.txt b/CMakeLists.txt
index 6b71d5f..9bff2ea 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -22,6 +22,9 @@ if (ENABLE_TLS)
   find_package(OpenSSL REQUIRED)
   include_directories(${OPENSSL_INCLUDE_DIR})
   link_libraries(${OPENSSL_LIBRARIES} ${CMAKE_DL_LIBS})
+  if (WIN32 AND STATIC_LINK)
+    link_libraries(crypt32)
+  endif ()
 endif ()
 
 include(Configure)
diff --git a/src/net/asio.cpp b/src/net/asio.cpp
index 8de2e57..b760623 100644
--- a/src/net/asio.cpp
+++ b/src/net/asio.cpp
@@ -27,6 +27,7 @@
 
 #ifdef ENABLE_TLS
 #include <boost/asio/ssl/context.hpp>
+#include <boost/asio/ssl/rfc2818_verification.hpp>
 #include <boost/asio/ssl/stream.hpp>
 #endif // ENABLE_TLS
 
@@ -56,11 +57,15 @@ static auto createTlsContext(api::EgressVO const& vo)
   auto ctx = ssl::context{ssl::context::tls_client};
   if (*vo.insecure_) {
     ctx.set_verify_mode(ssl::context::verify_none);
+    return ctx;
   }
+
+  ctx.set_verify_mode(ssl::context::verify_peer);
+  if (vo.caFile_.has_value())
+    ctx.load_verify_file(*vo.caFile_);
   else {
-    ctx.set_verify_mode(ssl::context::verify_peer);
     ctx.set_default_verify_paths();
-    if (vo.caFile_.has_value()) ctx.load_verify_file(*vo.caFile_);
+    ctx.set_verify_callback(ssl::rfc2818_verification{*vo.host_});
   }
   return ctx;
 }
