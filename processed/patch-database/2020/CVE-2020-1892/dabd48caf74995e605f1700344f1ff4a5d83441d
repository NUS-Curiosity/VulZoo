diff --git a/hphp/runtime/ext/json/JSON_parser.cpp b/hphp/runtime/ext/json/JSON_parser.cpp
index b1b4f51b2e5dc..5d3b3cfb25a2f 100644
--- a/hphp/runtime/ext/json/JSON_parser.cpp
+++ b/hphp/runtime/ext/json/JSON_parser.cpp
@@ -1148,6 +1148,10 @@ bool JSON_parser(Variant &z, const char *p, int length, bool const assoc,
   // they exceed kMaxPersistentStringBufferCapacity at exit or if the thread
   // is explicitly flushed (e.g., due to being idle).
   json->initSb(length);
+  if (depth <= 0) {
+    json->error_code = json_error_codes::JSON_ERROR_DEPTH;
+    return false;
+  }
   SCOPE_EXIT {
     constexpr int kMaxPersistentStringBufferCapacity = 256 * 1024;
     if (json->sb_cap > kMaxPersistentStringBufferCapacity) json->flushSb();
diff --git a/hphp/test/slow/ext_json/decode_crash.php b/hphp/test/slow/ext_json/decode_crash.php
new file mode 100644
index 0000000000000..9944145e454ef
--- /dev/null
+++ b/hphp/test/slow/ext_json/decode_crash.php
@@ -0,0 +1,3 @@
+<?hh
+
+var_dump(json_decode('"a"', false, 0, 0));
diff --git a/hphp/test/slow/ext_json/decode_crash.php.expect b/hphp/test/slow/ext_json/decode_crash.php.expect
new file mode 100644
index 0000000000000..7951defec192a
--- /dev/null
+++ b/hphp/test/slow/ext_json/decode_crash.php.expect
@@ -0,0 +1 @@
+NULL
