diff --git a/lib/packages/feeds/feed.class.php b/lib/packages/feeds/feed.class.php
index 7a975976..695bae4f 100644
--- a/lib/packages/feeds/feed.class.php
+++ b/lib/packages/feeds/feed.class.php
@@ -52,6 +52,8 @@ public function load_from_resultset($rs)
 	
 	public function load_from_post()
 	{
+	    global $purifier;
+
 		$this->permission	= intval($_REQUEST['permission']);
 		$this->enabled		= intval($_REQUEST['enabled']);
 		$this->format  		= $_REQUEST['format'];
@@ -67,31 +69,42 @@ public function load_from_post()
 		
 		foreach($_REQUEST as $key => $value)
 		{
-			if(empty($value)) continue;
+			if(empty($value))
+            {
+                continue;
+            }
 			
 			foreach($fields as $field)
 			{
 				if(substr($key, 0, strlen($field.'-'))==$field.'-')
-					$this->dictionary[substr($key, strlen($field.'-'))][$field] = $value;
+                {
+                    $this->dictionary[substr($key, strlen($field.'-'))][$field] = $purifier->purify($value);
+                }
 			}
 		
 			if(substr($key, 0, strlen('path-'))=='path-')
-				$this->paths[substr($key, strlen('path-'))] = $value;
+            {
+                $this->paths[substr($key, strlen('path-'))] = $purifier->purify($value);
+            }
 		}	
 		
 		$this->categories 	= '';
 		if($_REQUEST['categories']!='true')
-			$this->categories	= explode(',', $_REQUEST['categories']);				
+        {
+            $this->categories	= explode(',', $_REQUEST['categories']);
+        }
 	}
 
 	public function save()
 	{
-		global $DB;
-
 		if(!empty($this->id))
-			return $this->update();
+        {
+            return $this->update();
+        }
 		else
-			return $this->insert();			
+        {
+            return $this->insert();
+        }
 	}
 	
 	public function delete()
@@ -159,7 +172,9 @@ public function insert()
 		);
 
         if(!$ok)
+        {
             throw new Exception($DB->get_last_error());
+        }
 
 		$this->id = $DB->get_last_id();
 			
@@ -208,7 +223,9 @@ public function update()
 		);
 							  
 		if(!$ok)
-		    throw new Exception($DB->get_last_error());
+        {
+            throw new Exception($DB->get_last_error());
+        }
 		
 		webdictionary::save_element_strings('feed', $this->id, $this->dictionary);
 		path::saveElementPaths('feed', $this->id, $this->paths);
@@ -248,7 +265,9 @@ public function quicksearch($text)
 		$cols[] = 'i.id' . $like;
 
 		if(!empty($dict_ids))
-			$cols[] = 'i.id IN ('.implode(',', $dict_ids).')';
+        {
+            $cols[] = 'i.id IN ('.implode(',', $dict_ids).')';
+        }
 			
 		$where = ' AND ( ';	
 		$where.= implode( ' OR ', $cols); 
@@ -264,7 +283,9 @@ public static function generate_feed($id = NULL)
 		global $DB;
 	
 		if(empty($id))
-			$id = $current['id'];
+        {
+            $id = $current['id'];
+        }
 
 		$item = new feed();
 		$item->load($id);
@@ -272,7 +293,9 @@ public static function generate_feed($id = NULL)
 		$permission = nvweb_object_enabled($item);
 	
 		if(!$permission)
+        {
             return;
+        }
 
         $feed = new UniversalFeedCreator();
 		
@@ -296,7 +319,10 @@ public static function generate_feed($id = NULL)
 		if(!empty($item->categories[0]))
 		{			
 			$limit = intval($item->entries);		 
-			if($limit <= 0)	$limit = 10;
+			if($limit <= 0)
+            {
+                $limit = 10;
+            }
 
             $DB->query(' SELECT SQL_CALC_FOUND_ROWS i.id, i.permission, i.date_published, i.date_unpublish,
                                 i.date_to_display, COALESCE(NULLIF(i.date_to_display, 0), i.date_created) as pdate, d.text as title, i.position as position,
@@ -380,7 +406,9 @@ public static function generate_feed($id = NULL)
                         $galleries = mb_unserialize($rs[$x]->galleries);
                         $photo = @array_shift(array_keys($galleries[0]));
                         if(!empty($photo))
+                        {
                             $image = $website->absolute_path(false) . '/object?type=image&id='.$photo;
+                        }
                     }
 
                     if(empty($image))
@@ -393,9 +421,13 @@ public static function generate_feed($id = NULL)
                             if($properties[$p]->type=='image')
                             {
                                 if(!empty($properties[$p]->value))
+                                {
                                     $image = $properties[$p]->value;
+                                }
                                 else if(!empty($properties[$p]->dvalue))
+                                {
                                     $image = $properties[$p]->dvalue;
+                                }
 
                                 if(is_array($image))
                                 {
@@ -404,12 +436,16 @@ public static function generate_feed($id = NULL)
                                 }
 
                                 if(!empty($image))
+                                {
                                     $image = $website->absolute_path(false) . '/object?type=image&id='.$image;
+                                }
                             }
 
                             // we only need the first image
                             if(!empty($image))
+                            {
                                 break;
+                            }
                         }
                     }
 
@@ -418,7 +454,9 @@ public static function generate_feed($id = NULL)
                         $fitem->image = $image;
 	                    // feedly will only display images of >450px --> http://blog.feedly.com/2015/07/31/10-ways-to-optimize-your-feed-for-feedly/
 						if(strpos($item->format, 'RSS')!==false)
-							$fitem->description = '<img src="'.$image.'&width=640"><br />'.$fitem->description;
+                        {
+                            $fitem->description = '<img src="'.$image.'&width=640"><br />'.$fitem->description;
+                        }
 					}
 
 					//$item->author = $contents->rows[$x]->author_name;
@@ -460,7 +498,9 @@ public function backup($type='json')
         $out = $DB->result();
 
         if($type='json')
+        {
             $out = json_encode($out);
+        }
 
         return $out;
     }
diff --git a/lib/packages/menus/menu.class.php b/lib/packages/menus/menu.class.php
index 7b752cad..7d663125 100644
--- a/lib/packages/menus/menu.class.php
+++ b/lib/packages/menus/menu.class.php
@@ -42,7 +42,10 @@ public function load_from_resultset($rs)
 		$this->functions = $DB->result('function_id');
 		*/
 		$this->functions	= json_decode($main->functions);
-		if(empty($this->functions))	$this->functions = array();		
+		if(empty($this->functions))
+        {
+            $this->functions = array();
+        }
 	}
 	
 	public function load_from_post()
@@ -59,19 +62,22 @@ public function load_from_post()
 		foreach($functions as $function)
 		{
 			if(!empty($function))
-				$this->functions[] = $function;
+            {
+                $this->functions[] = $function;
+            }
 		}
-	}	
-	
+	}
 	
 	public function save()
 	{
-		global $DB;
-
 		if(!empty($this->id))
-		  return $this->update();
+        {
+            return $this->update();
+        }
 		else
-		  return $this->insert();
+        {
+            return $this->insert();
+        }
 	}
 	
 	public function delete()
@@ -111,7 +117,9 @@ public function insert()
 		);
 				
 		if(!$ok)
-			throw new Exception($DB->get_last_error());
+        {
+            throw new Exception($DB->get_last_error());
+        }
 		
 		$this->id = $DB->get_last_id();
 		
@@ -139,7 +147,9 @@ functions = :functions, enabled = :enabled
         );
 		
 		if(!$ok)
-			throw new Exception($DB->get_last_error());
+        {
+            throw new Exception($DB->get_last_error());
+        }
 		
 		return true;
 	}
@@ -179,7 +189,9 @@ public function backup($type='json')
         $out = $DB->result();
 
         if($type='json')
+        {
             $out = json_encode($out);
+        }
 
         return $out;
     }
diff --git a/lib/packages/menus/menus.php b/lib/packages/menus/menus.php
index 4fb7be50..d30be7bc 100644
--- a/lib/packages/menus/menus.php
+++ b/lib/packages/menus/menus.php
@@ -58,12 +58,14 @@ function run()
                     }
                     $orderby = $_REQUEST['sidx'].' '.$_REQUEST['sord'];
 				
-					$DB->queryLimit('id,lid,codename,icon,enabled', 
-									'nv_menus', 
-									$where, 
-									$orderby, 
-									$offset, 
-									$max);
+					$DB->queryLimit(
+					    'id,lid,codename,icon,enabled',
+                        'nv_menus',
+                        $where,
+                        $orderby,
+                        $offset,
+                        $max
+                    );
 									
 					$dataset = $DB->result();
 					$total = $DB->foundRows();
@@ -152,9 +154,13 @@ function functions_list()
 	
 	$navibars->title(t(244, 'Menus'));
 
-	$navibars->add_actions(	array(	'<a href="?fid='.$_REQUEST['fid'].'&act=2"><img height="16" align="absmiddle" width="16" src="img/icons/silk/add.png"> '.t(38, 'Create').'</a>',
-									'<a href="?fid='.$_REQUEST['fid'].'&act=0"><img height="16" align="absmiddle" width="16" src="img/icons/silk/application_view_list.png"> '.t(39, 'List').'</a>',
-									'search_form' ));
+	$navibars->add_actions(
+	    array(
+	        '<a href="?fid='.$_REQUEST['fid'].'&act=2"><img height="16" align="absmiddle" width="16" src="img/icons/silk/add.png"> '.t(38, 'Create').'</a>',
+			'<a href="?fid='.$_REQUEST['fid'].'&act=0"><img height="16" align="absmiddle" width="16" src="img/icons/silk/application_view_list.png"> '.t(39, 'List').'</a>',
+			'search_form'
+        )
+    );
 	
 	if($_REQUEST['quicksearch']=='true')
     {
@@ -189,9 +195,13 @@ function functions_form($item)
 	$naviforms = new naviforms();
 	
 	if(empty($item->id))
-		$navibars->title(t(244, 'Menus').' / '.t(38, 'Create'));	
+    {
+        $navibars->title(t(244, 'Menus').' / '.t(38, 'Create'));
+    }
 	else
-		$navibars->title(t(244, 'Menus').' / '.t(170, 'Edit').' ['.$item->id.']');		
+    {
+        $navibars->title(t(244, 'Menus').' / '.t(170, 'Edit').' ['.$item->id.']');
+    }
 
 	if(empty($item->id))
 	{
@@ -221,9 +231,13 @@ function() { window.location.href = "?fid=menus&act=delete&id='.$item->id.'"; },
         ');
 	}
 	
-	$navibars->add_actions(	array(	(!empty($item->id)? '<a href="?fid=menus&act=2"><img height="16" align="absmiddle" width="16" src="img/icons/silk/add.png"> '.t(38, 'Create').'</a>' : ''),
-									'<a href="?fid=menus&act=0"><img height="16" align="absmiddle" width="16" src="img/icons/silk/application_view_list.png"> '.t(39, 'List').'</a>',
-									'search_form' ));
+	$navibars->add_actions(
+	    array(
+	        (!empty($item->id)? '<a href="?fid=menus&act=2"><img height="16" align="absmiddle" width="16" src="img/icons/silk/add.png"> '.t(38, 'Create').'</a>' : ''),
+			'<a href="?fid=menus&act=0"><img height="16" align="absmiddle" width="16" src="img/icons/silk/application_view_list.png"> '.t(39, 'List').'</a>',
+			'search_form'
+        )
+    );
 
 	$navibars->form();
 
@@ -290,7 +304,10 @@ function() { window.location.href = "?fid=menus&act=delete&id='.$item->id.'"; },
 	$sortable_assigned[] = '<ul id="sortable_assigned" class="connectedSortable">';
 	$sortable_unassigned[] = '<ul id="sortable_unassigned" class="connectedSortable">';	
 	
-	if(empty($item->functions)) $item->functions = array();
+	if(empty($item->functions))
+    {
+        $item->functions = array();
+    }
 	
 	// already included menus on the profile
 	foreach($item->functions as $f)
@@ -300,9 +317,13 @@ function() { window.location.href = "?fid=menus&act=delete&id='.$item->id.'"; },
 			if($function->id == $f)
 			{
 				if($function->enabled=='1')
-					$sortable_assigned[] = '<li class="ui-state-highlight" value="'.$function->id.'" category="'.$function->category.'"><img src="'.NAVIGATE_URL.'/'.$function->icon.'" align="absmiddle" /> '.t($function->lid, $function->lid).'</li>';
+                {
+                    $sortable_assigned[] = '<li class="ui-state-highlight" value="'.$function->id.'" category="'.$function->category.'"><img src="'.NAVIGATE_URL.'/'.$function->icon.'" align="absmiddle" /> '.t($function->lid, $function->lid).'</li>';
+                }
 				else
-					$sortable_assigned[] = '<li class="ui-state-highlight ui-state-disabled" value="'.$function->id.'" category="'.$function->category.'"><img src="'.NAVIGATE_URL.'/'.$function->icon.'" align="absmiddle" /> '.t($function->lid, $function->lid).'</li>';
+                {
+                    $sortable_assigned[] = '<li class="ui-state-highlight ui-state-disabled" value="'.$function->id.'" category="'.$function->category.'"><img src="'.NAVIGATE_URL.'/'.$function->icon.'" align="absmiddle" /> '.t($function->lid, $function->lid).'</li>';
+                }
 			}			
 		}
 	}
@@ -313,9 +334,13 @@ function() { window.location.href = "?fid=menus&act=delete&id='.$item->id.'"; },
 		if(!in_array($function->id, $item->functions))
 		{
 			if($function->enabled=='1')
-				$sortable_unassigned[] = '<li class="ui-state-default" value="'.$function->id.'" category="'.$function->category.'"><img src="'.NAVIGATE_URL.'/'.$function->icon.'" align="absmiddle" /> '.t($function->lid, $function->lid).'</li>';
+            {
+                $sortable_unassigned[] = '<li class="ui-state-default" value="'.$function->id.'" category="'.$function->category.'"><img src="'.NAVIGATE_URL.'/'.$function->icon.'" align="absmiddle" /> '.t($function->lid, $function->lid).'</li>';
+            }
 			else
-				$sortable_unassigned[] = '<li class="ui-state-default ui-state-disabled" value="'.$function->id.'" category="'.$function->category.'"><img src="'.NAVIGATE_URL.'/'.$function->icon.'" align="absmiddle" /> '.t($function->lid, $function->lid).'</li>';
+            {
+                $sortable_unassigned[] = '<li class="ui-state-default ui-state-disabled" value="'.$function->id.'" category="'.$function->category.'"><img src="'.NAVIGATE_URL.'/'.$function->icon.'" align="absmiddle" /> '.t($function->lid, $function->lid).'</li>';
+            }
 		}
 	}
 	
@@ -325,17 +350,24 @@ function() { window.location.href = "?fid=menus&act=delete&id='.$item->id.'"; },
 	//$navibars->add_tab_content('<pre>'.print_r($item->menus, true).'</pre>'); // margin-top: 12px; margin-left: 5px; float: left;
 	// position: absolute; margin-left: 483px; margin-top: -9px; width: 291px; height: 20px;
 
-	$navibars->add_tab_content_row(array(	'<label>'.t(78, 'Category').'</label>',
-											$naviforms->selectfield('menus_functions_category_select', $func_cats, $func_cats, 'web', "navigate_menus_change_functions_category();", false)
-										)
-									);
+	$navibars->add_tab_content_row(
+	    array(
+	        '<label>'.t(78, 'Category').'</label>',
+			$naviforms->selectfield('menus_functions_category_select', $func_cats, $func_cats, 'web', "navigate_menus_change_functions_category();", false)
+        )
+    );
 	
-	$navibars->add_tab_content($naviforms->hidden("menu-functions", implode('#', $item->functions)));	
-	$navibars->add_tab_content_row(array(	'<label>'.t(240, 'Functions').'</label>',
-											implode("\n", $sortable_assigned),
-											implode("\n", $sortable_unassigned)
-										)
-									);
+	$navibars->add_tab_content(
+	    $naviforms->hidden("menu-functions", implode('#', $item->functions))
+    );
+
+	$navibars->add_tab_content_row(
+	    array(
+	        '<label>'.t(240, 'Functions').'</label>',
+			implode("\n", $sortable_assigned),
+			implode("\n", $sortable_unassigned)
+        )
+    );
 									
 	$layout->add_script('
 		$("#menus_functions_category_select").css({ "width": "300px", "margin-left": "303px" });
diff --git a/lib/packages/structure/structure.class.php b/lib/packages/structure/structure.class.php
index 02964b9f..86574b67 100644
--- a/lib/packages/structure/structure.class.php
+++ b/lib/packages/structure/structure.class.php
@@ -83,6 +83,8 @@ public function load_from_resultset($rs)
 	
 	public function load_from_post()
 	{
+	    global $purifier;
+
 		if(intval($_REQUEST['parent'])!=$this->id)	// protection against selecting this same category as parent of itself
         {
             $this->parent 		= intval($_REQUEST['parent']);
@@ -119,13 +121,13 @@ public function load_from_post()
 			{
 				if(substr($key, 0, strlen($field.'-'))==$field.'-')
                 {
-                    $this->dictionary[substr($key, strlen($field.'-'))][$field] = $value;
+                    $this->dictionary[substr($key, strlen($field.'-'))][$field] = $purifier->purify($value);
                 }
 			}
 		
 			if(substr($key, 0, strlen('path-'))=='path-')
             {
-                $this->paths[substr($key, strlen('path-'))] = $value;
+                $this->paths[substr($key, strlen('path-'))] = $purifier->purify($value);
             }
 		}		
 	}
diff --git a/lib/packages/websites/website.class.php b/lib/packages/websites/website.class.php
index 86472707..a9f1df3e 100644
--- a/lib/packages/websites/website.class.php
+++ b/lib/packages/websites/website.class.php
@@ -168,6 +168,7 @@ public function load_from_resultset($rs)
 	public function load_from_post()
 	{
         global $theme;
+        global $purifier;
 
 		$ws_theme = $theme;
 		if($this->theme != $theme->name)
@@ -176,7 +177,7 @@ public function load_from_post()
 			$ws_theme->load($this->theme);
 		}
 
-		$this->name				= $_REQUEST['title'];
+		$this->name				= $purifier->purify($_REQUEST['title']);
 		
 		$this->protocol			= $_REQUEST['protocol'];
 		$this->subdomain		= $_REQUEST['subdomain'];
