diff --git a/publify_core/app/controllers/admin/content_controller.rb b/publify_core/app/controllers/admin/content_controller.rb
index 5ebd608498..b86f381f49 100644
--- a/publify_core/app/controllers/admin/content_controller.rb
+++ b/publify_core/app/controllers/admin/content_controller.rb
@@ -180,6 +180,7 @@ def update_params
              :body_and_extended,
              :draft,
              :extended,
+             :password,
              :permalink,
              :published_at,
              :text_filter_name,
diff --git a/publify_core/spec/controllers/admin/content_controller_spec.rb b/publify_core/spec/controllers/admin/content_controller_spec.rb
index dd56999d78..9507186d98 100644
--- a/publify_core/spec/controllers/admin/content_controller_spec.rb
+++ b/publify_core/spec/controllers/admin/content_controller_spec.rb
@@ -160,6 +160,12 @@ def base_article(options = {})
         assert_equal 2, new_article.tags.size
       end
 
+      it "creates an article with a password" do
+        post :create, params: { "article" => base_article(password: "foobar") }
+        new_article = Article.last
+        expect(new_article.password).to eq("foobar")
+      end
+
       it "creates an article with a unique Tag instance named lang:FR" do
         post :create, params: { "article" => base_article(keywords: "lang:FR") }
         new_article = Article.last
@@ -392,6 +398,15 @@ def base_article(options = {})
         expect(article.extended).to eq("bar<!--more-->baz")
       end
 
+      it "allows updating password" do
+        put :update, params: { "id" => article.id, "article" => {
+          "password" => "foobar",
+        } }
+        assert_response :redirect
+        article.reload
+        expect(article.password).to eq("foobar")
+      end
+
       context "when a published article has drafts" do
         let(:original_published_at) { 2.days.ago.to_date }
         let!(:original) { create(:article, published_at: original_published_at) }
