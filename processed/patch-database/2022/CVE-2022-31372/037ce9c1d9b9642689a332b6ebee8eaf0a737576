diff --git a/integration/WIRISplugins.js b/integration/WIRISplugins.js
new file mode 100644
index 00000000..152d94f4
--- /dev/null
+++ b/integration/WIRISplugins.js
@@ -0,0 +1,4008 @@
+(function(){
+var $hxClasses = $hxClasses || {},$estr = function() { return js.Boot.__string_rec(this,''); };
+var EReg = $hxClasses["EReg"] = function(r,opt) {
+	opt = opt.split("u").join("");
+	this.r = new RegExp(r,opt);
+};
+EReg.__name__ = ["EReg"];
+EReg.prototype = {
+	customReplace: function(s,f) {
+		var buf = new StringBuf();
+		while(true) {
+			if(!this.match(s)) break;
+			buf.b += Std.string(this.matchedLeft());
+			buf.b += Std.string(f(this));
+			s = this.matchedRight();
+		}
+		buf.b += Std.string(s);
+		return buf.b;
+	}
+	,replace: function(s,by) {
+		return s.replace(this.r,by);
+	}
+	,split: function(s) {
+		var d = "#__delim__#";
+		return s.replace(this.r,d).split(d);
+	}
+	,matchedPos: function() {
+		if(this.r.m == null) throw "No string matched";
+		return { pos : this.r.m.index, len : this.r.m[0].length};
+	}
+	,matchedRight: function() {
+		if(this.r.m == null) throw "No string matched";
+		var sz = this.r.m.index + this.r.m[0].length;
+		return this.r.s.substr(sz,this.r.s.length - sz);
+	}
+	,matchedLeft: function() {
+		if(this.r.m == null) throw "No string matched";
+		return this.r.s.substr(0,this.r.m.index);
+	}
+	,matched: function(n) {
+		return this.r.m != null && n >= 0 && n < this.r.m.length?this.r.m[n]:(function($this) {
+			var $r;
+			throw "EReg::matched";
+			return $r;
+		}(this));
+	}
+	,match: function(s) {
+		if(this.r.global) this.r.lastIndex = 0;
+		this.r.m = this.r.exec(s);
+		this.r.s = s;
+		return this.r.m != null;
+	}
+	,r: null
+	,__class__: EReg
+}
+var Hash = $hxClasses["Hash"] = function() {
+	this.h = { };
+};
+Hash.__name__ = ["Hash"];
+Hash.prototype = {
+	toString: function() {
+		var s = new StringBuf();
+		s.b += Std.string("{");
+		var it = this.keys();
+		while( it.hasNext() ) {
+			var i = it.next();
+			s.b += Std.string(i);
+			s.b += Std.string(" => ");
+			s.b += Std.string(Std.string(this.get(i)));
+			if(it.hasNext()) s.b += Std.string(", ");
+		}
+		s.b += Std.string("}");
+		return s.b;
+	}
+	,iterator: function() {
+		return { ref : this.h, it : this.keys(), hasNext : function() {
+			return this.it.hasNext();
+		}, next : function() {
+			var i = this.it.next();
+			return this.ref["$" + i];
+		}};
+	}
+	,keys: function() {
+		var a = [];
+		for( var key in this.h ) {
+		if(this.h.hasOwnProperty(key)) a.push(key.substr(1));
+		}
+		return HxOverrides.iter(a);
+	}
+	,remove: function(key) {
+		key = "$" + key;
+		if(!this.h.hasOwnProperty(key)) return false;
+		delete(this.h[key]);
+		return true;
+	}
+	,exists: function(key) {
+		return this.h.hasOwnProperty("$" + key);
+	}
+	,get: function(key) {
+		return this.h["$" + key];
+	}
+	,set: function(key,value) {
+		this.h["$" + key] = value;
+	}
+	,h: null
+	,__class__: Hash
+}
+var HxOverrides = $hxClasses["HxOverrides"] = function() { }
+HxOverrides.__name__ = ["HxOverrides"];
+HxOverrides.dateStr = function(date) {
+	var m = date.getMonth() + 1;
+	var d = date.getDate();
+	var h = date.getHours();
+	var mi = date.getMinutes();
+	var s = date.getSeconds();
+	return date.getFullYear() + "-" + (m < 10?"0" + m:"" + m) + "-" + (d < 10?"0" + d:"" + d) + " " + (h < 10?"0" + h:"" + h) + ":" + (mi < 10?"0" + mi:"" + mi) + ":" + (s < 10?"0" + s:"" + s);
+}
+HxOverrides.strDate = function(s) {
+	switch(s.length) {
+	case 8:
+		var k = s.split(":");
+		var d = new Date();
+		d.setTime(0);
+		d.setUTCHours(k[0]);
+		d.setUTCMinutes(k[1]);
+		d.setUTCSeconds(k[2]);
+		return d;
+	case 10:
+		var k = s.split("-");
+		return new Date(k[0],k[1] - 1,k[2],0,0,0);
+	case 19:
+		var k = s.split(" ");
+		var y = k[0].split("-");
+		var t = k[1].split(":");
+		return new Date(y[0],y[1] - 1,y[2],t[0],t[1],t[2]);
+	default:
+		throw "Invalid date format : " + s;
+	}
+}
+HxOverrides.cca = function(s,index) {
+	var x = s.charCodeAt(index);
+	if(x != x) return undefined;
+	return x;
+}
+HxOverrides.substr = function(s,pos,len) {
+	if(pos != null && pos != 0 && len != null && len < 0) return "";
+	if(len == null) len = s.length;
+	if(pos < 0) {
+		pos = s.length + pos;
+		if(pos < 0) pos = 0;
+	} else if(len < 0) len = s.length + len - pos;
+	return s.substr(pos,len);
+}
+HxOverrides.remove = function(a,obj) {
+	var i = 0;
+	var l = a.length;
+	while(i < l) {
+		if(a[i] == obj) {
+			a.splice(i,1);
+			return true;
+		}
+		i++;
+	}
+	return false;
+}
+HxOverrides.iter = function(a) {
+	return { cur : 0, arr : a, hasNext : function() {
+		return this.cur < this.arr.length;
+	}, next : function() {
+		return this.arr[this.cur++];
+	}};
+}
+var IntHash = $hxClasses["IntHash"] = function() {
+	this.h = { };
+};
+IntHash.__name__ = ["IntHash"];
+IntHash.prototype = {
+	toString: function() {
+		var s = new StringBuf();
+		s.b += Std.string("{");
+		var it = this.keys();
+		while( it.hasNext() ) {
+			var i = it.next();
+			s.b += Std.string(i);
+			s.b += Std.string(" => ");
+			s.b += Std.string(Std.string(this.get(i)));
+			if(it.hasNext()) s.b += Std.string(", ");
+		}
+		s.b += Std.string("}");
+		return s.b;
+	}
+	,iterator: function() {
+		return { ref : this.h, it : this.keys(), hasNext : function() {
+			return this.it.hasNext();
+		}, next : function() {
+			var i = this.it.next();
+			return this.ref[i];
+		}};
+	}
+	,keys: function() {
+		var a = [];
+		for( var key in this.h ) {
+		if(this.h.hasOwnProperty(key)) a.push(key | 0);
+		}
+		return HxOverrides.iter(a);
+	}
+	,remove: function(key) {
+		if(!this.h.hasOwnProperty(key)) return false;
+		delete(this.h[key]);
+		return true;
+	}
+	,exists: function(key) {
+		return this.h.hasOwnProperty(key);
+	}
+	,get: function(key) {
+		return this.h[key];
+	}
+	,set: function(key,value) {
+		this.h[key] = value;
+	}
+	,h: null
+	,__class__: IntHash
+}
+var IntIter = $hxClasses["IntIter"] = function(min,max) {
+	this.min = min;
+	this.max = max;
+};
+IntIter.__name__ = ["IntIter"];
+IntIter.prototype = {
+	next: function() {
+		return this.min++;
+	}
+	,hasNext: function() {
+		return this.min < this.max;
+	}
+	,max: null
+	,min: null
+	,__class__: IntIter
+}
+var List = $hxClasses["List"] = function() {
+	this.length = 0;
+};
+List.__name__ = ["List"];
+List.prototype = {
+	map: function(f) {
+		var b = new List();
+		var l = this.h;
+		while(l != null) {
+			var v = l[0];
+			l = l[1];
+			b.add(f(v));
+		}
+		return b;
+	}
+	,filter: function(f) {
+		var l2 = new List();
+		var l = this.h;
+		while(l != null) {
+			var v = l[0];
+			l = l[1];
+			if(f(v)) l2.add(v);
+		}
+		return l2;
+	}
+	,join: function(sep) {
+		var s = new StringBuf();
+		var first = true;
+		var l = this.h;
+		while(l != null) {
+			if(first) first = false; else s.b += Std.string(sep);
+			s.b += Std.string(l[0]);
+			l = l[1];
+		}
+		return s.b;
+	}
+	,toString: function() {
+		var s = new StringBuf();
+		var first = true;
+		var l = this.h;
+		s.b += Std.string("{");
+		while(l != null) {
+			if(first) first = false; else s.b += Std.string(", ");
+			s.b += Std.string(Std.string(l[0]));
+			l = l[1];
+		}
+		s.b += Std.string("}");
+		return s.b;
+	}
+	,iterator: function() {
+		return { h : this.h, hasNext : function() {
+			return this.h != null;
+		}, next : function() {
+			if(this.h == null) return null;
+			var x = this.h[0];
+			this.h = this.h[1];
+			return x;
+		}};
+	}
+	,remove: function(v) {
+		var prev = null;
+		var l = this.h;
+		while(l != null) {
+			if(l[0] == v) {
+				if(prev == null) this.h = l[1]; else prev[1] = l[1];
+				if(this.q == l) this.q = prev;
+				this.length--;
+				return true;
+			}
+			prev = l;
+			l = l[1];
+		}
+		return false;
+	}
+	,clear: function() {
+		this.h = null;
+		this.q = null;
+		this.length = 0;
+	}
+	,isEmpty: function() {
+		return this.h == null;
+	}
+	,pop: function() {
+		if(this.h == null) return null;
+		var x = this.h[0];
+		this.h = this.h[1];
+		if(this.h == null) this.q = null;
+		this.length--;
+		return x;
+	}
+	,last: function() {
+		return this.q == null?null:this.q[0];
+	}
+	,first: function() {
+		return this.h == null?null:this.h[0];
+	}
+	,push: function(item) {
+		var x = [item,this.h];
+		this.h = x;
+		if(this.q == null) this.q = x;
+		this.length++;
+	}
+	,add: function(item) {
+		var x = [item];
+		if(this.h == null) this.h = x; else this.q[1] = x;
+		this.q = x;
+		this.length++;
+	}
+	,length: null
+	,q: null
+	,h: null
+	,__class__: List
+}
+var Reflect = $hxClasses["Reflect"] = function() { }
+Reflect.__name__ = ["Reflect"];
+Reflect.hasField = function(o,field) {
+	return Object.prototype.hasOwnProperty.call(o,field);
+}
+Reflect.field = function(o,field) {
+	var v = null;
+	try {
+		v = o[field];
+	} catch( e ) {
+	}
+	return v;
+}
+Reflect.setField = function(o,field,value) {
+	o[field] = value;
+}
+Reflect.getProperty = function(o,field) {
+	var tmp;
+	return o == null?null:o.__properties__ && (tmp = o.__properties__["get_" + field])?o[tmp]():o[field];
+}
+Reflect.setProperty = function(o,field,value) {
+	var tmp;
+	if(o.__properties__ && (tmp = o.__properties__["set_" + field])) o[tmp](value); else o[field] = value;
+}
+Reflect.callMethod = function(o,func,args) {
+	return func.apply(o,args);
+}
+Reflect.fields = function(o) {
+	var a = [];
+	if(o != null) {
+		var hasOwnProperty = Object.prototype.hasOwnProperty;
+		for( var f in o ) {
+		if(hasOwnProperty.call(o,f)) a.push(f);
+		}
+	}
+	return a;
+}
+Reflect.isFunction = function(f) {
+	return typeof(f) == "function" && !(f.__name__ || f.__ename__);
+}
+Reflect.compare = function(a,b) {
+	return a == b?0:a > b?1:-1;
+}
+Reflect.compareMethods = function(f1,f2) {
+	if(f1 == f2) return true;
+	if(!Reflect.isFunction(f1) || !Reflect.isFunction(f2)) return false;
+	return f1.scope == f2.scope && f1.method == f2.method && f1.method != null;
+}
+Reflect.isObject = function(v) {
+	if(v == null) return false;
+	var t = typeof(v);
+	return t == "string" || t == "object" && !v.__enum__ || t == "function" && (v.__name__ || v.__ename__);
+}
+Reflect.deleteField = function(o,f) {
+	if(!Reflect.hasField(o,f)) return false;
+	delete(o[f]);
+	return true;
+}
+Reflect.copy = function(o) {
+	var o2 = { };
+	var _g = 0, _g1 = Reflect.fields(o);
+	while(_g < _g1.length) {
+		var f = _g1[_g];
+		++_g;
+		o2[f] = Reflect.field(o,f);
+	}
+	return o2;
+}
+Reflect.makeVarArgs = function(f) {
+	return function() {
+		var a = Array.prototype.slice.call(arguments);
+		return f(a);
+	};
+}
+var Std = $hxClasses["Std"] = function() { }
+Std.__name__ = ["Std"];
+Std["is"] = function(v,t) {
+	return js.Boot.__instanceof(v,t);
+}
+Std.string = function(s) {
+	return js.Boot.__string_rec(s,"");
+}
+Std["int"] = function(x) {
+	return x | 0;
+}
+Std.parseInt = function(x) {
+	var v = parseInt(x,10);
+	if(v == 0 && (HxOverrides.cca(x,1) == 120 || HxOverrides.cca(x,1) == 88)) v = parseInt(x);
+	if(isNaN(v)) return null;
+	return v;
+}
+Std.parseFloat = function(x) {
+	return parseFloat(x);
+}
+Std.random = function(x) {
+	return Math.floor(Math.random() * x);
+}
+var StringBuf = $hxClasses["StringBuf"] = function() {
+	this.b = "";
+};
+StringBuf.__name__ = ["StringBuf"];
+StringBuf.prototype = {
+	toString: function() {
+		return this.b;
+	}
+	,addSub: function(s,pos,len) {
+		this.b += HxOverrides.substr(s,pos,len);
+	}
+	,addChar: function(c) {
+		this.b += String.fromCharCode(c);
+	}
+	,add: function(x) {
+		this.b += Std.string(x);
+	}
+	,b: null
+	,__class__: StringBuf
+}
+var StringTools = $hxClasses["StringTools"] = function() { }
+StringTools.__name__ = ["StringTools"];
+StringTools.urlEncode = function(s) {
+	return encodeURIComponent(s);
+}
+StringTools.urlDecode = function(s) {
+	return decodeURIComponent(s.split("+").join(" "));
+}
+StringTools.htmlEscape = function(s) {
+	return s.split("&").join("&amp;").split("<").join("&lt;").split(">").join("&gt;");
+}
+StringTools.htmlUnescape = function(s) {
+	return s.split("&gt;").join(">").split("&lt;").join("<").split("&amp;").join("&");
+}
+StringTools.startsWith = function(s,start) {
+	return s.length >= start.length && HxOverrides.substr(s,0,start.length) == start;
+}
+StringTools.endsWith = function(s,end) {
+	var elen = end.length;
+	var slen = s.length;
+	return slen >= elen && HxOverrides.substr(s,slen - elen,elen) == end;
+}
+StringTools.isSpace = function(s,pos) {
+	var c = HxOverrides.cca(s,pos);
+	return c >= 9 && c <= 13 || c == 32;
+}
+StringTools.ltrim = function(s) {
+	var l = s.length;
+	var r = 0;
+	while(r < l && StringTools.isSpace(s,r)) r++;
+	if(r > 0) return HxOverrides.substr(s,r,l - r); else return s;
+}
+StringTools.rtrim = function(s) {
+	var l = s.length;
+	var r = 0;
+	while(r < l && StringTools.isSpace(s,l - r - 1)) r++;
+	if(r > 0) return HxOverrides.substr(s,0,l - r); else return s;
+}
+StringTools.trim = function(s) {
+	return StringTools.ltrim(StringTools.rtrim(s));
+}
+StringTools.rpad = function(s,c,l) {
+	var sl = s.length;
+	var cl = c.length;
+	while(sl < l) if(l - sl < cl) {
+		s += HxOverrides.substr(c,0,l - sl);
+		sl = l;
+	} else {
+		s += c;
+		sl += cl;
+	}
+	return s;
+}
+StringTools.lpad = function(s,c,l) {
+	var ns = "";
+	var sl = s.length;
+	if(sl >= l) return s;
+	var cl = c.length;
+	while(sl < l) if(l - sl < cl) {
+		ns += HxOverrides.substr(c,0,l - sl);
+		sl = l;
+	} else {
+		ns += c;
+		sl += cl;
+	}
+	return ns + s;
+}
+StringTools.replace = function(s,sub,by) {
+	return s.split(sub).join(by);
+}
+StringTools.hex = function(n,digits) {
+	var s = "";
+	var hexChars = "0123456789ABCDEF";
+	do {
+		s = hexChars.charAt(n & 15) + s;
+		n >>>= 4;
+	} while(n > 0);
+	if(digits != null) while(s.length < digits) s = "0" + s;
+	return s;
+}
+StringTools.fastCodeAt = function(s,index) {
+	return s.charCodeAt(index);
+}
+StringTools.isEOF = function(c) {
+	return c != c;
+}
+var ValueType = $hxClasses["ValueType"] = { __ename__ : ["ValueType"], __constructs__ : ["TNull","TInt","TFloat","TBool","TObject","TFunction","TClass","TEnum","TUnknown"] }
+ValueType.TNull = ["TNull",0];
+ValueType.TNull.toString = $estr;
+ValueType.TNull.__enum__ = ValueType;
+ValueType.TInt = ["TInt",1];
+ValueType.TInt.toString = $estr;
+ValueType.TInt.__enum__ = ValueType;
+ValueType.TFloat = ["TFloat",2];
+ValueType.TFloat.toString = $estr;
+ValueType.TFloat.__enum__ = ValueType;
+ValueType.TBool = ["TBool",3];
+ValueType.TBool.toString = $estr;
+ValueType.TBool.__enum__ = ValueType;
+ValueType.TObject = ["TObject",4];
+ValueType.TObject.toString = $estr;
+ValueType.TObject.__enum__ = ValueType;
+ValueType.TFunction = ["TFunction",5];
+ValueType.TFunction.toString = $estr;
+ValueType.TFunction.__enum__ = ValueType;
+ValueType.TClass = function(c) { var $x = ["TClass",6,c]; $x.__enum__ = ValueType; $x.toString = $estr; return $x; }
+ValueType.TEnum = function(e) { var $x = ["TEnum",7,e]; $x.__enum__ = ValueType; $x.toString = $estr; return $x; }
+ValueType.TUnknown = ["TUnknown",8];
+ValueType.TUnknown.toString = $estr;
+ValueType.TUnknown.__enum__ = ValueType;
+var Type = $hxClasses["Type"] = function() { }
+Type.__name__ = ["Type"];
+Type.getClass = function(o) {
+	if(o == null) return null;
+	return o.__class__;
+}
+Type.getEnum = function(o) {
+	if(o == null) return null;
+	return o.__enum__;
+}
+Type.getSuperClass = function(c) {
+	return c.__super__;
+}
+Type.getClassName = function(c) {
+	var a = c.__name__;
+	return a.join(".");
+}
+Type.getEnumName = function(e) {
+	var a = e.__ename__;
+	return a.join(".");
+}
+Type.resolveClass = function(name) {
+	var cl = $hxClasses[name];
+	if(cl == null || !cl.__name__) return null;
+	return cl;
+}
+Type.resolveEnum = function(name) {
+	var e = $hxClasses[name];
+	if(e == null || !e.__ename__) return null;
+	return e;
+}
+Type.createInstance = function(cl,args) {
+	switch(args.length) {
+	case 0:
+		return new cl();
+	case 1:
+		return new cl(args[0]);
+	case 2:
+		return new cl(args[0],args[1]);
+	case 3:
+		return new cl(args[0],args[1],args[2]);
+	case 4:
+		return new cl(args[0],args[1],args[2],args[3]);
+	case 5:
+		return new cl(args[0],args[1],args[2],args[3],args[4]);
+	case 6:
+		return new cl(args[0],args[1],args[2],args[3],args[4],args[5]);
+	case 7:
+		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6]);
+	case 8:
+		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7]);
+	default:
+		throw "Too many arguments";
+	}
+	return null;
+}
+Type.createEmptyInstance = function(cl) {
+	function empty() {}; empty.prototype = cl.prototype;
+	return new empty();
+}
+Type.createEnum = function(e,constr,params) {
+	var f = Reflect.field(e,constr);
+	if(f == null) throw "No such constructor " + constr;
+	if(Reflect.isFunction(f)) {
+		if(params == null) throw "Constructor " + constr + " need parameters";
+		return f.apply(e,params);
+	}
+	if(params != null && params.length != 0) throw "Constructor " + constr + " does not need parameters";
+	return f;
+}
+Type.createEnumIndex = function(e,index,params) {
+	var c = e.__constructs__[index];
+	if(c == null) throw index + " is not a valid enum constructor index";
+	return Type.createEnum(e,c,params);
+}
+Type.getInstanceFields = function(c) {
+	var a = [];
+	for(var i in c.prototype) a.push(i);
+	HxOverrides.remove(a,"__class__");
+	HxOverrides.remove(a,"__properties__");
+	return a;
+}
+Type.getClassFields = function(c) {
+	var a = Reflect.fields(c);
+	HxOverrides.remove(a,"__name__");
+	HxOverrides.remove(a,"__interfaces__");
+	HxOverrides.remove(a,"__properties__");
+	HxOverrides.remove(a,"__super__");
+	HxOverrides.remove(a,"prototype");
+	return a;
+}
+Type.getEnumConstructs = function(e) {
+	var a = e.__constructs__;
+	return a.slice();
+}
+Type["typeof"] = function(v) {
+	switch(typeof(v)) {
+	case "boolean":
+		return ValueType.TBool;
+	case "string":
+		return ValueType.TClass(String);
+	case "number":
+		if(Math.ceil(v) == v % 2147483648.0) return ValueType.TInt;
+		return ValueType.TFloat;
+	case "object":
+		if(v == null) return ValueType.TNull;
+		var e = v.__enum__;
+		if(e != null) return ValueType.TEnum(e);
+		var c = v.__class__;
+		if(c != null) return ValueType.TClass(c);
+		return ValueType.TObject;
+	case "function":
+		if(v.__name__ || v.__ename__) return ValueType.TObject;
+		return ValueType.TFunction;
+	case "undefined":
+		return ValueType.TNull;
+	default:
+		return ValueType.TUnknown;
+	}
+}
+Type.enumEq = function(a,b) {
+	if(a == b) return true;
+	try {
+		if(a[0] != b[0]) return false;
+		var _g1 = 2, _g = a.length;
+		while(_g1 < _g) {
+			var i = _g1++;
+			if(!Type.enumEq(a[i],b[i])) return false;
+		}
+		var e = a.__enum__;
+		if(e != b.__enum__ || e == null) return false;
+	} catch( e ) {
+		return false;
+	}
+	return true;
+}
+Type.enumConstructor = function(e) {
+	return e[0];
+}
+Type.enumParameters = function(e) {
+	return e.slice(2);
+}
+Type.enumIndex = function(e) {
+	return e[1];
+}
+Type.allEnums = function(e) {
+	var all = [];
+	var cst = e.__constructs__;
+	var _g = 0;
+	while(_g < cst.length) {
+		var c = cst[_g];
+		++_g;
+		var v = Reflect.field(e,c);
+		if(!Reflect.isFunction(v)) all.push(v);
+	}
+	return all;
+}
+var com = com || {}
+if(!com.wiris) com.wiris = {}
+if(!com.wiris.js) com.wiris.js = {}
+com.wiris.js.JsBrowserData = $hxClasses["com.wiris.js.JsBrowserData"] = function() {
+};
+com.wiris.js.JsBrowserData.__name__ = ["com","wiris","js","JsBrowserData"];
+com.wiris.js.JsBrowserData.prototype = {
+	identity: null
+	,versionSearch: null
+	,subString: null
+	,prop: null
+	,string: null
+	,__class__: com.wiris.js.JsBrowserData
+}
+com.wiris.js.JsOSData = $hxClasses["com.wiris.js.JsOSData"] = function() {
+};
+com.wiris.js.JsOSData.__name__ = ["com","wiris","js","JsOSData"];
+com.wiris.js.JsOSData.prototype = {
+	identity: null
+	,subString: null
+	,string: null
+	,__class__: com.wiris.js.JsOSData
+}
+com.wiris.js.JsBrowser = $hxClasses["com.wiris.js.JsBrowser"] = function() {
+	this.dataBrowser = new Array();
+	this.addBrowser("navigator.userAgent",null,"Edge",null,"Edge");
+	this.addBrowser("navigator.userAgent",null,"Chrome",null,"Chrome");
+	this.addBrowser("navigator.userAgent",null,"OmniWeb",null,"OmniWeb");
+	this.addBrowser("navigator.vendor",null,"Apple","Version","Safari");
+	this.addBrowser(null,"window.opera",null,"Version","Opera");
+	this.addBrowser("navigator.vendor",null,"iCab",null,"iCab");
+	this.addBrowser("navigator.vendor",null,"KDE",null,"Konkeror");
+	this.addBrowser("navigator.userAgent",null,"Firefox",null,"Firefox");
+	this.addBrowser("navigator.vendor",null,"Camino",null,"Camino");
+	this.addBrowser("navigator.userAgent",null,"Netscape",null,"Netscape");
+	this.addBrowser("navigator.userAgent",null,"MSIE","MSIE","Explorer");
+	this.addBrowser("navigator.userAgent",null,"Trident","rv","Explorer");
+	this.addBrowser("navigator.userAgent",null,"Gecko","rv","Mozilla");
+	this.addBrowser("navigator.userAgent",null,"Mozilla","Mozilla","Netscape");
+	this.dataOS = new Array();
+	this.addOS("navigator.platform","Win","Windows");
+	this.addOS("navigator.platform","Mac","Mac");
+	this.addOS("navigator.userAgent","iPhone","iOS");
+	this.addOS("navigator.userAgent","iPad","iOS");
+	this.addOS("navigator.userAgent","Android","Android");
+	this.addOS("navigator.platform","Linux","Linux");
+	this.setBrowser();
+	this.setOS();
+	this.setTouchable();
+};
+com.wiris.js.JsBrowser.__name__ = ["com","wiris","js","JsBrowser"];
+com.wiris.js.JsBrowser.prototype = {
+	isTouchable: function() {
+		return this.touchable;
+	}
+	,isAndroid: function() {
+		return this.os == "Android";
+	}
+	,isMac: function() {
+		return this.os == "Mac";
+	}
+	,isIOS: function() {
+		return this.os == "iOS";
+	}
+	,isFF: function() {
+		return this.browser == "Firefox";
+	}
+	,isSafari: function() {
+		return this.browser == "Safari";
+	}
+	,isChrome: function() {
+		return this.browser == "Chrome";
+	}
+	,isEdge: function() {
+		return this.browser == "Edge";
+	}
+	,isIE: function() {
+		return this.browser == "Explorer";
+	}
+	,getVersion: function() {
+		return this.ver;
+	}
+	,getOS: function() {
+		return this.os;
+	}
+	,getBrowser: function() {
+		return this.browser;
+	}
+	,searchVersion: function(prop,search) {
+		var str = js.Boot.__cast(eval(prop) , String);
+		var index = str.indexOf(search);
+		if(index == -1) return null;
+		return "" + Std.parseFloat(HxOverrides.substr(str,index + search.length + 1,null));
+	}
+	,setTouchable: function() {
+		if(this.isIOS() || this.isAndroid()) {
+			this.touchable = true;
+			return;
+		}
+		this.touchable = false;
+	}
+	,setOS: function() {
+		var i = HxOverrides.iter(this.dataOS);
+		while(i.hasNext()) {
+			var s = i.next();
+			var str = js.Boot.__cast(eval(s.string) , String);
+			if(str.indexOf(s.subString) != -1) {
+				this.os = s.identity;
+				return;
+			}
+		}
+	}
+	,setBrowser: function() {
+		var i = HxOverrides.iter(this.dataBrowser);
+		while(i.hasNext()) {
+			var b = i.next();
+			if(b.string != null) {
+				var obj = eval(b.string);
+				if(obj != null) {
+					var str = js.Boot.__cast(obj , String);
+					if(str.indexOf(b.subString) != -1) {
+						this.browser = b.identity;
+						this.ver = this.searchVersion("navigator.userAgent",b.versionSearch);
+						if(this.ver == null) this.ver = this.searchVersion("navigator.appVersion",b.versionSearch);
+						return;
+					}
+				}
+			}
+		}
+	}
+	,addOS: function(string,subString,identity) {
+		var s = new com.wiris.js.JsOSData();
+		s.string = string;
+		s.subString = subString;
+		s.identity = identity;
+		this.dataOS.push(s);
+	}
+	,addBrowser: function(string,prop,subString,versionSearch,identity) {
+		var b = new com.wiris.js.JsBrowserData();
+		b.string = string;
+		b.prop = prop;
+		b.subString = subString;
+		b.versionSearch = versionSearch != null?versionSearch:identity;
+		b.identity = identity;
+		this.dataBrowser.push(b);
+	}
+	,touchable: null
+	,os: null
+	,ver: null
+	,browser: null
+	,dataOS: null
+	,dataBrowser: null
+	,__class__: com.wiris.js.JsBrowser
+}
+com.wiris.js.JsCharacters = $hxClasses["com.wiris.js.JsCharacters"] = function() { }
+com.wiris.js.JsCharacters.__name__ = ["com","wiris","js","JsCharacters"];
+com.wiris.js.JsCharacters.getSafeXMLCharactersEntities = function() {
+	return { tagOpener : "&laquo;", tagCloser : "&raquo;", doubleQuote : "&uml;", realDoubleQuote : "&quot;"};
+}
+com.wiris.js.JsCharacters.getXMLCharacters = function() {
+	return { id : "xmlCharacters", tagOpener : "<", tagCloser : ">", doubleQuote : "\"", ampersand : "&", quote : "'"};
+}
+com.wiris.js.JsCharacters.getSafeXMLCharacters = function() {
+	return { id : "safeXmlCharacters", tagOpener : "Â«", tagCloser : "Â»", doubleQuote : "Â¨", ampersand : "Â§", quote : "`", realDoubleQuote : "Â¨"};
+}
+com.wiris.js.JsMathML = $hxClasses["com.wiris.js.JsMathML"] = function() { }
+com.wiris.js.JsMathML.__name__ = ["com","wiris","js","JsMathML"];
+com.wiris.js.JsMathML.decodeSafeMathML = function(input) {
+	var safeXMLCharactersEntities = com.wiris.js.JsCharacters.getSafeXMLCharactersEntities();
+	var xmlCharacters = com.wiris.js.JsCharacters.getXMLCharacters();
+	var safeXMLCharacters = com.wiris.js.JsCharacters.getSafeXMLCharacters();
+	var tagOpenerEntity = safeXMLCharactersEntities.tagOpener;
+	var tagCloserEntity = safeXMLCharactersEntities.tagCloser;
+	var doubleQuoteEntity = safeXMLCharactersEntities.doubleQuote;
+	var realDoubleQuoteEntity = safeXMLCharactersEntities.realDoubleQuote;
+	var inputCopy = input.slice();
+	inputCopy = inputCopy.split(tagOpenerEntity).join(safeXMLCharacters.tagOpener);
+	inputCopy = inputCopy.split(tagCloserEntity).join(safeXMLCharacters.tagCloser);
+	inputCopy = inputCopy.split(doubleQuoteEntity).join(safeXMLCharacters.doubleQuote);
+	inputCopy = inputCopy.split(realDoubleQuoteEntity).join(safeXMLCharacters.realDoubleQuote);
+	var tagOpener = safeXMLCharacters.tagOpener;
+	var tagCloser = safeXMLCharacters.tagCloser;
+	var doubleQuote = safeXMLCharacters.doubleQuote;
+	var realDoubleQuote = safeXMLCharacters.realDoubleQuote;
+	var ampersand = safeXMLCharacters.ampersand;
+	var quote = safeXMLCharacters.quote;
+	inputCopy = inputCopy.split(tagOpener).join(xmlCharacters.tagOpener);
+	inputCopy = inputCopy.split(tagCloser).join(xmlCharacters.tagCloser);
+	inputCopy = inputCopy.split(doubleQuote).join(xmlCharacters.doubleQuote);
+	inputCopy = inputCopy.split(ampersand).join(xmlCharacters.ampersand);
+	inputCopy = inputCopy.split(quote).join(xmlCharacters.quote);
+	var returnValue = "";
+	var currentEntity = null;
+	var i = 0;
+	while(i < inputCopy.length) {
+		var character = inputCopy.charAt(i);
+		if(currentEntity == null) {
+			if(character == "$") currentEntity = ""; else returnValue += character;
+		} else if(character == ";") {
+			returnValue += "&" + currentEntity;
+			currentEntity = null;
+		} else if(character.match(new EReg("([a-zA-Z0-9#._-] | '-')",""))) currentEntity += character; else {
+			returnValue += "$" + "currentEntity";
+			currentEntity = null;
+			i -= 1;
+		}
+		i++;
+	}
+	return returnValue;
+}
+com.wiris.js.JsPluginListener = $hxClasses["com.wiris.js.JsPluginListener"] = function() { }
+com.wiris.js.JsPluginListener.__name__ = ["com","wiris","js","JsPluginListener"];
+com.wiris.js.JsPluginListener.prototype = {
+	afterParseLatex: null
+	,afterParse: null
+	,__class__: com.wiris.js.JsPluginListener
+}
+com.wiris.js.JsPluginTools = $hxClasses["com.wiris.js.JsPluginTools"] = function() {
+	this.tryReady();
+};
+com.wiris.js.JsPluginTools.__name__ = ["com","wiris","js","JsPluginTools"];
+com.wiris.js.JsPluginTools.instance = null;
+com.wiris.js.JsPluginTools.main = function() {
+	var ev;
+	ev = com.wiris.js.JsPluginTools.getInstance();
+	haxe.Timer.delay($bind(ev,ev.tryReady),100);
+}
+com.wiris.js.JsPluginTools.getInstance = function() {
+	if(com.wiris.js.JsPluginTools.instance == null) com.wiris.js.JsPluginTools.instance = new com.wiris.js.JsPluginTools();
+	return com.wiris.js.JsPluginTools.instance;
+}
+com.wiris.js.JsPluginTools.bypassEncapsulation = function() {
+	if(window.com == null) window.com = { };
+	if(window.com.wiris == null) window.com.wiris = { };
+	if(window.com.wiris.js == null) window.com.wiris.js = { };
+	if(window.com.wiris.js.JsPluginTools == null) window.com.wiris.js.JsPluginTools = com.wiris.js.JsPluginTools.getInstance();
+}
+com.wiris.js.JsPluginTools.prototype = {
+	md5encode: function(content) {
+		return haxe.Md5.encode(content);
+	}
+	,doLoad: function() {
+		this.ready = true;
+		com.wiris.js.JsPluginTools.instance = this;
+		com.wiris.js.JsPluginTools.bypassEncapsulation();
+	}
+	,tryReady: function() {
+		this.ready = false;
+		if(js.Lib.document.readyState) {
+			this.doLoad();
+			this.ready = true;
+		}
+		if(!this.ready) haxe.Timer.delay($bind(this,this.tryReady),100);
+	}
+	,ready: null
+	,__class__: com.wiris.js.JsPluginTools
+}
+com.wiris.js.JsPluginViewer = $hxClasses["com.wiris.js.JsPluginViewer"] = function() {
+	this._wrs_conf_imageFormat = null;
+	this.javaServicePath = "@param.js.java.appcontextpath@";
+	this.wiriseditormathmlattribute = null;
+	this.performanceenabled = null;
+	this.eventListenersArray = [];
+	this.callsShowImageNumber = 0;
+	this.callsLatexToMathml = 0;
+	this.params = new Hash();
+	this.mode = com.wiris.js.JsPluginViewer.USE_CREATE_IMAGE;
+	this.zoom = 1;
+	this.viewer = "";
+	this.lang = "inherit";
+	this.safeXml = false;
+	this.ready = false;
+	this.extension = "@param.configuration.script.extension@";
+	this.localpath = "@param.configuration.script.local.path@";
+	this.absoluteURL = "@param.configuration.script.base.path@";
+	if(this.extension.indexOf("@") >= 0) this.extension = "";
+	if(this.localpath.indexOf("@") >= 0) this.localpath = "/app";
+	if(this.absoluteURL.indexOf("@") >= 0) this.absoluteURL = "/java-java-context-root";
+};
+com.wiris.js.JsPluginViewer.__name__ = ["com","wiris","js","JsPluginViewer"];
+com.wiris.js.JsPluginViewer.instance = null;
+com.wiris.js.JsPluginViewer.main = function() {
+	var ev;
+	ev = com.wiris.js.JsPluginViewer.getInstance();
+	haxe.Timer.delay($bind(ev,ev.tryReady),100);
+}
+com.wiris.js.JsPluginViewer.getInstance = function() {
+	if(com.wiris.js.JsPluginViewer.instance == null) com.wiris.js.JsPluginViewer.instance = new com.wiris.js.JsPluginViewer();
+	return com.wiris.js.JsPluginViewer.instance;
+}
+com.wiris.js.JsPluginViewer.bypassEncapsulation = function() {
+	if(window.com == null) window.com = { };
+	if(window.com.wiris == null) window.com.wiris = { };
+	if(window.com.wiris.js == null) window.com.wiris.js = { };
+	if(window.com.wiris.js.JsPluginViewer == null) window.com.wiris.js.JsPluginViewer = com.wiris.js.JsPluginViewer.getInstance();
+}
+com.wiris.js.JsPluginViewer.prototype = {
+	removeViewerListener: function(listener) {
+		while(HxOverrides.remove(this.eventListenersArray,listener)) {
+		}
+	}
+	,addViewerListener: function(listener) {
+		this.eventListenersArray.push(listener);
+	}
+	,getBaseURL: function() {
+		return this.baseURL;
+	}
+	,queryToParams: function(query) {
+		var ss = query.split("&");
+		var h = new Hash();
+		var _g = 0;
+		while(_g < ss.length) {
+			var s = ss[_g];
+			++_g;
+			var kv = s.split("=");
+			if(kv.length > 1) h.set(kv[0],StringTools.urlDecode(kv[1]));
+		}
+		return h;
+	}
+	,isPerformanceEnabled: function() {
+		var data;
+		data = this.callGetVariableKeys("wirispluginperformance");
+		if(haxe.Json.parse(data).status != "ok") return false; else return haxe.Json.parse(data).result.wirispluginperformance == "true"?true:false;
+	}
+	,callGetVariableKeys: function(variableKeys) {
+		var con;
+		var data;
+		var url;
+		url = (this.absoluteURL.length > 0?this.absoluteURL:this.baseURL + this.localpath) + "/configurationjson" + this.extension;
+		con = new js.XMLHttpRequest();
+		data = "?variablekeys=" + variableKeys;
+		con.open("GET",url + data,false);
+		con.setRequestHeader("Content-type","application/x-www-form-urlencoded; charset=utf-8");
+		con.send(null);
+		return con.responseText;
+	}
+	,callService: function(mml,servicename) {
+		var con;
+		var height = 0;
+		var width = 0;
+		var baseline = 0;
+		var text = null;
+		var data;
+		var url;
+		con = new js.XMLHttpRequest();
+		url = (this.absoluteURL.length > 0?this.absoluteURL:this.baseURL + this.localpath) + "/service" + this.extension;
+		data = "service=" + servicename;
+		data += "&metrics=true&centerbaseline=false&mml=" + StringTools.urlEncode(mml);
+		data += "&lang=" + this.lang;
+		data += "&ignoreStyles=true";
+		if(this.zoom != 1) data += "&zoom=" + this.zoom;
+		if(com.wiris.js.JsPluginViewer.DEBUG) haxe.Log.trace("Calling: " + url,{ fileName : "JsPluginViewer.hx", lineNumber : 929, className : "com.wiris.js.JsPluginViewer", methodName : "callService"});
+		if(com.wiris.js.JsPluginViewer.DEBUG) haxe.Log.trace("POST:" + data,{ fileName : "JsPluginViewer.hx", lineNumber : 931, className : "com.wiris.js.JsPluginViewer", methodName : "callService"});
+		con.open("POST",url,false);
+		con.setRequestHeader("Content-type","application/x-www-form-urlencoded; charset=utf-8");
+		con.send(data);
+		return con.responseText;
+	}
+	,latexToMathml: function(latex,nodeAfter,asynchronously,callbackFunc) {
+		var _g = this;
+		var con = new js.XMLHttpRequest();
+		var url = (this.absoluteURL.length > 0?this.absoluteURL:this.baseURL + this.localpath) + "/service" + this.extension;
+		var data = "service=latex2mathml";
+		data += "&latex=" + StringTools.urlEncode(latex);
+		if(com.wiris.js.JsPluginViewer.DEBUG) haxe.Log.trace("Calling: " + url,{ fileName : "JsPluginViewer.hx", lineNumber : 862, className : "com.wiris.js.JsPluginViewer", methodName : "latexToMathml"});
+		if(com.wiris.js.JsPluginViewer.DEBUG) haxe.Log.trace("POST:" + data,{ fileName : "JsPluginViewer.hx", lineNumber : 864, className : "com.wiris.js.JsPluginViewer", methodName : "latexToMathml"});
+		var onloadFunc = function(e) {
+			try {
+				var mathml = haxe.Json.parse(con.responseText).result.text;
+				var newMathml = js.Lib.document.createElement("math");
+				var mathmlSpan = js.Lib.document.createElement("span");
+				mathmlSpan.appendChild(newMathml);
+				e.target.wiris.nodeAfter.parentElement.insertBefore(mathmlSpan,e.target.wiris.nodeAfter.nextSibling);
+				newMathml.outerHTML = mathml;
+				if(--_g.callsLatexToMathml == 0) {
+					var _g2 = 0, _g1 = _g.eventListenersArray.length;
+					while(_g2 < _g1) {
+						var i = _g2++;
+						try {
+							_g.eventListenersArray[i].afterParseLatex();
+						} catch( e1 ) {
+						}
+					}
+				}
+				e.target.wiris.callbackFunc(mathmlSpan);
+				_g.parseElement(mathmlSpan,asynchronously);
+			} catch( e1 ) {
+				if(com.wiris.js.JsPluginViewer.DEBUG) haxe.Log.trace("LatexToMathml call failed!",{ fileName : "JsPluginViewer.hx", lineNumber : 890, className : "com.wiris.js.JsPluginViewer", methodName : "latexToMathml"});
+			}
+		};
+		con.open("POST",url,asynchronously);
+		var newDynamic = { };
+		con.wiris = newDynamic;
+		con.wiris.nodeAfter = nodeAfter;
+		con.wiris.callbackFunc = callbackFunc;
+		con.setRequestHeader("Content-type","application/x-www-form-urlencoded; charset=utf-8");
+		con.onload = onloadFunc;
+		con.onerror = function(e) {
+			if(com.wiris.js.JsPluginViewer.DEBUG) haxe.Log.trace("LatexToMathml call failed!",{ fileName : "JsPluginViewer.hx", lineNumber : 903, className : "com.wiris.js.JsPluginViewer", methodName : "latexToMathml"});
+		};
+		con.send(data);
+	}
+	,callShowimage: function(container,mml,img,asynchronously,callbackFunc) {
+		var _g = this;
+		var con;
+		var height = 0;
+		var width = 0;
+		var baseline = 0;
+		var text = null;
+		var data;
+		var url;
+		con = new js.XMLHttpRequest();
+		var mmlEntities;
+		mmlEntities = "";
+		var _g1 = 0, _g2 = mml.length;
+		while(_g1 < _g2) {
+			var i = _g1++;
+			var character;
+			character = mml.charAt(i);
+			if(HxOverrides.cca(mml,i) > 128) mmlEntities += "&#" + HxOverrides.cca(mml,i) + ";"; else mmlEntities += character;
+		}
+		var md5 = haxe.Md5.encode("centerbaseline=false\nmml=" + mmlEntities + "\n");
+		url = (this.absoluteURL.length > 0?this.absoluteURL:this.baseURL + this.localpath) + "/showimage" + this.extension;
+		if(new com.wiris.js.JsBrowser().isIE()) data = "?formula=" + md5 + "&lang=" + this.lang + "&useragent=IE"; else data = "?formula=" + md5 + "&lang=" + this.lang;
+		data += "&version=" + com.wiris.js.JsPluginViewer.VERSION;
+		if(com.wiris.js.JsPluginViewer.DEBUG) haxe.Log.trace("Calling: " + url,{ fileName : "JsPluginViewer.hx", lineNumber : 740, className : "com.wiris.js.JsPluginViewer", methodName : "callShowimage"});
+		if(com.wiris.js.JsPluginViewer.DEBUG) haxe.Log.trace("GET:" + data,{ fileName : "JsPluginViewer.hx", lineNumber : 742, className : "com.wiris.js.JsPluginViewer", methodName : "callShowimage"});
+		con.open("GET",url + data,asynchronously);
+		con.setRequestHeader("Content-type","application/x-www-form-urlencoded; charset=utf-8");
+		var onloadFunc = function(e) {
+			var getResultFunc = function(e1) {
+				var result = { };
+				try {
+					result = haxe.Json.parse(con.responseText).result;
+				} catch( e2 ) {
+					console.warn("Formula is malformed and it can't be rendered");
+					return;
+				}
+				e1.target.wiris.img.src = result.format == "svg"?"data:image/svg+xml;charset=utf8,":"data:image/png;base64,";
+				e1.target.wiris.img.src = e1.target.wiris.img.src + StringTools.urlEncode(result.content);
+				var dpi = result.dpi == null?96:result.dpi;
+				var scaleDpi = _g.zoom * (96 / dpi);
+				var scaledHeight = result.height * scaleDpi | 0;
+				var scaledWitdh = result.width * scaleDpi | 0;
+				var scaledBaseLine = result.baseline * scaleDpi | 0;
+				if(result.height > 0) {
+					if(com.wiris.js.JsPluginViewer.DEBUG) haxe.Log.trace(_g.calculateAlignment(height,baseline),{ fileName : "JsPluginViewer.hx", lineNumber : 766, className : "com.wiris.js.JsPluginViewer", methodName : "callShowimage"});
+					e1.target.wiris.img.style.verticalAlign = "-" + _g.calculateAlignment(scaledHeight,scaledBaseLine) + "px";
+					e1.target.wiris.img.style.height = "" + scaledHeight + "px";
+					e1.target.wiris.img.style.width = "" + scaledWitdh + "px";
+				}
+				if(_g.wiriseditormathmlattribute == null) {
+					var wirisEditorMathmlAttributeCall = haxe.Json.parse(_g.callGetVariableKeys("wiriseditormathmlattribute"));
+					if(wirisEditorMathmlAttributeCall.status != "ok") _g.wiriseditormathmlattribute = "data-mathml"; else _g.wiriseditormathmlattribute = wirisEditorMathmlAttributeCall.result.wiriseditormathmlattribute;
+				}
+				e1.target.wiris.img.setAttribute(_g.wiriseditormathmlattribute,e1.target.wiris.mml);
+				e1.target.wiris.img.setAttribute("class","Wirisformula");
+				e1.target.wiris.img.setAttribute("role","math");
+				if(result.alt != null) e1.target.wiris.img.alt = result.alt; else {
+					var accessibilityResponse = _g.callService(e1.target.wiris.mml,"mathml2accessible");
+					if(haxe.Json.parse(accessibilityResponse).status != "error") e1.target.wiris.img.alt = haxe.Json.parse(accessibilityResponse).result.text;
+				}
+				if(--_g.callsShowImageNumber == 0) {
+					var _g2 = 0, _g1 = _g.eventListenersArray.length;
+					while(_g2 < _g1) {
+						var i = _g2++;
+						try {
+							_g.eventListenersArray[i].afterParse();
+						} catch( e2 ) {
+						}
+					}
+				}
+				callbackFunc();
+			};
+			if(haxe.Json.parse(con.responseText).status == "warning") {
+				con.open("POST",url,e.target.wiris.asynchronously);
+				con.setRequestHeader("Content-type","application/x-www-form-urlencoded; charset=utf-8");
+				var onloadFunc1 = function(e1) {
+					getResultFunc(e1);
+				};
+				if(new com.wiris.js.JsBrowser().isIE()) data = "centerbaseline=false&mml=" + StringTools.urlEncode(e.target.wiris.mml) + "&useragent=IE"; else data = "centerbaseline=false&mml=" + StringTools.urlEncode(e.target.wiris.mml);
+				var newDynamic = { };
+				con.wiris = newDynamic;
+				con.wiris.callbackFunc = callbackFunc;
+				con.wiris.getResultFunc = getResultFunc;
+				con.wiris.mml = mml;
+				con.wiris.img = img;
+				con.wiris.container = container;
+				con.onload = onloadFunc1;
+				con.onerror = function(e1) {
+					if(com.wiris.js.JsPluginViewer.DEBUG) haxe.Log.trace("ShowImage call failed!",{ fileName : "JsPluginViewer.hx", lineNumber : 830, className : "com.wiris.js.JsPluginViewer", methodName : "callShowimage"});
+				};
+				con.send(data);
+			} else getResultFunc(e);
+		};
+		var newDynamic = { };
+		con.wiris = newDynamic;
+		con.wiris.callbackFunc = callbackFunc;
+		con.wiris.mml = mml;
+		con.wiris.img = img;
+		con.wiris.container = container;
+		con.wiris.asynchronously = asynchronously;
+		con.onload = onloadFunc;
+		con.onerror = function(e) {
+			if(com.wiris.js.JsPluginViewer.DEBUG) haxe.Log.trace("ShowImage call failed!",{ fileName : "JsPluginViewer.hx", lineNumber : 850, className : "com.wiris.js.JsPluginViewer", methodName : "callShowimage"});
+		};
+		con.send(null);
+	}
+	,callCreateImage: function(mml,img) {
+		var con;
+		var height = 0;
+		var width = 0;
+		var baseline = 0;
+		var text = null;
+		var data;
+		var url;
+		con = new js.XMLHttpRequest();
+		url = (this.absoluteURL.length > 0?this.absoluteURL:this.baseURL + this.localpath) + "/createimage" + this.extension;
+		data = "metrics=true&centerbaseline=false&mml=" + StringTools.urlEncode(mml);
+		data += "&lang=" + this.lang;
+		if(this.zoom != 1) data += "&zoom=" + this.zoom;
+		if(com.wiris.js.JsPluginViewer.DEBUG) haxe.Log.trace("Calling: " + url,{ fileName : "JsPluginViewer.hx", lineNumber : 669, className : "com.wiris.js.JsPluginViewer", methodName : "callCreateImage"});
+		if(com.wiris.js.JsPluginViewer.DEBUG) haxe.Log.trace("POST:" + data,{ fileName : "JsPluginViewer.hx", lineNumber : 671, className : "com.wiris.js.JsPluginViewer", methodName : "callCreateImage"});
+		con.open("POST",url,false);
+		con.setRequestHeader("Content-type","application/x-www-form-urlencoded; charset=utf-8");
+		con.send(data);
+		var s = con.responseText;
+		var i = s.indexOf("?");
+		if(i >= 0) {
+			var scaleDpi = 1;
+			var h = this.queryToParams(HxOverrides.substr(s,i + 1,null));
+			if(com.wiris.js.JsPluginViewer.DEBUG) haxe.Log.trace(h.get("formula"),{ fileName : "JsPluginViewer.hx", lineNumber : 681, className : "com.wiris.js.JsPluginViewer", methodName : "callCreateImage"});
+			if(h.exists("dpi")) scaleDpi = this.zoom * (Std.parseInt(h.get("dpi")) / 96);
+			baseline = Std.parseInt(h.get("cb")) / scaleDpi | 0;
+			height = Std.parseInt(h.get("ch")) / scaleDpi | 0;
+			width = Std.parseInt(h.get("cw")) / scaleDpi | 0;
+			text = h.get("text");
+		}
+		img.src = con.responseText;
+		if(height > 0) {
+			if(com.wiris.js.JsPluginViewer.DEBUG) haxe.Log.trace(this.calculateAlignment(height,baseline),{ fileName : "JsPluginViewer.hx", lineNumber : 692, className : "com.wiris.js.JsPluginViewer", methodName : "callCreateImage"});
+			img.style.verticalAlign = "-" + this.calculateAlignment(height,baseline) + "px";
+			img.style.height = "" + height + "px";
+			img.style.width = "" + width + "px";
+		}
+		img.setAttribute("data-mathml",mml);
+		img.setAttribute("class","Wirisformula");
+		img.setAttribute("role","math");
+		var accessibility = this.callService(mml,"mathml2accessible");
+		if(accessibility != null) img.alt = haxe.Json.parse(accessibility).result.text;
+	}
+	,calculateAlignment: function(height,baseline) {
+		var result;
+		result = 0;
+		result = height - baseline;
+		return result;
+	}
+	,getTechnology: function() {
+		if(HxOverrides.substr(com.wiris.js.JsPluginViewer.TECH,1,null) == "param.js.tech.discover@") {
+			var con;
+			con = new js.XMLHttpRequest();
+			con.open("GET",this.baseURL + "/../tech.txt",false);
+			con.send(null);
+			var s = con.responseText;
+			return StringTools.trim(s.split("#")[0]);
+		} else return com.wiris.js.JsPluginViewer.TECH;
+	}
+	,processMathML: function(mml,container,asynchronously,callbackFunc) {
+		if(com.wiris.js.JsPluginViewer.DEBUG) haxe.Log.trace(mml,{ fileName : "JsPluginViewer.hx", lineNumber : 614, className : "com.wiris.js.JsPluginViewer", methodName : "processMathML"});
+		var img = js.Lib.document.createElement("img");
+		if(this.performanceenabled == null) this.performanceenabled = this.isPerformanceEnabled();
+		if(this.mode == com.wiris.js.JsPluginViewer.USE_CREATE_IMAGE && this.performanceenabled) this.callShowimage(container,mml,img,asynchronously,callbackFunc); else if(this.mode == com.wiris.js.JsPluginViewer.USE_CREATE_IMAGE && !this.performanceenabled) this.callCreateImage(mml,img); else img.src = this.baseURL + this.localpath + "/showimage" + this.extension + "?mml=" + StringTools.urlEncode(mml);
+		container.appendChild(img);
+		if(com.wiris.js.JsPluginViewer.DEBUG) haxe.Log.trace(img.src,{ fileName : "JsPluginViewer.hx", lineNumber : 628, className : "com.wiris.js.JsPluginViewer", methodName : "processMathML"});
+	}
+	,getMathML_IE7: function(mathNode0) {
+		var mathml = "";
+		var mathNode = mathNode0;
+		while(mathNode != null && mathNode.nodeName != "/MATH") {
+			if(mathNode.nodeType == 3) mathml += mathNode.nodeValue; else {
+				var nodeName = mathNode.nodeName.toLowerCase();
+				if(nodeName.charAt(0) == "/") mathml += "</" + HxOverrides.substr(nodeName,1,null) + ">"; else {
+					mathml += "<" + nodeName;
+					var attributes = mathNode.attributes;
+					var i = 0;
+					while(i < attributes.length) {
+						var attribute = attributes[i];
+						if(attribute.nodeValue != "" && attribute.nodeValue != null && attribute.nodeValue != "inherit") mathml += " " + attribute.nodeName + "=\"" + attribute.nodeValue + "\"";
+						++i;
+					}
+					var counter = 1;
+					var nextMathNode = mathNode.nextSibling;
+					while(nextMathNode != null && counter > 0) {
+						var nextNodeName = nextMathNode.nodeName.toLowerCase();
+						if(nextNodeName == nodeName) ++counter; else if(nextNodeName == "/" + nodeName) --counter;
+						nextMathNode = nextMathNode.nextSibling;
+					}
+					if(counter > 0) mathml += "/";
+					mathml += ">";
+				}
+			}
+			var nextMathNode = mathNode.nextSibling;
+			if(mathNode != mathNode0) mathNode.parentNode.removeChild(mathNode);
+			mathNode = nextMathNode;
+		}
+		if(mathNode.nodeName == "/MATH") mathNode.parentNode.removeChild(mathNode);
+		mathml += "</math>";
+		return mathml;
+	}
+	,removeSemanticsMathml: function(mathml) {
+		var mathTagEnd = "</math>";
+		var openSemantics = "<semantics>";
+		var openAnnotation = "<annotation";
+		var mathmlWithoutSemantics = mathml;
+		var startSemantics = mathml.indexOf(openSemantics);
+		if(startSemantics != -1) {
+			var startAnnotation = mathml.indexOf(openAnnotation,startSemantics + openSemantics.length);
+			if(startAnnotation != -1) mathmlWithoutSemantics = mathml.substring(0,startSemantics) + mathml.substring(startSemantics + openSemantics.length,startAnnotation) + mathTagEnd;
+		}
+		return mathmlWithoutSemantics;
+	}
+	,replaceNodes: function(mathNodes,n,asynchronously,callbackFunc) {
+		if(n >= mathNodes.length) return;
+		var mathNode = mathNodes[n];
+		var mathml = null;
+		var browser = new com.wiris.js.JsBrowser();
+		if(browser.getBrowser() == "Explorer" && (browser.getVersion() == "6" || browser.getVersion() == "7") && navigator.appVersion.indexOf("Trident") == -1) {
+			if(com.wiris.js.JsPluginViewer.DEBUG) haxe.Log.trace("Is ie7",{ fileName : "JsPluginViewer.hx", lineNumber : 483, className : "com.wiris.js.JsPluginViewer", methodName : "replaceNodes"});
+			mathml = this.getMathML_IE7(mathNode);
+		}
+		var container = js.Lib.document.createElement("span");
+		if(mathNode.parentNode != null) mathNode.parentNode.replaceChild(container,mathNode);
+		if(mathml == null) {
+			container.appendChild(mathNode);
+			mathml = container.innerHTML;
+			container.removeChild(mathNode);
+		}
+		var index = mathml.indexOf("<math");
+		mathml = HxOverrides.substr(mathml,index,mathml.length - index);
+		var containerMath = js.Lib.document.createElement("span");
+		var containerMathElement = js.Lib.document.createElement("math");
+		containerMath.appendChild(containerMathElement);
+		containerMathElement.outerHTML = mathml;
+		mathml = new XMLSerializer().serializeToString(containerMath.children[0]);
+		this.processMathML(mathml,container,asynchronously,callbackFunc);
+		var self = this;
+		self.replaceNodes(mathNodes,n + 1,asynchronously,callbackFunc);
+	}
+	,replaceLatexInTextNode: function(pos,node,asynchronously,callbackFunc) {
+		var textContent;
+		textContent = node.textContent;
+		if(pos < textContent.length) {
+			var nextLatexPosistion = this.getNextLatexPos(pos,textContent);
+			if(nextLatexPosistion != null) {
+				var leftText = textContent.substring(pos,nextLatexPosistion.start);
+				var leftTextNode = js.Lib.document.createTextNode(leftText);
+				node.parentNode.insertBefore(leftTextNode,node);
+				var latex = textContent.substring(nextLatexPosistion.start + "$$".length,nextLatexPosistion.end);
+				this.latexToMathml(latex,leftTextNode,asynchronously,callbackFunc);
+				this.replaceLatexInTextNode(nextLatexPosistion.end + "$$".length,node,asynchronously,callbackFunc);
+			} else {
+				var text = textContent.substring(pos);
+				var textNode = js.Lib.document.createTextNode(text);
+				node.parentNode.insertBefore(textNode,node);
+				node.parentNode.removeChild(node);
+			}
+		} else node.parentNode.removeChild(node);
+	}
+	,getNextLatexPos: function(pos,text) {
+		var firstLatexTags = text.indexOf("$$",pos);
+		var secondLatexTags = firstLatexTags == -1?-1:text.indexOf("$$",firstLatexTags + "$$".length);
+		return firstLatexTags != -1 && secondLatexTags != -1?{ start : firstLatexTags, end : secondLatexTags}:null;
+	}
+	,findLatex: function(node) {
+		var foundLatex = false;
+		var dollarIndex = node.nodeValue.indexOf("$$");
+		if(dollarIndex != -1) {
+			dollarIndex = node.nodeValue.indexOf("$$",dollarIndex + 2);
+			if(dollarIndex != -1) foundLatex = true;
+		}
+		return foundLatex;
+	}
+	,parseLatexDocument: function(asynchronously,callbackFunc) {
+		this.parseLatexElement(js.Lib.document,asynchronously,callbackFunc);
+	}
+	,parseLatexElement: function(element,asynchronously,callbackFunc) {
+		if(callbackFunc == null) callbackFunc = function() {
+		};
+		if(asynchronously == null) {
+			if(this.asyncParam) asynchronously = this.asyncParam;
+		}
+		var domTextNodes = this.findTextNodes(element);
+		var latexToProcess = [];
+		var i = 0;
+		while(i < domTextNodes.length) {
+			var node = domTextNodes[i];
+			if(this.findLatex(node)) latexToProcess.push(node);
+			i++;
+		}
+		if(latexToProcess.length == 0) {
+			var _g1 = 0, _g = this.eventListenersArray.length;
+			while(_g1 < _g) {
+				var i1 = _g1++;
+				try {
+					this.eventListenersArray[i1].afterParseLatex();
+				} catch( e ) {
+				}
+			}
+		} else {
+			this.callsLatexToMathml = latexToProcess.length;
+			var _g1 = 0, _g = latexToProcess.length;
+			while(_g1 < _g) {
+				var i1 = _g1++;
+				var node = latexToProcess[i1];
+				this.replaceLatexInTextNode(0,node,asynchronously,callbackFunc);
+			}
+		}
+	}
+	,findTextNodes: function(el) {
+		var textNodes = [];
+		var walk = document.createTreeWalker(el,NodeFilter.SHOW_TEXT,null,false);
+		var node;
+		while(node = walk.nextNode()) if(!this.thereIsParentTextArea(node)) textNodes.push(node);
+		return textNodes;
+	}
+	,thereIsParentTextArea: function(el) {
+		var thereIs = false;
+		var parentNode = el.parentNode;
+		while(!thereIs && parentNode != null) {
+			if(parentNode.nodeName == "TEXTAREA") thereIs = true;
+			parentNode = parentNode.parentNode;
+		}
+		return thereIs;
+	}
+	,isEditable: function(element) {
+		while(element != null) {
+			if(element.contentEditable == "true") return true;
+			element = element.parentNode;
+		}
+		return false;
+	}
+	,parseElement: function(element,asynchronously,callbackFunc) {
+		if(!this.ready) throw "Document is not loaded.";
+		if(callbackFunc == null) callbackFunc = function() {
+		};
+		if(asynchronously == null) {
+			if(this.asyncParam) asynchronously = this.asyncParam;
+		}
+		var mathNodes = element.getElementsByTagName("math");
+		var arr = new Array();
+		var _g1 = 0, _g = mathNodes.length;
+		while(_g1 < _g) {
+			var x = _g1++;
+			if(!this.isEditable(mathNodes[x])) arr.push(mathNodes[x]);
+		}
+		this.callsShowImageNumber = arr.length;
+		if(this.callsShowImageNumber == 0) {
+			var _g1 = 0, _g = this.eventListenersArray.length;
+			while(_g1 < _g) {
+				var i = _g1++;
+				try {
+					this.eventListenersArray[i].afterParse();
+				} catch( e ) {
+				}
+			}
+		}
+		this.replaceNodes(arr,0,asynchronously,callbackFunc);
+	}
+	,parseDocument: function(asynchronously,callbackFunc,safeXml) {
+		if(safeXml) this.parseSafeMathMLElement(js.Lib.document,asynchronously,callbackFunc); else this.parseElement(js.Lib.document,asynchronously,callbackFunc);
+	}
+	,getMathMLPositionsAtNode: function(node,mathmlPositions) {
+		var safeXMLCharacters = com.wiris.js.JsCharacters.getSafeXMLCharacters();
+		if(node.nodeType == 3) {
+			var startMathmlTag = safeXMLCharacters.tagOpener + "math";
+			var endMathmlTag = safeXMLCharacters.tagOpener + "/math" + safeXMLCharacters.tagCloser;
+			var start = node.textContent.indexOf(startMathmlTag);
+			var end = 0;
+			while(start != -1) {
+				end = node.textContent.indexOf(endMathmlTag,start + startMathmlTag.length);
+				if(end == -1) break;
+				var nextMathML = node.textContent.indexOf(startMathmlTag,end + endMathmlTag.length);
+				if(nextMathML >= 0 && end > nextMathML) break;
+				var safeMathml = node.textContent.substring(start,end + endMathmlTag.length);
+				node.textContent = node.textContent.substring(0,start) + node.textContent.substring(end + endMathmlTag.length);
+				node = node.splitText(start);
+				start = node.textContent.indexOf(startMathmlTag);
+				mathmlPositions.push({ safeMML : safeMathml, nextElement : node});
+			}
+		}
+	}
+	,getMathMLPositionsAtElementAndChildren: function(element,mathmlPositions) {
+		this.getMathMLPositionsAtNode(element,mathmlPositions);
+		var childNodes = Array.from(element.childNodes);
+		if(childNodes.length > 0) {
+			var _g1 = 0, _g = childNodes.length;
+			while(_g1 < _g) {
+				var i = _g1++;
+				var child = childNodes[i];
+				this.getMathMLPositionsAtElementAndChildren(child,mathmlPositions);
+			}
+		}
+	}
+	,parseSafeMathMLElement: function(element,asynchronously,callbackFunc) {
+		if(!this.ready) throw "Document is not loaded.";
+		var mathmlPositions = [];
+		this.getMathMLPositionsAtElementAndChildren(element,mathmlPositions);
+		var _g1 = 0, _g = mathmlPositions.length;
+		while(_g1 < _g) {
+			var i = _g1++;
+			var mathmlPosition = mathmlPositions[i];
+			var newNode = document.createElement("math");
+			mathmlPosition.nextElement.parentNode.insertBefore(newNode,mathmlPosition.nextElement);
+			newNode.outerHTML = com.wiris.js.JsMathML.decodeSafeMathML(mathmlPosition.safeMML);
+		}
+		this.parseElement(element,asynchronously,callbackFunc);
+	}
+	,doLoad: function() {
+		if(com.wiris.js.JsPluginViewer.DEBUG) haxe.Log.trace("doLoad",{ fileName : "JsPluginViewer.hx", lineNumber : 120, className : "com.wiris.js.JsPluginViewer", methodName : "doLoad"});
+		this.scriptName = "WIRISplugins.js";
+		var col;
+		col = js.Lib.document.getElementsByTagName("script");
+		var _g1 = 0, _g = col.length;
+		while(_g1 < _g) {
+			var i = _g1++;
+			var d;
+			var src;
+			d = col[i];
+			src = d.src;
+			var j = src.lastIndexOf(this.scriptName);
+			if(j >= 0) {
+				this.baseURL = HxOverrides.substr(src,0,j - 1);
+				var k = src.indexOf("?",j);
+				if(k >= 0) {
+					var query = HxOverrides.substr(src,k + 1,null);
+					this.params = this.queryToParams(query);
+				}
+				if(com.wiris.js.JsPluginViewer.DEBUG) haxe.Log.trace(this.baseURL,{ fileName : "JsPluginViewer.hx", lineNumber : 139, className : "com.wiris.js.JsPluginViewer", methodName : "doLoad"});
+			}
+		}
+		this.tech = this.getTechnology();
+		if(this.tech == "php") {
+			this.extension = ".php";
+			this.localpath = "";
+			this.absoluteURL = "";
+		} else if(this.tech == "aspx") {
+			this.extension = ".aspx";
+			this.localpath = "";
+			this.absoluteURL = "";
+		} else if(this.tech == "local-java") {
+			this.extension = "";
+			this.localpath = "/../app";
+			this.absoluteURL = "";
+		} else if(this.tech == "nodejs") {
+			this.extension = "";
+			this.localpath = "/../integration";
+			this.absoluteURL = "";
+		} else if(this.tech == "java") {
+			this.extension = "";
+			this.localpath = "";
+			this.absoluteURL = "";
+		} else if(this.tech == "ruby") {
+			this.extension = "";
+			this.absoluteURL = "/wirispluginengine/integration";
+		} else if(this.tech == "server") {
+			this.absoluteURL = "https://www.wiris.net/demo/plugins/app";
+			this.extension = "";
+			this.localpath = "";
+		}
+		this.ready = true;
+		if(com.wiris.js.JsPluginViewer.DEBUG) haxe.Log.trace("Tech:" + this.tech,{ fileName : "JsPluginViewer.hx", lineNumber : 177, className : "com.wiris.js.JsPluginViewer", methodName : "doLoad"});
+		if(this.params.exists("viewer")) this.viewer = this.params.get("viewer");
+		this.asyncParam = this.params.exists("async") && this.params.get("async") == "true"?true:false;
+		if(this.params.exists("zoom")) this.zoom = Std.parseFloat(this.params.get("zoom"));
+		if(this.params.exists("dpi")) this.zoom *= Std.parseFloat(this.params.get("dpi")) / 96;
+		if(this.params.exists("lang")) this.lang = this.params.get("lang"); else this.lang = "en";
+		if(this.params.exists("safeXml")) this.safeXml = this.params.get("safeXml") == "true"?true:false; else this.safeXml = false;
+		if(this.lang == "inherit") this.lang = js.Lib.document.getElementsByTagName("html")[0].lang;
+		if(this.viewer == "image") this.parseDocument(this.asyncParam,null,this.safeXml); else if(this.viewer == "latex") this.parseLatexDocument(this.asyncParam); else if(this.viewer == "all") {
+			this.parseLatexDocument(this.asyncParam);
+			this.parseDocument(this.asyncParam);
+		}
+		if(com.wiris.js.JsPluginViewer.DEBUG) haxe.Log.trace("Language:" + this.lang,{ fileName : "JsPluginViewer.hx", lineNumber : 213, className : "com.wiris.js.JsPluginViewer", methodName : "doLoad"});
+		com.wiris.js.JsPluginViewer.instance = this;
+		com.wiris.js.JsPluginViewer.bypassEncapsulation();
+	}
+	,tryReady: function() {
+		this.ready = false;
+		if(js.Lib.document.readyState) {
+			this.doLoad();
+			this.ready = true;
+		}
+		if(!this.ready) haxe.Timer.delay($bind(this,this.tryReady),100);
+	}
+	,eventListenersArray: null
+	,callsLatexToMathml: null
+	,callsShowImageNumber: null
+	,_wrs_conf_imageFormat: null
+	,ready: null
+	,javaServicePath: null
+	,tech: null
+	,safeXml: null
+	,lang: null
+	,wiriseditormathmlattribute: null
+	,performanceenabled: null
+	,asyncParam: null
+	,viewer: null
+	,zoom: null
+	,absoluteURL: null
+	,localpath: null
+	,extension: null
+	,mode: null
+	,params: null
+	,scriptName: null
+	,baseURL: null
+	,__class__: com.wiris.js.JsPluginViewer
+}
+if(!com.wiris.system) com.wiris.system = {}
+com.wiris.system.JsBrowserData = $hxClasses["com.wiris.system.JsBrowserData"] = function() {
+};
+com.wiris.system.JsBrowserData.__name__ = ["com","wiris","system","JsBrowserData"];
+com.wiris.system.JsBrowserData.prototype = {
+	identity: null
+	,versionSearch: null
+	,subString: null
+	,prop: null
+	,string: null
+	,__class__: com.wiris.system.JsBrowserData
+}
+com.wiris.system.JsOSData = $hxClasses["com.wiris.system.JsOSData"] = function() {
+};
+com.wiris.system.JsOSData.__name__ = ["com","wiris","system","JsOSData"];
+com.wiris.system.JsOSData.prototype = {
+	identity: null
+	,subString: null
+	,string: null
+	,__class__: com.wiris.system.JsOSData
+}
+com.wiris.system.JsBrowser = $hxClasses["com.wiris.system.JsBrowser"] = function() {
+	this.dataBrowser = new Array();
+	this.addBrowser(com.wiris.system.JsBrowser.SOURCE_USER_AGENT,null,"Edge",null,"Edge");
+	this.addBrowser(com.wiris.system.JsBrowser.SOURCE_USER_AGENT,null,"Chrome",null,"Chrome");
+	this.addBrowser(com.wiris.system.JsBrowser.SOURCE_USER_AGENT,null,"OmniWeb",null,"OmniWeb");
+	this.addBrowser(com.wiris.system.JsBrowser.SOURCE_VENDOR,null,"Apple","Version","Safari");
+	this.addBrowser(null,com.wiris.system.JsBrowser.SOURCE_WINDOW_OPERA,null,"Version","Opera");
+	this.addBrowser(com.wiris.system.JsBrowser.SOURCE_VENDOR,null,"iCab",null,"iCab");
+	this.addBrowser(com.wiris.system.JsBrowser.SOURCE_VENDOR,null,"KDE",null,"Konkeror");
+	this.addBrowser(com.wiris.system.JsBrowser.SOURCE_USER_AGENT,null,"Firefox",null,"Firefox");
+	this.addBrowser(com.wiris.system.JsBrowser.SOURCE_VENDOR,null,"Camino",null,"Camino");
+	this.addBrowser(com.wiris.system.JsBrowser.SOURCE_USER_AGENT,null,"Netscape",null,"Netscape");
+	this.addBrowser(com.wiris.system.JsBrowser.SOURCE_USER_AGENT,null,"MSIE","MSIE","Explorer");
+	this.addBrowser(com.wiris.system.JsBrowser.SOURCE_USER_AGENT,null,"Trident","rv","Explorer");
+	this.addBrowser(com.wiris.system.JsBrowser.SOURCE_USER_AGENT,null,"Gecko","rv","Mozilla");
+	this.addBrowser(com.wiris.system.JsBrowser.SOURCE_USER_AGENT,null,"Mozilla","Mozilla","Netscape");
+	this.dataOS = new Array();
+	this.addOS(com.wiris.system.JsBrowser.SOURCE_PLATFORM,"Win","Windows");
+	this.addOS(com.wiris.system.JsBrowser.SOURCE_PLATFORM,"Mac","Mac");
+	this.addOS(com.wiris.system.JsBrowser.SOURCE_USER_AGENT,"iPhone","iOS");
+	this.addOS(com.wiris.system.JsBrowser.SOURCE_USER_AGENT,"iPad","iOS");
+	this.addOS(com.wiris.system.JsBrowser.SOURCE_USER_AGENT,"Android","Android");
+	this.addOS(com.wiris.system.JsBrowser.SOURCE_PLATFORM,"Linux","Linux");
+	if(window.matchMedia != null) this.hasCoarsePointer = window.matchMedia("(any-pointer: coarse)").matches; else this.hasCoarsePointer = false;
+	this.setBrowser();
+	this.setOS();
+	this.touchable = this.isIOS() || this.isAndroid();
+};
+com.wiris.system.JsBrowser.__name__ = ["com","wiris","system","JsBrowser"];
+com.wiris.system.JsBrowser.getBrowserInfo = function(source) {
+	if(source == com.wiris.system.JsBrowser.SOURCE_USER_AGENT) return navigator.userAgent; else if(source == com.wiris.system.JsBrowser.SOURCE_VENDOR) return navigator.vendor; else if(source == com.wiris.system.JsBrowser.SOURCE_WINDOW_OPERA) return window.opera; else if(source == com.wiris.system.JsBrowser.SOURCE_PLATFORM) return navigator.platform; else if(source == com.wiris.system.JsBrowser.SOURCE_APP_VERSION) return navigator.appVersion; else return null;
+}
+com.wiris.system.JsBrowser.prototype = {
+	isTouchable: function() {
+		return this.touchable;
+	}
+	,isAndroid: function() {
+		return this.os == "Android";
+	}
+	,isMac: function() {
+		return this.os == "Mac";
+	}
+	,isIOS: function() {
+		return this.os == "iOS" || this.os == "Mac" && this.hasCoarsePointer;
+	}
+	,isFF: function() {
+		return this.browser == "Firefox";
+	}
+	,isSafari: function() {
+		return this.browser == "Safari";
+	}
+	,isChrome: function() {
+		return this.browser == "Chrome";
+	}
+	,isEdge: function() {
+		return this.browser == "Edge";
+	}
+	,isIE: function() {
+		return this.browser == "Explorer";
+	}
+	,getVersion: function() {
+		return this.ver;
+	}
+	,getOS: function() {
+		return this.os;
+	}
+	,getBrowser: function() {
+		return this.browser;
+	}
+	,searchVersion: function(prop,search) {
+		var str = js.Boot.__cast(com.wiris.system.JsBrowser.getBrowserInfo(prop) , String);
+		var index = str.indexOf(search);
+		if(index == -1) return null;
+		return "" + Std.parseFloat(HxOverrides.substr(str,index + search.length + 1,null));
+	}
+	,setOS: function() {
+		var i = HxOverrides.iter(this.dataOS);
+		while(i.hasNext()) {
+			var s = i.next();
+			var str = js.Boot.__cast(com.wiris.system.JsBrowser.getBrowserInfo(s.string) , String);
+			if(str.indexOf(s.subString) != -1) {
+				this.os = s.identity;
+				return;
+			}
+		}
+	}
+	,setBrowser: function() {
+		var i = HxOverrides.iter(this.dataBrowser);
+		while(i.hasNext()) {
+			var b = i.next();
+			if(b.string != null) {
+				var obj = com.wiris.system.JsBrowser.getBrowserInfo(b.string);
+				if(obj != null) {
+					var str = js.Boot.__cast(obj , String);
+					if(str.indexOf(b.subString) != -1) {
+						this.browser = b.identity;
+						this.ver = this.searchVersion(com.wiris.system.JsBrowser.SOURCE_USER_AGENT,b.versionSearch);
+						if(this.ver == null) this.ver = this.searchVersion(com.wiris.system.JsBrowser.SOURCE_APP_VERSION,b.versionSearch);
+						return;
+					}
+				}
+			}
+		}
+	}
+	,addOS: function(string,subString,identity) {
+		var s = new com.wiris.system.JsOSData();
+		s.string = string;
+		s.subString = subString;
+		s.identity = identity;
+		this.dataOS.push(s);
+	}
+	,addBrowser: function(string,prop,subString,versionSearch,identity) {
+		var b = new com.wiris.system.JsBrowserData();
+		b.string = string;
+		b.prop = prop;
+		b.subString = subString;
+		b.versionSearch = versionSearch != null?versionSearch:identity;
+		b.identity = identity;
+		this.dataBrowser.push(b);
+	}
+	,hasCoarsePointer: null
+	,touchable: null
+	,os: null
+	,ver: null
+	,browser: null
+	,dataOS: null
+	,dataBrowser: null
+	,__class__: com.wiris.system.JsBrowser
+}
+com.wiris.system.JsDOMUtils = $hxClasses["com.wiris.system.JsDOMUtils"] = function() { }
+com.wiris.system.JsDOMUtils.__name__ = ["com","wiris","system","JsDOMUtils"];
+com.wiris.system.JsDOMUtils.ieTouchEvents = null;
+com.wiris.system.JsDOMUtils.init = function() {
+	if(com.wiris.system.JsDOMUtils.initialized) return;
+	com.wiris.system.JsDOMUtils.ieTouchEvents = new Hash();
+	com.wiris.system.JsDOMUtils.ieTouchEvents.set("touchstart","MSPointerDown");
+	com.wiris.system.JsDOMUtils.ieTouchEvents.set("touchmove","MSPointerMove");
+	com.wiris.system.JsDOMUtils.ieTouchEvents.set("touchend","MSPointerUp");
+	com.wiris.system.JsDOMUtils.initialized = true;
+	com.wiris.system.JsDOMUtils.addEventListener(js.Lib.document,"MSPointerDown",function(e) {
+		com.wiris.system.JsDOMUtils.internetExplorerPointers.set("" + e.pointerId,e);
+	});
+	com.wiris.system.JsDOMUtils.addEventListener(js.Lib.document,"MSPointerUp",function(e) {
+		com.wiris.system.JsDOMUtils.internetExplorerPointers = new Hash();
+	});
+	com.wiris.system.JsDOMUtils.addEventListener(js.Lib.document,"scroll",function(e) {
+		com.wiris.system.JsDOMUtils.internetExplorerPointers = new Hash();
+	});
+	var touched = false;
+	var triggerEvents = function(listeners) {
+		var i = HxOverrides.iter(listeners);
+		while(i.hasNext()) {
+			var callbackFunction = i.next();
+			callbackFunction();
+		}
+	};
+	com.wiris.system.JsDOMUtils.addEventListener(js.Lib.document,"touchstart",function(e) {
+		if(!com.wiris.system.JsDOMUtils.browser.touchable) {
+			com.wiris.system.JsDOMUtils.browser.touchable = true;
+			triggerEvents(com.wiris.system.JsDOMUtils.touchDeviceListeners);
+		}
+		touched = true;
+	});
+	var onTouchEnd = function(e) {
+		if(!com.wiris.system.JsDOMUtils.browser.touchable) {
+			com.wiris.system.JsDOMUtils.browser.touchable = true;
+			triggerEvents(com.wiris.system.JsDOMUtils.touchDeviceListeners);
+		}
+		touched = true;
+		setTimeout(function() {
+			touched = false;
+		},500);
+	};
+	com.wiris.system.JsDOMUtils.addEventListener(js.Lib.document,"touchend",onTouchEnd);
+	com.wiris.system.JsDOMUtils.addEventListener(js.Lib.document,"touchleave",onTouchEnd);
+	com.wiris.system.JsDOMUtils.addEventListener(js.Lib.document,"touchcancel",onTouchEnd);
+	com.wiris.system.JsDOMUtils.addEventListener(js.Lib.document,"mousemove",function(e) {
+		if(!touched) {
+			if(com.wiris.system.JsDOMUtils.browser.touchable) {
+				com.wiris.system.JsDOMUtils.browser.touchable = false;
+				triggerEvents(com.wiris.system.JsDOMUtils.mouseDeviceListeners);
+			}
+		}
+	});
+}
+com.wiris.system.JsDOMUtils.addEventListener = function(element,eventName,handler) {
+	return com.wiris.system.JsDOMUtils.addEventListenerImpl(element,eventName,handler,false);
+}
+com.wiris.system.JsDOMUtils.addEventListenerImpl = function(element,eventName,handler,useCapture) {
+	if(navigator.msPointerEnabled && com.wiris.system.JsDOMUtils.ieTouchEvents.exists(eventName)) {
+		eventName = com.wiris.system.JsDOMUtils.ieTouchEvents.get(eventName);
+		return com.wiris.system.JsDOMUtils.addEventListenerImpl(element,eventName,function(e) {
+			if(e.pointerType == "touch") {
+				if(eventName == "MSPointerUp") com.wiris.system.JsDOMUtils.internetExplorerPointers.remove("" + e.pointerId); else com.wiris.system.JsDOMUtils.internetExplorerPointers.set("" + e.pointerId,e);
+				e.touches = new Array();
+				var i = com.wiris.system.JsDOMUtils.internetExplorerPointers.iterator();
+				while(i.hasNext()) e.touches.push(i.next());
+				handler(e);
+			}
+		},useCapture);
+	}
+	if(eventName == "touchhold" && com.wiris.system.JsDOMUtils.browser.isTouchable()) {
+		var timeout = null;
+		var startX = -1;
+		var startY = -1;
+		var descriptor = com.wiris.system.JsDOMUtils.addEventListenerImpl(element,"touchstart",function(e) {
+			touching = true;
+			startX = e.touches[0].clientX;
+			startY = e.touches[0].clientY;
+			timeout = setTimeout(function() {
+				timeout = null;
+				handler(e);
+			},500);
+		},useCapture);
+		descriptor.subDescriptors.push(com.wiris.system.JsDOMUtils.addEventListenerImpl(element,"touchmove",function(e) {
+			if(timeout != null) {
+				if(Math.abs(e.touches[0].clientX - startX) > com.wiris.system.JsDOMUtils.TOUCHHOLD_MOVE_MARGIN || Math.abs(e.touches[0].clientY - startY) > com.wiris.system.JsDOMUtils.TOUCHHOLD_MOVE_MARGIN) {
+					clearTimeout(timeout);
+					timeout = null;
+				} else com.wiris.system.JsDOMUtils.cancelEvent(e);
+			}
+		},useCapture));
+		descriptor.subDescriptors.push(com.wiris.system.JsDOMUtils.addEventListenerImpl(element,"touchend",function(e) {
+			if(timeout != null) {
+				clearTimeout(timeout);
+				timeout = null;
+			}
+		},useCapture));
+		return descriptor;
+	}
+	var descriptor = { };
+	descriptor.element = element;
+	descriptor.eventName = eventName;
+	descriptor.handler = handler;
+	descriptor.useCapture = useCapture;
+	descriptor.subDescriptors = new Array();
+	if(eventName == "dblclick") {
+		var event = null;
+		var touching = false;
+		var firstClickTimestamp = null;
+		descriptor.subDescriptors.push(com.wiris.system.JsDOMUtils.addEventListenerImpl(element,"touchstart",function(e) {
+			touching = true;
+			event = e;
+		},useCapture));
+		descriptor.subDescriptors.push(com.wiris.system.JsDOMUtils.addEventListenerImpl(element,"touchmove",function(e) {
+			touching = false;
+		},useCapture));
+		descriptor.subDescriptors.push(com.wiris.system.JsDOMUtils.addEventListenerImpl(element,"touchend",function(e) {
+			if(touching) {
+				touching = false;
+				var currentTimestamp = new Date().getTime();
+				if(firstClickTimestamp == null || currentTimestamp > firstClickTimestamp + 500) firstClickTimestamp = currentTimestamp; else {
+					event._wrs_dealAsTouch = true;
+					handler(e);
+				}
+			}
+		},useCapture));
+	}
+	if(element.attachEvent) element.attachEvent("on" + eventName,function() {
+		handler(window.event);
+	}); else {
+		var options = { };
+		options.capture = useCapture;
+		if(eventName == "touchmove") options.passive = false;
+		element.addEventListener(eventName,handler,options);
+	}
+	return descriptor;
+}
+com.wiris.system.JsDOMUtils.removeEventListener = function(descriptor) {
+	if(com.wiris.system.JsDOMUtils.browser.isIE() && descriptor.element.detachEvent) descriptor.element.detachEvent("on" + Std.string(descriptor.eventName),descriptor.handler); else descriptor.element.removeEventListener(descriptor.eventName,descriptor.handler,descriptor.useCapture);
+	var i = $iterator(descriptor.subDescriptors)();
+	while(i.hasNext()) com.wiris.system.JsDOMUtils.removeEventListener(i.next());
+}
+com.wiris.system.JsDOMUtils.cancelEvent = function(e) {
+	if(e.preventDefault) e.preventDefault(); else e.returnValue = false;
+}
+com.wiris.system.JsDOMUtils.fireEvent = function(element,eventName) {
+	var event;
+	if(document.createEvent) {
+		event = document.createEvent("HTMLEvents");
+		event.initEvent(eventName,true,true);
+		event.eventName = eventName;
+		element.dispatchEvent(event);
+	} else {
+		event = document.createEventObject();
+		event.eventType = eventName;
+		event.eventName = eventName;
+		element.fireEvent("on" + eventName,event);
+	}
+}
+com.wiris.system.JsDOMUtils.getComputedStyle = function(element) {
+	if(element.currentStyle) return element.currentStyle;
+	return document.defaultView.getComputedStyle(element,null);
+}
+com.wiris.system.JsDOMUtils.getComputedStyleProperty = function(element,name) {
+	var value;
+	if(document.defaultView && document.defaultView.getComputedStyle) {
+		var computedStyle = document.defaultView.getComputedStyle(element,null);
+		value = computedStyle == null?null:computedStyle.getPropertyValue(name);
+	} else if(com.wiris.system.JsDOMUtils.browser.isIE() && element.currentStyle) {
+		var camelName = com.wiris.system.JsDOMUtils.camelize(name);
+		value = element.currentStyle[camelName];
+		if(value != null && value.length > 0 && camelName != "zoom") {
+			var firstChar = HxOverrides.cca(value,0);
+			if(firstChar >= 48 && firstChar <= 57 && !StringTools.endsWith(value,"px")) {
+				var originalLeft = element.style.left;
+				var originalRuntimeLeft = element.runtimeStyle?element.runtimeStyle.left:null;
+				if(originalRuntimeLeft != null) element.runtimeStyle.left = element.currentStyle.left;
+				element.style.left = camelName == "fontSize"?"1em":value;
+				value = element.style.pixelLeft + "px";
+				element.style.left = originalLeft;
+				if(originalRuntimeLeft != null) element.runtimeStyle.left = originalRuntimeLeft;
+			}
+		}
+	} else value = element.style[com.wiris.system.JsDOMUtils.camelize(name)];
+	return value;
+}
+com.wiris.system.JsDOMUtils.getPixelRatio = function() {
+	var context = document.createElement("canvas").getContext("2d");
+	var dpr = window.devicePixelRatio || 1;
+	var bsr = context.webkitBackingStorePixelRatio || context.mozBackingStorePixelRatio || context.msBackingStorePixelRatio || context.oBackingStorePixelRatio || context.backingStorePixelRatio || 1;
+	return dpr / bsr;
+}
+com.wiris.system.JsDOMUtils.camelize = function(str) {
+	var start = 0;
+	var pos;
+	var sb = new StringBuf();
+	while((pos = str.indexOf("-",start)) != -1) {
+		sb.b += Std.string(HxOverrides.substr(str,start,pos - start));
+		sb.b += Std.string(str.charAt(pos + 1).toUpperCase());
+		start = pos + 2;
+	}
+	sb.b += Std.string(HxOverrides.substr(str,start,null));
+	return sb.b;
+}
+com.wiris.system.JsDOMUtils.getElementsByClassName = function(parent,className,recursive) {
+	var returnValue = new Array();
+	var _g1 = 0, _g = parent.childNodes.length;
+	while(_g1 < _g) {
+		var i = _g1++;
+		if(com.wiris.system.JsDOMUtils.hasClass(parent.childNodes[i],className)) returnValue.push(parent.childNodes[i]);
+		if(recursive) returnValue = returnValue.concat(com.wiris.system.JsDOMUtils.getElementsByClassName(parent.childNodes[i],className,true));
+	}
+	return returnValue;
+}
+com.wiris.system.JsDOMUtils.getEventTarget = function(event) {
+	if(event.srcElement) return event.srcElement;
+	return event.target;
+}
+com.wiris.system.JsDOMUtils.getLeft = function(element) {
+	return element.getBoundingClientRect().left;
+}
+com.wiris.system.JsDOMUtils.getRelativeLeft = function(element,parent) {
+	if(parent == null) return com.wiris.system.JsDOMUtils.getLeft(element);
+	return com.wiris.system.JsDOMUtils.getLeft(element) - com.wiris.system.JsDOMUtils.getLeft(parent);
+}
+com.wiris.system.JsDOMUtils.getTop = function(element) {
+	return element.getBoundingClientRect().top;
+}
+com.wiris.system.JsDOMUtils.getRelativeTop = function(element,parent) {
+	if(parent == null) return com.wiris.system.JsDOMUtils.getTop(element);
+	return com.wiris.system.JsDOMUtils.getTop(element) - com.wiris.system.JsDOMUtils.getTop(parent);
+}
+com.wiris.system.JsDOMUtils.getWindowScroll = function() {
+	var scroll = new Array();
+	if(js.Lib.window.pageYOffset == undefined) {
+		scroll[0] = js.Lib.document.documentElement.scrollLeft;
+		scroll[1] = js.Lib.document.documentElement.scrollTop;
+	} else {
+		scroll[0] = js.Lib.window.pageXOffset;
+		scroll[1] = js.Lib.window.pageYOffset;
+	}
+	return scroll;
+}
+com.wiris.system.JsDOMUtils.setWindowScroll = function(scroll) {
+	var x = scroll[0] | 0;
+	var y = scroll[1] | 0;
+	js.Lib.window.scrollTo(x,y);
+}
+com.wiris.system.JsDOMUtils.isLeftBidiAware = function(keyCode,rtl) {
+	return keyCode == 37 && !rtl || keyCode == 39 && rtl;
+}
+com.wiris.system.JsDOMUtils.getFirstDisplayedChild = function(parent) {
+	var child = parent != null?parent.firstChild:parent;
+	while(child != null) {
+		if(com.wiris.system.JsDOMUtils.getComputedStyleProperty(child,"display") != "none") return child;
+		child = child.nextSibling;
+	}
+	return null;
+}
+com.wiris.system.JsDOMUtils.isDescendant = function(parent,possibleDescendant) {
+	if(parent == null || possibleDescendant == null) return false;
+	while(possibleDescendant.parentNode != null) {
+		if(possibleDescendant.parentNode == parent) return true;
+		possibleDescendant = possibleDescendant.parentNode;
+	}
+	return false;
+}
+com.wiris.system.JsDOMUtils.parseDimension = function(x) {
+	return x < 0 || x == null?0:x;
+}
+com.wiris.system.JsDOMUtils.removeChildren = function(element) {
+	while(element.firstChild != null) element.removeChild(element.firstChild);
+}
+com.wiris.system.JsDOMUtils.hasClass = function(element,className) {
+	if(element == null || element.className == null || !(element.className.split)) return false;
+	var classes = element.className.split(" ");
+	var i = HxOverrides.iter(classes);
+	while(i.hasNext()) if(i.next() == className) return true;
+	return false;
+}
+com.wiris.system.JsDOMUtils.addClass = function(element,className) {
+	if(element == null) return;
+	if(element.className == "") element.className = className; else if(!com.wiris.system.JsDOMUtils.hasClass(element,className)) element.className += " " + className;
+}
+com.wiris.system.JsDOMUtils.removeClass = function(element,className) {
+	if(element == null || element.className == null || !(element.className.split)) return;
+	var classes = element.className.split(" ");
+	HxOverrides.remove(classes,className);
+	element.className = classes.join(" ");
+}
+com.wiris.system.JsDOMUtils.toggleClass = function(element,className) {
+	if(com.wiris.system.JsDOMUtils.hasClass(element,className)) com.wiris.system.JsDOMUtils.removeClass(element,className); else com.wiris.system.JsDOMUtils.addClass(element,className);
+}
+com.wiris.system.JsDOMUtils.activateClass = function(element,className) {
+	if(!com.wiris.system.JsDOMUtils.hasClass(element,className)) com.wiris.system.JsDOMUtils.addClass(element,className);
+}
+com.wiris.system.JsDOMUtils.setCaretPosition = function(element,position,end) {
+	if(element.setSelectionRange) element.setSelectionRange(position,end); else if(element.createTextRange) {
+		var range = element.createTextRange();
+		range.collapse(true);
+		range.moveStart("character",position);
+		range.moveEnd("character",end);
+		range.select();
+	}
+}
+com.wiris.system.JsDOMUtils.getSelectionBounds = function(element) {
+	var bounds = new Array();
+	if(element.selectionStart != null) {
+		bounds[0] = element.selectionStart;
+		bounds[1] = element.selectionEnd;
+		return bounds;
+	}
+	var range = document.selection.createRange();
+	if(range && range.parentElement() == element) {
+		var length = element.value.length;
+		var normalizedValue = element.value.split("\r\n").join("\n");
+		var textInputRange = element.createTextRange();
+		textInputRange.moveToBookmark(range.getBookmark());
+		var endRange = element.createTextRange();
+		endRange.collapse(false);
+		if(textInputRange.compareEndPoints("StartToEnd",endRange) > -1) bounds[0] = bounds[1] = length; else {
+			bounds[0] = -textInputRange.moveStart("character",-length);
+			bounds[0] += normalizedValue.slice(0,bounds[0]).split("\n").length - 1;
+			if(textInputRange.compareEndPoints("EndToEnd",endRange) > -1) bounds[1] = length; else {
+				bounds[1] = -textInputRange.moveEnd("character",-length);
+				bounds[1] += normalizedValue.slice(0,bounds[1]).split("\n").length - 1;
+			}
+		}
+		return bounds;
+	}
+	return null;
+}
+com.wiris.system.JsDOMUtils.getMousePosition = function(target,e) {
+	if(e._wrs_dealAsTouch) return com.wiris.system.JsDOMUtils.getTouchPosition(target,e.touches[0]);
+	var elementScroll = new Array();
+	elementScroll[0] = target.scrollLeft;
+	elementScroll[1] = target.scrollTop;
+	return com.wiris.system.JsDOMUtils.getMousePositionImpl(target,e,elementScroll,0);
+}
+com.wiris.system.JsDOMUtils.getMousePositionImpl = function(target,e,elementScroll,border) {
+	var position = new Array();
+	position[0] = e.clientX - com.wiris.system.JsDOMUtils.getLeft(target) - border + elementScroll[0];
+	position[1] = e.clientY - com.wiris.system.JsDOMUtils.getTop(target) - border + elementScroll[1];
+	return position;
+}
+com.wiris.system.JsDOMUtils.getMousePagePosition = function(target,e) {
+	var pagePosition = new Array();
+	pagePosition[0] = e.pageX;
+	pagePosition[1] = e.pageY;
+	return pagePosition;
+}
+com.wiris.system.JsDOMUtils.getScrollPosition = function(target,e) {
+	var elementScroll = new Array();
+	elementScroll[0] = target.scrollLeft;
+	elementScroll[1] = target.scrollTop;
+	return elementScroll;
+}
+com.wiris.system.JsDOMUtils.inFixedParent = function(element) {
+	while(element != null) {
+		if(com.wiris.system.JsDOMUtils.getComputedStyleProperty(element,"position") == "fixed") return true;
+		element = element.offsetParent;
+	}
+	return false;
+}
+com.wiris.system.JsDOMUtils.getTouchPosition = function(target,touch) {
+	var elementScroll = new Array();
+	elementScroll[0] = target.scrollLeft;
+	elementScroll[1] = target.scrollTop;
+	return com.wiris.system.JsDOMUtils.getTouchPositionImpl(target,touch,elementScroll,0);
+}
+com.wiris.system.JsDOMUtils.getTouchPositionImpl = function(target,touch,elementScroll,border) {
+	var position = new Array();
+	position[0] = touch.clientX - com.wiris.system.JsDOMUtils.getLeft(target) - border + elementScroll[0];
+	position[1] = touch.clientY - com.wiris.system.JsDOMUtils.getTop(target) - border + elementScroll[1];
+	return position;
+}
+com.wiris.system.JsDOMUtils.getStandardButton = function(e) {
+	if(e.touches) return 1;
+	if("button" in e) return e.button + 1;
+	return 0;
+}
+com.wiris.system.JsDOMUtils.vibrate = function(milliseconds) {
+	if(navigator.vibrate) navigator.vibrate(milliseconds);
+}
+com.wiris.system.JsDOMUtils.onTouchDeviceDetected = function(callbackFunction) {
+	com.wiris.system.JsDOMUtils.init();
+	com.wiris.system.JsDOMUtils.touchDeviceListeners.push(callbackFunction);
+}
+com.wiris.system.JsDOMUtils.onMouseDeviceDetected = function(callbackFunction) {
+	com.wiris.system.JsDOMUtils.init();
+	com.wiris.system.JsDOMUtils.mouseDeviceListeners.push(callbackFunction);
+}
+com.wiris.system.JsDOMUtils.findScriptElement = function(reg) {
+	var scripts = js.Lib.document.getElementsByTagName("script");
+	var n = scripts.length;
+	var i = 0;
+	while(i < n) {
+		var src = scripts[i].getAttribute("src");
+		if(reg.match(src)) return scripts[i];
+		++i;
+	}
+	return null;
+}
+com.wiris.system.JsDOMUtils.rewriteDefaultPaths = function(contextPath) {
+	if(window.com.wiris.js.defaultServicePath != null && StringTools.startsWith(window.com.wiris.js.defaultServicePath,"http://")) {
+		var protocol = js.Lib.window.location.protocol;
+		var defaultServicePathWithoutProtocol = window.com.wiris.js.defaultServicePath.substr("http:".length);
+		var reg = new EReg("(http:|https:)" + defaultServicePathWithoutProtocol + "/" + contextPath,"");
+		if(com.wiris.system.JsDOMUtils.findScriptElement(reg) != null) protocol = reg.matched(1);
+		if(protocol == "https:") {
+			window.com.wiris.js.defaultServicePath = "https:" + defaultServicePathWithoutProtocol;
+			if(window.com.wiris.js.defaultBasePath != null) window.com.wiris.js.defaultBasePath = "https:" + window.com.wiris.js.defaultBasePath.substr("http:".length);
+		}
+	}
+}
+com.wiris.system.JsDOMUtils.createCSSRules = function(selector,rules) {
+	var style = js.Lib.document.createElement("style");
+	style.type = "text/css";
+	js.Lib.document.getElementsByTagName("head")[0].appendChild(style);
+	if(style.sheet != null && style.sheet.insertRule != null) style.sheet.insertRule(selector + "{" + rules + "}",0); else if(style.styleSheet != null) style.styleSheet.addRule(selector,rules); else if(style.sheet != null) style.sheet.addRule(selector,rules);
+}
+com.wiris.system.JsDOMUtils.execCommand = function(command) {
+	return document.execCommand(command);
+}
+com.wiris.system.JsDOMUtils.findServicePath = function(scriptName) {
+	var scriptTags = js.Lib.document.getElementsByTagName("script");
+	var servicePath = null;
+	var _g1 = 0, _g = scriptTags.length;
+	while(_g1 < _g) {
+		var i = _g1++;
+		var src = scriptTags[i].src;
+		var j = src.lastIndexOf("/" + scriptName);
+		if(j >= 0) servicePath = HxOverrides.substr(src,0,j); else if(src == scriptName) servicePath = "";
+	}
+	if(servicePath != null && StringTools.startsWith(servicePath,"http://") && js.Lib.window.location.protocol == "https:") servicePath = "https://" + HxOverrides.substr(servicePath,"http://".length,null);
+	return servicePath;
+}
+com.wiris.system.JsDOMUtils.addScript = function(d,win,url) {
+	if(win[url] == null) {
+		win[url] = true;
+		var script = d.createElement("script");
+		script.setAttribute("type","text/javascript");
+		script.setAttribute("src",url);
+		d.getElementsByTagName("head")[0].appendChild(script);
+		return script;
+	}
+	return null;
+}
+com.wiris.system.JsDOMUtils.addStylesheet = function(d,url) {
+	if(!com.wiris.system.JsDOMUtils.existsCSS(d,url)) {
+		var link = d.createElement("link");
+		link.setAttribute("rel","stylesheet");
+		link.setAttribute("type","text/css");
+		link.setAttribute("href",url);
+		d.getElementsByTagName("head")[0].appendChild(link);
+	}
+}
+com.wiris.system.JsDOMUtils.loadTextFile = function(elem,func) {
+	com.wiris.system.JsDOMUtils.loadFileImpl(elem,func);
+}
+com.wiris.system.JsDOMUtils.loadPNGImageFile = function(elem,func) {
+	com.wiris.system.JsDOMUtils.loadFileImpl(elem,func,true,"image/png");
+}
+com.wiris.system.JsDOMUtils.loadFileImpl = function(elem,func,asDataURL,accept) {
+	if(asDataURL == null) asDataURL = false;
+	var w = js.Lib.window;
+	if(w.File && w.FileReader && w.FileList && w.Blob) {
+		var d = elem.ownerDocument;
+		var fileInput = d.createElement("input");
+		fileInput.setAttribute("name","data");
+		fileInput.setAttribute("type","file");
+		fileInput.setAttribute("style","display: none;");
+		if(accept != null) fileInput.setAttribute("accept",accept);
+		elem.appendChild(fileInput);
+		com.wiris.system.JsDOMUtils.init();
+		com.wiris.system.JsDOMUtils.addEventListener(fileInput,"change",function(e) {
+			if(fileInput.files.length) {
+				var file = fileInput.files[0];
+				var reader = new FileReader();
+				reader.onload = function(le) {
+					func(le.target.result);
+				};
+				if(asDataURL) reader.readAsDataURL(file); else reader.readAsText(file);
+			}
+			elem.removeChild(fileInput);
+		});
+		fileInput.click();
+	} else throw "Browser incompatible with JavaScript File API.";
+}
+com.wiris.system.JsDOMUtils.saveTextFile = function(elem,filename,filetype,contents) {
+	var d = elem.ownerDocument;
+	var w = js.Lib.window;
+	if(w.Blob) {
+		var blob = new Blob([contents], {'type': filetype});
+		var a = d.createElement("a");
+		if('download' in a && w.URL) {
+			a.href = w.URL.createObjectURL(blob);
+			a.download = filename;
+			elem.appendChild(a);
+			a.click();
+			elem.removeChild(a);
+			return;
+		}
+	}
+	throw "Browser incompatible with HTML object download anchors.";
+}
+com.wiris.system.JsDOMUtils.trapFocus = function(disabledFocusContainer,focusableContainer) {
+	var lastScroll = com.wiris.system.JsDOMUtils.getWindowScroll();
+	var previousFocused = focusableContainer;
+	var descriptor = com.wiris.system.JsDOMUtils.addEventListener(js.Lib.document,"focusin",function(e) {
+		previousFocused = com.wiris.system.JsDOMUtils.getEventTarget(e);
+	});
+	descriptor.subDescriptors.push(com.wiris.system.JsDOMUtils.addEventListener(disabledFocusContainer,"focusin",function(e) {
+		var focusedElement = com.wiris.system.JsDOMUtils.getEventTarget(e);
+		if(!com.wiris.system.JsDOMUtils.isDescendant(focusableContainer,focusedElement)) {
+			com.wiris.system.JsDOMUtils.setWindowScroll(lastScroll);
+			var focusableElements = com.wiris.system.JsDOMUtils.getFocusableElements(js.Lib.document.body);
+			var focusedElementIndex = 0;
+			while(focusedElementIndex < focusableElements.length) {
+				if(focusableElements[focusedElementIndex] == focusedElement) break;
+				++focusedElementIndex;
+			}
+			var direction = previousFocused == focusedElement || com.wiris.system.JsDOMUtils.elementIsBefore(previousFocused,focusedElement)?1:-1;
+			var alternative = com.wiris.system.JsDOMUtils.findFocusableAlternative(focusableElements,disabledFocusContainer,focusableContainer,focusedElementIndex,direction);
+			if(alternative != null) alternative.focus();
+			e.stopPropagation();
+		} else lastScroll = com.wiris.system.JsDOMUtils.getWindowScroll();
+	}));
+	var focusedElement = js.Lib.document.activeElement;
+	if(!com.wiris.system.JsDOMUtils.isDescendant(focusableContainer,focusedElement)) {
+		com.wiris.system.JsDOMUtils.setWindowScroll(lastScroll);
+		var focusableElements = com.wiris.system.JsDOMUtils.getFocusableElements(js.Lib.document.body);
+		var focusedElementIndex = 0;
+		while(focusedElementIndex < focusableElements.length) {
+			if(focusableElements[focusedElementIndex] == focusedElement) break;
+			++focusedElementIndex;
+		}
+		var alternative = com.wiris.system.JsDOMUtils.findFocusableAlternative(focusableElements,disabledFocusContainer,focusableContainer,focusedElementIndex,1);
+		if(alternative != null) alternative.focus();
+	}
+	return descriptor;
+}
+com.wiris.system.JsDOMUtils.findFocusableAlternative = function(focusableElements,disabledFocusContainer,focusableContainer,focusedElementIndex,direction,stopOnIndex) {
+	if(stopOnIndex == null) stopOnIndex = -100;
+	if(focusedElementIndex == 0 && stopOnIndex == -100 && direction == -1) return com.wiris.system.JsDOMUtils.findFocusableAlternative(focusableElements,disabledFocusContainer,focusableContainer,0,1,focusableElements.length - 1);
+	var originalFocusedElementIndex = focusedElementIndex;
+	focusedElementIndex += direction;
+	while(focusedElementIndex >= 0 && focusedElementIndex < focusableElements.length && com.wiris.system.JsDOMUtils.isDescendant(disabledFocusContainer,focusableElements[focusedElementIndex]) && (!com.wiris.system.JsDOMUtils.isDescendant(focusableContainer,focusableElements[focusedElementIndex]) || focusableElements[focusedElementIndex].offsetParent == null)) {
+		focusedElementIndex += direction;
+		if(focusedElementIndex == stopOnIndex) return null;
+	}
+	if(focusedElementIndex < 0) return com.wiris.system.JsDOMUtils.findFocusableAlternative(focusableElements,disabledFocusContainer,focusableContainer,focusableElements.length - 1,-1,originalFocusedElementIndex);
+	if(focusedElementIndex >= focusableElements.length) return com.wiris.system.JsDOMUtils.findFocusableAlternative(focusableElements,disabledFocusContainer,focusableContainer,0,1,originalFocusedElementIndex);
+	return focusableElements[focusedElementIndex];
+}
+com.wiris.system.JsDOMUtils.untrapFocus = function(descriptor) {
+	com.wiris.system.JsDOMUtils.removeEventListener(descriptor);
+}
+com.wiris.system.JsDOMUtils.getFocusableElements = function(container) {
+	var elements = container.querySelectorAll("button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])");
+	var focusableElements = new Array();
+	var i = 0;
+	while(i < elements.length) {
+		if(com.wiris.system.JsDOMUtils.getComputedStyleProperty(elements[i],"display") != "none" && com.wiris.system.JsDOMUtils.getComputedStyleProperty(elements[i],"visibility") != "hidden") focusableElements.push(elements[i]);
+		++i;
+	}
+	return focusableElements;
+}
+com.wiris.system.JsDOMUtils.elementIsBefore = function(elementA,elementB) {
+	if(elementA == elementB) throw "Trying to compare the same element.";
+	var pathA = com.wiris.system.JsDOMUtils.getElementPath(elementA);
+	var pathB = com.wiris.system.JsDOMUtils.getElementPath(elementB);
+	var i = 1;
+	var n = Math.min(pathA.length,pathB.length) | 0;
+	while(i < n) {
+		if(pathA[i] != pathB[i]) return com.wiris.system.JsDOMUtils.getElementChildIndex(pathA[i]) < com.wiris.system.JsDOMUtils.getElementChildIndex(pathB[i]);
+		++i;
+	}
+	return false;
+}
+com.wiris.system.JsDOMUtils.elementIsVisible = function(element) {
+	return !!(element.offsetWidth || element.offsetHeight || element.getClientRects().length);
+}
+com.wiris.system.JsDOMUtils.getElementPath = function(element) {
+	var path = new Array();
+	while(element != null) {
+		path.splice(0,0,element);
+		element = element.parentNode;
+	}
+	return path;
+}
+com.wiris.system.JsDOMUtils.getElementChildIndex = function(element) {
+	if(element.parentNode == null) return -1;
+	var i = 0;
+	while(i < element.parentNode.childNodes.length) {
+		if(element.parentNode.childNodes[i] == element) return i;
+		++i;
+	}
+	return -1;
+}
+com.wiris.system.JsDOMUtils.existsCSS = function(document,name) {
+	var head = document.getElementsByTagName("head")[0];
+	var links = head.getElementsByTagName("link");
+	var i = 0;
+	while(i < links.length) {
+		var link = links[i++];
+		var type = link.getAttribute("type");
+		if(type == "text/css") {
+			var href = link.getAttribute("href");
+			if(href.indexOf(name) > 0) return true;
+		}
+	}
+	return false;
+}
+com.wiris.system.JsDOMUtils.trimDuplicatedCSS = function(document,validSource,name) {
+	var head = document.getElementsByTagName("head")[0];
+	var links = head.getElementsByTagName("link");
+	var i = 0;
+	var keep = -1;
+	while(i < links.length) {
+		var link = links[i];
+		var type = link.getAttribute("type");
+		if(type == "text/css") {
+			var href = link.getAttribute("href");
+			var index = href.indexOf(validSource);
+			if(keep < 0 && index >= 0 && href.indexOf(name,index + 1) >= 0) {
+				keep = i;
+				i = -1;
+			} else if(keep >= 0 && keep != i && href.indexOf(name) >= 0) {
+				head.removeChild(link);
+				if(i-- < keep) keep--;
+			}
+		}
+		i++;
+	}
+}
+var haxe = haxe || {}
+haxe.Http = $hxClasses["haxe.Http"] = function(url) {
+	this.url = url;
+	this.headers = new Hash();
+	this.params = new Hash();
+	this.async = true;
+};
+haxe.Http.__name__ = ["haxe","Http"];
+haxe.Http.requestUrl = function(url) {
+	var h = new haxe.Http(url);
+	h.async = false;
+	var r = null;
+	h.onData = function(d) {
+		r = d;
+	};
+	h.onError = function(e) {
+		throw e;
+	};
+	h.request(false);
+	return r;
+}
+haxe.Http.prototype = {
+	onStatus: function(status) {
+	}
+	,onError: function(msg) {
+	}
+	,onData: function(data) {
+	}
+	,request: function(post) {
+		var me = this;
+		var r = new js.XMLHttpRequest();
+		var onreadystatechange = function() {
+			if(r.readyState != 4) return;
+			var s = (function($this) {
+				var $r;
+				try {
+					$r = r.status;
+				} catch( e ) {
+					$r = null;
+				}
+				return $r;
+			}(this));
+			if(s == undefined) s = null;
+			if(s != null) me.onStatus(s);
+			if(s != null && s >= 200 && s < 400) me.onData(r.responseText); else switch(s) {
+			case null: case undefined:
+				me.onError("Failed to connect or resolve host");
+				break;
+			case 12029:
+				me.onError("Failed to connect to host");
+				break;
+			case 12007:
+				me.onError("Unknown host");
+				break;
+			default:
+				me.onError("Http Error #" + r.status);
+			}
+		};
+		if(this.async) r.onreadystatechange = onreadystatechange;
+		var uri = this.postData;
+		if(uri != null) post = true; else {
+			var $it0 = this.params.keys();
+			while( $it0.hasNext() ) {
+				var p = $it0.next();
+				if(uri == null) uri = ""; else uri += "&";
+				uri += StringTools.urlEncode(p) + "=" + StringTools.urlEncode(this.params.get(p));
+			}
+		}
+		try {
+			if(post) r.open("POST",this.url,this.async); else if(uri != null) {
+				var question = this.url.split("?").length <= 1;
+				r.open("GET",this.url + (question?"?":"&") + uri,this.async);
+				uri = null;
+			} else r.open("GET",this.url,this.async);
+		} catch( e ) {
+			this.onError(e.toString());
+			return;
+		}
+		if(this.headers.get("Content-Type") == null && post && this.postData == null) r.setRequestHeader("Content-Type","application/x-www-form-urlencoded");
+		var $it1 = this.headers.keys();
+		while( $it1.hasNext() ) {
+			var h = $it1.next();
+			r.setRequestHeader(h,this.headers.get(h));
+		}
+		r.send(uri);
+		if(!this.async) onreadystatechange();
+	}
+	,setPostData: function(data) {
+		this.postData = data;
+	}
+	,setParameter: function(param,value) {
+		this.params.set(param,value);
+	}
+	,setHeader: function(header,value) {
+		this.headers.set(header,value);
+	}
+	,params: null
+	,headers: null
+	,postData: null
+	,async: null
+	,url: null
+	,__class__: haxe.Http
+}
+haxe.Json = $hxClasses["haxe.Json"] = function() {
+};
+haxe.Json.__name__ = ["haxe","Json"];
+haxe.Json.parse = function(text) {
+	return new haxe.Json().doParse(text);
+}
+haxe.Json.stringify = function(value) {
+	return new haxe.Json().toString(value);
+}
+haxe.Json.prototype = {
+	parseString: function() {
+		var start = this.pos;
+		var buf = new StringBuf();
+		while(true) {
+			var c = this.str.charCodeAt(this.pos++);
+			if(c == 34) break;
+			if(c == 92) {
+				buf.b += HxOverrides.substr(this.str,start,this.pos - start - 1);
+				c = this.str.charCodeAt(this.pos++);
+				switch(c) {
+				case 114:
+					buf.b += String.fromCharCode(13);
+					break;
+				case 110:
+					buf.b += String.fromCharCode(10);
+					break;
+				case 116:
+					buf.b += String.fromCharCode(9);
+					break;
+				case 98:
+					buf.b += String.fromCharCode(8);
+					break;
+				case 102:
+					buf.b += String.fromCharCode(12);
+					break;
+				case 47:case 92:case 34:
+					buf.b += String.fromCharCode(c);
+					break;
+				case 117:
+					var uc = Std.parseInt("0x" + HxOverrides.substr(this.str,this.pos,4));
+					this.pos += 4;
+					buf.b += String.fromCharCode(uc);
+					break;
+				default:
+					throw "Invalid escape sequence \\" + String.fromCharCode(c) + " at position " + (this.pos - 1);
+				}
+				start = this.pos;
+			} else if(c != c) throw "Unclosed string";
+		}
+		buf.b += HxOverrides.substr(this.str,start,this.pos - start - 1);
+		return buf.b;
+	}
+	,parseRec: function() {
+		while(true) {
+			var c = this.str.charCodeAt(this.pos++);
+			switch(c) {
+			case 32:case 13:case 10:case 9:
+				break;
+			case 123:
+				var obj = { }, field = null, comma = null;
+				while(true) {
+					var c1 = this.str.charCodeAt(this.pos++);
+					switch(c1) {
+					case 32:case 13:case 10:case 9:
+						break;
+					case 125:
+						if(field != null || comma == false) this.invalidChar();
+						return obj;
+					case 58:
+						if(field == null) this.invalidChar();
+						obj[field] = this.parseRec();
+						field = null;
+						comma = true;
+						break;
+					case 44:
+						if(comma) comma = false; else this.invalidChar();
+						break;
+					case 34:
+						if(comma) this.invalidChar();
+						field = this.parseString();
+						break;
+					default:
+						this.invalidChar();
+					}
+				}
+				break;
+			case 91:
+				var arr = [], comma = null;
+				while(true) {
+					var c1 = this.str.charCodeAt(this.pos++);
+					switch(c1) {
+					case 32:case 13:case 10:case 9:
+						break;
+					case 93:
+						if(comma == false) this.invalidChar();
+						return arr;
+					case 44:
+						if(comma) comma = false; else this.invalidChar();
+						break;
+					default:
+						if(comma) this.invalidChar();
+						this.pos--;
+						arr.push(this.parseRec());
+						comma = true;
+					}
+				}
+				break;
+			case 116:
+				var save = this.pos;
+				if(this.str.charCodeAt(this.pos++) != 114 || this.str.charCodeAt(this.pos++) != 117 || this.str.charCodeAt(this.pos++) != 101) {
+					this.pos = save;
+					this.invalidChar();
+				}
+				return true;
+			case 102:
+				var save = this.pos;
+				if(this.str.charCodeAt(this.pos++) != 97 || this.str.charCodeAt(this.pos++) != 108 || this.str.charCodeAt(this.pos++) != 115 || this.str.charCodeAt(this.pos++) != 101) {
+					this.pos = save;
+					this.invalidChar();
+				}
+				return false;
+			case 110:
+				var save = this.pos;
+				if(this.str.charCodeAt(this.pos++) != 117 || this.str.charCodeAt(this.pos++) != 108 || this.str.charCodeAt(this.pos++) != 108) {
+					this.pos = save;
+					this.invalidChar();
+				}
+				return null;
+			case 34:
+				return this.parseString();
+			case 48:case 49:case 50:case 51:case 52:case 53:case 54:case 55:case 56:case 57:case 45:
+				this.pos--;
+				if(!this.reg_float.match(HxOverrides.substr(this.str,this.pos,null))) throw "Invalid float at position " + this.pos;
+				var v = this.reg_float.matched(0);
+				this.pos += v.length;
+				var f = Std.parseFloat(v);
+				var i = f | 0;
+				return i == f?i:f;
+			default:
+				this.invalidChar();
+			}
+		}
+	}
+	,nextChar: function() {
+		return this.str.charCodeAt(this.pos++);
+	}
+	,invalidChar: function() {
+		this.pos--;
+		throw "Invalid char " + this.str.charCodeAt(this.pos) + " at position " + this.pos;
+	}
+	,doParse: function(str) {
+		this.reg_float = new EReg("^-?(0|[1-9][0-9]*)(\\.[0-9]+)?([eE][+-]?[0-9]+)?","");
+		this.str = str;
+		this.pos = 0;
+		return this.parseRec();
+	}
+	,quote: function(s) {
+		this.buf.b += Std.string("\"");
+		var i = 0;
+		while(true) {
+			var c = s.charCodeAt(i++);
+			if(c != c) break;
+			switch(c) {
+			case 34:
+				this.buf.b += Std.string("\\\"");
+				break;
+			case 92:
+				this.buf.b += Std.string("\\\\");
+				break;
+			case 10:
+				this.buf.b += Std.string("\\n");
+				break;
+			case 13:
+				this.buf.b += Std.string("\\r");
+				break;
+			case 9:
+				this.buf.b += Std.string("\\t");
+				break;
+			case 8:
+				this.buf.b += Std.string("\\b");
+				break;
+			case 12:
+				this.buf.b += Std.string("\\f");
+				break;
+			default:
+				this.buf.b += String.fromCharCode(c);
+			}
+		}
+		this.buf.b += Std.string("\"");
+	}
+	,toStringRec: function(v) {
+		var $e = (Type["typeof"](v));
+		switch( $e[1] ) {
+		case 8:
+			this.buf.b += Std.string("\"???\"");
+			break;
+		case 4:
+			this.objString(v);
+			break;
+		case 1:
+		case 2:
+			this.buf.b += Std.string(v);
+			break;
+		case 5:
+			this.buf.b += Std.string("\"<fun>\"");
+			break;
+		case 6:
+			var c = $e[2];
+			if(c == String) this.quote(v); else if(c == Array) {
+				var v1 = v;
+				this.buf.b += Std.string("[");
+				var len = v1.length;
+				if(len > 0) {
+					this.toStringRec(v1[0]);
+					var i = 1;
+					while(i < len) {
+						this.buf.b += Std.string(",");
+						this.toStringRec(v1[i++]);
+					}
+				}
+				this.buf.b += Std.string("]");
+			} else if(c == Hash) {
+				var v1 = v;
+				var o = { };
+				var $it0 = v1.keys();
+				while( $it0.hasNext() ) {
+					var k = $it0.next();
+					o[k] = v1.get(k);
+				}
+				this.objString(o);
+			} else this.objString(v);
+			break;
+		case 7:
+			var e = $e[2];
+			this.buf.b += Std.string(v[1]);
+			break;
+		case 3:
+			this.buf.b += Std.string(v?"true":"false");
+			break;
+		case 0:
+			this.buf.b += Std.string("null");
+			break;
+		}
+	}
+	,objString: function(v) {
+		this.fieldsString(v,Reflect.fields(v));
+	}
+	,fieldsString: function(v,fields) {
+		var first = true;
+		this.buf.b += Std.string("{");
+		var _g = 0;
+		while(_g < fields.length) {
+			var f = fields[_g];
+			++_g;
+			var value = Reflect.field(v,f);
+			if(Reflect.isFunction(value)) continue;
+			if(first) first = false; else this.buf.b += Std.string(",");
+			this.quote(f);
+			this.buf.b += Std.string(":");
+			this.toStringRec(value);
+		}
+		this.buf.b += Std.string("}");
+	}
+	,toString: function(v) {
+		this.buf = new StringBuf();
+		this.toStringRec(v);
+		return this.buf.b;
+	}
+	,reg_float: null
+	,pos: null
+	,str: null
+	,buf: null
+	,__class__: haxe.Json
+}
+haxe.Log = $hxClasses["haxe.Log"] = function() { }
+haxe.Log.__name__ = ["haxe","Log"];
+haxe.Log.trace = function(v,infos) {
+	js.Boot.__trace(v,infos);
+}
+haxe.Log.clear = function() {
+	js.Boot.__clear_trace();
+}
+haxe.Md5 = $hxClasses["haxe.Md5"] = function() {
+};
+haxe.Md5.__name__ = ["haxe","Md5"];
+haxe.Md5.encode = function(s) {
+	return new haxe.Md5().doEncode(s);
+}
+haxe.Md5.prototype = {
+	doEncode: function(str) {
+		var x = this.str2blks(str);
+		var a = 1732584193;
+		var b = -271733879;
+		var c = -1732584194;
+		var d = 271733878;
+		var step;
+		var i = 0;
+		while(i < x.length) {
+			var olda = a;
+			var oldb = b;
+			var oldc = c;
+			var oldd = d;
+			step = 0;
+			a = this.ff(a,b,c,d,x[i],7,-680876936);
+			d = this.ff(d,a,b,c,x[i + 1],12,-389564586);
+			c = this.ff(c,d,a,b,x[i + 2],17,606105819);
+			b = this.ff(b,c,d,a,x[i + 3],22,-1044525330);
+			a = this.ff(a,b,c,d,x[i + 4],7,-176418897);
+			d = this.ff(d,a,b,c,x[i + 5],12,1200080426);
+			c = this.ff(c,d,a,b,x[i + 6],17,-1473231341);
+			b = this.ff(b,c,d,a,x[i + 7],22,-45705983);
+			a = this.ff(a,b,c,d,x[i + 8],7,1770035416);
+			d = this.ff(d,a,b,c,x[i + 9],12,-1958414417);
+			c = this.ff(c,d,a,b,x[i + 10],17,-42063);
+			b = this.ff(b,c,d,a,x[i + 11],22,-1990404162);
+			a = this.ff(a,b,c,d,x[i + 12],7,1804603682);
+			d = this.ff(d,a,b,c,x[i + 13],12,-40341101);
+			c = this.ff(c,d,a,b,x[i + 14],17,-1502002290);
+			b = this.ff(b,c,d,a,x[i + 15],22,1236535329);
+			a = this.gg(a,b,c,d,x[i + 1],5,-165796510);
+			d = this.gg(d,a,b,c,x[i + 6],9,-1069501632);
+			c = this.gg(c,d,a,b,x[i + 11],14,643717713);
+			b = this.gg(b,c,d,a,x[i],20,-373897302);
+			a = this.gg(a,b,c,d,x[i + 5],5,-701558691);
+			d = this.gg(d,a,b,c,x[i + 10],9,38016083);
+			c = this.gg(c,d,a,b,x[i + 15],14,-660478335);
+			b = this.gg(b,c,d,a,x[i + 4],20,-405537848);
+			a = this.gg(a,b,c,d,x[i + 9],5,568446438);
+			d = this.gg(d,a,b,c,x[i + 14],9,-1019803690);
+			c = this.gg(c,d,a,b,x[i + 3],14,-187363961);
+			b = this.gg(b,c,d,a,x[i + 8],20,1163531501);
+			a = this.gg(a,b,c,d,x[i + 13],5,-1444681467);
+			d = this.gg(d,a,b,c,x[i + 2],9,-51403784);
+			c = this.gg(c,d,a,b,x[i + 7],14,1735328473);
+			b = this.gg(b,c,d,a,x[i + 12],20,-1926607734);
+			a = this.hh(a,b,c,d,x[i + 5],4,-378558);
+			d = this.hh(d,a,b,c,x[i + 8],11,-2022574463);
+			c = this.hh(c,d,a,b,x[i + 11],16,1839030562);
+			b = this.hh(b,c,d,a,x[i + 14],23,-35309556);
+			a = this.hh(a,b,c,d,x[i + 1],4,-1530992060);
+			d = this.hh(d,a,b,c,x[i + 4],11,1272893353);
+			c = this.hh(c,d,a,b,x[i + 7],16,-155497632);
+			b = this.hh(b,c,d,a,x[i + 10],23,-1094730640);
+			a = this.hh(a,b,c,d,x[i + 13],4,681279174);
+			d = this.hh(d,a,b,c,x[i],11,-358537222);
+			c = this.hh(c,d,a,b,x[i + 3],16,-722521979);
+			b = this.hh(b,c,d,a,x[i + 6],23,76029189);
+			a = this.hh(a,b,c,d,x[i + 9],4,-640364487);
+			d = this.hh(d,a,b,c,x[i + 12],11,-421815835);
+			c = this.hh(c,d,a,b,x[i + 15],16,530742520);
+			b = this.hh(b,c,d,a,x[i + 2],23,-995338651);
+			a = this.ii(a,b,c,d,x[i],6,-198630844);
+			d = this.ii(d,a,b,c,x[i + 7],10,1126891415);
+			c = this.ii(c,d,a,b,x[i + 14],15,-1416354905);
+			b = this.ii(b,c,d,a,x[i + 5],21,-57434055);
+			a = this.ii(a,b,c,d,x[i + 12],6,1700485571);
+			d = this.ii(d,a,b,c,x[i + 3],10,-1894986606);
+			c = this.ii(c,d,a,b,x[i + 10],15,-1051523);
+			b = this.ii(b,c,d,a,x[i + 1],21,-2054922799);
+			a = this.ii(a,b,c,d,x[i + 8],6,1873313359);
+			d = this.ii(d,a,b,c,x[i + 15],10,-30611744);
+			c = this.ii(c,d,a,b,x[i + 6],15,-1560198380);
+			b = this.ii(b,c,d,a,x[i + 13],21,1309151649);
+			a = this.ii(a,b,c,d,x[i + 4],6,-145523070);
+			d = this.ii(d,a,b,c,x[i + 11],10,-1120210379);
+			c = this.ii(c,d,a,b,x[i + 2],15,718787259);
+			b = this.ii(b,c,d,a,x[i + 9],21,-343485551);
+			a = this.addme(a,olda);
+			b = this.addme(b,oldb);
+			c = this.addme(c,oldc);
+			d = this.addme(d,oldd);
+			i += 16;
+		}
+		return this.rhex(a) + this.rhex(b) + this.rhex(c) + this.rhex(d);
+	}
+	,ii: function(a,b,c,d,x,s,t) {
+		return this.cmn(this.bitXOR(c,this.bitOR(b,~d)),a,b,x,s,t);
+	}
+	,hh: function(a,b,c,d,x,s,t) {
+		return this.cmn(this.bitXOR(this.bitXOR(b,c),d),a,b,x,s,t);
+	}
+	,gg: function(a,b,c,d,x,s,t) {
+		return this.cmn(this.bitOR(this.bitAND(b,d),this.bitAND(c,~d)),a,b,x,s,t);
+	}
+	,ff: function(a,b,c,d,x,s,t) {
+		return this.cmn(this.bitOR(this.bitAND(b,c),this.bitAND(~b,d)),a,b,x,s,t);
+	}
+	,cmn: function(q,a,b,x,s,t) {
+		return this.addme(this.rol(this.addme(this.addme(a,q),this.addme(x,t)),s),b);
+	}
+	,rol: function(num,cnt) {
+		return num << cnt | num >>> 32 - cnt;
+	}
+	,str2blks: function(str) {
+		var nblk = (str.length + 8 >> 6) + 1;
+		var blks = new Array();
+		var _g1 = 0, _g = nblk * 16;
+		while(_g1 < _g) {
+			var i = _g1++;
+			blks[i] = 0;
+		}
+		var i = 0;
+		while(i < str.length) {
+			blks[i >> 2] |= HxOverrides.cca(str,i) << (str.length * 8 + i) % 4 * 8;
+			i++;
+		}
+		blks[i >> 2] |= 128 << (str.length * 8 + i) % 4 * 8;
+		var l = str.length * 8;
+		var k = nblk * 16 - 2;
+		blks[k] = l & 255;
+		blks[k] |= (l >>> 8 & 255) << 8;
+		blks[k] |= (l >>> 16 & 255) << 16;
+		blks[k] |= (l >>> 24 & 255) << 24;
+		return blks;
+	}
+	,rhex: function(num) {
+		var str = "";
+		var hex_chr = "0123456789abcdef";
+		var _g = 0;
+		while(_g < 4) {
+			var j = _g++;
+			str += hex_chr.charAt(num >> j * 8 + 4 & 15) + hex_chr.charAt(num >> j * 8 & 15);
+		}
+		return str;
+	}
+	,addme: function(x,y) {
+		var lsw = (x & 65535) + (y & 65535);
+		var msw = (x >> 16) + (y >> 16) + (lsw >> 16);
+		return msw << 16 | lsw & 65535;
+	}
+	,bitAND: function(a,b) {
+		var lsb = a & 1 & (b & 1);
+		var msb31 = a >>> 1 & b >>> 1;
+		return msb31 << 1 | lsb;
+	}
+	,bitXOR: function(a,b) {
+		var lsb = a & 1 ^ b & 1;
+		var msb31 = a >>> 1 ^ b >>> 1;
+		return msb31 << 1 | lsb;
+	}
+	,bitOR: function(a,b) {
+		var lsb = a & 1 | b & 1;
+		var msb31 = a >>> 1 | b >>> 1;
+		return msb31 << 1 | lsb;
+	}
+	,__class__: haxe.Md5
+}
+haxe.Serializer = $hxClasses["haxe.Serializer"] = function() {
+	this.buf = new StringBuf();
+	this.cache = new Array();
+	this.useCache = haxe.Serializer.USE_CACHE;
+	this.useEnumIndex = haxe.Serializer.USE_ENUM_INDEX;
+	this.shash = new Hash();
+	this.scount = 0;
+};
+haxe.Serializer.__name__ = ["haxe","Serializer"];
+haxe.Serializer.run = function(v) {
+	var s = new haxe.Serializer();
+	s.serialize(v);
+	return s.toString();
+}
+haxe.Serializer.prototype = {
+	serializeException: function(e) {
+		this.buf.b += Std.string("x");
+		this.serialize(e);
+	}
+	,serialize: function(v) {
+		var $e = (Type["typeof"](v));
+		switch( $e[1] ) {
+		case 0:
+			this.buf.b += Std.string("n");
+			break;
+		case 1:
+			if(v == 0) {
+				this.buf.b += Std.string("z");
+				return;
+			}
+			this.buf.b += Std.string("i");
+			this.buf.b += Std.string(v);
+			break;
+		case 2:
+			if(Math.isNaN(v)) this.buf.b += Std.string("k"); else if(!Math.isFinite(v)) this.buf.b += Std.string(v < 0?"m":"p"); else {
+				this.buf.b += Std.string("d");
+				this.buf.b += Std.string(v);
+			}
+			break;
+		case 3:
+			this.buf.b += Std.string(v?"t":"f");
+			break;
+		case 6:
+			var c = $e[2];
+			if(c == String) {
+				this.serializeString(v);
+				return;
+			}
+			if(this.useCache && this.serializeRef(v)) return;
+			switch(c) {
+			case Array:
+				var ucount = 0;
+				this.buf.b += Std.string("a");
+				var l = v.length;
+				var _g = 0;
+				while(_g < l) {
+					var i = _g++;
+					if(v[i] == null) ucount++; else {
+						if(ucount > 0) {
+							if(ucount == 1) this.buf.b += Std.string("n"); else {
+								this.buf.b += Std.string("u");
+								this.buf.b += Std.string(ucount);
+							}
+							ucount = 0;
+						}
+						this.serialize(v[i]);
+					}
+				}
+				if(ucount > 0) {
+					if(ucount == 1) this.buf.b += Std.string("n"); else {
+						this.buf.b += Std.string("u");
+						this.buf.b += Std.string(ucount);
+					}
+				}
+				this.buf.b += Std.string("h");
+				break;
+			case List:
+				this.buf.b += Std.string("l");
+				var v1 = v;
+				var $it0 = v1.iterator();
+				while( $it0.hasNext() ) {
+					var i = $it0.next();
+					this.serialize(i);
+				}
+				this.buf.b += Std.string("h");
+				break;
+			case Date:
+				var d = v;
+				this.buf.b += Std.string("v");
+				this.buf.b += Std.string(HxOverrides.dateStr(d));
+				break;
+			case Hash:
+				this.buf.b += Std.string("b");
+				var v1 = v;
+				var $it1 = v1.keys();
+				while( $it1.hasNext() ) {
+					var k = $it1.next();
+					this.serializeString(k);
+					this.serialize(v1.get(k));
+				}
+				this.buf.b += Std.string("h");
+				break;
+			case IntHash:
+				this.buf.b += Std.string("q");
+				var v1 = v;
+				var $it2 = v1.keys();
+				while( $it2.hasNext() ) {
+					var k = $it2.next();
+					this.buf.b += Std.string(":");
+					this.buf.b += Std.string(k);
+					this.serialize(v1.get(k));
+				}
+				this.buf.b += Std.string("h");
+				break;
+			case haxe.io.Bytes:
+				var v1 = v;
+				var i = 0;
+				var max = v1.length - 2;
+				var charsBuf = new StringBuf();
+				var b64 = haxe.Serializer.BASE64;
+				while(i < max) {
+					var b1 = v1.b[i++];
+					var b2 = v1.b[i++];
+					var b3 = v1.b[i++];
+					charsBuf.b += Std.string(b64.charAt(b1 >> 2));
+					charsBuf.b += Std.string(b64.charAt((b1 << 4 | b2 >> 4) & 63));
+					charsBuf.b += Std.string(b64.charAt((b2 << 2 | b3 >> 6) & 63));
+					charsBuf.b += Std.string(b64.charAt(b3 & 63));
+				}
+				if(i == max) {
+					var b1 = v1.b[i++];
+					var b2 = v1.b[i++];
+					charsBuf.b += Std.string(b64.charAt(b1 >> 2));
+					charsBuf.b += Std.string(b64.charAt((b1 << 4 | b2 >> 4) & 63));
+					charsBuf.b += Std.string(b64.charAt(b2 << 2 & 63));
+				} else if(i == max + 1) {
+					var b1 = v1.b[i++];
+					charsBuf.b += Std.string(b64.charAt(b1 >> 2));
+					charsBuf.b += Std.string(b64.charAt(b1 << 4 & 63));
+				}
+				var chars = charsBuf.b;
+				this.buf.b += Std.string("s");
+				this.buf.b += Std.string(chars.length);
+				this.buf.b += Std.string(":");
+				this.buf.b += Std.string(chars);
+				break;
+			default:
+				this.cache.pop();
+				if(v.hxSerialize != null) {
+					this.buf.b += Std.string("C");
+					this.serializeString(Type.getClassName(c));
+					this.cache.push(v);
+					v.hxSerialize(this);
+					this.buf.b += Std.string("g");
+				} else {
+					this.buf.b += Std.string("c");
+					this.serializeString(Type.getClassName(c));
+					this.cache.push(v);
+					this.serializeFields(v);
+				}
+			}
+			break;
+		case 4:
+			if(this.useCache && this.serializeRef(v)) return;
+			this.buf.b += Std.string("o");
+			this.serializeFields(v);
+			break;
+		case 7:
+			var e = $e[2];
+			if(this.useCache && this.serializeRef(v)) return;
+			this.cache.pop();
+			this.buf.b += Std.string(this.useEnumIndex?"j":"w");
+			this.serializeString(Type.getEnumName(e));
+			if(this.useEnumIndex) {
+				this.buf.b += Std.string(":");
+				this.buf.b += Std.string(v[1]);
+			} else this.serializeString(v[0]);
+			this.buf.b += Std.string(":");
+			var l = v.length;
+			this.buf.b += Std.string(l - 2);
+			var _g = 2;
+			while(_g < l) {
+				var i = _g++;
+				this.serialize(v[i]);
+			}
+			this.cache.push(v);
+			break;
+		case 5:
+			throw "Cannot serialize function";
+			break;
+		default:
+			throw "Cannot serialize " + Std.string(v);
+		}
+	}
+	,serializeFields: function(v) {
+		var _g = 0, _g1 = Reflect.fields(v);
+		while(_g < _g1.length) {
+			var f = _g1[_g];
+			++_g;
+			this.serializeString(f);
+			this.serialize(Reflect.field(v,f));
+		}
+		this.buf.b += Std.string("g");
+	}
+	,serializeRef: function(v) {
+		var vt = typeof(v);
+		var _g1 = 0, _g = this.cache.length;
+		while(_g1 < _g) {
+			var i = _g1++;
+			var ci = this.cache[i];
+			if(typeof(ci) == vt && ci == v) {
+				this.buf.b += Std.string("r");
+				this.buf.b += Std.string(i);
+				return true;
+			}
+		}
+		this.cache.push(v);
+		return false;
+	}
+	,serializeString: function(s) {
+		var x = this.shash.get(s);
+		if(x != null) {
+			this.buf.b += Std.string("R");
+			this.buf.b += Std.string(x);
+			return;
+		}
+		this.shash.set(s,this.scount++);
+		this.buf.b += Std.string("y");
+		s = StringTools.urlEncode(s);
+		this.buf.b += Std.string(s.length);
+		this.buf.b += Std.string(":");
+		this.buf.b += Std.string(s);
+	}
+	,toString: function() {
+		return this.buf.b;
+	}
+	,useEnumIndex: null
+	,useCache: null
+	,scount: null
+	,shash: null
+	,cache: null
+	,buf: null
+	,__class__: haxe.Serializer
+}
+haxe.Timer = $hxClasses["haxe.Timer"] = function(time_ms) {
+	var me = this;
+	this.id = window.setInterval(function() {
+		me.run();
+	},time_ms);
+};
+haxe.Timer.__name__ = ["haxe","Timer"];
+haxe.Timer.delay = function(f,time_ms) {
+	var t = new haxe.Timer(time_ms);
+	t.run = function() {
+		t.stop();
+		f();
+	};
+	return t;
+}
+haxe.Timer.measure = function(f,pos) {
+	var t0 = haxe.Timer.stamp();
+	var r = f();
+	haxe.Log.trace(haxe.Timer.stamp() - t0 + "s",pos);
+	return r;
+}
+haxe.Timer.stamp = function() {
+	return new Date().getTime() / 1000;
+}
+haxe.Timer.prototype = {
+	run: function() {
+	}
+	,stop: function() {
+		if(this.id == null) return;
+		window.clearInterval(this.id);
+		this.id = null;
+	}
+	,id: null
+	,__class__: haxe.Timer
+}
+haxe.Unserializer = $hxClasses["haxe.Unserializer"] = function(buf) {
+	this.buf = buf;
+	this.length = buf.length;
+	this.pos = 0;
+	this.scache = new Array();
+	this.cache = new Array();
+	var r = haxe.Unserializer.DEFAULT_RESOLVER;
+	if(r == null) {
+		r = Type;
+		haxe.Unserializer.DEFAULT_RESOLVER = r;
+	}
+	this.setResolver(r);
+};
+haxe.Unserializer.__name__ = ["haxe","Unserializer"];
+haxe.Unserializer.initCodes = function() {
+	var codes = new Array();
+	var _g1 = 0, _g = haxe.Unserializer.BASE64.length;
+	while(_g1 < _g) {
+		var i = _g1++;
+		codes[haxe.Unserializer.BASE64.charCodeAt(i)] = i;
+	}
+	return codes;
+}
+haxe.Unserializer.run = function(v) {
+	return new haxe.Unserializer(v).unserialize();
+}
+haxe.Unserializer.prototype = {
+	unserialize: function() {
+		switch(this.buf.charCodeAt(this.pos++)) {
+		case 110:
+			return null;
+		case 116:
+			return true;
+		case 102:
+			return false;
+		case 122:
+			return 0;
+		case 105:
+			return this.readDigits();
+		case 100:
+			var p1 = this.pos;
+			while(true) {
+				var c = this.buf.charCodeAt(this.pos);
+				if(c >= 43 && c < 58 || c == 101 || c == 69) this.pos++; else break;
+			}
+			return Std.parseFloat(HxOverrides.substr(this.buf,p1,this.pos - p1));
+		case 121:
+			var len = this.readDigits();
+			if(this.buf.charCodeAt(this.pos++) != 58 || this.length - this.pos < len) throw "Invalid string length";
+			var s = HxOverrides.substr(this.buf,this.pos,len);
+			this.pos += len;
+			s = StringTools.urlDecode(s);
+			this.scache.push(s);
+			return s;
+		case 107:
+			return Math.NaN;
+		case 109:
+			return Math.NEGATIVE_INFINITY;
+		case 112:
+			return Math.POSITIVE_INFINITY;
+		case 97:
+			var buf = this.buf;
+			var a = new Array();
+			this.cache.push(a);
+			while(true) {
+				var c = this.buf.charCodeAt(this.pos);
+				if(c == 104) {
+					this.pos++;
+					break;
+				}
+				if(c == 117) {
+					this.pos++;
+					var n = this.readDigits();
+					a[a.length + n - 1] = null;
+				} else a.push(this.unserialize());
+			}
+			return a;
+		case 111:
+			var o = { };
+			this.cache.push(o);
+			this.unserializeObject(o);
+			return o;
+		case 114:
+			var n = this.readDigits();
+			if(n < 0 || n >= this.cache.length) throw "Invalid reference";
+			return this.cache[n];
+		case 82:
+			var n = this.readDigits();
+			if(n < 0 || n >= this.scache.length) throw "Invalid string reference";
+			return this.scache[n];
+		case 120:
+			throw this.unserialize();
+			break;
+		case 99:
+			var name = this.unserialize();
+			var cl = this.resolver.resolveClass(name);
+			if(cl == null) throw "Class not found " + name;
+			var o = Type.createEmptyInstance(cl);
+			this.cache.push(o);
+			this.unserializeObject(o);
+			return o;
+		case 119:
+			var name = this.unserialize();
+			var edecl = this.resolver.resolveEnum(name);
+			if(edecl == null) throw "Enum not found " + name;
+			var e = this.unserializeEnum(edecl,this.unserialize());
+			this.cache.push(e);
+			return e;
+		case 106:
+			var name = this.unserialize();
+			var edecl = this.resolver.resolveEnum(name);
+			if(edecl == null) throw "Enum not found " + name;
+			this.pos++;
+			var index = this.readDigits();
+			var tag = Type.getEnumConstructs(edecl)[index];
+			if(tag == null) throw "Unknown enum index " + name + "@" + index;
+			var e = this.unserializeEnum(edecl,tag);
+			this.cache.push(e);
+			return e;
+		case 108:
+			var l = new List();
+			this.cache.push(l);
+			var buf = this.buf;
+			while(this.buf.charCodeAt(this.pos) != 104) l.add(this.unserialize());
+			this.pos++;
+			return l;
+		case 98:
+			var h = new Hash();
+			this.cache.push(h);
+			var buf = this.buf;
+			while(this.buf.charCodeAt(this.pos) != 104) {
+				var s = this.unserialize();
+				h.set(s,this.unserialize());
+			}
+			this.pos++;
+			return h;
+		case 113:
+			var h = new IntHash();
+			this.cache.push(h);
+			var buf = this.buf;
+			var c = this.buf.charCodeAt(this.pos++);
+			while(c == 58) {
+				var i = this.readDigits();
+				h.set(i,this.unserialize());
+				c = this.buf.charCodeAt(this.pos++);
+			}
+			if(c != 104) throw "Invalid IntHash format";
+			return h;
+		case 118:
+			var d = HxOverrides.strDate(HxOverrides.substr(this.buf,this.pos,19));
+			this.cache.push(d);
+			this.pos += 19;
+			return d;
+		case 115:
+			var len = this.readDigits();
+			var buf = this.buf;
+			if(this.buf.charCodeAt(this.pos++) != 58 || this.length - this.pos < len) throw "Invalid bytes length";
+			var codes = haxe.Unserializer.CODES;
+			if(codes == null) {
+				codes = haxe.Unserializer.initCodes();
+				haxe.Unserializer.CODES = codes;
+			}
+			var i = this.pos;
+			var rest = len & 3;
+			var size = (len >> 2) * 3 + (rest >= 2?rest - 1:0);
+			var max = i + (len - rest);
+			var bytes = haxe.io.Bytes.alloc(size);
+			var bpos = 0;
+			while(i < max) {
+				var c1 = codes[buf.charCodeAt(i++)];
+				var c2 = codes[buf.charCodeAt(i++)];
+				bytes.b[bpos++] = (c1 << 2 | c2 >> 4) & 255;
+				var c3 = codes[buf.charCodeAt(i++)];
+				bytes.b[bpos++] = (c2 << 4 | c3 >> 2) & 255;
+				var c4 = codes[buf.charCodeAt(i++)];
+				bytes.b[bpos++] = (c3 << 6 | c4) & 255;
+			}
+			if(rest >= 2) {
+				var c1 = codes[buf.charCodeAt(i++)];
+				var c2 = codes[buf.charCodeAt(i++)];
+				bytes.b[bpos++] = (c1 << 2 | c2 >> 4) & 255;
+				if(rest == 3) {
+					var c3 = codes[buf.charCodeAt(i++)];
+					bytes.b[bpos++] = (c2 << 4 | c3 >> 2) & 255;
+				}
+			}
+			this.pos += len;
+			this.cache.push(bytes);
+			return bytes;
+		case 67:
+			var name = this.unserialize();
+			var cl = this.resolver.resolveClass(name);
+			if(cl == null) throw "Class not found " + name;
+			var o = Type.createEmptyInstance(cl);
+			this.cache.push(o);
+			o.hxUnserialize(this);
+			if(this.buf.charCodeAt(this.pos++) != 103) throw "Invalid custom data";
+			return o;
+		default:
+		}
+		this.pos--;
+		throw "Invalid char " + this.buf.charAt(this.pos) + " at position " + this.pos;
+	}
+	,unserializeEnum: function(edecl,tag) {
+		if(this.buf.charCodeAt(this.pos++) != 58) throw "Invalid enum format";
+		var nargs = this.readDigits();
+		if(nargs == 0) return Type.createEnum(edecl,tag);
+		var args = new Array();
+		while(nargs-- > 0) args.push(this.unserialize());
+		return Type.createEnum(edecl,tag,args);
+	}
+	,unserializeObject: function(o) {
+		while(true) {
+			if(this.pos >= this.length) throw "Invalid object";
+			if(this.buf.charCodeAt(this.pos) == 103) break;
+			var k = this.unserialize();
+			if(!js.Boot.__instanceof(k,String)) throw "Invalid object key";
+			var v = this.unserialize();
+			o[k] = v;
+		}
+		this.pos++;
+	}
+	,readDigits: function() {
+		var k = 0;
+		var s = false;
+		var fpos = this.pos;
+		while(true) {
+			var c = this.buf.charCodeAt(this.pos);
+			if(c != c) break;
+			if(c == 45) {
+				if(this.pos != fpos) break;
+				s = true;
+				this.pos++;
+				continue;
+			}
+			if(c < 48 || c > 57) break;
+			k = k * 10 + (c - 48);
+			this.pos++;
+		}
+		if(s) k *= -1;
+		return k;
+	}
+	,get: function(p) {
+		return this.buf.charCodeAt(p);
+	}
+	,getResolver: function() {
+		return this.resolver;
+	}
+	,setResolver: function(r) {
+		if(r == null) this.resolver = { resolveClass : function(_) {
+			return null;
+		}, resolveEnum : function(_) {
+			return null;
+		}}; else this.resolver = r;
+	}
+	,resolver: null
+	,scache: null
+	,cache: null
+	,length: null
+	,pos: null
+	,buf: null
+	,__class__: haxe.Unserializer
+}
+if(!haxe.io) haxe.io = {}
+haxe.io.Bytes = $hxClasses["haxe.io.Bytes"] = function(length,b) {
+	this.length = length;
+	this.b = b;
+};
+haxe.io.Bytes.__name__ = ["haxe","io","Bytes"];
+haxe.io.Bytes.alloc = function(length) {
+	var a = new Array();
+	var _g = 0;
+	while(_g < length) {
+		var i = _g++;
+		a.push(0);
+	}
+	return new haxe.io.Bytes(length,a);
+}
+haxe.io.Bytes.ofString = function(s) {
+	var a = new Array();
+	var _g1 = 0, _g = s.length;
+	while(_g1 < _g) {
+		var i = _g1++;
+		var c = s.charCodeAt(i);
+		if(c <= 127) a.push(c); else if(c <= 2047) {
+			a.push(192 | c >> 6);
+			a.push(128 | c & 63);
+		} else if(c <= 65535) {
+			a.push(224 | c >> 12);
+			a.push(128 | c >> 6 & 63);
+			a.push(128 | c & 63);
+		} else {
+			a.push(240 | c >> 18);
+			a.push(128 | c >> 12 & 63);
+			a.push(128 | c >> 6 & 63);
+			a.push(128 | c & 63);
+		}
+	}
+	return new haxe.io.Bytes(a.length,a);
+}
+haxe.io.Bytes.ofData = function(b) {
+	return new haxe.io.Bytes(b.length,b);
+}
+haxe.io.Bytes.prototype = {
+	getData: function() {
+		return this.b;
+	}
+	,toHex: function() {
+		var s = new StringBuf();
+		var chars = [];
+		var str = "0123456789abcdef";
+		var _g1 = 0, _g = str.length;
+		while(_g1 < _g) {
+			var i = _g1++;
+			chars.push(HxOverrides.cca(str,i));
+		}
+		var _g1 = 0, _g = this.length;
+		while(_g1 < _g) {
+			var i = _g1++;
+			var c = this.b[i];
+			s.b += String.fromCharCode(chars[c >> 4]);
+			s.b += String.fromCharCode(chars[c & 15]);
+		}
+		return s.b;
+	}
+	,toString: function() {
+		return this.readString(0,this.length);
+	}
+	,readString: function(pos,len) {
+		if(pos < 0 || len < 0 || pos + len > this.length) throw haxe.io.Error.OutsideBounds;
+		var s = "";
+		var b = this.b;
+		var fcc = String.fromCharCode;
+		var i = pos;
+		var max = pos + len;
+		while(i < max) {
+			var c = b[i++];
+			if(c < 128) {
+				if(c == 0) break;
+				s += fcc(c);
+			} else if(c < 224) s += fcc((c & 63) << 6 | b[i++] & 127); else if(c < 240) {
+				var c2 = b[i++];
+				s += fcc((c & 31) << 12 | (c2 & 127) << 6 | b[i++] & 127);
+			} else {
+				var c2 = b[i++];
+				var c3 = b[i++];
+				s += fcc((c & 15) << 18 | (c2 & 127) << 12 | c3 << 6 & 127 | b[i++] & 127);
+			}
+		}
+		return s;
+	}
+	,compare: function(other) {
+		var b1 = this.b;
+		var b2 = other.b;
+		var len = this.length < other.length?this.length:other.length;
+		var _g = 0;
+		while(_g < len) {
+			var i = _g++;
+			if(b1[i] != b2[i]) return b1[i] - b2[i];
+		}
+		return this.length - other.length;
+	}
+	,sub: function(pos,len) {
+		if(pos < 0 || len < 0 || pos + len > this.length) throw haxe.io.Error.OutsideBounds;
+		return new haxe.io.Bytes(len,this.b.slice(pos,pos + len));
+	}
+	,blit: function(pos,src,srcpos,len) {
+		if(pos < 0 || srcpos < 0 || len < 0 || pos + len > this.length || srcpos + len > src.length) throw haxe.io.Error.OutsideBounds;
+		var b1 = this.b;
+		var b2 = src.b;
+		if(b1 == b2 && pos > srcpos) {
+			var i = len;
+			while(i > 0) {
+				i--;
+				b1[i + pos] = b2[i + srcpos];
+			}
+			return;
+		}
+		var _g = 0;
+		while(_g < len) {
+			var i = _g++;
+			b1[i + pos] = b2[i + srcpos];
+		}
+	}
+	,set: function(pos,v) {
+		this.b[pos] = v & 255;
+	}
+	,get: function(pos) {
+		return this.b[pos];
+	}
+	,b: null
+	,length: null
+	,__class__: haxe.io.Bytes
+}
+haxe.io.Error = $hxClasses["haxe.io.Error"] = { __ename__ : ["haxe","io","Error"], __constructs__ : ["Blocked","Overflow","OutsideBounds","Custom"] }
+haxe.io.Error.Blocked = ["Blocked",0];
+haxe.io.Error.Blocked.toString = $estr;
+haxe.io.Error.Blocked.__enum__ = haxe.io.Error;
+haxe.io.Error.Overflow = ["Overflow",1];
+haxe.io.Error.Overflow.toString = $estr;
+haxe.io.Error.Overflow.__enum__ = haxe.io.Error;
+haxe.io.Error.OutsideBounds = ["OutsideBounds",2];
+haxe.io.Error.OutsideBounds.toString = $estr;
+haxe.io.Error.OutsideBounds.__enum__ = haxe.io.Error;
+haxe.io.Error.Custom = function(e) { var $x = ["Custom",3,e]; $x.__enum__ = haxe.io.Error; $x.toString = $estr; return $x; }
+if(!haxe.remoting) haxe.remoting = {}
+haxe.remoting.Connection = $hxClasses["haxe.remoting.Connection"] = function() { }
+haxe.remoting.Connection.__name__ = ["haxe","remoting","Connection"];
+haxe.remoting.Connection.prototype = {
+	call: null
+	,resolve: null
+	,__class__: haxe.remoting.Connection
+}
+haxe.remoting.Context = $hxClasses["haxe.remoting.Context"] = function() {
+	this.objects = new Hash();
+};
+haxe.remoting.Context.__name__ = ["haxe","remoting","Context"];
+haxe.remoting.Context.share = function(name,obj) {
+	var ctx = new haxe.remoting.Context();
+	ctx.addObject(name,obj);
+	return ctx;
+}
+haxe.remoting.Context.prototype = {
+	call: function(path,params) {
+		if(path.length < 2) throw "Invalid path '" + path.join(".") + "'";
+		var inf = this.objects.get(path[0]);
+		if(inf == null) throw "No such object " + path[0];
+		var o = inf.obj;
+		var m = Reflect.field(o,path[1]);
+		if(path.length > 2) {
+			if(!inf.rec) throw "Can't access " + path.join(".");
+			var _g1 = 2, _g = path.length;
+			while(_g1 < _g) {
+				var i = _g1++;
+				o = m;
+				m = Reflect.field(o,path[i]);
+			}
+		}
+		if(!Reflect.isFunction(m)) throw "No such method " + path.join(".");
+		return m.apply(o,params);
+	}
+	,addObject: function(name,obj,recursive) {
+		this.objects.set(name,{ obj : obj, rec : recursive});
+	}
+	,objects: null
+	,__class__: haxe.remoting.Context
+}
+haxe.remoting.HttpConnection = $hxClasses["haxe.remoting.HttpConnection"] = function(url,path) {
+	this.__url = url;
+	this.__path = path;
+};
+haxe.remoting.HttpConnection.__name__ = ["haxe","remoting","HttpConnection"];
+haxe.remoting.HttpConnection.__interfaces__ = [haxe.remoting.Connection];
+haxe.remoting.HttpConnection.urlConnect = function(url) {
+	return new haxe.remoting.HttpConnection(url,[]);
+}
+haxe.remoting.HttpConnection.processRequest = function(requestData,ctx) {
+	try {
+		var u = new haxe.Unserializer(requestData);
+		var path = u.unserialize();
+		var args = u.unserialize();
+		var data = ctx.call(path,args);
+		var s = new haxe.Serializer();
+		s.serialize(data);
+		return "hxr" + s.toString();
+	} catch( e ) {
+		var s = new haxe.Serializer();
+		s.serializeException(e);
+		return "hxr" + s.toString();
+	}
+}
+haxe.remoting.HttpConnection.prototype = {
+	call: function(params) {
+		var data = null;
+		var h = new haxe.Http(this.__url);
+		h.async = false;
+		var s = new haxe.Serializer();
+		s.serialize(this.__path);
+		s.serialize(params);
+		h.setHeader("X-Haxe-Remoting","1");
+		h.setParameter("__x",s.toString());
+		h.onData = function(d) {
+			data = d;
+		};
+		h.onError = function(e) {
+			throw e;
+		};
+		h.request(true);
+		if(HxOverrides.substr(data,0,3) != "hxr") throw "Invalid response : '" + data + "'";
+		data = HxOverrides.substr(data,3,null);
+		return new haxe.Unserializer(data).unserialize();
+	}
+	,resolve: function(name) {
+		var c = new haxe.remoting.HttpConnection(this.__url,this.__path.slice());
+		c.__path.push(name);
+		return c;
+	}
+	,__path: null
+	,__url: null
+	,__class__: haxe.remoting.HttpConnection
+}
+var js = js || {}
+js.Boot = $hxClasses["js.Boot"] = function() { }
+js.Boot.__name__ = ["js","Boot"];
+js.Boot.__unhtml = function(s) {
+	return s.split("&").join("&amp;").split("<").join("&lt;").split(">").join("&gt;");
+}
+js.Boot.__trace = function(v,i) {
+	var msg = i != null?i.fileName + ":" + i.lineNumber + ": ":"";
+	msg += js.Boot.__string_rec(v,"");
+	var d;
+	if(typeof(document) != "undefined" && (d = document.getElementById("haxe:trace")) != null) d.innerHTML += js.Boot.__unhtml(msg) + "<br/>"; else if(typeof(console) != "undefined" && console.log != null) console.log(msg);
+}
+js.Boot.__clear_trace = function() {
+	var d = document.getElementById("haxe:trace");
+	if(d != null) d.innerHTML = "";
+}
+js.Boot.isClass = function(o) {
+	return o.__name__;
+}
+js.Boot.isEnum = function(e) {
+	return e.__ename__;
+}
+js.Boot.getClass = function(o) {
+	return o.__class__;
+}
+js.Boot.__string_rec = function(o,s) {
+	if(o == null) return "null";
+	if(s.length >= 5) return "<...>";
+	var t = typeof(o);
+	if(t == "function" && (o.__name__ || o.__ename__)) t = "object";
+	switch(t) {
+	case "object":
+		if(o instanceof Array) {
+			if(o.__enum__) {
+				if(o.length == 2) return o[0];
+				var str = o[0] + "(";
+				s += "\t";
+				var _g1 = 2, _g = o.length;
+				while(_g1 < _g) {
+					var i = _g1++;
+					if(i != 2) str += "," + js.Boot.__string_rec(o[i],s); else str += js.Boot.__string_rec(o[i],s);
+				}
+				return str + ")";
+			}
+			var l = o.length;
+			var i;
+			var str = "[";
+			s += "\t";
+			var _g = 0;
+			while(_g < l) {
+				var i1 = _g++;
+				str += (i1 > 0?",":"") + js.Boot.__string_rec(o[i1],s);
+			}
+			str += "]";
+			return str;
+		}
+		var tostr;
+		try {
+			tostr = o.toString;
+		} catch( e ) {
+			return "???";
+		}
+		if(tostr != null && tostr != Object.toString) {
+			var s2 = o.toString();
+			if(s2 != "[object Object]") return s2;
+		}
+		var k = null;
+		var str = "{\n";
+		s += "\t";
+		var hasp = o.hasOwnProperty != null;
+		for( var k in o ) { ;
+		if(hasp && !o.hasOwnProperty(k)) {
+			continue;
+		}
+		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
+			continue;
+		}
+		if(str.length != 2) str += ", \n";
+		str += s + k + " : " + js.Boot.__string_rec(o[k],s);
+		}
+		s = s.substring(1);
+		str += "\n" + s + "}";
+		return str;
+	case "function":
+		return "<function>";
+	case "string":
+		return o;
+	default:
+		return String(o);
+	}
+}
+js.Boot.__interfLoop = function(cc,cl) {
+	if(cc == null) return false;
+	if(cc == cl) return true;
+	var intf = cc.__interfaces__;
+	if(intf != null) {
+		var _g1 = 0, _g = intf.length;
+		while(_g1 < _g) {
+			var i = _g1++;
+			var i1 = intf[i];
+			if(i1 == cl || js.Boot.__interfLoop(i1,cl)) return true;
+		}
+	}
+	return js.Boot.__interfLoop(cc.__super__,cl);
+}
+js.Boot.__instanceof = function(o,cl) {
+	try {
+		if(o instanceof cl) {
+			if(cl == Array) return o.__enum__ == null;
+			return true;
+		}
+		if(js.Boot.__interfLoop(o.__class__,cl)) return true;
+	} catch( e ) {
+		if(cl == null) return false;
+	}
+	switch(cl) {
+	case Int:
+		return Math.ceil(o%2147483648.0) === o;
+	case Float:
+		return typeof(o) == "number";
+	case Bool:
+		return o === true || o === false;
+	case String:
+		return typeof(o) == "string";
+	case Dynamic:
+		return true;
+	default:
+		if(o == null) return false;
+		if(cl == Class && o.__name__ != null) return true; else null;
+		if(cl == Enum && o.__ename__ != null) return true; else null;
+		return o.__enum__ == cl;
+	}
+}
+js.Boot.__cast = function(o,t) {
+	if(js.Boot.__instanceof(o,t)) return o; else throw "Cannot cast " + Std.string(o) + " to " + Std.string(t);
+}
+js.Lib = $hxClasses["js.Lib"] = function() { }
+js.Lib.__name__ = ["js","Lib"];
+js.Lib.document = null;
+js.Lib.window = null;
+js.Lib.debug = function() {
+	debugger;
+}
+js.Lib.alert = function(v) {
+	alert(js.Boot.__string_rec(v,""));
+}
+js.Lib.eval = function(code) {
+	return eval(code);
+}
+js.Lib.setErrorHandler = function(f) {
+	js.Lib.onerror = f;
+}
+function $iterator(o) { if( o instanceof Array ) return function() { return HxOverrides.iter(o); }; return typeof(o.iterator) == 'function' ? $bind(o,o.iterator) : o.iterator; };
+var $_;
+function $bind(o,m) { var f = function(){ return f.method.apply(f.scope, arguments); }; f.scope = o; f.method = m; return f; };
+if(Array.prototype.indexOf) HxOverrides.remove = function(a,o) {
+	var i = a.indexOf(o);
+	if(i == -1) return false;
+	a.splice(i,1);
+	return true;
+}; else null;
+Math.__name__ = ["Math"];
+Math.NaN = Number.NaN;
+Math.NEGATIVE_INFINITY = Number.NEGATIVE_INFINITY;
+Math.POSITIVE_INFINITY = Number.POSITIVE_INFINITY;
+$hxClasses.Math = Math;
+Math.isFinite = function(i) {
+	return isFinite(i);
+};
+Math.isNaN = function(i) {
+	return isNaN(i);
+};
+String.prototype.__class__ = $hxClasses.String = String;
+String.__name__ = ["String"];
+Array.prototype.__class__ = $hxClasses.Array = Array;
+Array.__name__ = ["Array"];
+Date.prototype.__class__ = $hxClasses.Date = Date;
+Date.__name__ = ["Date"];
+var Int = $hxClasses.Int = { __name__ : ["Int"]};
+var Dynamic = $hxClasses.Dynamic = { __name__ : ["Dynamic"]};
+var Float = $hxClasses.Float = Number;
+Float.__name__ = ["Float"];
+var Bool = $hxClasses.Bool = Boolean;
+Bool.__ename__ = ["Bool"];
+var Class = $hxClasses.Class = { __name__ : ["Class"]};
+var Enum = { };
+var Void = $hxClasses.Void = { __ename__ : ["Void"]};
+if(typeof(JSON) != "undefined") haxe.Json = JSON;
+if(typeof document != "undefined") js.Lib.document = document;
+if(typeof window != "undefined") {
+	js.Lib.window = window;
+	js.Lib.window.onerror = function(msg,url,line) {
+		var f = js.Lib.onerror;
+		if(f == null) return false;
+		return f(msg,[url + ":" + line]);
+	};
+}
+js.XMLHttpRequest = window.XMLHttpRequest?XMLHttpRequest:window.ActiveXObject?function() {
+	try {
+		return new ActiveXObject("Msxml2.XMLHTTP");
+	} catch( e ) {
+		try {
+			return new ActiveXObject("Microsoft.XMLHTTP");
+		} catch( e1 ) {
+			throw "Unable to create XMLHttpRequest object.";
+		}
+	}
+}:(function($this) {
+	var $r;
+	throw "Unable to create XMLHttpRequest object.";
+	return $r;
+}(this));
+com.wiris.js.JsPluginViewer.USE_CREATE_IMAGE = 1;
+com.wiris.js.JsPluginViewer.DEBUG = false;
+com.wiris.js.JsPluginViewer.TECH = "@param.js.tech.discover@";
+com.wiris.js.JsPluginViewer.VERSION = "7.28.1.1443";
+com.wiris.system.JsBrowser.SOURCE_USER_AGENT = "userAgent";
+com.wiris.system.JsBrowser.SOURCE_VENDOR = "vendor";
+com.wiris.system.JsBrowser.SOURCE_WINDOW_OPERA = "opera";
+com.wiris.system.JsBrowser.SOURCE_PLATFORM = "platform";
+com.wiris.system.JsBrowser.SOURCE_APP_VERSION = "navigator.appVersion";
+com.wiris.system.JsDOMUtils.TOUCHHOLD_MOVE_MARGIN = 10;
+com.wiris.system.JsDOMUtils.browser = new com.wiris.system.JsBrowser();
+com.wiris.system.JsDOMUtils.initialized = false;
+com.wiris.system.JsDOMUtils.touchDeviceListeners = new Array();
+com.wiris.system.JsDOMUtils.mouseDeviceListeners = new Array();
+com.wiris.system.JsDOMUtils.internetExplorerPointers = new Hash();
+haxe.Serializer.USE_CACHE = false;
+haxe.Serializer.USE_ENUM_INDEX = false;
+haxe.Serializer.BASE64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:";
+haxe.Unserializer.DEFAULT_RESOLVER = Type;
+haxe.Unserializer.BASE64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:";
+haxe.Unserializer.CODES = null;
+haxe.remoting.HttpConnection.TIMEOUT = 10;
+js.Lib.onerror = null;
+com.wiris.js.JsPluginViewer.main();
+delete Array.prototype.__class__; }());
\ No newline at end of file
diff --git a/integration/lib/VERSION b/integration/lib/VERSION
index f7876301..ae3cb516 100644
--- a/integration/lib/VERSION
+++ b/integration/lib/VERSION
@@ -1 +1 @@
-7.23.0
\ No newline at end of file
+7.28.1.1443
\ No newline at end of file
diff --git a/integration/lib/com/wiris/plugin/api/ConfigurationKeys.class.php b/integration/lib/com/wiris/plugin/api/ConfigurationKeys.class.php
index 28e74122..0203831d 100644
--- a/integration/lib/com/wiris/plugin/api/ConfigurationKeys.class.php
+++ b/integration/lib/com/wiris/plugin/api/ConfigurationKeys.class.php
@@ -54,7 +54,7 @@ public function __construct(){}
 	static $CLEAN_CACHE_GUI = "wiriscleancachegui";
 	static $imageConfigProperties;
 	static $imageConfigPropertiesInv;
-	static $SERVICES_PARAMETERS_LIST = "mml,lang,service,latex,mode";
+	static $SERVICES_PARAMETERS_LIST = "mml,lang,service,latex,mode,ignoreStyles";
 	static function computeInverse($dict) {
 		$keys = $dict->keys();
 		$outDict = new Hash();
diff --git a/integration/lib/com/wiris/system/TypeTools.class.php b/integration/lib/com/wiris/system/TypeTools.class.php
index 8baaa601..975e7772 100644
--- a/integration/lib/com/wiris/system/TypeTools.class.php
+++ b/integration/lib/com/wiris/system/TypeTools.class.php
@@ -30,6 +30,12 @@ static function isArray($o) {
 	static function isHash($o) {
 		return Std::is($o, _hx_qtype("Hash"));
 	}
+	static function isBool($o) {
+		return Std::is($o, _hx_qtype("Bool"));
+	}
+	static function toBool($o) {
+		return (($o) ? true : false);
+	}
 	static function string2ByteData_iso8859_1($str) {
 		return haxe_io_Bytes::ofString($str);
 	}
diff --git a/integration/lib/com/wiris/system/Utf8.class.php b/integration/lib/com/wiris/system/Utf8.class.php
index 9f789301..41e7c922 100644
--- a/integration/lib/com/wiris/system/Utf8.class.php
+++ b/integration/lib/com/wiris/system/Utf8.class.php
@@ -9,6 +9,19 @@ static function getLength($s) {
 	static function charCodeAt($s, $i) {
 		return haxe_Utf8::charCodeAt($s, $i);
 	}
+	static function mbSubstring($s, $i, $len) {
+		return mb_substr($s, $i, $len);
+	}
+	static function charValueAt($s, $i) {
+		$ret = 0;
+		$charUCS4 = mb_convert_encoding(mb_substr($s, $i, 1), 'UCS-4BE', 'UTF-8');
+		$byte1 = ord(substr($charUCS4, 0, 1));
+		$byte2 = ord(substr($charUCS4, 1, 1));
+		$byte3 = ord(substr($charUCS4, 2, 1));
+		$byte4 = ord(substr($charUCS4, 3, 1));
+		$ret = ($byte1 << 32) + ($byte2 << 16) + ($byte3 << 8) + $byte4;
+		return $ret;
+	}
 	static function charAt($s, $i) {
 		return com_wiris_system_Utf8_0($i, $s);
 	}
diff --git a/integration/lib/com/wiris/util/json/JSon.class.php b/integration/lib/com/wiris/util/json/JSon.class.php
index ff90fbc8..fcace502 100644
--- a/integration/lib/com/wiris/util/json/JSon.class.php
+++ b/integration/lib/com/wiris/util/json/JSon.class.php
@@ -1,10 +1,9 @@
 <?php
 
-class com_wiris_util_json_JSon extends com_wiris_util_json_StringParser {
+class com_wiris_util_json_JSon {
 	public function __construct() {
-		if(!php_Boot::$skip_constructor) {
-		parent::__construct();
-	}}
+		;
+	}
 	public function newLine($depth, $sb) {
 		$sb->add("\x0D\x0A");
 		$i = null;
@@ -21,195 +20,6 @@ public function newLine($depth, $sb) {
 	public function setAddNewLines($addNewLines) {
 		$this->addNewLines = $addNewLines;
 	}
-	public function decodeArray() {
-		$v = new _hx_array(array());
-		$this->nextToken();
-		$this->skipBlanks();
-		if($this->c === 93) {
-			$this->nextToken();
-			return $v;
-		}
-		while($this->c !== 93) {
-			$o = $this->localDecode();
-			$v->push($o);
-			$this->skipBlanks();
-			if($this->c === 44) {
-				$this->nextToken();
-				$this->skipBlanks();
-			} else {
-				if($this->c !== 93) {
-					throw new HException("Expected ',' or ']'.");
-				}
-			}
-			unset($o);
-		}
-		$this->nextToken();
-		return $v;
-	}
-	public function decodeHash() {
-		$h = new Hash();
-		$this->nextToken();
-		$this->skipBlanks();
-		if($this->c === 125) {
-			$this->nextToken();
-			return $h;
-		}
-		while($this->c !== 125) {
-			$key = $this->decodeString();
-			$this->skipBlanks();
-			if($this->c !== 58) {
-				throw new HException("Expected ':'.");
-			}
-			$this->nextToken();
-			$this->skipBlanks();
-			$o = $this->localDecode();
-			$h->set($key, $o);
-			$this->skipBlanks();
-			if($this->c === 44) {
-				$this->nextToken();
-				$this->skipBlanks();
-			} else {
-				if($this->c !== 125) {
-					throw new HException("Expected ',' or '}'. " . $this->getPositionRepresentation());
-				}
-			}
-			unset($o,$key);
-		}
-		$this->nextToken();
-		return $h;
-	}
-	public function decodeNumber() {
-		$sb = new StringBuf();
-		$hex = false;
-		$floating = false;
-		do {
-			$sb->add(com_wiris_util_json_JSon_0($this, $floating, $hex, $sb));
-			$this->nextToken();
-			if($this->c === 120) {
-				$hex = true;
-				$sb->add(com_wiris_util_json_JSon_1($this, $floating, $hex, $sb));
-				$this->nextToken();
-			}
-			if($this->c === 46 || $this->c === 69 || $this->c === 101) {
-				$floating = true;
-			}
-		} while($this->c >= 48 && $this->c <= 58 || $hex && $this->isHexDigit($this->c) || $floating && ($this->c === 46 || $this->c === 69 || $this->c === 101 || $this->c === 43 || $this->c === 45));
-		if($floating) {
-			return Std::parseFloat($sb->b);
-		} else {
-			return Std::parseInt($sb->b);
-		}
-	}
-	public function decodeString() {
-		$sb = new StringBuf();
-		$d = $this->c;
-		$this->nextToken();
-		while($this->c !== $d) {
-			if($this->c === 92) {
-				$this->nextToken();
-				if($this->c === 110) {
-					$sb->add("\x0A");
-				} else {
-					if($this->c === 114) {
-						$sb->add("\x0D");
-					} else {
-						if($this->c === 34) {
-							$sb->add("\"");
-						} else {
-							if($this->c === 39) {
-								$sb->add("'");
-							} else {
-								if($this->c === 116) {
-									$sb->add("\x09");
-								} else {
-									if($this->c === 92) {
-										$sb->add("\\");
-									} else {
-										if($this->c === 117) {
-											$this->nextToken();
-											$code = com_wiris_util_json_JSon_2($this, $d, $sb);
-											$this->nextToken();
-											$code .= com_wiris_util_json_JSon_3($this, $code, $d, $sb);
-											$this->nextToken();
-											$code .= com_wiris_util_json_JSon_4($this, $code, $d, $sb);
-											$this->nextToken();
-											$code .= com_wiris_util_json_JSon_5($this, $code, $d, $sb);
-											$dec = Std::parseInt("0x" . $code);
-											$sb->add(com_wiris_util_json_JSon_6($this, $code, $d, $dec, $sb));
-											unset($dec,$code);
-										} else {
-											throw new HException("Unknown scape sequence '\\" . com_wiris_util_json_JSon_7($this, $d, $sb) . "'");
-										}
-									}
-								}
-							}
-						}
-					}
-				}
-			} else {
-				$sb->add(com_wiris_util_json_JSon_8($this, $d, $sb));
-			}
-			$this->nextToken();
-		}
-		$this->nextToken();
-		return $sb->b;
-	}
-	public function decodeBooleanOrNull() {
-		$sb = new StringBuf();
-		while(com_wiris_util_xml_WCharacterBase::isLetter($this->c)) {
-			$sb->b .= chr($this->c);
-			$this->nextToken();
-		}
-		$word = $sb->b;
-		if($word === "true") {
-			return true;
-		} else {
-			if($word === "false") {
-				return false;
-			} else {
-				if($word === "null") {
-					return null;
-				} else {
-					throw new HException("Unrecognized keyword \"" . $word . "\".");
-				}
-			}
-		}
-	}
-	public function localDecode() {
-		$this->skipBlanks();
-		if($this->c === 123) {
-			return $this->decodeHash();
-		} else {
-			if($this->c === 91) {
-				return $this->decodeArray();
-			} else {
-				if($this->c === 34) {
-					return $this->decodeString();
-				} else {
-					if($this->c === 39) {
-						return $this->decodeString();
-					} else {
-						if($this->c === 45 || $this->c >= 48 && $this->c <= 58) {
-							return $this->decodeNumber();
-						} else {
-							if($this->c === 116 || $this->c === 102 || $this->c === 110) {
-								return $this->decodeBooleanOrNull();
-							} else {
-								throw new HException("Unrecognized char " . _hx_string_rec($this->c, ""));
-							}
-						}
-					}
-				}
-			}
-		}
-	}
-	public function localDecodeString($str) {
-		$this->init($str);
-		return $this->localDecode();
-	}
-	public function encodeIntegerFormat($sb, $i) {
-		$sb->add($i->toString());
-	}
 	public function encodeLong($sb, $i) {
 		$sb->add("" . Std::string($i));
 	}
@@ -361,17 +171,13 @@ public function encodeImpl($sb, $o) {
 										if(Std::is($o, _hx_qtype("haxe.Int64"))) {
 											$this->encodeLong($sb, $o);
 										} else {
-											if(Std::is($o, _hx_qtype("com.wiris.util.json.JSonIntegerFormat"))) {
-												$this->encodeIntegerFormat($sb, $o);
+											if(com_wiris_system_TypeTools::isBool($o)) {
+												$this->encodeBoolean($sb, com_wiris_system_TypeTools::toBool($o));
 											} else {
-												if(Std::is($o, _hx_qtype("Bool"))) {
-													$this->encodeBoolean($sb, $o);
+												if(Std::is($o, _hx_qtype("Float"))) {
+													$this->encodeFloat($sb, $o);
 												} else {
-													if(Std::is($o, _hx_qtype("Float"))) {
-														$this->encodeFloat($sb, $o);
-													} else {
-														throw new HException("Impossible to convert to json object of type " . Std::string(Type::getClass($o)));
-													}
+													throw new HException("Impossible to convert to json object of type " . Std::string(Type::getClass($o)));
 												}
 											}
 										}
@@ -403,15 +209,19 @@ public function __call($m, $a) {
 		else
 			throw new HException('Unable to call «'.$m.'»');
 	}
-	static function sb() { $»args = func_get_args(); return call_user_func_array(self::$sb, $»args); }
-	static $sb;
 	static function encode($o) {
 		$js = new com_wiris_util_json_JSon();
 		return $js->encodeObject($o);
 	}
 	static function decode($str) {
-		$json = new com_wiris_util_json_JSon();
-		return $json->localDecodeString($str);
+		try {
+			return com_wiris_util_json_parser_JsonParse::parse($str);
+		}catch(Exception $»e) {
+			$_ex_ = ($»e instanceof HException) ? $»e->e : $»e;
+			if(($e = $_ex_) instanceof com_wiris_system_Exception){
+				throw new HException($e->getMessage());
+			} else throw $»e;;
+		}
 	}
 	static function getDepth($o) {
 		if(com_wiris_system_TypeTools::isHash($o)) {
@@ -502,66 +312,3 @@ static function isJson($json) {
 	}
 	function __toString() { return 'com.wiris.util.json.JSon'; }
 }
-function com_wiris_util_json_JSon_0(&$»this, &$floating, &$hex, &$sb) {
-	{
-		$s = new haxe_Utf8(null);
-		$s->addChar($»this->c);
-		return $s->toString();
-	}
-}
-function com_wiris_util_json_JSon_1(&$»this, &$floating, &$hex, &$sb) {
-	{
-		$s = new haxe_Utf8(null);
-		$s->addChar($»this->c);
-		return $s->toString();
-	}
-}
-function com_wiris_util_json_JSon_2(&$»this, &$d, &$sb) {
-	{
-		$s = new haxe_Utf8(null);
-		$s->addChar($»this->c);
-		return $s->toString();
-	}
-}
-function com_wiris_util_json_JSon_3(&$»this, &$code, &$d, &$sb) {
-	{
-		$s = new haxe_Utf8(null);
-		$s->addChar($»this->c);
-		return $s->toString();
-	}
-}
-function com_wiris_util_json_JSon_4(&$»this, &$code, &$d, &$sb) {
-	{
-		$s = new haxe_Utf8(null);
-		$s->addChar($»this->c);
-		return $s->toString();
-	}
-}
-function com_wiris_util_json_JSon_5(&$»this, &$code, &$d, &$sb) {
-	{
-		$s = new haxe_Utf8(null);
-		$s->addChar($»this->c);
-		return $s->toString();
-	}
-}
-function com_wiris_util_json_JSon_6(&$»this, &$code, &$d, &$dec, &$sb) {
-	{
-		$s = new haxe_Utf8(null);
-		$s->addChar($dec);
-		return $s->toString();
-	}
-}
-function com_wiris_util_json_JSon_7(&$»this, &$d, &$sb) {
-	{
-		$s = new haxe_Utf8(null);
-		$s->addChar($»this->c);
-		return $s->toString();
-	}
-}
-function com_wiris_util_json_JSon_8(&$»this, &$d, &$sb) {
-	{
-		$s = new haxe_Utf8(null);
-		$s->addChar($»this->c);
-		return $s->toString();
-	}
-}
diff --git a/integration/lib/com/wiris/util/json/JSonIntegerFormat.class.php b/integration/lib/com/wiris/util/json/JSonIntegerFormat.class.php
deleted file mode 100644
index 69d965c6..00000000
--- a/integration/lib/com/wiris/util/json/JSonIntegerFormat.class.php
+++ /dev/null
@@ -1,29 +0,0 @@
-<?php
-
-class com_wiris_util_json_JSonIntegerFormat {
-	public function __construct($n, $format) {
-		if(!php_Boot::$skip_constructor) {
-		$this->n = $n;
-		$this->format = $format;
-	}}
-	public function toString() {
-		if($this->format === com_wiris_util_json_JSonIntegerFormat::$HEXADECIMAL) {
-			return "0x" . StringTools::hex($this->n, 0);
-		}
-		return "" . _hx_string_rec($this->n, "");
-	}
-	public $format;
-	public $n;
-	public function __call($m, $a) {
-		if(isset($this->$m) && is_callable($this->$m))
-			return call_user_func_array($this->$m, $a);
-		else if(isset($this->»dynamics[$m]) && is_callable($this->»dynamics[$m]))
-			return call_user_func_array($this->»dynamics[$m], $a);
-		else if('toString' == $m)
-			return $this->__toString();
-		else
-			throw new HException('Unable to call «'.$m.'»');
-	}
-	static $HEXADECIMAL = 0;
-	function __toString() { return $this->toString(); }
-}
diff --git a/integration/lib/com/wiris/util/json/StringParser.class.php b/integration/lib/com/wiris/util/json/StringParser.class.php
deleted file mode 100644
index 5df8088c..00000000
--- a/integration/lib/com/wiris/util/json/StringParser.class.php
+++ /dev/null
@@ -1,75 +0,0 @@
-<?php
-
-class com_wiris_util_json_StringParser {
-	public function __construct() {
-		;
-	}
-	public function isHexDigit($c) {
-		if($c >= 48 && $c <= 58) {
-			return true;
-		}
-		if($c >= 97 && $c <= 102) {
-			return true;
-		}
-		if($c >= 65 && $c <= 70) {
-			return true;
-		}
-		return false;
-	}
-	public function getPositionRepresentation() {
-		$i0 = com_wiris_common_WInteger::min($this->i, $this->n);
-		$s0 = com_wiris_common_WInteger::max(0, $this->i - 20);
-		$e0 = com_wiris_common_WInteger::min($this->n, $this->i + 20);
-		return "..." . _hx_substr($this->str, $s0, $i0 - $s0) . " >>> . <<<" . _hx_substr($this->str, $i0, $e0);
-	}
-	public function nextSafeToken() {
-		if($this->i < $this->n) {
-			$this->c = haxe_Utf8::charCodeAt(_hx_substr($this->str, $this->i, null), 0);
-			$this->i += strlen((com_wiris_util_json_StringParser_0($this)));
-		} else {
-			$this->c = -1;
-		}
-	}
-	public function nextToken() {
-		if($this->c === -1) {
-			throw new HException("End of string");
-		}
-		$this->nextSafeToken();
-	}
-	public function skipBlanks() {
-		while($this->i < $this->n && com_wiris_util_json_StringParser::isBlank($this->c)) {
-			$this->nextToken();
-		}
-	}
-	public function init($str) {
-		$this->str = $str;
-		$this->i = 0;
-		$this->n = strlen($str);
-		$this->nextToken();
-	}
-	public $str;
-	public $c;
-	public $n;
-	public $i;
-	public function __call($m, $a) {
-		if(isset($this->$m) && is_callable($this->$m))
-			return call_user_func_array($this->$m, $a);
-		else if(isset($this->»dynamics[$m]) && is_callable($this->»dynamics[$m]))
-			return call_user_func_array($this->»dynamics[$m], $a);
-		else if('toString' == $m)
-			return $this->__toString();
-		else
-			throw new HException('Unable to call «'.$m.'»');
-	}
-	static function isBlank($c) {
-		return $c === 32 || $c === 10 || $c === 13 || $c === 9 || $c === 160;
-	}
-	function __toString() { return 'com.wiris.util.json.StringParser'; }
-}
-function com_wiris_util_json_StringParser_0(&$»this) {
-	{
-		$s = new haxe_Utf8(null);
-		$s->addChar($»this->c);
-		return $s->toString();
-	}
-}
diff --git a/integration/lib/com/wiris/util/json/parser/ExtractedString.class.php b/integration/lib/com/wiris/util/json/parser/ExtractedString.class.php
new file mode 100644
index 00000000..5587d18e
--- /dev/null
+++ b/integration/lib/com/wiris/util/json/parser/ExtractedString.class.php
@@ -0,0 +1,22 @@
+<?php
+
+class com_wiris_util_json_parser_ExtractedString {
+	public function __construct($sourceEnd, $str) {
+		if(!php_Boot::$skip_constructor) {
+		$this->sourceEnd = $sourceEnd;
+		$this->str = $str;
+	}}
+	public $str;
+	public $sourceEnd;
+	public function __call($m, $a) {
+		if(isset($this->$m) && is_callable($this->$m))
+			return call_user_func_array($this->$m, $a);
+		else if(isset($this->»dynamics[$m]) && is_callable($this->»dynamics[$m]))
+			return call_user_func_array($this->»dynamics[$m], $a);
+		else if('toString' == $m)
+			return $this->__toString();
+		else
+			throw new HException('Unable to call «'.$m.'»');
+	}
+	function __toString() { return 'com.wiris.util.json.parser.ExtractedString'; }
+}
diff --git a/integration/lib/com/wiris/util/json/parser/JType.enum.php b/integration/lib/com/wiris/util/json/parser/JType.enum.php
new file mode 100644
index 00000000..ed4e4a12
--- /dev/null
+++ b/integration/lib/com/wiris/util/json/parser/JType.enum.php
@@ -0,0 +1,19 @@
+<?php
+
+class com_wiris_util_json_parser_JType extends Enum {
+	public static $TYPE_ARRAY;
+	public static $TYPE_CONSTANT;
+	public static $TYPE_HEURISTIC;
+	public static $TYPE_NAME;
+	public static $TYPE_NUMBER;
+	public static $TYPE_OBJECT;
+	public static $TYPE_STRING;
+	public static $__constructors = array(0 => 'TYPE_ARRAY', 6 => 'TYPE_CONSTANT', 2 => 'TYPE_HEURISTIC', 3 => 'TYPE_NAME', 5 => 'TYPE_NUMBER', 1 => 'TYPE_OBJECT', 4 => 'TYPE_STRING');
+	}
+com_wiris_util_json_parser_JType::$TYPE_ARRAY = new com_wiris_util_json_parser_JType("TYPE_ARRAY", 0);
+com_wiris_util_json_parser_JType::$TYPE_CONSTANT = new com_wiris_util_json_parser_JType("TYPE_CONSTANT", 6);
+com_wiris_util_json_parser_JType::$TYPE_HEURISTIC = new com_wiris_util_json_parser_JType("TYPE_HEURISTIC", 2);
+com_wiris_util_json_parser_JType::$TYPE_NAME = new com_wiris_util_json_parser_JType("TYPE_NAME", 3);
+com_wiris_util_json_parser_JType::$TYPE_NUMBER = new com_wiris_util_json_parser_JType("TYPE_NUMBER", 5);
+com_wiris_util_json_parser_JType::$TYPE_OBJECT = new com_wiris_util_json_parser_JType("TYPE_OBJECT", 1);
+com_wiris_util_json_parser_JType::$TYPE_STRING = new com_wiris_util_json_parser_JType("TYPE_STRING", 4);
diff --git a/integration/lib/com/wiris/util/json/parser/JsonParse.class.php b/integration/lib/com/wiris/util/json/parser/JsonParse.class.php
new file mode 100644
index 00000000..26c79b09
--- /dev/null
+++ b/integration/lib/com/wiris/util/json/parser/JsonParse.class.php
@@ -0,0 +1,480 @@
+<?php
+
+class com_wiris_util_json_parser_JsonParse {
+	public function __construct() { 
+	}
+	static $ALLOW_SINGLE_QUOTES = true;
+	static function parse($jsonString) {
+		$stateStack = new _hx_array(array());
+		$currentJType = null;
+		$expectingComma = false;
+		$expectingColon = false;
+		$fieldStart = 0;
+		$singleQuoteString = false;
+		$end = strlen($jsonString) - 1;
+		$i = 0;
+		$propertyName = null;
+		$currentContainer = null;
+		$value = null;
+		$current = null;
+		try {
+			while(com_wiris_util_json_parser_JsonParse::isWhitespace($current = com_wiris_system_Utf8::charValueAt($jsonString, $i))) {
+				$i++;
+			}
+		}catch(Exception $»e) {
+			$_ex_ = ($»e instanceof HException) ? $»e->e : $»e;
+			$e = $_ex_;
+			{
+				throw new HException(new com_wiris_system_Exception("Provided JSON string did not contain a value", null));
+			}
+		}
+		if($current === 123) {
+			$currentJType = com_wiris_util_json_parser_JType::$TYPE_OBJECT;
+			$currentContainer = new Hash();
+			$i++;
+		} else {
+			if($current === 91) {
+				$currentJType = com_wiris_util_json_parser_JType::$TYPE_ARRAY;
+				$currentContainer = new _hx_array(array());
+				$propertyName = null;
+				$i++;
+			} else {
+				if($current === 34 || com_wiris_util_json_parser_JsonParse::$ALLOW_SINGLE_QUOTES && $current === 39) {
+					$currentJType = com_wiris_util_json_parser_JType::$TYPE_STRING;
+					$singleQuoteString = $current === 39;
+					$fieldStart = $i;
+				} else {
+					if(com_wiris_util_json_parser_JsonParse::isLetter($current)) {
+						$currentJType = com_wiris_util_json_parser_JType::$TYPE_CONSTANT;
+						$fieldStart = $i;
+					} else {
+						if(com_wiris_util_json_parser_JsonParse::isNumberStart($current)) {
+							$currentJType = com_wiris_util_json_parser_JType::$TYPE_NUMBER;
+							$fieldStart = $i;
+						} else {
+							throw new HException(new com_wiris_system_Exception(com_wiris_util_json_parser_JsonParse::buildErrorMessage($stateStack, "Unexpected character \"" . _hx_string_rec($current, "") . "\" instead of root value"), null));
+						}
+					}
+				}
+			}
+		}
+		while($i <= $end) {
+			$current = com_wiris_system_Utf8::charValueAt($jsonString, $i);
+			if($currentJType === com_wiris_util_json_parser_JType::$TYPE_NAME) {
+				try {
+					$extracted = com_wiris_util_json_parser_JsonParse::extractString($jsonString, $i, $singleQuoteString);
+					$i = $extracted->sourceEnd;
+					$propertyName = $extracted->str;
+					$singleQuoteString = false;
+					unset($extracted);
+				}catch(Exception $»e) {
+					$_ex_ = ($»e instanceof HException) ? $»e->e : $»e;
+					$e2 = $_ex_;
+					{
+						throw new HException(new com_wiris_system_Exception(com_wiris_util_json_parser_JsonParse::buildErrorMessage($stateStack, "String did not have ending quote"), null));
+					}
+				}
+				$currentJType = com_wiris_util_json_parser_JType::$TYPE_HEURISTIC;
+				$expectingColon = true;
+				$i++;
+				unset($e2);
+			} else {
+				if($currentJType === com_wiris_util_json_parser_JType::$TYPE_STRING) {
+					try {
+						$extracted = com_wiris_util_json_parser_JsonParse::extractString($jsonString, $i, $singleQuoteString);
+						$i = $extracted->sourceEnd;
+						$value = $extracted->str;
+						$singleQuoteString = false;
+						unset($extracted);
+					}catch(Exception $»e) {
+						$_ex_ = ($»e instanceof HException) ? $»e->e : $»e;
+						$e2 = $_ex_;
+						{
+							throw new HException(new com_wiris_system_Exception(com_wiris_util_json_parser_JsonParse::buildErrorMessage($stateStack, "String did not have ending quote"), null));
+						}
+					}
+					if($currentContainer === null) {
+						return $value;
+					} else {
+						$expectingComma = true;
+						if(com_wiris_system_TypeTools::isHash($currentContainer)) {
+							_hx_deref(($currentContainer))->set($propertyName, $value);
+							$currentJType = com_wiris_util_json_parser_JType::$TYPE_OBJECT;
+						} else {
+							$currentContainer->push($value);
+							$currentJType = com_wiris_util_json_parser_JType::$TYPE_ARRAY;
+						}
+					}
+					$i++;
+					unset($e2);
+				} else {
+					if($currentJType === com_wiris_util_json_parser_JType::$TYPE_NUMBER) {
+						$withDecimal = false;
+						$withE = false;
+						do {
+							$current = com_wiris_system_Utf8::charValueAt($jsonString, $i);
+							if(!$withDecimal && $current === 46) {
+								$withDecimal = true;
+							} else {
+								if(!$withE && ($current === 101 || $current === 69)) {
+									$withE = true;
+								} else {
+									if(!com_wiris_util_json_parser_JsonParse::isNumberStart($current) && $current !== 43) {
+										break;
+									}
+								}
+							}
+						} while($i++ < $end);
+						$valueString = com_wiris_system_Utf8::mbSubstring($jsonString, $fieldStart, $i - $fieldStart);
+						try {
+							if($withDecimal || $withE) {
+								$value = Std::parseFloat($valueString);
+							} else {
+								$value = Std::parseInt($valueString);
+							}
+						}catch(Exception $»e) {
+							$_ex_ = ($»e instanceof HException) ? $»e->e : $»e;
+							$e2 = $_ex_;
+							{
+								throw new HException(new com_wiris_system_Exception(com_wiris_util_json_parser_JsonParse::buildErrorMessage($stateStack, "\"" . $valueString . "\" expected to be a number, but wasn't"), null));
+							}
+						}
+						if($currentContainer === null) {
+							return $value;
+						} else {
+							$expectingComma = true;
+							if(com_wiris_system_TypeTools::isHash($currentContainer)) {
+								_hx_deref(($currentContainer))->set($propertyName, $value);
+								$currentJType = com_wiris_util_json_parser_JType::$TYPE_OBJECT;
+							} else {
+								$currentContainer->push($value);
+								$currentJType = com_wiris_util_json_parser_JType::$TYPE_ARRAY;
+							}
+						}
+						unset($withE,$withDecimal,$valueString,$e2);
+					} else {
+						if($currentJType === com_wiris_util_json_parser_JType::$TYPE_CONSTANT) {
+							while(com_wiris_util_json_parser_JsonParse::isLetter($current) && $i++ < $end) {
+								$current = com_wiris_system_Utf8::charValueAt($jsonString, $i);
+							}
+							$valueString = com_wiris_system_Utf8::mbSubstring($jsonString, $fieldStart, $i - $fieldStart);
+							if("false" === $valueString) {
+								$value = false;
+							} else {
+								if("true" === $valueString) {
+									$value = true;
+								} else {
+									if("null" === $valueString) {
+										$value = null;
+									} else {
+										if(com_wiris_system_TypeTools::isHash($currentContainer)) {
+											$stateStack->push(new com_wiris_util_json_parser_State($propertyName, $currentContainer, com_wiris_util_json_parser_JType::$TYPE_OBJECT));
+										} else {
+											if(com_wiris_system_TypeTools::isArray($currentContainer)) {
+												$stateStack->push(new com_wiris_util_json_parser_State($propertyName, $currentContainer, com_wiris_util_json_parser_JType::$TYPE_ARRAY));
+											}
+										}
+										throw new HException(new com_wiris_system_Exception(com_wiris_util_json_parser_JsonParse::buildErrorMessage($stateStack, "\"" . $valueString . "\" is not a valid constant. Missing quotes?"), null));
+									}
+								}
+							}
+							if($currentContainer === null) {
+								return $value;
+							} else {
+								$expectingComma = true;
+								if(com_wiris_system_TypeTools::isHash($currentContainer)) {
+									_hx_deref(($currentContainer))->set($propertyName, $value);
+									$currentJType = com_wiris_util_json_parser_JType::$TYPE_OBJECT;
+								} else {
+									$currentContainer->push($value);
+									$currentJType = com_wiris_util_json_parser_JType::$TYPE_ARRAY;
+								}
+							}
+							unset($valueString);
+						} else {
+							if($currentJType === com_wiris_util_json_parser_JType::$TYPE_HEURISTIC) {
+								while(com_wiris_util_json_parser_JsonParse::isWhitespace($current) && $i++ < $end) {
+									$current = com_wiris_system_Utf8::charValueAt($jsonString, $i);
+								}
+								if($current !== 58 && $expectingColon) {
+									$stateStack->push(new com_wiris_util_json_parser_State($propertyName, $currentContainer, com_wiris_util_json_parser_JType::$TYPE_OBJECT));
+									throw new HException(new com_wiris_system_Exception(com_wiris_util_json_parser_JsonParse::buildErrorMessage($stateStack, "wasn't followed by a colon"), null));
+								}
+								if($current === 58) {
+									if($expectingColon) {
+										$expectingColon = false;
+										$i++;
+									} else {
+										$stateStack->push(new com_wiris_util_json_parser_State($propertyName, $currentContainer, com_wiris_util_json_parser_JType::$TYPE_OBJECT));
+										throw new HException(new com_wiris_system_Exception(com_wiris_util_json_parser_JsonParse::buildErrorMessage($stateStack, "was followed by too many colons"), null));
+									}
+								} else {
+									if($current === 34 || com_wiris_util_json_parser_JsonParse::$ALLOW_SINGLE_QUOTES && $current === 39) {
+										$currentJType = com_wiris_util_json_parser_JType::$TYPE_STRING;
+										$singleQuoteString = $current === 39;
+										$fieldStart = $i;
+									} else {
+										if($current === 123) {
+											$stateStack->push(new com_wiris_util_json_parser_State($propertyName, $currentContainer, com_wiris_util_json_parser_JType::$TYPE_OBJECT));
+											$currentJType = com_wiris_util_json_parser_JType::$TYPE_OBJECT;
+											$currentContainer = new Hash();
+											$i++;
+										} else {
+											if($current === 91) {
+												$stateStack->push(new com_wiris_util_json_parser_State($propertyName, $currentContainer, com_wiris_util_json_parser_JType::$TYPE_OBJECT));
+												$currentJType = com_wiris_util_json_parser_JType::$TYPE_ARRAY;
+												$currentContainer = new _hx_array(array());
+												$i++;
+											} else {
+												if(com_wiris_util_json_parser_JsonParse::isLetter($current)) {
+													$currentJType = com_wiris_util_json_parser_JType::$TYPE_CONSTANT;
+													$fieldStart = $i;
+												} else {
+													if(com_wiris_util_json_parser_JsonParse::isNumberStart($current)) {
+														$currentJType = com_wiris_util_json_parser_JType::$TYPE_NUMBER;
+														$fieldStart = $i;
+													} else {
+														throw new HException(new com_wiris_system_Exception(com_wiris_util_json_parser_JsonParse::buildErrorMessage($stateStack, "unexpected character \"" . _hx_string_rec($current, "") . "\" instead of object value"), null));
+													}
+												}
+											}
+										}
+									}
+								}
+							} else {
+								if($currentJType === com_wiris_util_json_parser_JType::$TYPE_OBJECT) {
+									while(com_wiris_util_json_parser_JsonParse::isWhitespace($current) && $i++ < $end) {
+										$current = com_wiris_system_Utf8::charValueAt($jsonString, $i);
+									}
+									if($current === 44) {
+										if($expectingComma) {
+											$expectingComma = false;
+											$i++;
+										} else {
+											$stateStack->push(new com_wiris_util_json_parser_State($propertyName, $currentContainer, com_wiris_util_json_parser_JType::$TYPE_OBJECT));
+											throw new HException(new com_wiris_system_Exception(com_wiris_util_json_parser_JsonParse::buildErrorMessage($stateStack, "followed by too many commas"), null));
+										}
+									} else {
+										if($current === 34 || com_wiris_util_json_parser_JsonParse::$ALLOW_SINGLE_QUOTES && $current === 39) {
+											if($expectingComma) {
+												$stateStack->push(new com_wiris_util_json_parser_State($propertyName, $currentContainer, com_wiris_util_json_parser_JType::$TYPE_OBJECT));
+												throw new HException(new com_wiris_system_Exception(com_wiris_util_json_parser_JsonParse::buildErrorMessage($stateStack, "wasn't followed by a comma"), null));
+											}
+											$currentJType = com_wiris_util_json_parser_JType::$TYPE_NAME;
+											$singleQuoteString = $current === 39;
+											$fieldStart = $i;
+										} else {
+											if($current === 125) {
+												if($stateStack->length > 0) {
+													$upper = $stateStack->pop();
+													$upperContainer = $upper->container;
+													$parentName = $upper->propertyName;
+													$currentJType = $upper->type;
+													if(com_wiris_system_TypeTools::isHash($upperContainer)) {
+														_hx_deref(($upperContainer))->set($parentName, $currentContainer);
+													} else {
+														$upperContainer->push($currentContainer);
+													}
+													$currentContainer = $upperContainer;
+													$expectingComma = true;
+													$i++;
+													unset($upperContainer,$upper,$parentName);
+												} else {
+													return $currentContainer;
+												}
+											} else {
+												if(!com_wiris_util_json_parser_JsonParse::isWhitespace($current)) {
+													throw new HException(new com_wiris_system_Exception(com_wiris_util_json_parser_JsonParse::buildErrorMessage($stateStack, "unexpected character '" . _hx_string_rec($current, "") . "' where a property name is expected. Missing quotes?"), null));
+												}
+											}
+										}
+									}
+								} else {
+									if($currentJType === com_wiris_util_json_parser_JType::$TYPE_ARRAY) {
+										while(com_wiris_util_json_parser_JsonParse::isWhitespace($current) && $i++ < $end) {
+											$current = com_wiris_system_Utf8::charValueAt($jsonString, $i);
+										}
+										if($current !== 44 && $current !== 93 && $current !== 125 && $expectingComma) {
+											$stateStack->push(new com_wiris_util_json_parser_State(null, $currentContainer, com_wiris_util_json_parser_JType::$TYPE_ARRAY));
+											throw new HException(new com_wiris_system_Exception(com_wiris_util_json_parser_JsonParse::buildErrorMessage($stateStack, "wasn't preceded by a comma"), null));
+										}
+										if($current === 44) {
+											if($expectingComma) {
+												$expectingComma = false;
+												$i++;
+											} else {
+												$stateStack->push(new com_wiris_util_json_parser_State(null, $currentContainer, com_wiris_util_json_parser_JType::$TYPE_ARRAY));
+												throw new HException(new com_wiris_system_Exception(com_wiris_util_json_parser_JsonParse::buildErrorMessage($stateStack, "preceded by too many commas"), null));
+											}
+										} else {
+											if($current === 34 || com_wiris_util_json_parser_JsonParse::$ALLOW_SINGLE_QUOTES && $current === 39) {
+												$currentJType = com_wiris_util_json_parser_JType::$TYPE_STRING;
+												$singleQuoteString = $current === 39;
+												$fieldStart = $i;
+											} else {
+												if($current === 123) {
+													$stateStack->push(new com_wiris_util_json_parser_State(null, $currentContainer, com_wiris_util_json_parser_JType::$TYPE_ARRAY));
+													$currentJType = com_wiris_util_json_parser_JType::$TYPE_OBJECT;
+													$currentContainer = new Hash();
+													$i++;
+												} else {
+													if($current === 91) {
+														$stateStack->push(new com_wiris_util_json_parser_State(null, $currentContainer, com_wiris_util_json_parser_JType::$TYPE_ARRAY));
+														$currentJType = com_wiris_util_json_parser_JType::$TYPE_ARRAY;
+														$currentContainer = new _hx_array(array());
+														$i++;
+													} else {
+														if($current === 93) {
+															if($stateStack->length > 0) {
+																$upper = $stateStack->pop();
+																$upperContainer = $upper->container;
+																$parentName = $upper->propertyName;
+																$currentJType = $upper->type;
+																if(com_wiris_system_TypeTools::isHash($upperContainer)) {
+																	_hx_deref(($upperContainer))->set($parentName, $currentContainer);
+																} else {
+																	$upperContainer->push($currentContainer);
+																}
+																$currentContainer = $upperContainer;
+																$expectingComma = true;
+																$i++;
+																unset($upperContainer,$upper,$parentName);
+															} else {
+																return $currentContainer;
+															}
+														} else {
+															if(com_wiris_util_json_parser_JsonParse::isLetter($current)) {
+																$currentJType = com_wiris_util_json_parser_JType::$TYPE_CONSTANT;
+																$fieldStart = $i;
+															} else {
+																if(com_wiris_util_json_parser_JsonParse::isNumberStart($current)) {
+																	$currentJType = com_wiris_util_json_parser_JType::$TYPE_NUMBER;
+																	$fieldStart = $i;
+																} else {
+																	$stateStack->push(new com_wiris_util_json_parser_State($propertyName, $currentContainer, com_wiris_util_json_parser_JType::$TYPE_ARRAY));
+																	throw new HException(new com_wiris_system_Exception(com_wiris_util_json_parser_JsonParse::buildErrorMessage($stateStack, "Unexpected character \"" . _hx_string_rec($current, "") . "\" instead of array value"), null));
+																}
+															}
+														}
+													}
+												}
+											}
+										}
+									}
+								}
+							}
+						}
+					}
+				}
+			}
+		}
+		throw new HException(new com_wiris_system_Exception("Root element wasn't terminated correctly (Missing ']' or '}'?)", null));
+	}
+	static function extractString($jsonString, $fieldStart, $singleQuote) {
+		$builder = new StringBuf();
+		$ret = null;
+		while(true) {
+			$i = com_wiris_util_json_parser_JsonParse::indexOfSpecial($jsonString, $fieldStart, $singleQuote);
+			$c = com_wiris_system_Utf8::charValueAt($jsonString, $i);
+			if(!$singleQuote && $c === 34 || $singleQuote && $c === 39) {
+				$builder->add(com_wiris_system_Utf8::mbSubstring($jsonString, $fieldStart + 1, $i - $fieldStart - 1));
+				$ret = new com_wiris_util_json_parser_ExtractedString($i, $builder->b);
+				break;
+			} else {
+				if($c === 92) {
+					$builder->add(com_wiris_system_Utf8::mbSubstring($jsonString, $fieldStart + 1, $i - $fieldStart - 1));
+					$c = com_wiris_system_Utf8::charValueAt($jsonString, $i + 1);
+					if($c === 34) {
+						$builder->b .= chr(34);
+					} else {
+						if($c === 92) {
+							$builder->b .= chr(92);
+						} else {
+							if($c === 47) {
+								$builder->b .= chr(47);
+							} else {
+								if($c === 110) {
+									$builder->b .= chr(10);
+								} else {
+									if($c === 114) {
+										$builder->b .= chr(13);
+									} else {
+										if($c === 116) {
+											$builder->b .= chr(9);
+										} else {
+											if($c === 117) {
+												$builder->add(com_wiris_util_json_parser_JsonParse_0($builder, $c, $fieldStart, $i, $jsonString, $ret, $singleQuote));
+												$fieldStart = $i + 5;
+												continue;
+											}
+										}
+									}
+								}
+							}
+						}
+					}
+					$fieldStart = $i + 1;
+				} else {
+					throw new HException("Index out of bounds");
+				}
+			}
+			unset($i,$c);
+		}
+		return $ret;
+	}
+	static function indexOfSpecial($str, $start, $singleQuote) {
+		$i = $start;
+		while(++$i < strlen($str)) {
+			$c = com_wiris_system_Utf8::charValueAt($str, $i);
+			if(!$singleQuote && $c === 34 || com_wiris_util_json_parser_JsonParse::$ALLOW_SINGLE_QUOTES && $singleQuote && $c === 39 || $c === 92) {
+				break;
+			}
+			unset($c);
+		}
+		return $i;
+	}
+	static function isWhitespace($c) {
+		return $c === 32 || $c === 9 || $c === 10 || $c === 13;
+	}
+	static function isLetter($c) {
+		return $c >= 97 && $c <= 122;
+	}
+	static function isNumberStart($c) {
+		return $c >= 48 && $c <= 57 || $c === 45;
+	}
+	static function buildErrorMessage($stateStack, $message) {
+		$jsonTrace = "";
+		$i = null;
+		{
+			$_g1 = 0; $_g = $stateStack->length;
+			while($_g1 < $_g) {
+				$i1 = $_g1++;
+				$name = _hx_array_get($stateStack, $i1)->propertyName;
+				if($name === null) {
+					$list = _hx_array_get($stateStack, $i1)->container;
+					$name = "[" . _hx_string_rec($list->length, "") . "]";
+					unset($list);
+				}
+				$jsonTrace .= $name . ((($i1 !== $stateStack->length - 1) ? "." : ""));
+				unset($name,$i1);
+			}
+		}
+		$jsonTrace = com_wiris_util_json_parser_JsonParse_1($i, $jsonTrace, $message, $stateStack);
+		return $jsonTrace . ": " . $message;
+	}
+	function __toString() { return 'com.wiris.util.json.parser.JsonParse'; }
+}
+function com_wiris_util_json_parser_JsonParse_0(&$builder, &$c, &$fieldStart, &$i, &$jsonString, &$ret, &$singleQuote) {
+	{
+		$s = new haxe_Utf8(null);
+		$s->addChar(Std::parseInt("0x" . com_wiris_system_Utf8::mbSubstring($jsonString, $i + 2, 4)));
+		return $s->toString();
+	}
+}
+function com_wiris_util_json_parser_JsonParse_1(&$i, &$jsonTrace, &$message, &$stateStack) {
+	if($jsonTrace === "") {
+		return "<root>";
+	} else {
+		return "<root>." . $jsonTrace;
+	}
+}
diff --git a/integration/lib/com/wiris/util/json/parser/State.class.php b/integration/lib/com/wiris/util/json/parser/State.class.php
new file mode 100644
index 00000000..175b9862
--- /dev/null
+++ b/integration/lib/com/wiris/util/json/parser/State.class.php
@@ -0,0 +1,24 @@
+<?php
+
+class com_wiris_util_json_parser_State {
+	public function __construct($propertyName, $container, $type) {
+		if(!php_Boot::$skip_constructor) {
+		$this->propertyName = $propertyName;
+		$this->container = $container;
+		$this->type = $type;
+	}}
+	public $type;
+	public $container;
+	public $propertyName;
+	public function __call($m, $a) {
+		if(isset($this->$m) && is_callable($this->$m))
+			return call_user_func_array($this->$m, $a);
+		else if(isset($this->»dynamics[$m]) && is_callable($this->»dynamics[$m]))
+			return call_user_func_array($this->»dynamics[$m], $a);
+		else if('toString' == $m)
+			return $this->__toString();
+		else
+			throw new HException('Unable to call «'.$m.'»');
+	}
+	function __toString() { return 'com.wiris.util.json.parser.State'; }
+}
diff --git a/integration/lib/com/wiris/util/xml/WCharacterBase.class.php b/integration/lib/com/wiris/util/xml/WCharacterBase.class.php
deleted file mode 100644
index cbc464db..00000000
--- a/integration/lib/com/wiris/util/xml/WCharacterBase.class.php
+++ /dev/null
@@ -1,919 +0,0 @@
-<?php
-
-class com_wiris_util_xml_WCharacterBase {
-	public function __construct(){}
-	static $NEGATIVE_THIN_SPACE = 57344;
-	static $LINE = 57345;
-	static $SEGMENT = 57346;
-	static $ALIGNMENT_MARK = 57358;
-	static $ROOT = 61696;
-	static $ROOT_VERTICAL = 61727;
-	static $ROOT_NO_TAIL = 61728;
-	static $ROOT_NO_TAIL_VERTICAL = 61759;
-	static $ROOT_LEFT_TAIL = 61760;
-	static $ROOT_VERTICAL_LINE = 61761;
-	static $HORIZONTAL_TAB = 9;
-	static $LINE_FEED = 10;
-	static $CARRIAGE_RETURN = 13;
-	static $SPACE = 32;
-	static $NUMBER_SIGN = 35;
-	static $ROUND_BRACKET_LEFT = 40;
-	static $ROUND_BRACKET_RIGHT = 41;
-	static $COMMA = 44;
-	static $FULL_STOP = 46;
-	static $SQUARE_BRACKET_LEFT = 91;
-	static $BACKSLASH = 92;
-	static $SQUARE_BRACKET_RIGHT = 93;
-	static $CIRCUMFLEX_ACCENT = 94;
-	static $LOW_LINE = 95;
-	static $CURLY_BRACKET_LEFT = 123;
-	static $VERTICAL_BAR = 124;
-	static $CURLY_BRACKET_RIGHT = 125;
-	static $TILDE = 126;
-	static $MACRON = 175;
-	static $COMBINING_LOW_LINE = 818;
-	static $MODIFIER_LETTER_CIRCUMFLEX_ACCENT = 710;
-	static $CARON = 711;
-	static $NO_BREAK_SPACE = 160;
-	static $EN_QUAD = 8192;
-	static $EM_QUAD = 8193;
-	static $EN_SPACE = 8194;
-	static $EM_SPACE = 8195;
-	static $THICK_SPACE = 8196;
-	static $MID_SPACE = 8197;
-	static $SIX_PER_EM_SPACE = 8198;
-	static $FIGIRE_SPACE = 8199;
-	static $PUNCTUATION_SPACE = 8200;
-	static $THIN_SPACE = 8201;
-	static $HAIR_SPACE = 8202;
-	static $ZERO_WIDTH_SPACE = 8203;
-	static $ZERO_WIDTH_NON_JOINER = 8204;
-	static $ZERO_WIDTH_JOINER = 8205;
-	static $DOUBLE_VERTICAL_BAR = 8214;
-	static $DOUBLE_HORIZONTAL_BAR = 9552;
-	static $NARROW_NO_BREAK_SPACE = 8239;
-	static $MEDIUM_MATHEMATICAL_SPACE = 8287;
-	static $WORD_JOINER = 8288;
-	static $PLANCKOVER2PI = 8463;
-	static $LEFTWARDS_ARROW = 8592;
-	static $UPWARDS_ARROW = 8593;
-	static $RIGHTWARDS_ARROW = 8594;
-	static $DOWNWARDS_ARROW = 8595;
-	static $LEFTRIGHT_ARROW = 8596;
-	static $UP_DOWN_ARROW = 8597;
-	static $LEFTWARDS_ARROW_FROM_BAR = 8612;
-	static $RIGHTWARDS_ARROW_FROM_BAR = 8614;
-	static $LEFTWARDS_ARROW_WITH_HOOK = 8617;
-	static $RIGHTWARDS_ARROW_WITH_HOOK = 8618;
-	static $LEFTWARDS_HARPOON_WITH_BARB_UPWARDS = 8636;
-	static $RIGHTWARDS_HARPOON_WITH_BARB_UPWARDS = 8640;
-	static $LEFTWARDS_DOUBLE_ARROW = 8656;
-	static $RIGHTWARDS_DOUBLE_ARROW = 8658;
-	static $LEFT_RIGHT_DOUBLE_ARROW = 8660;
-	static $LEFTWARDS_ARROW_OVER_RIGHTWARDS_ARROW = 8646;
-	static $RIGHTWARDS_ARROW_OVER_LEFTWARDS_ARROW = 8644;
-	static $LEFTWARDS_HARPOON_OVER_RIGHTWARDS_HARPOON = 8651;
-	static $RIGHTWARDS_HARPOON_OVER_LEFTWARDS_HARPOON = 8652;
-	static $RIGHTWARDS_ARROW_ABOVE_SHORT_LEFTWARDS_ARROW = 10562;
-	static $SHORT_RIGHTWARDS_ARROW_ABOVE_LEFTWARDS_ARROW = 10564;
-	static $LONG_RIGHTWARDS_ARROW = 10230;
-	static $LONG_LEFTWARDS_ARROW = 10229;
-	static $LONG_LEFT_RIGHT_ARROW = 10231;
-	static $LONG_LEFTWARDS_DOUBLE_ARROW = 10232;
-	static $LONG_RIGHTWARDS_DOUBLE_ARROW = 10233;
-	static $LONG_LEFT_RIGHT_DOUBLE_ARROW = 10234;
-	static $INTEGRAL = 8747;
-	static $TOP_HALF_INTEGRAL = 8992;
-	static $BOTTOM_HALF_INTEGRAL = 8993;
-	static $INTEGRAL_EXTENSION = 9134;
-	static $VERTICAL_LINE_EXTENSION = 9168;
-	static $TILDE_OPERATOR = 8764;
-	static $LEFT_CEILING = 8968;
-	static $RIGHT_CEILING = 8969;
-	static $LEFT_FLOOR = 8970;
-	static $RIGHT_FLOOR = 8971;
-	static $TOP_PARENTHESIS = 9180;
-	static $BOTTOM_PARENTHESIS = 9181;
-	static $TOP_SQUARE_BRACKET = 9140;
-	static $BOTTOM_SQUARE_BRACKET = 9141;
-	static $TOP_CURLY_BRACKET = 9182;
-	static $BOTTOM_CURLY_BRACKET = 9183;
-	static $MATHEMATICAL_LEFT_ANGLE_BRACKET = 10216;
-	static $MATHEMATICAL_RIGHT_ANGLE_BRACKET = 10217;
-	static $DOUBLE_STRUCK_ITALIC_CAPITAL_D = 8517;
-	static $DOUBLE_STRUCK_ITALIC_SMALL_D = 8518;
-	static $DOUBLE_STRUCK_ITALIC_SMALL_E = 8519;
-	static $DOUBLE_STRUCK_ITALIC_SMALL_I = 8520;
-	static $EPSILON = 949;
-	static $VAREPSILON = 1013;
-	static $DIGIT_ZERO = 48;
-	static $DIGIT_NINE = 57;
-	static $LATIN_CAPITAL_LETTER_A = 65;
-	static $LATIN_CAPITAL_LETTER_Z = 90;
-	static $LATIN_SMALL_LETTER_A = 97;
-	static $LATIN_SMALL_LETTER_Z = 122;
-	static $MATHEMATICAL_SCRIPT_CAPITAL_A = 119964;
-	static $MATHEMATICAL_SCRIPT_SMALL_A = 119990;
-	static $MATHEMATICAL_FRAKTUR_CAPITAL_A = 120068;
-	static $MATHEMATICAL_FRAKTUR_SMALL_A = 120094;
-	static $MATHEMATICAL_DOUBLE_STRUCK_CAPITAL_A = 120120;
-	static $MATHEMATICAL_DOUBLE_STRUCK_SMALL_A = 120146;
-	static $MATHEMATICAL_DOUBLE_STRUCK_DIGIT_ZERO = 120792;
-	static $MIDDLE_DOT = 183;
-	static $DOT_ABOVE = 729;
-	static $ARABIC_DECIMAL_SEPARATOR = 1643;
-	static $ARABIC_THOUSANDS_SEPARATOR = 1644;
-	static $ALIGNMENT_RELATION_OPERATORS;
-	static function isDigit($c) {
-		if(48 <= $c && $c <= 57) {
-			return true;
-		}
-		if(1632 <= $c && $c <= 1641) {
-			return true;
-		}
-		if(1776 <= $c && $c <= 1785) {
-			return true;
-		}
-		if(2790 <= $c && $c <= 2799) {
-			return true;
-		}
-		return false;
-	}
-	static function isIdentifier($c) {
-		return com_wiris_util_xml_WCharacterBase::isLetter($c) || com_wiris_util_xml_WCharacterBase::isCombiningCharacter($c) || $c === 95;
-	}
-	static function isLarge($c) {
-		return com_wiris_util_xml_WCharacterBase::binarySearch(com_wiris_util_xml_WCharacterBase::$largeOps, $c);
-	}
-	static function isVeryLarge($c) {
-		return com_wiris_util_xml_WCharacterBase::binarySearch(com_wiris_util_xml_WCharacterBase::$veryLargeOps, $c);
-	}
-	static function isBinaryOp($c) {
-		return com_wiris_util_xml_WCharacterBase::binarySearch(com_wiris_util_xml_WCharacterBase::$binaryOps, $c);
-	}
-	static function isRelation($c) {
-		return com_wiris_util_xml_WCharacterBase::binarySearch(com_wiris_util_xml_WCharacterBase::$relations, $c);
-	}
-	static function binarySearch($v, $c) {
-		$min = 0;
-		$max = $v->length - 1;
-		do {
-			$mid = intval(($min + $max) / 2);
-			$cc = $v[$mid];
-			if($c === $cc) {
-				return true;
-			} else {
-				if($c < $cc) {
-					$max = $mid - 1;
-				} else {
-					$min = $mid + 1;
-				}
-			}
-			unset($mid,$cc);
-		} while($min <= $max);
-		return false;
-	}
-	static $binaryOps;
-	static $relations;
-	static $largeOps;
-	static $veryLargeOps;
-	static $tallLetters;
-	static $longLetters;
-	static $negations;
-	static $mirrorDictionary;
-	static $subSuperScriptDictionary;
-	static $accentsDictionary = null;
-	static function initAccentsDictionary() {
-		if(com_wiris_util_xml_WCharacterBase::$accentsDictionary !== null) {
-			return;
-		}
-		$h = new Hash();
-		$h->set("A", new _hx_array(array(192, 193, 194, 195, 196, 197, 256, 258, 260, 461, 478, 480, 506, 512, 514, 550, 570, 7680, 7840, 7842, 7844, 7846, 7848, 7850, 7852, 7854, 7856, 7858, 7860, 7862, 9398, 11375, 65313)));
-		$h->set("AA", new _hx_array(array(42802)));
-		$h->set("AE", new _hx_array(array(198, 482, 508)));
-		$h->set("AO", new _hx_array(array(42804)));
-		$h->set("AU", new _hx_array(array(42806)));
-		$h->set("AV", new _hx_array(array(42808, 42810)));
-		$h->set("AY", new _hx_array(array(42812)));
-		$h->set("B", new _hx_array(array(385, 386, 579, 7682, 7684, 7686, 9399, 65314)));
-		$h->set("C", new _hx_array(array(199, 262, 264, 266, 268, 391, 571, 7688, 9400, 42814, 65315)));
-		$h->set("D", new _hx_array(array(208, 270, 272, 393, 394, 395, 7690, 7692, 7694, 7696, 7698, 9401, 42873, 65316)));
-		$h->set("DZ", new _hx_array(array(452, 497)));
-		$h->set("Dz", new _hx_array(array(453, 498)));
-		$h->set("E", new _hx_array(array(200, 201, 202, 203, 274, 276, 278, 280, 282, 398, 400, 516, 518, 552, 7700, 7702, 7704, 7706, 7708, 7864, 7866, 7868, 7870, 7872, 7874, 7876, 7878, 9402, 65317)));
-		$h->set("F", new _hx_array(array(401, 7710, 9403, 42875, 65318)));
-		$h->set("G", new _hx_array(array(284, 286, 288, 290, 403, 484, 486, 500, 7712, 9404, 42877, 42878, 42912, 65319)));
-		$h->set("H", new _hx_array(array(292, 294, 542, 7714, 7716, 7718, 7720, 7722, 9405, 11367, 11381, 42893, 65320)));
-		$h->set("I", new _hx_array(array(204, 205, 206, 207, 296, 298, 300, 302, 304, 407, 463, 520, 522, 7724, 7726, 7880, 7882, 9406, 65321)));
-		$h->set("J", new _hx_array(array(308, 584, 9407, 65322)));
-		$h->set("K", new _hx_array(array(310, 408, 488, 7728, 7730, 7732, 9408, 11369, 42816, 42818, 42820, 42914, 65323)));
-		$h->set("L", new _hx_array(array(313, 315, 317, 319, 321, 573, 7734, 7736, 7738, 7740, 9409, 11360, 11362, 42822, 42824, 42880, 65324)));
-		$h->set("LJ", new _hx_array(array(455)));
-		$h->set("Lj", new _hx_array(array(456)));
-		$h->set("M", new _hx_array(array(412, 7742, 7744, 7746, 9410, 11374, 65325)));
-		$h->set("N", new _hx_array(array(209, 323, 325, 327, 413, 504, 544, 7748, 7750, 7752, 7754, 9411, 42896, 42916, 65326)));
-		$h->set("NJ", new _hx_array(array(458)));
-		$h->set("Nj", new _hx_array(array(459)));
-		$h->set("O", new _hx_array(array(210, 211, 212, 213, 214, 216, 332, 334, 336, 390, 415, 416, 465, 490, 492, 510, 524, 526, 554, 556, 558, 560, 7756, 7758, 7760, 7762, 7884, 7886, 7888, 7890, 7892, 7894, 7896, 7898, 7900, 7902, 7904, 7906, 9412, 42826, 42828, 65327)));
-		$h->set("OI", new _hx_array(array(418)));
-		$h->set("OO", new _hx_array(array(42830)));
-		$h->set("OU", new _hx_array(array(546)));
-		$h->set("OE", new _hx_array(array(140, 338)));
-		$h->set("oe", new _hx_array(array(156, 339)));
-		$h->set("P", new _hx_array(array(420, 7764, 7766, 9413, 11363, 42832, 42834, 42836, 65328)));
-		$h->set("Q", new _hx_array(array(586, 9414, 42838, 42840, 65329)));
-		$h->set("R", new _hx_array(array(340, 342, 344, 528, 530, 588, 7768, 7770, 7772, 7774, 9415, 11364, 42842, 42882, 42918, 65330)));
-		$h->set("S", new _hx_array(array(346, 348, 350, 352, 536, 7776, 7778, 7780, 7782, 7784, 7838, 9416, 11390, 42884, 42920, 65331)));
-		$h->set("T", new _hx_array(array(354, 356, 358, 428, 430, 538, 574, 7786, 7788, 7790, 7792, 9417, 42886, 65332)));
-		$h->set("TZ", new _hx_array(array(42792)));
-		$h->set("U", new _hx_array(array(217, 218, 219, 220, 360, 362, 364, 366, 368, 370, 431, 467, 469, 471, 473, 475, 532, 534, 580, 7794, 7796, 7798, 7800, 7802, 7908, 7910, 7912, 7914, 7916, 7918, 7920, 9418, 65333)));
-		$h->set("V", new _hx_array(array(434, 581, 7804, 7806, 9419, 42846, 65334)));
-		$h->set("VY", new _hx_array(array(42848)));
-		$h->set("W", new _hx_array(array(372, 7808, 7810, 7812, 7814, 7816, 9420, 11378, 65335)));
-		$h->set("X", new _hx_array(array(7818, 7820, 9421, 65336)));
-		$h->set("Y", new _hx_array(array(221, 374, 376, 435, 562, 590, 7822, 7922, 7924, 7926, 7928, 7934, 9422, 65337)));
-		$h->set("Z", new _hx_array(array(377, 379, 381, 437, 548, 7824, 7826, 7828, 9423, 11371, 11391, 42850, 65338)));
-		$h->set("a", new _hx_array(array(224, 225, 226, 227, 228, 229, 257, 259, 261, 462, 479, 481, 507, 513, 515, 551, 592, 7681, 7834, 7841, 7843, 7845, 7847, 7849, 7851, 7853, 7855, 7857, 7859, 7861, 7863, 9424, 11365, 65345)));
-		$h->set("aa", new _hx_array(array(42803)));
-		$h->set("ae", new _hx_array(array(230, 483, 509)));
-		$h->set("ao", new _hx_array(array(42805)));
-		$h->set("au", new _hx_array(array(42807)));
-		$h->set("av", new _hx_array(array(42809, 42811)));
-		$h->set("ay", new _hx_array(array(42813)));
-		$h->set("b", new _hx_array(array(384, 387, 595, 7683, 7685, 7687, 9425, 65346)));
-		$h->set("c", new _hx_array(array(231, 263, 265, 267, 269, 392, 572, 7689, 8580, 9426, 42815, 65347)));
-		$h->set("d", new _hx_array(array(271, 273, 396, 598, 599, 7691, 7693, 7695, 7697, 7699, 9427, 42874, 65348)));
-		$h->set("dz", new _hx_array(array(454, 499)));
-		$h->set("e", new _hx_array(array(232, 233, 234, 235, 275, 277, 279, 281, 283, 477, 517, 519, 553, 583, 603, 7701, 7703, 7705, 7707, 7709, 7865, 7867, 7869, 7871, 7873, 7875, 7877, 7879, 9428, 65349)));
-		$h->set("f", new _hx_array(array(402, 7711, 9429, 42876, 65350)));
-		$h->set("g", new _hx_array(array(285, 287, 289, 291, 485, 487, 501, 608, 7545, 7713, 9430, 42879, 42913, 65351)));
-		$h->set("h", new _hx_array(array(293, 295, 543, 613, 7715, 7717, 7719, 7721, 7723, 7830, 9431, 11368, 11382, 65352)));
-		$h->set("hv", new _hx_array(array(405)));
-		$h->set("i", new _hx_array(array(236, 237, 238, 239, 297, 299, 301, 303, 305, 464, 521, 523, 616, 7725, 7727, 7881, 7883, 9432, 65353)));
-		$h->set("j", new _hx_array(array(309, 496, 585, 9433, 65354)));
-		$h->set("k", new _hx_array(array(311, 409, 489, 7729, 7731, 7733, 9434, 11370, 42817, 42819, 42821, 42915, 65355)));
-		$h->set("l", new _hx_array(array(314, 316, 318, 320, 322, 383, 410, 619, 7735, 7737, 7739, 7741, 9435, 11361, 42823, 42825, 42881, 65356)));
-		$h->set("lj", new _hx_array(array(457)));
-		$h->set("m", new _hx_array(array(623, 625, 7743, 7745, 7747, 9436, 65357)));
-		$h->set("n", new _hx_array(array(241, 324, 326, 328, 329, 414, 505, 626, 7749, 7751, 7753, 7755, 9437, 42897, 42917, 65358)));
-		$h->set("nj", new _hx_array(array(460)));
-		$h->set("o", new _hx_array(array(242, 243, 244, 245, 246, 248, 333, 335, 337, 417, 466, 491, 493, 511, 525, 527, 555, 557, 559, 561, 596, 629, 7757, 7759, 7761, 7763, 7885, 7887, 7889, 7891, 7893, 7895, 7897, 7899, 7901, 7903, 7905, 7907, 9438, 42827, 42829, 65359)));
-		$h->set("oi", new _hx_array(array(419)));
-		$h->set("ou", new _hx_array(array(547)));
-		$h->set("oo", new _hx_array(array(42831)));
-		$h->set("p", new _hx_array(array(421, 7549, 7765, 7767, 9439, 42833, 42835, 42837, 65360)));
-		$h->set("q", new _hx_array(array(587, 9440, 42839, 42841, 65361)));
-		$h->set("r", new _hx_array(array(341, 343, 345, 529, 531, 589, 637, 7769, 7771, 7773, 7775, 9441, 42843, 42883, 42919, 65362)));
-		$h->set("s", new _hx_array(array(223, 347, 349, 351, 353, 537, 575, 7777, 7779, 7781, 7783, 7785, 7835, 9442, 42885, 42921, 65363)));
-		$h->set("t", new _hx_array(array(355, 357, 359, 429, 539, 648, 7787, 7789, 7791, 7793, 7831, 9443, 11366, 42887, 65364)));
-		$h->set("tz", new _hx_array(array(42793)));
-		$h->set("u", new _hx_array(array(249, 250, 251, 252, 361, 363, 365, 367, 369, 371, 432, 468, 470, 472, 474, 476, 533, 535, 649, 7795, 7797, 7799, 7801, 7803, 7909, 7911, 7913, 7915, 7917, 7919, 7921, 9444, 65365)));
-		$h->set("v", new _hx_array(array(651, 652, 7805, 7807, 9445, 42847, 65366)));
-		$h->set("vy", new _hx_array(array(42849)));
-		$h->set("w", new _hx_array(array(373, 7809, 7811, 7813, 7815, 7817, 7832, 9446, 11379, 65367)));
-		$h->set("x", new _hx_array(array(7819, 7821, 9447, 65368)));
-		$h->set("y", new _hx_array(array(253, 255, 375, 436, 563, 591, 7823, 7833, 7923, 7925, 7927, 7929, 7935, 9448, 65369)));
-		$h->set("z", new _hx_array(array(378, 380, 382, 438, 549, 576, 7825, 7827, 7829, 9449, 11372, 42851, 65370)));
-		com_wiris_util_xml_WCharacterBase::$accentsDictionary = $h;
-	}
-	static $horizontalLTRStretchyChars;
-	static $tallAccents;
-	static $PUNCTUATION_CATEGORY = "P";
-	static $OTHER_CATEGORY = "C";
-	static $LETTER_CATEGORY = "L";
-	static $MARK_CATEGORY = "M";
-	static $NUMBER_CATEGORY = "N";
-	static $SYMBOL_CATEGORY = "S";
-	static $PHONETICAL_CATEGORY = "F";
-	static $UNICODES_WITH_CATEGORIES = "@P:21-23,25-2A,2C-2F,3A-3B,3F-40,5B-5D,5F,7B,7D,A1,A7,AB,B6-B7,BB,BF,37E,387,55A-55F,589-58A,5BE,5C0,5C3,5C6,5F3-5F4,609-60A,60C-60D,61B,61E-61F,66A-66D,6D4,E4F,E5A-E5B,2010-2022,2025-2026,2030-203E,2040,2043,2047,204E-2051,2057,205E,2308-230B,2329-232A,2772-2773,27C5-27C6,27E6-27EF,2983-2998,29D8-29DB,29FC-29FD,2E17,3030,FD3E-FD3F@C:AD,600-603,6DD,200B-200F,202A-202E,206A-206F@L:41-5A,61-7A,AA,B5,BA,C0-D6,D8-F6,F8-2C1,2C6-2D1,2E0-2E4,2EC,2EE,370-374,376-377,37A-37D,386,388-38A,38C,38E-3A1,3A3-3F5,3F7-481,48A-527,531-556,559,561-587,5D0-5EA,5F0-5F2,620-64A,66E-66F,671-6D3,6D5,6E5-6E6,6EE-6EF,6FA-6FC,6FF,750-77F,E01-E30,E32-E33,E40-E46,1D00-1DBF,1E00-1F15,1F18-1F1D,1F20-1F45,1F48-1F4D,1F50-1F57,1F59,1F5B,1F5D,1F5F-1F7D,1F80-1FB4,1FB6-1FBC,1FBE,1FC2-1FC4,1FC6-1FCC,1FD0-1FD3,1FD6-1FDB,1FE0-1FEC,1FF2-1FF4,1FF6-1FFC,207F,2090-2094,2102,2107,210A-2113,2115,2119-211D,2124,2126,2128,212B-212D,212F-2138,213C-213F,2145-2149,214E,2184,2C60-2C7F,306E,A717-A71F,A727,A788,A78B-A78C,A792,FB00-FB04,FB13-FB17,FB1D,FB1F-FB28,FB2A-FB36,FB38-FB3C,FB3E,FB40-FB41,FB43-FB44,FB46-FBB1,FBD3-FBE9,FBFC-FBFF,FC5E-FC63,FC6A,FC6D,FC70,FC73,FC91,FC94,FDF2,FE70-FE74,FE76-FEFC,1D400-1D454,1D456-1D49C,1D49E-1D49F,1D4A2,1D4A5-1D4A6,1D4A9-1D4AC,1D4AE-1D4B9,1D4BB,1D4BD-1D4C3,1D4C5-1D505,1D507-1D50A,1D50D-1D514,1D516-1D51C,1D51E-1D539,1D53B-1D53E,1D540-1D544,1D546,1D54A-1D550,1D552-1D6A5,1D6A8-1D6C0,1D6C2-1D6DA,1D6DC-1D6FA,1D6FC-1D714,1D716-1D734,1D736-1D74E,1D750-1D76E,1D770-1D788,1D78A-1D7A8,1D7AA-1D7C2,1D7C4-1D7C9@M:300-36F,483-489,591-5BD,5BF,5C1-5C2,5C4-5C5,5C7,610-61A,64B-65F,670,6D6-6DC,6DF-6E4,6E7-6E8,6EA-6ED,E31,E34-E3A,E47-E4E,1DC0-1DC1,1DC3,1DCA,1DFE-1DFF,20D0-20D2,20D6-20D7,20DB-20DF,20E1,20E4-20F0,FB1E,FE20-FE23@N:30-39,B2-B3,B9,BC-BE,660-669,6F0-6F9,E50-E59,2070,2074-2079,2080-2089,2153-215E,2460-2468,24EA,2780-2793,1D7CE-1D7FF@S:24,2B,3C-3E,5E,60,7C,7E,A2-A6,A8-A9,AC,AE-B1,B4,B8,D7,F7,2C2-2C5,2D2-2DF,2E5-2EB,2ED,2EF-2FF,375,384-385,3F6,482,58F,606-608,60B,60E-60F,6DE,6E9,6FD-6FE,E3F,1FBD,1FBF-1FC1,1FCD-1FCF,1FDD-1FDF,1FED-1FEF,1FFD-1FFE,2044,2052,20A0-20BA,2105,2116-2118,211E,2120,2122,2125,2127,2129,212E,2140-2144,214A-214B,214D,2190-21EA,21F4-2300,2302,2305-2306,230C-2313,2315-231A,231C-2323,232C-232E,2332,2336,233D,233F-2340,2353,2370,237C,2393-2394,23AF,23B4-23B6,23CE,23D0,23DC-23E7,2423,24B6-24E9,2500,2502,2506,2508,250A,250C,2510,2514,2518,251C,2524,252C,2534,253C,2550-256C,2571-2572,2580,2584,2588,258C,2590-2593,25A0-25FF,2605-2606,2609,260C,260E,2612,2621,2639-2644,2646-2649,2660-2667,2669-266B,266D-266F,267E,2680-2689,26A0,26A5,26AA-26AC,26B2,26E2,2702,2709,2713,2720,272A,2736,273D,279B,27C0-27C4,27C7-27C9,27CB-27CD,27D0-27E5,27F0-27FF,2900-2982,2999-29D7,29DC-29FB,29FE-2AFF,2B12-2B4C,2B50-2B54,3012,A720-A721,A789-A78A,FB29,FBB2-FBC1,FDFC,FFFC-FFFD,1D6C1,1D6DB,1D6FB,1D715,1D735,1D74F,1D76F,1D789,1D7A9,1D7C3@F:70,62,74,64,288,256,63,25F,6B,261,71,262,294,6D,271,6E,273,272,14B,274,72,280,27E,27D,278,3B2,66,76,3B8,F0,73,7A,283,292,282,290,E7,29D,78,263,3C7,281,127,295,68,266,26C,26E,28B,279,27B,6A,270,6C,26D,28E,29F,1A5,253,1AD,257,188,284,199,260,2A0,29B,28D,77,265,29C,2A1-2A2,267,298,1C0,1C3,1C2,1C1,27A,255,291,2C71,287,297,296,286,293,27C,2E2,1AB,26B,67,2A6,2A3,2A7,2A4,2A8,2A5,1DBF,1D4A,1D91,1BB,29E,2E3,19E,19B,3BB,17E,161,1F0,10D,69,65,25B,61,251,254,6F,75,79,F8,153,276,252,28C,264,26F,268,289,26A,28F,28A,259,275,250,E6,25C,25A,131,25E,29A,258,277,269,2BC,325,30A,32C,2B0,324,330,33C,32A,33A-33B,339,31C,31F-320,308,33D,318-319,2DE,2B7,2B2,2E0,2E4,303,207F,2E1,31A,334,31D,2D4,31E,2D5,329,32F,361,35C,322,2F9,2C,2BB,307,2D7,2D6,2B8,323,321,32B,2C8,2CC,2D0-2D1,306,2E,7C,2016,203F,2197-2198,30B,301,304,300,30F,A71B-A71C,2E5-2E9,30C,302,1DC4-1DC5,1DC8,311,2C7,2C6,316,2CE,317,2CF,2AD,2A9-2AB,274D,2A,56,46,57,43,4C,4A,152,398,1D191,1D18F,31-33,346,34D,34A-34C,348-349,5C,34E,2193,2191,2EC,1DB9,362,347,2B6,2ED,2F1-2F2,2F7,41-42,44-45,47-49,4B,4D-55,58-5B,5D,2F,28-29,7B,7D@";
-	static function getCategoriesUnicode() {
-		$categoriesUnicode = new Hash();
-		$categoriesUnicode->set(com_wiris_util_xml_WCharacterBase::$SYMBOL_CATEGORY, "SymbolUnicodeCategory");
-		$categoriesUnicode->set(com_wiris_util_xml_WCharacterBase::$PUNCTUATION_CATEGORY, "PunctuationUnicodeCategory");
-		$categoriesUnicode->set(com_wiris_util_xml_WCharacterBase::$LETTER_CATEGORY, "LetterUnicodeCategory");
-		$categoriesUnicode->set(com_wiris_util_xml_WCharacterBase::$MARK_CATEGORY, "MarkUnicodeCategory");
-		$categoriesUnicode->set(com_wiris_util_xml_WCharacterBase::$NUMBER_CATEGORY, "NumberUnicodeCategory");
-		$categoriesUnicode->set(com_wiris_util_xml_WCharacterBase::$PHONETICAL_CATEGORY, "PhoneticalUnicodeCategory");
-		$categoriesUnicode->set(com_wiris_util_xml_WCharacterBase::$OTHER_CATEGORY, "OtherUnicodeCategory");
-		return $categoriesUnicode;
-	}
-	static function getUnicodeCategoryList($category) {
-		$indexStart = _hx_index_of(com_wiris_util_xml_WCharacterBase::$UNICODES_WITH_CATEGORIES, "@" . $category . ":", null);
-		$unicodes = _hx_substr(com_wiris_util_xml_WCharacterBase::$UNICODES_WITH_CATEGORIES, $indexStart + 3, null);
-		$indexEnd = _hx_index_of($unicodes, "@", null);
-		$unicodes = _hx_substr($unicodes, 0, $indexEnd);
-		return com_wiris_util_xml_WCharacterBase::getUnicodesRangedStringList($unicodes);
-	}
-	static function getUnicodesRangedStringList($unicodesRangedList) {
-		$inputList = _hx_explode(",", $unicodesRangedList);
-		$unicodeList = new _hx_array(array());
-		$i = 0;
-		while($i < $inputList->length) {
-			$actual_range = $inputList[$i];
-			$actual_range = str_replace(" ", "", $actual_range);
-			if(_hx_index_of($actual_range, "-", null) !== -1) {
-				$firstRangeValueHex = com_wiris_util_xml_WCharacterBase::hexStringToUnicode(_hx_array_get(_hx_explode("-", $actual_range), 0));
-				$lastRangeValueHex = com_wiris_util_xml_WCharacterBase::hexStringToUnicode(_hx_array_get(_hx_explode("-", $actual_range), 1));
-				$actualValue = $firstRangeValueHex;
-				while($actualValue <= $lastRangeValueHex) {
-					$unicodeList->push(com_wiris_util_xml_WCharacterBase_0($actualValue, $actual_range, $firstRangeValueHex, $i, $inputList, $lastRangeValueHex, $unicodeList, $unicodesRangedList));
-					$actualValue++;
-				}
-				unset($lastRangeValueHex,$firstRangeValueHex,$actualValue);
-			} else {
-				$actualValue = com_wiris_util_xml_WCharacterBase::hexStringToUnicode($actual_range);
-				$unicodeList->push(com_wiris_util_xml_WCharacterBase_1($actualValue, $actual_range, $i, $inputList, $unicodeList, $unicodesRangedList));
-				unset($actualValue);
-			}
-			$i++;
-			unset($actual_range);
-		}
-		return $unicodeList;
-	}
-	static function hexStringToUnicode($unicode) {
-		return Std::parseInt("0x" . $unicode);
-	}
-	static $invisible;
-	static function getMirror($str) {
-		$mirroredStr = "";
-		$i = 0;
-		while($i < strlen($str)) {
-			$c = _hx_char_code_at($str, $i);
-			$j = 0;
-			while($j < com_wiris_util_xml_WCharacterBase::$mirrorDictionary->length) {
-				if($c === com_wiris_util_xml_WCharacterBase::$mirrorDictionary[$j]) {
-					$c = com_wiris_util_xml_WCharacterBase::$mirrorDictionary[$j + 1];
-					break;
-				}
-				$j += 2;
-			}
-			$mirroredStr .= com_wiris_util_xml_WCharacterBase_2($c, $i, $j, $mirroredStr, $str);
-			++$i;
-			unset($j,$c);
-		}
-		return $mirroredStr;
-	}
-	static function isStretchyLTR($c) {
-		$i = 0;
-		while($i < com_wiris_util_xml_WCharacterBase::$horizontalLTRStretchyChars->length) {
-			if($c === com_wiris_util_xml_WCharacterBase::$horizontalLTRStretchyChars[$i]) {
-				return true;
-			}
-			++$i;
-		}
-		return false;
-	}
-	static function getNegated($c) {
-		$i = 0;
-		while($i < com_wiris_util_xml_WCharacterBase::$negations->length) {
-			if(com_wiris_util_xml_WCharacterBase::$negations[$i] === $c) {
-				return com_wiris_util_xml_WCharacterBase::$negations[$i + 1];
-			}
-			$i += 2;
-		}
-		return -1;
-	}
-	static function getNotNegated($c) {
-		$i = 1;
-		while($i < com_wiris_util_xml_WCharacterBase::$negations->length) {
-			if(com_wiris_util_xml_WCharacterBase::$negations[$i] === $c) {
-				return com_wiris_util_xml_WCharacterBase::$negations[$i - 1];
-			}
-			$i += 2;
-		}
-		return -1;
-	}
-	static function isCombining($s) {
-		$it = com_wiris_system_Utf8::getIterator($s);
-		while($it->hasNext()) {
-			if(!com_wiris_util_xml_WCharacterBase::isCombiningCharacter($it->next())) {
-				return false;
-			}
-		}
-		return true;
-	}
-	static function isCombiningCharacter($c) {
-		return $c >= 768 && $c <= 879 || $c >= 6832 && $c <= 6911 || $c >= 7616 && $c <= 7679 && ($c >= 8400 && $c <= 8447) && ($c >= 65056 && $c <= 65071);
-	}
-	static function isLetter($c) {
-		if(com_wiris_util_xml_WCharacterBase::isDigit($c)) {
-			return false;
-		}
-		if(65 <= $c && $c <= 90) {
-			return true;
-		}
-		if(97 <= $c && $c <= 122) {
-			return true;
-		}
-		if(192 <= $c && $c <= 696 && $c !== 215 && $c !== 247) {
-			return true;
-		}
-		if(867 <= $c && $c <= 1521) {
-			return true;
-		}
-		if(1552 <= $c && $c <= 8188) {
-			return true;
-		}
-		if($c === 8472 || $c === 8467 || com_wiris_util_xml_WCharacterBase::isDoubleStruck($c) || com_wiris_util_xml_WCharacterBase::isFraktur($c) || com_wiris_util_xml_WCharacterBase::isScript($c)) {
-			return true;
-		}
-		if(com_wiris_util_xml_WCharacterBase::isChinese($c)) {
-			return true;
-		}
-		if(com_wiris_util_xml_WCharacterBase::isKorean($c)) {
-			return true;
-		}
-		return false;
-	}
-	static function isUnicodeMathvariant($c) {
-		return com_wiris_util_xml_WCharacterBase::isDoubleStruck($c) || com_wiris_util_xml_WCharacterBase::isFraktur($c) || com_wiris_util_xml_WCharacterBase::isScript($c);
-	}
-	static function isRequiredByQuizzes($c) {
-		return $c === 120128 || $c === 8450 || $c === 8461 || $c === 8469 || $c === 8473 || $c === 8474 || $c === 8477 || $c === 8484;
-	}
-	static function isDoubleStruck($c) {
-		return $c >= 120120 && $c <= 120171 || $c === 8450 || $c === 8461 || $c === 8469 || $c === 8473 || $c === 8474 || $c === 8477 || $c === 8484;
-	}
-	static function isFraktur($c) {
-		return $c >= 120068 && $c <= 120119 || $c === 8493 || $c === 8460 || $c === 8465 || $c === 8476 || $c === 8488;
-	}
-	static function isScript($c) {
-		return $c >= 119964 && $c <= 120015 || $c === 8458 || $c === 8459 || $c === 8466 || $c === 8464 || $c === 8499 || $c === 8500 || $c === 8492 || $c === 8495 || $c === 8496 || $c === 8497 || $c === 8475;
-	}
-	static function isLowerCase($c) {
-		return $c >= 97 && $c <= 122 || $c >= 224 && $c <= 255 || $c >= 591 && $c >= 659 || $c >= 661 && $c <= 687 || $c >= 940 && $c <= 974;
-	}
-	static function isWord($c) {
-		if(com_wiris_util_xml_WCharacterBase::isDevanagari($c) || com_wiris_util_xml_WCharacterBase::isChinese($c) || com_wiris_util_xml_WCharacterBase::isHebrew($c) || com_wiris_util_xml_WCharacterBase::isThai($c) || com_wiris_util_xml_WCharacterBase::isGujarati($c) || com_wiris_util_xml_WCharacterBase::isKorean($c)) {
-			return true;
-		}
-		return false;
-	}
-	static function isArabianString($s) {
-		$i = strlen($s) - 1;
-		while($i >= 0) {
-			if(!com_wiris_util_xml_WCharacterBase::isArabian(_hx_char_code_at($s, $i))) {
-				return false;
-			}
-			--$i;
-		}
-		return true;
-	}
-	static function isArabian($c) {
-		if($c >= 1536 && $c <= 1791 && !com_wiris_util_xml_WCharacterBase::isDigit($c)) {
-			return true;
-		}
-		return false;
-	}
-	static function isHebrew($c) {
-		if($c >= 1424 && $c <= 1535) {
-			return true;
-		}
-		return false;
-	}
-	static function isChinese($c) {
-		if($c >= 13312 && $c <= 40959) {
-			return true;
-		}
-		return false;
-	}
-	static function isKorean($c) {
-		if($c >= 12593 && $c <= 52044) {
-			return true;
-		}
-		return false;
-	}
-	static function isGreek($c) {
-		if($c >= 945 && $c <= 969) {
-			return true;
-		} else {
-			if($c >= 913 && $c <= 937 && $c !== 930) {
-				return true;
-			} else {
-				if($c === 977 || $c === 981 || $c === 982) {
-					return true;
-				}
-			}
-		}
-		return false;
-	}
-	static function isDevanagari($c) {
-		if($c >= 2304 && $c < 2431) {
-			return true;
-		}
-		return false;
-	}
-	static function isGujarati($c) {
-		if($c >= 2689 && $c < 2788 || $c === 2800 || $c === 2801) {
-			return true;
-		}
-		return false;
-	}
-	static function isThai($c) {
-		if(3585 <= $c && $c < 3676) {
-			return true;
-		}
-		return false;
-	}
-	static function isDevanagariString($s) {
-		$i = strlen($s) - 1;
-		while($i >= 0) {
-			if(!com_wiris_util_xml_WCharacterBase::isDevanagari(_hx_char_code_at($s, $i))) {
-				return false;
-			}
-			--$i;
-		}
-		return true;
-	}
-	static function isRTL($c) {
-		if(com_wiris_util_xml_WCharacterBase::isHebrew($c) || com_wiris_util_xml_WCharacterBase::isArabian($c)) {
-			return true;
-		}
-		return false;
-	}
-	static function isTallLetter($c) {
-		if(97 <= $c && $c <= 122 || 945 <= $c && $c <= 969) {
-			return com_wiris_util_xml_WCharacterBase::binarySearch(com_wiris_util_xml_WCharacterBase::$tallLetters, $c);
-		}
-		return true;
-	}
-	static function isLongLetter($c) {
-		if(97 <= $c && $c <= 122 || 945 <= $c && $c <= 969) {
-			return com_wiris_util_xml_WCharacterBase::binarySearch(com_wiris_util_xml_WCharacterBase::$longLetters, $c);
-		} else {
-			if(65 <= $c && $c <= 90) {
-				return false;
-			}
-		}
-		return true;
-	}
-	static function isLTRNumber($text) {
-		$i = 0;
-		$n = haxe_Utf8::length($text);
-		while($i < $n) {
-			if(!com_wiris_util_xml_WCharacterBase::isDigit(haxe_Utf8::charCodeAt($text, $i))) {
-				return false;
-			}
-			++$i;
-		}
-		return true;
-	}
-	static function isSuperscript($c) {
-		return $c === 178 || $c === 179 || $c === 185 || $c >= 8304 && $c <= 8319 && $c !== 8306 && $c !== 8307;
-	}
-	static function isSubscript($c) {
-		return $c >= 8320 && $c <= 8348 && $c !== 8335;
-	}
-	static function isSuperscriptOrSubscript($c) {
-		return com_wiris_util_xml_WCharacterBase::isSuperscript($c) || com_wiris_util_xml_WCharacterBase::isSubscript($c);
-	}
-	static function normalizeSubSuperScript($c) {
-		$i = 0;
-		$n = com_wiris_util_xml_WCharacterBase::$subSuperScriptDictionary->length;
-		while($i < $n) {
-			if(com_wiris_util_xml_WCharacterBase::$subSuperScriptDictionary[$i] === $c) {
-				return com_wiris_util_xml_WCharacterBase::$subSuperScriptDictionary[$i + 1];
-			}
-			$i += 2;
-		}
-		return $c;
-	}
-	static function isInvisible($c) {
-		return com_wiris_util_xml_WCharacterBase::binarySearch(com_wiris_util_xml_WCharacterBase::$invisible, $c);
-	}
-	static $horizontalOperators;
-	static function isHorizontalOperator($c) {
-		return com_wiris_util_xml_WCharacterBase::binarySearch(com_wiris_util_xml_WCharacterBase::$horizontalOperators, $c);
-	}
-	static $latinLetters;
-	static $greekLetters;
-	static function latin2Greek($l) {
-		$index = -1;
-		if($l < 100) {
-			$index = _hx_index_of(com_wiris_util_xml_WCharacterBase::$latinLetters, "@00" . _hx_string_rec($l, "") . "@", null);
-		} else {
-			if($l < 1000) {
-				$index = _hx_index_of(com_wiris_util_xml_WCharacterBase::$latinLetters, "@0" . _hx_string_rec($l, "") . "@", null);
-			} else {
-				$index = _hx_index_of(com_wiris_util_xml_WCharacterBase::$latinLetters, "@" . _hx_string_rec($l, "") . "@", null);
-			}
-		}
-		if($index !== -1) {
-			$s = _hx_substr(com_wiris_util_xml_WCharacterBase::$greekLetters, $index + 1, 4);
-			return Std::parseInt($s);
-		}
-		return $l;
-	}
-	static function greek2Latin($g) {
-		$index = -1;
-		if($g < 100) {
-			$index = _hx_index_of(com_wiris_util_xml_WCharacterBase::$greekLetters, "@00" . _hx_string_rec($g, "") . "@", null);
-		} else {
-			if($g < 1000) {
-				$index = _hx_index_of(com_wiris_util_xml_WCharacterBase::$greekLetters, "@0" . _hx_string_rec($g, "") . "@", null);
-			} else {
-				$index = _hx_index_of(com_wiris_util_xml_WCharacterBase::$greekLetters, "@" . _hx_string_rec($g, "") . "@", null);
-			}
-		}
-		if($index !== -1) {
-			$s = _hx_substr(com_wiris_util_xml_WCharacterBase::$latinLetters, $index + 1, 4);
-			return Std::parseInt($s);
-		}
-		return $g;
-	}
-	static function isOp($c) {
-		return com_wiris_util_xml_WCharacterBase::isLarge($c) || com_wiris_util_xml_WCharacterBase::isVeryLarge($c) || com_wiris_util_xml_WCharacterBase::isBinaryOp($c) || com_wiris_util_xml_WCharacterBase::isRelation($c) || $c === _hx_char_code_at(".", 0) || $c === _hx_char_code_at(",", 0) || $c === _hx_char_code_at(":", 0);
-	}
-	static function isTallAccent($c) {
-		$i = 0;
-		while($i < com_wiris_util_xml_WCharacterBase::$tallAccents->length) {
-			if($c === com_wiris_util_xml_WCharacterBase::$tallAccents[$i]) {
-				return true;
-			}
-			++$i;
-		}
-		return false;
-	}
-	static function isDisplayedWithStix($c) {
-		if($c >= 592 && $c <= 687) {
-			return true;
-		}
-		if($c >= 688 && $c <= 767) {
-			return true;
-		}
-		if($c >= 8215 && $c <= 8233 || $c >= 8241 && $c <= 8303) {
-			return true;
-		}
-		if($c >= 8304 && $c <= 8351) {
-			return true;
-		}
-		if($c >= 8400 && $c <= 8447) {
-			return true;
-		}
-		if($c >= 8448 && $c <= 8527) {
-			return true;
-		}
-		if($c >= 8528 && $c <= 8591) {
-			return true;
-		}
-		if($c >= 8592 && $c <= 8703) {
-			return true;
-		}
-		if($c >= 8704 && $c <= 8959) {
-			return true;
-		}
-		if($c >= 8960 && $c <= 9215) {
-			return true;
-		}
-		if($c >= 9312 && $c <= 9471) {
-			return true;
-		}
-		if($c >= 9472 && $c <= 9599) {
-			return true;
-		}
-		if($c >= 9600 && $c <= 9631) {
-			return true;
-		}
-		if($c >= 9632 && $c <= 9727) {
-			return true;
-		}
-		if($c >= 9728 && $c <= 9983) {
-			return true;
-		}
-		if($c >= 9984 && $c <= 10175) {
-			return true;
-		}
-		if($c >= 10176 && $c <= 10223) {
-			return true;
-		}
-		if($c >= 10224 && $c <= 10239) {
-			return true;
-		}
-		if($c >= 10240 && $c <= 10495) {
-			return true;
-		}
-		if($c >= 10496 && $c <= 10623) {
-			return true;
-		}
-		if($c >= 10624 && $c <= 10751) {
-			return true;
-		}
-		if($c >= 10752 && $c <= 11007) {
-			return true;
-		}
-		if($c >= 11008 && $c <= 11263) {
-			return true;
-		}
-		if($c >= 12288 && $c <= 12351) {
-			return true;
-		}
-		if($c >= 57344 && $c <= 65535) {
-			return true;
-		}
-		if($c >= 119808 && $c <= 119963 || $c >= 120224 && $c <= 120831) {
-			return true;
-		}
-		if($c === 12398 || $c === 42791 || $c === 42898) {
-			return true;
-		}
-		return false;
-	}
-	static function latinToDoublestruck($codepoint) {
-		if($codepoint === 67) {
-			return 8450;
-		} else {
-			if($codepoint === 72) {
-				return 8461;
-			} else {
-				if($codepoint === 78) {
-					return 8469;
-				} else {
-					if($codepoint === 80) {
-						return 8473;
-					} else {
-						if($codepoint === 81) {
-							return 8474;
-						} else {
-							if($codepoint === 82) {
-								return 8477;
-							} else {
-								if($codepoint === 90) {
-									return 8484;
-								} else {
-									if($codepoint >= com_wiris_util_xml_WCharacterBase::$LATIN_CAPITAL_LETTER_A && $codepoint <= com_wiris_util_xml_WCharacterBase::$LATIN_CAPITAL_LETTER_Z) {
-										return $codepoint + (com_wiris_util_xml_WCharacterBase::$MATHEMATICAL_DOUBLE_STRUCK_CAPITAL_A - com_wiris_util_xml_WCharacterBase::$LATIN_CAPITAL_LETTER_A);
-									} else {
-										if($codepoint >= com_wiris_util_xml_WCharacterBase::$LATIN_SMALL_LETTER_A && $codepoint <= com_wiris_util_xml_WCharacterBase::$LATIN_SMALL_LETTER_Z) {
-											return $codepoint + (com_wiris_util_xml_WCharacterBase::$MATHEMATICAL_DOUBLE_STRUCK_SMALL_A - com_wiris_util_xml_WCharacterBase::$LATIN_SMALL_LETTER_A);
-										} else {
-											if($codepoint >= com_wiris_util_xml_WCharacterBase::$DIGIT_ZERO && $codepoint <= com_wiris_util_xml_WCharacterBase::$DIGIT_NINE) {
-												return $codepoint + (com_wiris_util_xml_WCharacterBase::$MATHEMATICAL_DOUBLE_STRUCK_DIGIT_ZERO - com_wiris_util_xml_WCharacterBase::$DIGIT_ZERO);
-											} else {
-												return $codepoint;
-											}
-										}
-									}
-								}
-							}
-						}
-					}
-				}
-			}
-		}
-	}
-	static function latinToScript($codepoint) {
-		if($codepoint === 66) {
-			return 8492;
-		} else {
-			if($codepoint === 69) {
-				return 8496;
-			} else {
-				if($codepoint === 70) {
-					return 8497;
-				} else {
-					if($codepoint === 72) {
-						return 8459;
-					} else {
-						if($codepoint === 73) {
-							return 8464;
-						} else {
-							if($codepoint === 76) {
-								return 8466;
-							} else {
-								if($codepoint === 77) {
-									return 8499;
-								} else {
-									if($codepoint === 82) {
-										return 8475;
-									} else {
-										if($codepoint === 101) {
-											return 8495;
-										} else {
-											if($codepoint === 103) {
-												return 8458;
-											} else {
-												if($codepoint === 111) {
-													return 8500;
-												} else {
-													if($codepoint >= com_wiris_util_xml_WCharacterBase::$LATIN_CAPITAL_LETTER_A && $codepoint <= com_wiris_util_xml_WCharacterBase::$LATIN_CAPITAL_LETTER_Z) {
-														return $codepoint + (com_wiris_util_xml_WCharacterBase::$MATHEMATICAL_SCRIPT_CAPITAL_A - com_wiris_util_xml_WCharacterBase::$LATIN_CAPITAL_LETTER_A);
-													} else {
-														if($codepoint >= com_wiris_util_xml_WCharacterBase::$LATIN_SMALL_LETTER_A && $codepoint <= com_wiris_util_xml_WCharacterBase::$LATIN_SMALL_LETTER_Z) {
-															return $codepoint + (com_wiris_util_xml_WCharacterBase::$MATHEMATICAL_SCRIPT_SMALL_A - com_wiris_util_xml_WCharacterBase::$LATIN_SMALL_LETTER_A);
-														} else {
-															return $codepoint;
-														}
-													}
-												}
-											}
-										}
-									}
-								}
-							}
-						}
-					}
-				}
-			}
-		}
-	}
-	static function latinToFraktur($codepoint) {
-		if($codepoint === 67) {
-			return 8493;
-		} else {
-			if($codepoint === 72) {
-				return 8460;
-			} else {
-				if($codepoint === 73) {
-					return 8465;
-				} else {
-					if($codepoint === 82) {
-						return 8476;
-					} else {
-						if($codepoint === 90) {
-							return 8488;
-						} else {
-							if($codepoint >= com_wiris_util_xml_WCharacterBase::$LATIN_CAPITAL_LETTER_A && $codepoint <= com_wiris_util_xml_WCharacterBase::$LATIN_CAPITAL_LETTER_Z) {
-								return $codepoint + (com_wiris_util_xml_WCharacterBase::$MATHEMATICAL_FRAKTUR_CAPITAL_A - com_wiris_util_xml_WCharacterBase::$LATIN_CAPITAL_LETTER_A);
-							} else {
-								if($codepoint >= com_wiris_util_xml_WCharacterBase::$LATIN_SMALL_LETTER_A && $codepoint <= com_wiris_util_xml_WCharacterBase::$LATIN_SMALL_LETTER_Z) {
-									return $codepoint + (com_wiris_util_xml_WCharacterBase::$MATHEMATICAL_FRAKTUR_SMALL_A - com_wiris_util_xml_WCharacterBase::$LATIN_SMALL_LETTER_A);
-								} else {
-									return $codepoint;
-								}
-							}
-						}
-					}
-				}
-			}
-		}
-	}
-	static function stripAccent($c) {
-		com_wiris_util_xml_WCharacterBase::initAccentsDictionary();
-		if($c >= 128) {
-			$i = com_wiris_util_xml_WCharacterBase::$accentsDictionary->keys();
-			while($i->hasNext()) {
-				$s = $i->next();
-				$chars = com_wiris_util_xml_WCharacterBase::$accentsDictionary->get($s);
-				if(com_wiris_util_xml_WCharacterBase::binarySearch($chars, $c)) {
-					return $s;
-				}
-				unset($s,$chars);
-			}
-			return com_wiris_util_xml_WCharacterBase_3($c, $i);
-		} else {
-			return com_wiris_util_xml_WCharacterBase_4($c);
-		}
-	}
-	function __toString() { return 'com.wiris.util.xml.WCharacterBase'; }
-}
-com_wiris_util_xml_WCharacterBase::$ALIGNMENT_RELATION_OPERATORS = new _hx_array(array(61, 8801, 8764, 8776, 8771, 8773, 8800, 8802, 8769, 62, 60, 8805, 8804, 10878, 10877, 10887, 10888, 8810, 8811, 8733, 8826, 8827, 8882, 8883));
-com_wiris_util_xml_WCharacterBase::$binaryOps = new _hx_array(array(43, 45, 47, 177, 183, 215, 247, 8226, 8722, 8723, 8724, 8726, 8727, 8728, 8743, 8744, 8745, 8746, 8760, 8768, 8846, 8851, 8852, 8853, 8854, 8855, 8856, 8857, 8858, 8859, 8861, 8862, 8863, 8864, 8865, 8890, 8891, 8900, 8901, 8902, 8903, 8905, 8906, 8907, 8908, 8910, 8911, 8914, 8915, 8966, 9021, 9675, 10678, 10789, 10794, 10797, 10798, 10799, 10804, 10805, 10812, 10815, 10835, 10836, 10837, 10838, 10846, 10847, 10851));
-com_wiris_util_xml_WCharacterBase::$relations = new _hx_array(array(60, 61, 62, 8592, 8593, 8594, 8595, 8596, 8597, 8598, 8599, 8600, 8601, 8602, 8603, 8604, 8605, 8606, 8608, 8610, 8611, 8614, 8617, 8618, 8619, 8620, 8621, 8622, 8624, 8625, 8627, 8630, 8631, 8636, 8637, 8638, 8639, 8640, 8641, 8642, 8643, 8644, 8645, 8646, 8647, 8648, 8649, 8650, 8651, 8652, 8653, 8654, 8655, 8656, 8657, 8658, 8659, 8660, 8661, 8666, 8667, 8669, 8693, 8712, 8713, 8715, 8716, 8733, 8739, 8740, 8741, 8742, 8764, 8765, 8769, 8770, 8771, 8772, 8773, 8774, 8775, 8776, 8777, 8778, 8779, 8781, 8782, 8783, 8784, 8785, 8786, 8787, 8788, 8789, 8790, 8791, 8793, 8794, 8795, 8796, 8799, 8800, 8801, 8802, 8804, 8805, 8806, 8807, 8808, 8809, 8810, 8811, 8812, 8814, 8815, 8816, 8817, 8818, 8819, 8820, 8821, 8822, 8823, 8824, 8825, 8826, 8827, 8828, 8829, 8830, 8831, 8832, 8833, 8834, 8835, 8836, 8837, 8838, 8839, 8840, 8841, 8842, 8843, 8847, 8848, 8849, 8850, 8866, 8867, 8869, 8871, 8872, 8873, 8874, 8875, 8876, 8877, 8878, 8879, 8882, 8883, 8884, 8885, 8886, 8887, 8888, 8904, 8909, 8912, 8913, 8918, 8919, 8920, 8921, 8922, 8923, 8926, 8927, 8930, 8931, 8934, 8935, 8936, 8937, 8938, 8939, 8940, 8941, 8994, 8995, 9123, 10229, 10230, 10231, 10232, 10233, 10234, 10236, 10239, 10501, 10514, 10515, 10531, 10532, 10533, 10534, 10535, 10536, 10537, 10538, 10547, 10550, 10551, 10560, 10561, 10562, 10564, 10567, 10574, 10575, 10576, 10577, 10578, 10579, 10580, 10581, 10582, 10583, 10584, 10585, 10586, 10587, 10588, 10589, 10590, 10591, 10592, 10593, 10606, 10607, 10608, 10620, 10621, 10869, 10877, 10878, 10885, 10886, 10887, 10888, 10889, 10890, 10891, 10892, 10901, 10902, 10909, 10910, 10913, 10914, 10927, 10928, 10933, 10934, 10935, 10936, 10937, 10938, 10949, 10950, 10955, 10956, 10987, 11005));
-com_wiris_util_xml_WCharacterBase::$largeOps = new _hx_array(array(8719, 8720, 8721, 8896, 8897, 8898, 8899, 10756, 10757, 10758, 10759, 10760));
-com_wiris_util_xml_WCharacterBase::$veryLargeOps = new _hx_array(array(8747, 8748, 8749, 8750, 8751, 8752, 8753, 8754, 8755, 10763, 10764, 10765, 10766, 10767, 10768, 10774, 10775, 10776, 10777, 10778, 10779, 10780));
-com_wiris_util_xml_WCharacterBase::$tallLetters = new _hx_array(array(98, 100, 102, 104, 105, 106, 107, 108, 116, 946, 948, 950, 952, 955, 958));
-com_wiris_util_xml_WCharacterBase::$longLetters = new _hx_array(array(103, 106, 112, 113, 121, 946, 947, 950, 951, 956, 958, 961, 962, 966, 967, 968));
-com_wiris_util_xml_WCharacterBase::$negations = new _hx_array(array(61, 8800, 8801, 8802, 8764, 8769, 8712, 8713, 8715, 8716, 8834, 8836, 8835, 8837, 8838, 8840, 8839, 8841, 62, 8815, 60, 8814, 8805, 8817, 8804, 8816, 10878, 8817, 10877, 8816, 8776, 8777, 8771, 8772, 8773, 8775, 8849, 8930, 8850, 8931, 8707, 8708, 8741, 8742));
-com_wiris_util_xml_WCharacterBase::$mirrorDictionary = new _hx_array(array(40, 41, 41, 40, 60, 62, 62, 60, 91, 93, 93, 91, 123, 125, 125, 123, 171, 187, 187, 171, 3898, 3899, 3899, 3898, 3900, 3901, 3901, 3900, 5787, 5788, 5788, 5787, 8249, 8250, 8250, 8249, 8261, 8262, 8262, 8261, 8317, 8318, 8318, 8317, 8333, 8334, 8334, 8333, 8712, 8715, 8713, 8716, 8714, 8717, 8715, 8712, 8716, 8713, 8717, 8714, 8725, 10741, 8764, 8765, 8765, 8764, 8771, 8909, 8786, 8787, 8787, 8786, 8788, 8789, 8789, 8788, 8804, 8805, 8805, 8804, 8806, 8807, 8807, 8806, 8808, 8809, 8809, 8808, 8810, 8811, 8811, 8810, 8814, 8815, 8815, 8814, 8816, 8817, 8817, 8816, 8818, 8819, 8819, 8818, 8820, 8821, 8821, 8820, 8822, 8823, 8823, 8822, 8824, 8825, 8825, 8824, 8826, 8827, 8827, 8826, 8828, 8829, 8829, 8828, 8830, 8831, 8831, 8830, 8832, 8833, 8833, 8832, 8834, 8835, 8835, 8834, 8836, 8837, 8837, 8836, 8838, 8839, 8839, 8838, 8840, 8841, 8841, 8840, 8842, 8843, 8843, 8842, 8847, 8848, 8848, 8847, 8849, 8850, 8850, 8849, 8856, 10680, 8866, 8867, 8867, 8866, 8870, 10974, 8872, 10980, 8873, 10979, 8875, 10981, 8880, 8881, 8881, 8880, 8882, 8883, 8883, 8882, 8884, 8885, 8885, 8884, 8886, 8887, 8887, 8886, 8905, 8906, 8906, 8905, 8907, 8908, 8908, 8907, 8909, 8771, 8912, 8913, 8913, 8912, 8918, 8919, 8919, 8918, 8920, 8921, 8921, 8920, 8922, 8923, 8923, 8922, 8924, 8925, 8925, 8924, 8926, 8927, 8927, 8926, 8928, 8929, 8929, 8928, 8930, 8931, 8931, 8930, 8932, 8933, 8933, 8932, 8934, 8935, 8935, 8934, 8936, 8937, 8937, 8936, 8938, 8939, 8939, 8938, 8940, 8941, 8941, 8940, 8944, 8945, 8945, 8944, 8946, 8954, 8947, 8955, 8948, 8956, 8950, 8957, 8951, 8958, 8954, 8946, 8955, 8947, 8956, 8948, 8957, 8950, 8958, 8951, 8968, 8969, 8969, 8968, 8970, 8971, 8971, 8970, 9001, 9002, 9002, 9001, 10088, 10089, 10089, 10088, 10090, 10091, 10091, 10090, 10092, 10093, 10093, 10092, 10094, 10095, 10095, 10094, 10096, 10097, 10097, 10096, 10098, 10099, 10099, 10098, 10100, 10101, 10101, 10100, 10179, 10180, 10180, 10179, 10181, 10182, 10182, 10181, 10184, 10185, 10185, 10184, 10187, 10189, 10189, 10187, 10197, 10198, 10198, 10197, 10205, 10206, 10206, 10205, 10210, 10211, 10211, 10210, 10212, 10213, 10213, 10212, 10214, 10215, 10215, 10214, 10216, 10217, 10217, 10216, 10218, 10219, 10219, 10218, 10220, 10221, 10221, 10220, 10222, 10223, 10223, 10222, 10627, 10628, 10628, 10627, 10629, 10630, 10630, 10629, 10631, 10632, 10632, 10631, 10633, 10634, 10634, 10633, 10635, 10636, 10636, 10635, 10637, 10640, 10638, 10639, 10639, 10638, 10640, 10637, 10641, 10642, 10642, 10641, 10643, 10644, 10644, 10643, 10645, 10646, 10646, 10645, 10647, 10648, 10648, 10647, 10680, 8856, 10688, 10689, 10689, 10688, 10692, 10693, 10693, 10692, 10703, 10704, 10704, 10703, 10705, 10706, 10706, 10705, 10708, 10709, 10709, 10708, 10712, 10713, 10713, 10712, 10714, 10715, 10715, 10714, 10741, 8725, 10744, 10745, 10745, 10744, 10748, 10749, 10749, 10748, 10795, 10796, 10796, 10795, 10797, 10798, 10798, 10797, 10804, 10805, 10805, 10804, 10812, 10813, 10813, 10812, 10852, 10853, 10853, 10852, 10873, 10874, 10874, 10873, 10877, 10878, 10878, 10877, 10879, 10880, 10880, 10879, 10881, 10882, 10882, 10881, 10883, 10884, 10884, 10883, 10891, 10892, 10892, 10891, 10897, 10898, 10898, 10897, 10899, 10900, 10900, 10899, 10901, 10902, 10902, 10901, 10903, 10904, 10904, 10903, 10905, 10906, 10906, 10905, 10907, 10908, 10908, 10907, 10913, 10914, 10914, 10913, 10918, 10919, 10919, 10918, 10920, 10921, 10921, 10920, 10922, 10923, 10923, 10922, 10924, 10925, 10925, 10924, 10927, 10928, 10928, 10927, 10931, 10932, 10932, 10931, 10939, 10940, 10940, 10939, 10941, 10942, 10942, 10941, 10943, 10944, 10944, 10943, 10945, 10946, 10946, 10945, 10947, 10948, 10948, 10947, 10949, 10950, 10950, 10949, 10957, 10958, 10958, 10957, 10959, 10960, 10960, 10959, 10961, 10962, 10962, 10961, 10963, 10964, 10964, 10963, 10965, 10966, 10966, 10965, 10974, 8870, 10979, 8873, 10980, 8872, 10981, 8875, 10988, 10989, 10989, 10988, 10999, 11000, 11000, 10999, 11001, 11002, 11002, 11001, 11778, 11779, 11779, 11778, 11780, 11781, 11781, 11780, 11785, 11786, 11786, 11785, 11788, 11789, 11789, 11788, 11804, 11805, 11805, 11804, 11808, 11809, 11809, 11808, 11810, 11811, 11811, 11810, 11812, 11813, 11813, 11812, 11814, 11815, 11815, 11814, 11816, 11817, 11817, 11816, 12296, 12297, 12297, 12296, 12298, 12299, 12299, 12298, 12300, 12301, 12301, 12300, 12302, 12303, 12303, 12302, 12304, 12305, 12305, 12304, 12308, 12309, 12309, 12308, 12310, 12311, 12311, 12310, 12312, 12313, 12313, 12312, 12314, 12315, 12315, 12314, 65113, 65114, 65114, 65113, 65115, 65116, 65116, 65115, 65117, 65118, 65118, 65117, 65124, 65125, 65125, 65124, 65288, 65289, 65289, 65288, 65308, 65310, 65310, 65308, 65339, 65341, 65341, 65339, 65371, 65373, 65373, 65371, 65375, 65376, 65376, 65375, 65378, 65379, 65379, 65378, 9115, 9118, 9116, 9119, 9117, 9120, 9118, 9115, 9119, 9116, 9120, 9117, 9121, 9124, 9122, 9125, 9123, 9126, 9124, 9121, 9125, 9122, 9126, 9123, 9127, 9131, 9130, 9134, 9129, 9133, 9131, 9127, 9134, 9130, 9133, 9129, 9128, 9132, 9132, 9128));
-com_wiris_util_xml_WCharacterBase::$subSuperScriptDictionary = new _hx_array(array(178, 50, 179, 51, 185, 49, 8304, 48, 8305, 105, 8308, 52, 8309, 53, 8310, 54, 8311, 55, 8312, 56, 8313, 57, 8314, 43, 8315, 45, 8316, 61, 8317, 40, 8318, 41, 8319, 110, 8320, 48, 8321, 49, 8322, 50, 8323, 51, 8324, 52, 8325, 53, 8326, 54, 8327, 55, 8328, 56, 8329, 57, 8330, 43, 8331, 45, 8332, 61, 8333, 40, 8334, 41, 8336, 97, 8337, 101, 8338, 111, 8339, 120, 8340, 601, 8341, 104, 8342, 107, 8343, 108, 8344, 109, 8345, 110, 8346, 112, 8347, 115, 8348, 116));
-com_wiris_util_xml_WCharacterBase::$horizontalLTRStretchyChars = new _hx_array(array(com_wiris_util_xml_WCharacterBase::$LEFTWARDS_ARROW, com_wiris_util_xml_WCharacterBase::$RIGHTWARDS_ARROW, com_wiris_util_xml_WCharacterBase::$LEFTRIGHT_ARROW, com_wiris_util_xml_WCharacterBase::$LEFTWARDS_ARROW_FROM_BAR, com_wiris_util_xml_WCharacterBase::$RIGHTWARDS_ARROW_FROM_BAR, com_wiris_util_xml_WCharacterBase::$LEFTWARDS_ARROW_WITH_HOOK, com_wiris_util_xml_WCharacterBase::$RIGHTWARDS_ARROW_WITH_HOOK, com_wiris_util_xml_WCharacterBase::$LEFTWARDS_HARPOON_WITH_BARB_UPWARDS, com_wiris_util_xml_WCharacterBase::$RIGHTWARDS_HARPOON_WITH_BARB_UPWARDS, com_wiris_util_xml_WCharacterBase::$LEFTWARDS_DOUBLE_ARROW, com_wiris_util_xml_WCharacterBase::$RIGHTWARDS_DOUBLE_ARROW, com_wiris_util_xml_WCharacterBase::$TOP_CURLY_BRACKET, com_wiris_util_xml_WCharacterBase::$BOTTOM_CURLY_BRACKET, com_wiris_util_xml_WCharacterBase::$TOP_PARENTHESIS, com_wiris_util_xml_WCharacterBase::$BOTTOM_PARENTHESIS, com_wiris_util_xml_WCharacterBase::$TOP_SQUARE_BRACKET, com_wiris_util_xml_WCharacterBase::$BOTTOM_SQUARE_BRACKET, com_wiris_util_xml_WCharacterBase::$LEFTWARDS_ARROW_OVER_RIGHTWARDS_ARROW, com_wiris_util_xml_WCharacterBase::$RIGHTWARDS_ARROW_OVER_LEFTWARDS_ARROW, com_wiris_util_xml_WCharacterBase::$LEFTWARDS_HARPOON_OVER_RIGHTWARDS_HARPOON, com_wiris_util_xml_WCharacterBase::$RIGHTWARDS_HARPOON_OVER_LEFTWARDS_HARPOON, com_wiris_util_xml_WCharacterBase::$SEGMENT));
-com_wiris_util_xml_WCharacterBase::$tallAccents = new _hx_array(array(com_wiris_util_xml_WCharacterBase::$LEFTWARDS_ARROW_OVER_RIGHTWARDS_ARROW, com_wiris_util_xml_WCharacterBase::$RIGHTWARDS_ARROW_OVER_LEFTWARDS_ARROW, com_wiris_util_xml_WCharacterBase::$LEFTWARDS_HARPOON_OVER_RIGHTWARDS_HARPOON, com_wiris_util_xml_WCharacterBase::$RIGHTWARDS_HARPOON_OVER_LEFTWARDS_HARPOON));
-com_wiris_util_xml_WCharacterBase::$invisible = new _hx_array(array(8289, 8290, 8291));
-com_wiris_util_xml_WCharacterBase::$horizontalOperators = new _hx_array(array(175, 818, 8592, 8594, 8596, 8612, 8614, 8617, 8618, 8636, 8637, 8640, 8641, 8644, 8646, 8651, 8652, 8656, 8658, 8660, 8764, 9140, 9141, 9180, 9181, 9182, 9183, 9552, 10562, 10564, 10602, 10605, 57345, 57346));
-com_wiris_util_xml_WCharacterBase::$latinLetters = "@0065@0066@0067@0068@0069@0070@0071@0072@0073@0074@0075@0076@0077@0078@0079@0080@0081@0082@0083@0084@0085@0086@0087@0088@0089@0090" . "@0097@0098@0099@0100@0101@0102@0103@0104@0105@0106@0107@0108@0109@0110@0111@0112@0113@0114@0115@0116@0117@0118@0119@0120@0121@0122@";
-com_wiris_util_xml_WCharacterBase::$greekLetters = "@0913@0914@0935@0916@0917@0934@0915@0919@0921@0977@0922@0923@0924@0925@0927@0928@0920@0929@0931@0932@0933@0962@0937@0926@0936@0918" . "@0945@0946@0967@0948@0949@0966@0947@0951@0953@0966@0954@0955@0956@0957@0959@0960@0952@0961@0963@0964@0965@0982@0969@0958@0968@0950@";
-function com_wiris_util_xml_WCharacterBase_0(&$actualValue, &$actual_range, &$firstRangeValueHex, &$i, &$inputList, &$lastRangeValueHex, &$unicodeList, &$unicodesRangedList) {
-	{
-		$s = new haxe_Utf8(null);
-		$s->addChar($actualValue);
-		return $s->toString();
-	}
-}
-function com_wiris_util_xml_WCharacterBase_1(&$actualValue, &$actual_range, &$i, &$inputList, &$unicodeList, &$unicodesRangedList) {
-	{
-		$s = new haxe_Utf8(null);
-		$s->addChar($actualValue);
-		return $s->toString();
-	}
-}
-function com_wiris_util_xml_WCharacterBase_2(&$c, &$i, &$j, &$mirroredStr, &$str) {
-	{
-		$s = new haxe_Utf8(null);
-		$s->addChar($c);
-		return $s->toString();
-	}
-}
-function com_wiris_util_xml_WCharacterBase_3(&$c, &$i) {
-	{
-		$s = new haxe_Utf8(null);
-		$s->addChar($c);
-		return $s->toString();
-	}
-}
-function com_wiris_util_xml_WCharacterBase_4(&$c) {
-	{
-		$s = new haxe_Utf8(null);
-		$s->addChar($c);
-		return $s->toString();
-	}
-}
diff --git a/integration/lib/tech.txt b/integration/lib/tech.txt
index fa557ad9..2c0ea7b5 100644
--- a/integration/lib/tech.txt
+++ b/integration/lib/tech.txt
@@ -1 +1 @@
-php
\ No newline at end of file
+php
diff --git a/integration/resource.php b/integration/resource.php
deleted file mode 100644
index 60d526a2..00000000
--- a/integration/resource.php
+++ /dev/null
@@ -1,10 +0,0 @@
-<?php
-// ${license.statement}
-require_once ('pluginbuilder.php');
-
-$provider = $pluginBuilder->getCustomParamsProvider();
-$resource = $provider->getRequiredParameter('resourcefile');
-
-$resourceLoader = $pluginBuilder->newResourceLoader();
-header('Content-Type:' . $resourceLoader->getContentType($resource));
-echo $resourceLoader->getcontent($resource);
diff --git a/thirdpartylibs.xml b/thirdpartylibs.xml
index 693f273a..50381d08 100644
--- a/thirdpartylibs.xml
+++ b/thirdpartylibs.xml
@@ -3,7 +3,7 @@
     <library>
         <location>integration</location>
         <name>MathType Web Integration PHP library</name>
-        <version>7.23.0</version>
+        <version>7.28.1</version>
         <license>GPL</license>
         <licenseversion>3.0+</licenseversion>
     </library>
