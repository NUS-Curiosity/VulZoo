diff --git a/scandium-core/src/main/java/org/eclipse/californium/scandium/DTLSConnector.java b/scandium-core/src/main/java/org/eclipse/californium/scandium/DTLSConnector.java
index d5d4b8b86e..1cb67d3f24 100644
--- a/scandium-core/src/main/java/org/eclipse/californium/scandium/DTLSConnector.java
+++ b/scandium-core/src/main/java/org/eclipse/californium/scandium/DTLSConnector.java
@@ -1035,7 +1035,7 @@ public void stop() {
 		for (Runnable job : pending) {
 			try {
 				job.run();
-			} catch (Exception e) {
+			} catch (Throwable e) {
 				LOGGER.warn("Shutdown DTLS connector:", e);
 			}
 		}
@@ -1401,7 +1401,7 @@ public void run() {
 
 					@Override
 					public void run() {
-						if (running.get()) {
+						if (running.get() && connection.isExecuting()) {
 							processRecord(record, connection);
 						}
 					}
@@ -1971,7 +1971,7 @@ public void run() {
 						connection.getExecutor().execute(new Runnable() {
 							@Override
 							public void run() {
-								if (running.get()) {
+								if (running.get() && connections.getConnectionByAddress().isExecuting()) {
 									processClientHello(clientHello, record, connections);
 								}
 							}
@@ -2399,7 +2399,7 @@ public void send(final RawData message) {
 					@Override
 					public void run() {
 						try {
-							if (running.get()) {
+							if (running.get() && connection.isExecuting()) {
 								sendMessage(now, message, connection);
 							} else {
 								DROP_LOGGER.trace("DTLSConnector drops {} outgoing bytes to {}:{}, connector not running!", message.getSize(), message.getAddress(), message.getPort());
@@ -2816,7 +2816,7 @@ private void processAsynchronousHandshakeResult(final HandshakeResult handshakeR
 
 					@Override
 					public void run() {
-						if (running.get()) {
+						if (running.get() && connection.isExecuting()) {
 							Handshaker handshaker = connection.getOngoingHandshake();
 							if (handshaker != null) {
 								try {
diff --git a/scandium-core/src/main/java/org/eclipse/californium/scandium/dtls/InMemoryConnectionStore.java b/scandium-core/src/main/java/org/eclipse/californium/scandium/dtls/InMemoryConnectionStore.java
index 3882be82e3..5f3d0c95e5 100644
--- a/scandium-core/src/main/java/org/eclipse/californium/scandium/dtls/InMemoryConnectionStore.java
+++ b/scandium-core/src/main/java/org/eclipse/californium/scandium/dtls/InMemoryConnectionStore.java
@@ -534,15 +534,27 @@ public boolean remove(final Connection connection) {
 	public synchronized boolean remove(final Connection connection, final boolean removeFromSessionCache) {
 		boolean removed = connections.remove(connection.getConnectionId(), connection) == connection;
 		if (removed) {
-			List<Runnable> pendings = connection.getExecutor().shutdownNow();
+			int pending = 0;
+			SerialExecutor executor = connection.getExecutor();
+			if (executor != null) {
+				List<Runnable> pendings = connection.getExecutor().shutdownNow();
+				for (Runnable job : pendings) {
+					try {
+						job.run();
+					} catch (Throwable e) {
+						LOG.warn("Removing connection:", e);
+					}
+				}
+				pending = pendings.size();
+			}
 			if (LOG.isTraceEnabled()) {
 				LOG.trace("{}connection: remove {} (size {}, left jobs: {})", tag, connection, connections.size(),
-						pendings.size(), new Throwable("connection removed!"));
-			} else if (pendings.isEmpty()) {
+						pending, new Throwable("connection removed!"));
+			} else if (pending == 0) {
 				LOG.debug("{}connection: remove {} (size {})", tag, connection, connections.size());
 			} else {
 				LOG.debug("{}connection: remove {} (size {}, left jobs: {})", tag, connection, connections.size(),
-						pendings.size());
+						pending);
 			}
 			removeFromEstablishedSessions(connection);
 			removeFromAddressConnections(connection);
