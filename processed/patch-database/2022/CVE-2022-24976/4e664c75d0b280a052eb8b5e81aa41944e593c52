diff --git a/include/atheme/sasl.h b/include/atheme/sasl.h
index 65bf170ea..c9a09c604 100644
--- a/include/atheme/sasl.h
+++ b/include/atheme/sasl.h
@@ -62,6 +62,7 @@ struct sasl_session
 	char                            authzid[NICKLEN + 1];   // Authorization identity (user being logged in)
 	char                            authceid[IDLEN + 1];    // Entity ID for authcid
 	char                            authzeid[IDLEN + 1];    // Entity ID for authzid
+	char                            pendingeid[IDLEN + 1];  // Entity ID for pending login (for pre-reg clients)
 	char                            uid[UIDLEN + 1];        // Network UID
 };
 
diff --git a/modules/saslserv/main.c b/modules/saslserv/main.c
index 1bf9702df..03721195d 100644
--- a/modules/saslserv/main.c
+++ b/modules/saslserv/main.c
@@ -385,15 +385,15 @@ sasl_handle_login(struct sasl_session *const restrict p, struct user *const u, s
 	// Find the account if necessary
 	if (! mu)
 	{
-		if (! *p->authzeid)
+		if (! *p->pendingeid)
 		{
-			(void) slog(LG_INFO, "%s: session for '%s' without an authzeid (BUG)",
+			(void) slog(LG_INFO, "%s: session for '%s' without an pendingeid (BUG)",
 			                     MOWGLI_FUNC_NAME, u->nick);
 			(void) notice(saslsvs->nick, u->nick, LOGIN_CANCELLED_STR);
 			return false;
 		}
 
-		if (! (mu = myuser_find_uid(p->authzeid)))
+		if (! (mu = myuser_find_uid(p->pendingeid)))
 		{
 			if (*p->authzid)
 				(void) notice(saslsvs->nick, u->nick, "Account %s dropped; login cancelled",
@@ -638,6 +638,8 @@ sasl_process_packet(struct sasl_session *const restrict p, char *const restrict
 				return false;
 			}
 
+			(void) mowgli_strlcpy(p->pendingeid, p->authzeid, sizeof p->pendingeid);
+
 			/* If the user is already on the network, attempt to log them in immediately.
 			 * Otherwise, we will log them in on introduction of user to network
 			 */
