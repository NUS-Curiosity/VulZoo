diff --git a/wflow-consoleweb/src/main/java/org/joget/apps/app/controller/UserviewWebController.java b/wflow-consoleweb/src/main/java/org/joget/apps/app/controller/UserviewWebController.java
index 93be36b39..b27591695 100755
--- a/wflow-consoleweb/src/main/java/org/joget/apps/app/controller/UserviewWebController.java
+++ b/wflow-consoleweb/src/main/java/org/joget/apps/app/controller/UserviewWebController.java
@@ -67,7 +67,7 @@ public String embedView(ModelMap map, HttpServletRequest request, HttpServletRes
         }
         
         //check for empty key
-        if (key != null && key.equals(Userview.USERVIEW_KEY_EMPTY_VALUE)) {
+        if (key == null || (key != null && key.equals(Userview.USERVIEW_KEY_EMPTY_VALUE))) {
             key = "";
         }
         
diff --git a/wflow-core/src/main/java/org/joget/apps/userview/service/UserviewService.java b/wflow-core/src/main/java/org/joget/apps/userview/service/UserviewService.java
index 4228b78b6..1ec49ec3e 100755
--- a/wflow-core/src/main/java/org/joget/apps/userview/service/UserviewService.java
+++ b/wflow-core/src/main/java/org/joget/apps/userview/service/UserviewService.java
@@ -172,6 +172,7 @@ public Userview createUserview(AppDefinition appDef, String json, String menuId,
         requestParameters.put("embed", Boolean.toString(embed));
         requestParameters.put("appId", appDef.getAppId());
         requestParameters.put("appVersion", appDef.getVersion().toString());
+        requestParameters.put("key", (key != null)?key:"");
 
         String appId = appDef.getId();
         String appVersion = appDef.getVersion().toString();
diff --git a/wflow-core/src/main/java/org/joget/plugin/enterprise/UniversalTheme.java b/wflow-core/src/main/java/org/joget/plugin/enterprise/UniversalTheme.java
index 46b5f02d0..d30e0472f 100644
--- a/wflow-core/src/main/java/org/joget/plugin/enterprise/UniversalTheme.java
+++ b/wflow-core/src/main/java/org/joget/plugin/enterprise/UniversalTheme.java
@@ -374,19 +374,19 @@ protected String getInternalJsCssLib(Map<String, Object> data) {
                 String serviceWorkerUrl = data.get("context_path") + "/web/userview/" + appId + "/" + userviewId + "/"+key+"/serviceworker";
                 jsCssLink += "<script>$(function() {"
                         + "var initPwaUtil = function(){"
-                        + "PwaUtil.contextPath = '" + data.get("context_path") + "';"
-                        + "PwaUtil.userviewKey = '" + key + "';"
-                        + "PwaUtil.homePageLink = '" + data.get("home_page_link") + "';"
-                        + "PwaUtil.serviceWorkerPath = '" + serviceWorkerUrl + "';"
-                        + "PwaUtil.subscriptionApiPath = '" + data.get("context_path") + "/web/console/profile/subscription';"
+                        + "PwaUtil.contextPath = '" + StringUtil.escapeString(data.get("context_path").toString(), StringUtil.TYPE_JAVASCIPT, null) + "';"
+                        + "PwaUtil.userviewKey = '" + StringUtil.escapeString(key, StringUtil.TYPE_JAVASCIPT, null) + "';"
+                        + "PwaUtil.homePageLink = '" + StringUtil.escapeString(data.get("home_page_link").toString(), StringUtil.TYPE_JAVASCIPT, null) + "';"
+                        + "PwaUtil.serviceWorkerPath = '" + StringUtil.escapeString(serviceWorkerUrl, StringUtil.TYPE_JAVASCIPT, null) + "';"
+                        + "PwaUtil.subscriptionApiPath = '" + StringUtil.escapeString(data.get("context_path").toString(), StringUtil.TYPE_JAVASCIPT, null) + "/web/console/profile/subscription';"
                         + "PwaUtil.pushEnabled = " + pushEnabled + ";"
-                        + "PwaUtil.currentUsername = '" + workflowUserManager.getCurrentUsername() + "';"
-                        + "PwaUtil.onlineNotificationMessage = '" + pwaOnlineNotificationMessage + "';"
-                        + "PwaUtil.offlineNotificationMessage = '" + pwaOfflineNotificationMessage + "';"
-                        + "PwaUtil.loginPromptMessage = '" + pwaLoginPromptMessage + "';"
-                        + "PwaUtil.syncingMessage = '" + pwaSyncingMessage + "';"
-                        + "PwaUtil.syncFailedMessage = '" + pwaSyncFailedMessage + "';"
-                        + "PwaUtil.syncSuccessMessage = '" + pwaSyncSuccessMessage + "';"
+                        + "PwaUtil.currentUsername = '" + StringUtil.escapeString(workflowUserManager.getCurrentUsername(), StringUtil.TYPE_JAVASCIPT, null) + "';"
+                        + "PwaUtil.onlineNotificationMessage = '" + StringUtil.escapeString(pwaOnlineNotificationMessage, StringUtil.TYPE_JAVASCIPT, null) + "';"
+                        + "PwaUtil.offlineNotificationMessage = '" + StringUtil.escapeString(pwaOfflineNotificationMessage, StringUtil.TYPE_JAVASCIPT, null) + "';"
+                        + "PwaUtil.loginPromptMessage = '" + StringUtil.escapeString(pwaLoginPromptMessage, StringUtil.TYPE_JAVASCIPT, null) + "';"
+                        + "PwaUtil.syncingMessage = '" + StringUtil.escapeString(pwaSyncingMessage, StringUtil.TYPE_JAVASCIPT, null) + "';"
+                        + "PwaUtil.syncFailedMessage = '" + StringUtil.escapeString(pwaSyncFailedMessage, StringUtil.TYPE_JAVA, null) + "';"
+                        + "PwaUtil.syncSuccessMessage = '" + StringUtil.escapeString(pwaSyncSuccessMessage, StringUtil.TYPE_JAVASCIPT, null) + "';"
                         + "PwaUtil.isEmbedded = " + isEmbedded + ";"
                         + "PwaUtil.register();"
                         + "PwaUtil.init();"
