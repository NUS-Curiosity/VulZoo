diff --git a/CHANGELOG b/CHANGELOG
index 66a1fc254..27e452526 100644
--- a/CHANGELOG
+++ b/CHANGELOG
@@ -2,6 +2,7 @@ Cacti CHANGELOG
 
 1.2.23
 -security#4920: Add .htaccess file to scripts folder
+-security#XXXX: CVE-2022-46169 Unauthenticated Command Injection in Remote Agent
 -issue#4418: When using Single Signon Frameworks like SiteMinder Cacti does not properly detect ticket revocation in callbacks
 -issue#4682: New templates are not installed during the update
 -issue#4838: CLI Based upgrade generates warnings in PHP 8.1
diff --git a/auth_login.php b/auth_login.php
index e92bc6097..8a4a727f8 100644
--- a/auth_login.php
+++ b/auth_login.php
@@ -161,7 +161,7 @@
 			cacti_log("LOGIN: Guest User '" . $user['username'] . "' in use", false, 'AUTH');
 		}
 
-		$client_addr = get_client_addr('');
+		$client_addr = get_client_addr();
 
 		db_execute_prepared('INSERT IGNORE INTO user_log
 			(username, user_id, result, ip, time)
@@ -260,9 +260,9 @@
 		db_execute_prepared('INSERT IGNORE INTO user_log
 			(username, user_id, result, ip, time)
 			VALUES (?, ?, 0, ?, NOW())',
-			array($username, !empty($id) ? $id:0, get_client_addr('')));
+			array($username, !empty($id) ? $id:0, get_client_addr()));
 
-		cacti_log('LOGIN FAILED: ' . $realm_name . " Login Failed for user '" . $username . "' from IP Address '" . get_client_addr('') . "'.", false, 'AUTH');
+		cacti_log('LOGIN FAILED: ' . $realm_name . " Login Failed for user '" . $username . "' from IP Address '" . get_client_addr() . "'.", false, 'AUTH');
 	}
 }
 
diff --git a/include/config.php.dist b/include/config.php.dist
index 68870cbb4..130ccd05f 100644
--- a/include/config.php.dist
+++ b/include/config.php.dist
@@ -163,3 +163,29 @@ $disable_log_rotation = false;
  * are defined in lib/database.php
  */
 # define('DEBUG_SQL_FLOW', true);
+
+/*
+ * Allow the use of Proxy IPs when searching for client
+ * IP to be used
+ *
+ * This can be set to one of the following:
+ *   - false: to use only REMOTE_ADDR
+ *   - true: to use all allowed headers (not advised)
+ *   - array of one or more the following:
+ *		'X-Forwarded-For',
+ *		'X-Client-IP',
+ *		'X-Real-IP',
+ *		'X-ProxyUser-Ip',
+ *		'CF-Connecting-IP',
+ *		'True-Client-IP',
+ *		'HTTP_X_FORWARDED',
+ *		'HTTP_X_FORWARDED_FOR',
+ *		'HTTP_X_CLUSTER_CLIENT_IP',
+ *		'HTTP_FORWARDED_FOR',
+ *		'HTTP_FORWARDED',
+ *		'HTTP_CLIENT_IP',
+ *
+ * NOTE: The following will always be checked:
+ *		'REMOTE_ADDR',
+ */
+$proxy_headers = null;
diff --git a/include/global.php b/include/global.php
index 0850a39d5..3dea93da6 100644
--- a/include/global.php
+++ b/include/global.php
@@ -95,6 +95,9 @@
 	exit;
 }
 
+/* Should we allow proxy ip headers? */
+$config['proxy_headers'] = $proxy_headers ?? null;
+
 /* Set the poller_id */
 if (isset($poller_id)) {
 	$config['poller_id'] = $poller_id;
diff --git a/include/global_arrays.php b/include/global_arrays.php
index 7c41c8a73..2f0e98846 100644
--- a/include/global_arrays.php
+++ b/include/global_arrays.php
@@ -2904,4 +2904,20 @@
 	);
 }
 
+$allowed_proxy_headers =	array(
+	'X-Forwarded-For',
+	'X-Client-IP',
+	'X-Real-IP',
+	'X-ProxyUser-Ip',
+	'CF-Connecting-IP',
+	'True-Client-IP',
+	'HTTP_X_FORWARDED',
+	'HTTP_X_FORWARDED_FOR',
+	'HTTP_X_CLUSTER_CLIENT_IP',
+	'HTTP_FORWARDED_FOR',
+	'HTTP_FORWARDED',
+	'HTTP_CLIENT_IP',
+	'REMOTE_ADDR',
+);
+
 api_plugin_hook('config_arrays');
diff --git a/lib/auth.php b/lib/auth.php
index 6848fb7ac..6e38ea8e1 100644
--- a/lib/auth.php
+++ b/lib/auth.php
@@ -78,7 +78,7 @@ function set_auth_cookie($user) {
 	if (db_table_exists('user_auth_cache')) {
 		clear_auth_cookie();
 
-		$nssecret = md5($_SERVER['REQUEST_TIME'] .  mt_rand(10000,10000000)) . md5(get_client_addr(''));
+		$nssecret = md5($_SERVER['REQUEST_TIME'] .  mt_rand(10000,10000000)) . md5(get_client_addr());
 
 		$secret = hash('sha512', $nssecret, false);
 
@@ -86,7 +86,7 @@ function set_auth_cookie($user) {
 			(user_id, hostname, last_update, token)
 			VALUES
 			(?, ?, NOW(), ?);',
-			array($user['id'], get_client_addr(''), $secret));
+			array($user['id'], get_client_addr(), $secret));
 
 		cacti_cookie_session_set($user['id'], $user['realm'], $nssecret);
 	}
@@ -157,7 +157,7 @@ function check_auth_cookie() {
 						(username, user_id, result, ip, time)
 						VALUES
 						(?, ?, 2, ?, NOW())',
-						array($user_info['username'], $user_info['id'], get_client_addr(''))
+						array($user_info['username'], $user_info['id'], get_client_addr())
 					);
 
 					return $user_info['id'];
@@ -3425,7 +3425,7 @@ function auth_process_lockout($username, $realm) {
 
 			if (cacti_sizeof($user)) {
 				if ($user['enabled'] == '') {
-					cacti_log("LOGIN FAILED: Local Login Failed for user '" . $username . "' from IP Address '" . get_client_addr('') . "'.  User account Disabled.", false, 'AUTH');
+					cacti_log("LOGIN FAILED: Local Login Failed for user '" . $username . "' from IP Address '" . get_client_addr() . "'.  User account Disabled.", false, 'AUTH');
 
 					$error     = true;
 					$error_msg = __('Access Denied!  Login Disabled.');
@@ -3459,22 +3459,22 @@ function auth_process_lockout($username, $realm) {
 				db_execute_prepared('INSERT IGNORE INTO user_log
 					(username, user_id, result, ip, time)
 					VALUES (?, ?, 0, ?, NOW())',
-					array($username, isset($user['id']) ? $user['id']:0, get_client_addr('')));
+					array($username, isset($user['id']) ? $user['id']:0, get_client_addr()));
 
 				if ($user['locked'] == 'on') {
-					cacti_log("LOGIN FAILED: Local Login Failed for user '" . $username . "' from IP Address '" . get_client_addr('') . "'.  Account is locked out.", false, 'AUTH');
+					cacti_log("LOGIN FAILED: Local Login Failed for user '" . $username . "' from IP Address '" . get_client_addr() . "'.  Account is locked out.", false, 'AUTH');
 
 					$error     = true;
 					$error_msg = __('Your account has been locked.  Please contact your Administrator.');
 				} else {
-					cacti_log("LOGIN FAILED: Local Login Failed for user '" . $username . "' from IP Address '" . get_client_addr('') . "'.", false, 'AUTH');
+					cacti_log("LOGIN FAILED: Local Login Failed for user '" . $username . "' from IP Address '" . get_client_addr() . "'.", false, 'AUTH');
 
 					/* error */
 					$error     = true;
 					$error_msg = __('Access Denied!  Login Failed.');
 				}
 			} elseif ($user['locked'] == 'on') {
-				cacti_log("LOGIN FAILED: Local Login Failed for user '" . $username . "' from IP Address '" . get_client_addr('') . "'.", false, 'AUTH');
+				cacti_log("LOGIN FAILED: Local Login Failed for user '" . $username . "' from IP Address '" . get_client_addr() . "'.", false, 'AUTH');
 
 				$error     = true;
 				$error_msg = __('Access Denied!  Login Failed.');
diff --git a/lib/functions.php b/lib/functions.php
index 1be6947a2..c12004725 100644
--- a/lib/functions.php
+++ b/lib/functions.php
@@ -6722,37 +6722,47 @@ function get_debug_prefix() {
 	return sprintf('<[ %s | %7d ]> -- ', $dateTime, getmypid());
 }
 
-function get_client_addr($client_addr = false, $restrictive = false) {
-	if (!$restrictive) {
-		$http_addr_headers = array(
-			'X-Forwarded-For',
-			'X-Client-IP',
-			'X-Real-IP',
-			'X-ProxyUser-Ip',
-			'CF-Connecting-IP',
-			'True-Client-IP',
-			'HTTP_X_FORWARDED',
-			'HTTP_X_FORWARDED_FOR',
-			'HTTP_X_CLUSTER_CLIENT_IP',
-			'HTTP_FORWARDED_FOR',
-			'HTTP_FORWARDED',
-			'HTTP_CLIENT_IP',
-			'REMOTE_ADDR',
-		);
-	} else {
-		$http_addr_headers = array(
-			'X-Forwarded-For',
-			'X-Client-IP',
-			'X-Real-IP',
-			'X-ProxyUser-Ip',
-			'CF-Connecting-IP',
-			'True-Client-IP',
-			'REMOTE_ADDR',
-		);
+function get_client_addr() {
+	global $config, $allowed_proxy_headers;
+
+	$proxy_headers = $config['proxy_headers'] ?? null;
+	if ($proxy_headers === null) {
+		$last_time = read_config_option('proxy_alert');
+		if (empty($last_time)) {
+			$last_time = date('Y-m-d');
+		}
+
+		$last_date = new DateTime($last_time);
+		$this_date = new Datetime();
+
+		$this_diff = $this_date->diff($last_date);
+		$this_days = $this_diff->format('%a');
+
+		if ($this_days) {
+			cacti_log('WARNING: Configuration option "proxy_headers" will be automatically false in future releases.  Please set if you require proxy IPs to be used', false, 'AUTH');
+			set_config_option('proxy_alert', date('Y-m-d'));
+		}
+
+		$proxy_headers = true;
+	}
+
+	/* IMPORTANT: The null default for 1.2.x is true, but this will change in future version */
+	if ($proxy_headers === null || $proxy_headers === true) {
+		$proxy_headers = $allowed_proxy_headers;
+	} elseif (is_array($proxy_headers)) {
+		$proxy_headers = array_intersect($proxy_headers, $allowed_proxy_headers);
+	}
+
+	if (!is_array($proxy_headers)) {
+		$proxy_headers = [];
+	}
+
+	if (!in_array('REMOTE_ADDR', $proxy_headers)) {
+		$proxy_headers[] = 'REMOTE_ADDR';
 	}
 
 	$client_addr = false;
-	foreach ($http_addr_headers as $header) {
+	foreach ($proxy_headers as $header) {
 		if (!empty($_SERVER[$header])) {
 			$header_ips = explode(',', $_SERVER[$header]);
 			foreach ($header_ips as $header_ip) {
diff --git a/remote_agent.php b/remote_agent.php
index 6035cff32..364c3b146 100644
--- a/remote_agent.php
+++ b/remote_agent.php
@@ -298,7 +298,7 @@ function poll_for_data() {
 
 	$local_data_ids = get_nfilter_request_var('local_data_ids');
 	$host_id        = get_filter_request_var('host_id');
-	$poller_id      = get_nfilter_request_var('poller_id');
+	$poller_id      = get_filter_request_var('poller_id');
 	$return         = array();
 
 	$i = 0;
@@ -382,7 +382,7 @@ function poll_for_data() {
 						);
 
 						if (function_exists('proc_open')) {
-							$cactiphp = proc_open(read_config_option('path_php_binary') . ' -q ' . $config['base_path'] . '/script_server.php realtime ' . $poller_id, $cactides, $pipes);
+							$cactiphp = proc_open(read_config_option('path_php_binary') . ' -q ' . $config['base_path'] . '/script_server.php realtime ' . cacti_escapeshellarg($poller_id), $cactides, $pipes);
 							$output = fgets($pipes[1], 1024);
 							$using_proc_function = true;
 						} else {
@@ -443,8 +443,8 @@ function run_remote_data_query() {
 function run_remote_discovery() {
 	global $config;
 
-	$poller_id = $config['poller_id'];
-	$network   = get_filter_request_var('network');
+	$poller_id = cacti_escapeshellarg($config['poller_id']);
+	$network   = cacti_escapeshellarg(get_filter_request_var('network'));
 	$php       = cacti_escapeshellcmd(read_config_option('path_php_binary'));
 	$path      = cacti_escapeshellarg(read_config_option('path_webroot') . '/poller_automation.php');
 
