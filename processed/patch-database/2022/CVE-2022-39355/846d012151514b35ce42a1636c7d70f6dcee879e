diff --git a/db/post_migrate/20221025153038_deactivate_unverified_email_patreon_accounts.rb b/db/post_migrate/20221025153038_deactivate_unverified_email_patreon_accounts.rb
new file mode 100644
index 0000000..061828e
--- /dev/null
+++ b/db/post_migrate/20221025153038_deactivate_unverified_email_patreon_accounts.rb
@@ -0,0 +1,18 @@
+# frozen_string_literal: true
+
+class DeactivateUnverifiedEmailPatreonAccounts < ActiveRecord::Migration[6.1]
+  def up
+    execute <<~SQL
+      UPDATE users SET active = false
+      WHERE users.id IN (
+        SELECT user_id FROM user_associated_accounts
+        WHERE provider_name = 'patreon'
+        AND extra -> 'raw_info' -> 'data' -> 'attributes' ->> 'is_email_verified' = 'false'
+      )
+    SQL
+  end
+
+  def down
+    # noop
+  end
+end
diff --git a/db/post_migrate/20221026043851_delete_unverified_patreon_user_info.rb b/db/post_migrate/20221026043851_delete_unverified_patreon_user_info.rb
new file mode 100644
index 0000000..75c21fe
--- /dev/null
+++ b/db/post_migrate/20221026043851_delete_unverified_patreon_user_info.rb
@@ -0,0 +1,47 @@
+# frozen_string_literal: true
+
+class DeleteUnverifiedPatreonUserInfo < ActiveRecord::Migration[6.1]
+  def up
+    execute <<~SQL
+      DELETE FROM user_auth_tokens
+      WHERE user_id IN (
+        SELECT user_id
+        FROM user_associated_accounts
+        WHERE provider_name = 'patreon'
+        AND COALESCE(JSON_EXTRACT_PATH(extra::json, 'raw_info', 'data', 'attributes', 'is_email_verified')::text, 'false') <> 'true'
+      )
+    SQL
+
+    execute <<~SQL
+      UPDATE user_api_keys
+      SET revoked_at = NOW()
+      WHERE user_id IN (
+        SELECT user_id
+        FROM user_associated_accounts
+        WHERE provider_name = 'patreon'
+        AND COALESCE(JSON_EXTRACT_PATH(extra::json, 'raw_info', 'data', 'attributes', 'is_email_verified')::text, 'false') <> 'true'
+      )
+    SQL
+
+    execute <<~SQL
+      UPDATE api_keys
+      SET revoked_at = NOW()
+      WHERE created_by_id IN (
+        SELECT user_id
+        FROM user_associated_accounts
+        WHERE provider_name = 'patreon'
+        AND COALESCE(JSON_EXTRACT_PATH(extra::json, 'raw_info', 'data', 'attributes', 'is_email_verified')::text, 'false') <> 'true'
+      )
+    SQL
+
+    execute <<~SQL
+      DELETE FROM user_associated_accounts
+      WHERE provider_name = 'patreon'
+      AND COALESCE(JSON_EXTRACT_PATH(extra::json, 'raw_info', 'data', 'attributes', 'is_email_verified')::text, 'false') <> 'true'
+    SQL
+  end
+
+  def down
+    # noop
+  end
+end
diff --git a/plugin.rb b/plugin.rb
index 40daf02..6502889 100644
--- a/plugin.rb
+++ b/plugin.rb
@@ -178,6 +178,7 @@ def custom_build_access_token
   info do
     {
       email: raw_info['data']['attributes']['email'],
+      email_verified: raw_info['data']['attributes']['is_email_verified'],
       name: raw_info['data']['attributes']['full_name']
     }
   end
@@ -234,6 +235,10 @@ def after_authenticate(auth_token, existing_account: nil)
   def enabled?
     SiteSetting.patreon_login_enabled
   end
+
+  def primary_email_verified?(auth_token)
+    auth_token[:info][:email_verified]
+  end
 end
 
 auth_provider authenticator: Auth::PatreonAuthenticator.new
