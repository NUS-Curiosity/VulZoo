diff --git a/tensorflow/core/ir/importexport/graphdef_import.cc b/tensorflow/core/ir/importexport/graphdef_import.cc
index ad4e3a63db7015..870e9ab2594851 100644
--- a/tensorflow/core/ir/importexport/graphdef_import.cc
+++ b/tensorflow/core/ir/importexport/graphdef_import.cc
@@ -746,6 +746,9 @@ StatusOr<unsigned> GraphDefImporter::ArgNumType(const NamedAttrList &attrs,
 Status GraphDefImporter::ConvertNodeDef(OpBuilder &builder, ConversionState &s,
                                         const NodeDef &node) {
   VLOG(4) << "Importing: " << node.name();
+  if (node.op().empty())
+    return InvalidArgument("Node ", node.name(), " has an empty op name");
+
   OperationState state(ConvertLocation(node), absl::StrCat("tfg.", node.op()));
 
   // The GraphImporter does light shape inference, but here we will defer all of
diff --git a/tensorflow/core/ir/importexport/tests/graphdef_to_mlir/invalid_op_name.pbtxt b/tensorflow/core/ir/importexport/tests/graphdef_to_mlir/invalid_op_name.pbtxt
new file mode 100644
index 00000000000000..3b3a56010ba6e7
--- /dev/null
+++ b/tensorflow/core/ir/importexport/tests/graphdef_to_mlir/invalid_op_name.pbtxt
@@ -0,0 +1,20 @@
+# RUN: not tfg-translate -graphdef-to-mlir %s 2>&1 | FileCheck %s
+
+# CHECK: Node  has an empty op name
+
+library {
+  function {
+    signature {
+      name: "\\344\\264\\264"
+      description: "value"
+      is_distributed_communication: true
+    }
+    node_def {
+      input: "|"
+    }
+    control_ret {
+      key: ""
+      value: ""
+    }
+  }
+}
\ No newline at end of file
