diff --git a/xwiki-platform-core/xwiki-platform-oldcore/src/main/java/com/xpn/xwiki/web/CreateAction.java b/xwiki-platform-core/xwiki-platform-oldcore/src/main/java/com/xpn/xwiki/web/CreateAction.java
index 38f65bfba0f4..e735ebdab84d 100644
--- a/xwiki-platform-core/xwiki-platform-oldcore/src/main/java/com/xpn/xwiki/web/CreateAction.java
+++ b/xwiki-platform-core/xwiki-platform-oldcore/src/main/java/com/xpn/xwiki/web/CreateAction.java
@@ -32,7 +32,6 @@
 import org.xwiki.component.annotation.Component;
 import org.xwiki.csrf.CSRFToken;
 import org.xwiki.model.reference.DocumentReference;
-import org.xwiki.model.reference.DocumentReferenceResolver;
 import org.xwiki.model.reference.EntityReferenceSerializer;
 import org.xwiki.model.reference.SpaceReference;
 import org.xwiki.security.authorization.ContextualAuthorizationManager;
@@ -97,11 +96,6 @@ public class CreateAction extends XWikiAction
      */
     private static final String LOCAL_SERIALIZER_HINT = "local";
 
-    /**
-     * Current entity reference resolver hint.
-     */
-    private static final String CURRENT_MIXED_RESOLVER_HINT = "currentmixed";
-
     /**
      * The action to perform when creating a new page from a template.
      *
@@ -277,14 +271,6 @@ private void doCreate(XWikiContext context, XWikiDocument newDocument, boolean i
         }
     }
 
-    /**
-     * @return the resolver uses to resolve references received in request parameters
-     */
-    private DocumentReferenceResolver<String> getCurrentMixedDocumentReferenceResolver()
-    {
-        return Utils.getComponent(DocumentReferenceResolver.TYPE_STRING, CURRENT_MIXED_RESOLVER_HINT);
-    }
-
     /**
      * Initialize and save the new document before editing it. Follow the steps done by the Save action.
      * 
@@ -312,7 +298,7 @@ private void initAndSaveDocument(XWikiContext context, XWikiDocument newDocument
 
         // Set the parent field.
         if (!StringUtils.isEmpty(parent)) {
-            DocumentReference parentReference = this.currentmixedReferenceResolver.resolve(parent);
+            DocumentReference parentReference = getCurrentMixedDocumentReferenceResolver().resolve(parent);
             newDocument.setParentReference(parentReference);
         }
 
diff --git a/xwiki-platform-core/xwiki-platform-oldcore/src/main/java/com/xpn/xwiki/web/XWikiAction.java b/xwiki-platform-core/xwiki-platform-oldcore/src/main/java/com/xpn/xwiki/web/XWikiAction.java
index 538f6d58059d..c1088e9bdbb6 100644
--- a/xwiki-platform-core/xwiki-platform-oldcore/src/main/java/com/xpn/xwiki/web/XWikiAction.java
+++ b/xwiki-platform-core/xwiki-platform-oldcore/src/main/java/com/xpn/xwiki/web/XWikiAction.java
@@ -153,13 +153,6 @@ public abstract class XWikiAction implements LegacyAction
     @Inject
     protected Execution execution;
 
-    @Inject
-    protected ContextualAuthorizationManager autorization;
-
-    @Inject
-    @Named("currentmixed")
-    protected DocumentReferenceResolver<String> currentmixedReferenceResolver;
-
     /**
      * Indicate if the action allow asynchronous display (among which the XWiki initialization).
      */
@@ -170,6 +163,13 @@ public abstract class XWikiAction implements LegacyAction
      */
     protected boolean handleRedirectObject = false;
 
+    @Inject
+    @Named("currentmixed")
+    private DocumentReferenceResolver<String> currentmixedReferenceResolver;
+
+    @Inject
+    private ContextualAuthorizationManager autorization;
+
     private ContextualLocalizationManager localization;
 
     private JobProgressManager progress;
@@ -201,6 +201,24 @@ protected ContextualLocalizationManager getLocalization()
         return this.localization;
     }
 
+    /**
+     * @since 12.10.6
+     * @since 13.2RC1
+     */
+    protected DocumentReferenceResolver<String> getCurrentMixedDocumentReferenceResolver()
+    {
+        return this.currentmixedReferenceResolver;
+    }
+
+    /**
+     * @since 12.10.6
+     * @since 13.2RC1
+     */
+    protected ContextualAuthorizationManager getContextualAuthorizationManager()
+    {
+        return this.autorization;
+    }
+
     protected String localizePlainOrKey(String key, Object... parameters)
     {
         return StringUtils.defaultString(getLocalization().getTranslationPlain(key, parameters), key);
@@ -1158,10 +1176,10 @@ protected void setContentLength(XWikiResponse response, long length)
     protected DocumentReference resolveTemplate(String template)
     {
         if (StringUtils.isNotBlank(template)) {
-            DocumentReference templateReference = this.currentmixedReferenceResolver.resolve(template);
+            DocumentReference templateReference = getCurrentMixedDocumentReferenceResolver().resolve(template);
 
             // Make sure the current user have access to the template document before copying it
-            if (this.autorization.hasAccess(Right.VIEW, templateReference)) {
+            if (getContextualAuthorizationManager().hasAccess(Right.VIEW, templateReference)) {
                 return templateReference;
             }
         }
