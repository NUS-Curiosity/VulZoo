diff --git a/lib/template-generator.js b/lib/template-generator.js
index 0134695..d25ed34 100644
--- a/lib/template-generator.js
+++ b/lib/template-generator.js
@@ -147,7 +147,7 @@ function renderIssue(message) {
 		severityName: message.severity === 1 ? 'Warning' : 'Error',
 		lineNumber: message.line,
 		column: message.column,
-		message: message.message,
+		message: _.escape(message.message),
 		ruleId: message.ruleId,
 		ruleLink: getRuleLink(message.ruleId)
 	});
@@ -206,15 +206,6 @@ function renderResultDetails(sourceCode, messages, parentIndex) {
 	});
 }
 
-/**
- * Formats the source code before adding it to the HTML
- * @param {string} sourceCode Source code string
- * @returns {string} Source code string which will not cause issues in the HTML
- */
-function formatSourceCode(sourceCode) {
-	return sourceCode.replace(/</g, '&#60;').replace(/>/g, '&#62;');
-}
-
 /**
  * Creates the test results HTML
  * @param {Array} results Test results.
@@ -235,7 +226,7 @@ function renderResults(results, currDir) {
 		// only renders the source code if there are issues present in the file
 		if (!_.isEmpty(result.messages)) {
 			// reads the file to get the source code if the source is not provided
-			const sourceCode = formatSourceCode(result.source || fs.readFileSync(result.filePath, 'utf8'));
+			const sourceCode = _.escape(result.source || fs.readFileSync(result.filePath, 'utf8'));
 
 			template += renderResultDetails(sourceCode, result.messages, index);
 		}
@@ -379,4 +370,4 @@ module.exports.generateTemplate = function generateTemplate(results, isMultiOn)
 		styles: isMultiOn && isOutputDirKnown() ? '<link rel="stylesheet" href="./styles.css">' : styles(),
 		scripts: isMultiOn && isOutputDirKnown() ? '<script type="text/javascript" src="./main.js"></script>' : scripts()
 	});
-};
\ No newline at end of file
+};
