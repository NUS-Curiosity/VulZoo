diff --git a/server-core/src/main/java/io/onedev/server/entitymanager/impl/DefaultProjectManager.java b/server-core/src/main/java/io/onedev/server/entitymanager/impl/DefaultProjectManager.java
index fd6d7d8067..ff1090b796 100644
--- a/server-core/src/main/java/io/onedev/server/entitymanager/impl/DefaultProjectManager.java
+++ b/server-core/src/main/java/io/onedev/server/entitymanager/impl/DefaultProjectManager.java
@@ -537,7 +537,7 @@ private boolean isGitHookValid(File gitDir, String hookName) {
         
         try {
 			String content = FileUtils.readFileToString(hookFile, Charset.defaultCharset());
-			if (!content.contains("ENV_GIT_ALTERNATE_OBJECT_DIRECTORIES"))
+			if (!content.contains("ONEDEV_HOOK_TOKEN"))
 				return false;
 		} catch (IOException e) {
 			throw new RuntimeException(e);
diff --git a/server-core/src/main/java/io/onedev/server/git/GitFilter.java b/server-core/src/main/java/io/onedev/server/git/GitFilter.java
index 3853b6e925..81bcf90176 100644
--- a/server-core/src/main/java/io/onedev/server/git/GitFilter.java
+++ b/server-core/src/main/java/io/onedev/server/git/GitFilter.java
@@ -143,6 +143,7 @@ protected void processPacks(final HttpServletRequest request, final HttpServletR
 	        environments.put("ONEDEV_CURL", settingManager.getSystemSetting().getCurlConfig().getExecutable());
 			environments.put("ONEDEV_URL", serverUrl);
 			environments.put("ONEDEV_USER_ID", SecurityUtils.getUserId().toString());
+			environments.put("ONEDEV_HOOK_TOKEN", GitUtils.HOOK_TOKEN);
 			environments.put("ONEDEV_REPOSITORY_ID", project.getId().toString());
 			
 			// to be compatible with old repository
diff --git a/server-core/src/main/java/io/onedev/server/git/GitSshCommand.java b/server-core/src/main/java/io/onedev/server/git/GitSshCommand.java
index bed87b64ee..ec550d7fe2 100644
--- a/server-core/src/main/java/io/onedev/server/git/GitSshCommand.java
+++ b/server-core/src/main/java/io/onedev/server/git/GitSshCommand.java
@@ -75,6 +75,7 @@ private Map<String, String> buildGitEnvs(Project project) {
         SettingManager settingManager = OneDev.getInstance(SettingManager.class);
         environments.put("ONEDEV_CURL", settingManager.getSystemSetting().getCurlConfig().getExecutable());
 		environments.put("ONEDEV_URL", serverUrl);
+		environments.put("ONEDEV_HOOK_TOKEN", GitUtils.HOOK_TOKEN);
 		environments.put("ONEDEV_USER_ID", SecurityUtils.getUserId().toString());
 		environments.put("ONEDEV_REPOSITORY_ID", project.getId().toString());
 		return environments;
diff --git a/server-core/src/main/java/io/onedev/server/git/GitUtils.java b/server-core/src/main/java/io/onedev/server/git/GitUtils.java
index c8b71af5fb..30ca4d8b1b 100644
--- a/server-core/src/main/java/io/onedev/server/git/GitUtils.java
+++ b/server-core/src/main/java/io/onedev/server/git/GitUtils.java
@@ -16,6 +16,7 @@
 
 import javax.annotation.Nullable;
 
+import org.apache.commons.lang3.RandomStringUtils;
 import org.bouncycastle.bcpg.ArmoredOutputStream;
 import org.bouncycastle.bcpg.BCPGOutputStream;
 import org.bouncycastle.bcpg.HashAlgorithmTags;
@@ -97,6 +98,8 @@ public class GitUtils {
 	
 	private static final Logger logger = LoggerFactory.getLogger(GitUtils.class);
 	
+	public static final String HOOK_TOKEN = RandomStringUtils.randomAlphanumeric(20); 
+	
 	public static boolean isEmptyPath(String path) {
 		return Strings.isNullOrEmpty(path) || Objects.equal(path, DiffEntry.DEV_NULL);
 	}
diff --git a/server-core/src/main/java/io/onedev/server/git/hookcallback/GitPostReceiveCallback.java b/server-core/src/main/java/io/onedev/server/git/hookcallback/GitPostReceiveCallback.java
index dc8e01e43a..c05b6bc08b 100644
--- a/server-core/src/main/java/io/onedev/server/git/hookcallback/GitPostReceiveCallback.java
+++ b/server-core/src/main/java/io/onedev/server/git/hookcallback/GitPostReceiveCallback.java
@@ -1,7 +1,6 @@
 package io.onedev.server.git.hookcallback;
 
 import java.io.IOException;
-import java.net.InetAddress;
 import java.util.ArrayList;
 import java.util.Enumeration;
 import java.util.List;
@@ -56,17 +55,14 @@ public GitPostReceiveCallback(ProjectManager projectManager, SessionManager sess
     @Sessional
     @Override
 	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
-        String clientIp = request.getHeader("X-Forwarded-For");
-        if (clientIp == null) clientIp = request.getRemoteAddr();
-
-        if (!InetAddress.getByName(clientIp).isLoopbackAddress()) {
+        List<String> fields = StringUtils.splitAndTrim(request.getPathInfo(), "/");
+        Preconditions.checkState(fields.size() == 3);
+        
+        if (!fields.get(2).equals(GitUtils.HOOK_TOKEN)) {
             response.sendError(HttpServletResponse.SC_FORBIDDEN,
-                    "Git hook callbacks can only be accessed from localhost.");
+                    "Git hook callbacks can only be accessed by OneDev itself");
             return;
         }
-
-        List<String> fields = StringUtils.splitAndTrim(request.getPathInfo(), "/");
-        Preconditions.checkState(fields.size() == 2);
         
         Project project = projectManager.load(Long.valueOf(fields.get(0)));
         Long userId = Long.valueOf(fields.get(1));
diff --git a/server-core/src/main/java/io/onedev/server/git/hookcallback/GitPreReceiveCallback.java b/server-core/src/main/java/io/onedev/server/git/hookcallback/GitPreReceiveCallback.java
index 03dbc79d0f..95d0dbcc47 100644
--- a/server-core/src/main/java/io/onedev/server/git/hookcallback/GitPreReceiveCallback.java
+++ b/server-core/src/main/java/io/onedev/server/git/hookcallback/GitPreReceiveCallback.java
@@ -1,7 +1,6 @@
 package io.onedev.server.git.hookcallback;
 
 import java.io.IOException;
-import java.net.InetAddress;
 import java.util.ArrayList;
 import java.util.Enumeration;
 import java.util.HashMap;
@@ -71,18 +70,15 @@ private void error(Output output, @Nullable String refName, List<String> message
 	@Sessional
 	@Override
 	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
-        String clientIp = request.getHeader("X-Forwarded-For");
-        if (clientIp == null) clientIp = request.getRemoteAddr();
-
-        if (!InetAddress.getByName(clientIp).isLoopbackAddress()) {
+        List<String> fields = StringUtils.splitAndTrim(request.getPathInfo(), "/");
+        Preconditions.checkState(fields.size() == 3);
+        
+        if (!fields.get(2).equals(GitUtils.HOOK_TOKEN)) {
             response.sendError(HttpServletResponse.SC_FORBIDDEN,
-                    "Git hook callbacks can only be accessed from localhost.");
+                    "Git hook callbacks can only be accessed by OneDev itself");
             return;
         }
         
-        List<String> fields = StringUtils.splitAndTrim(request.getPathInfo(), "/");
-        Preconditions.checkState(fields.size() == 2);
-        
         SecurityUtils.getSubject().runAs(SecurityUtils.asPrincipal(Long.valueOf(fields.get(1))));
         try {
             Project project = projectManager.load(Long.valueOf(fields.get(0)));
diff --git a/server-core/src/main/resources/git-receive-hook b/server-core/src/main/resources/git-receive-hook
index fe67f18a7d..974738d1aa 100644
--- a/server-core/src/main/resources/git-receive-hook
+++ b/server-core/src/main/resources/git-receive-hook
@@ -2,7 +2,7 @@
 unset http_proxy
 unset https_proxy
 IFS=$'\r\n'; 
-lines=($(${ONEDEV_CURL} -k -s -S -f -X POST --data-urlencode "ENV_GIT_ALTERNATE_OBJECT_DIRECTORIES=${GIT_ALTERNATE_OBJECT_DIRECTORIES}" --data-urlencode "ENV_GIT_OBJECT_DIRECTORY=${GIT_OBJECT_DIRECTORY}" --data-urlencode "ENV_GIT_QUARANTINE_PATH=${GIT_QUARANTINE_PATH}" -d @- ${ONEDEV_URL}/%s/${ONEDEV_REPOSITORY_ID}/${ONEDEV_USER_ID} 2>&1))
+lines=($(${ONEDEV_CURL} -k -s -S -f -X POST --data-urlencode "ENV_GIT_ALTERNATE_OBJECT_DIRECTORIES=${GIT_ALTERNATE_OBJECT_DIRECTORIES}" --data-urlencode "ENV_GIT_OBJECT_DIRECTORY=${GIT_OBJECT_DIRECTORY}" --data-urlencode "ENV_GIT_QUARANTINE_PATH=${GIT_QUARANTINE_PATH}" -d @- ${ONEDEV_URL}/%s/${ONEDEV_REPOSITORY_ID}/${ONEDEV_USER_ID}/${ONEDEV_HOOK_TOKEN} 2>&1))
 
 returnCode=0;
 
