diff --git a/README b/README
index 40ef320..124c958 100644
--- a/README
+++ b/README
@@ -460,6 +460,8 @@ out-of-bounds symbol triggered and out-of-bounds array access and could
 have crashed the decoder. The code is now more carefully changing the
 validity of the symbols and aborts with an error if it finds illegal
 codes.
+The code now also checks the consistency of the MCU sizes in the
+hierarchical process and fails if they differ across levels.
 
 --------------------------------------------------------------------------
 
diff --git a/README.history b/README.history
index 672d08d..09f0d87 100644
--- a/README.history
+++ b/README.history
@@ -564,5 +564,7 @@ out-of-bounds symbol triggered and out-of-bounds array access and could
 have crashed the decoder. The code is now more carefully changing the
 validity of the symbols and aborts with an error if it finds illegal
 codes.
+The code now also checks the consistency of the MCU sizes in the
+hierarchical process and fails if they differ across levels.
 
 --------------------------------------------------------------------------
diff --git a/control/hierarchicalbitmaprequester.cpp b/control/hierarchicalbitmaprequester.cpp
index 14aefd1..bc636f6 100644
--- a/control/hierarchicalbitmaprequester.cpp
+++ b/control/hierarchicalbitmaprequester.cpp
@@ -45,7 +45,7 @@
 ** decoding. It also keeps the top-level color transformer and the
 ** toplevel subsampling expander.
 **
-** $Id: hierarchicalbitmaprequester.cpp,v 1.42 2020/04/08 10:05:41 thor Exp $
+** $Id: hierarchicalbitmaprequester.cpp,v 1.43 2022/05/24 05:42:35 thor Exp $
 **
 */
 
@@ -245,6 +245,16 @@ void HierarchicalBitmapRequester::PrepareForDecoding(void)
       UBYTE sx = comp->SubXOf();
       UBYTE sy = comp->SubYOf();
 
+      if (m_pLargestScale) {
+        class Frame *frame = m_pLargestScale->FrameOf();
+        while(frame) {
+          if (frame->ComponentOf(i)->SubXOf() != sx || frame->ComponentOf(i)->SubYOf() != sy)
+            JPG_THROW(MALFORMED_STREAM,"HierarchicalBitmapRequester::PrepareForDecoding",
+                      "component subsampling is inconsistent across hierarchical levels");
+          frame = frame->NextOf();
+        }
+      }
+
       if (sx > 1 || sy > 1) {
         m_ppUpsampler[i] = UpsamplerBase::CreateUpsampler(m_pEnviron,sx,sy,
                                                           m_ulPixelWidth,m_ulPixelHeight,
