diff --git a/Makefile b/Makefile
index 4704332bac..7ae71e3d70 100644
--- a/Makefile
+++ b/Makefile
@@ -58,7 +58,7 @@ nightly-release: release
 build: check_secrets cwagent-otel-collector amazon-cloudwatch-agent config-translator start-amazon-cloudwatch-agent amazon-cloudwatch-agent-config-wizard config-downloader
 
 check_secrets::
-	if grep --exclude-dir=build --exclude-dir=vendor -E "(A3T[A-Z0-9]|AKIA|AGPA|AIDA|AROA|AIPA|ANPA|ANVA|ASIA)[A-Z0-9]{16}|(\"|')?(AWS|aws|Aws)?_?(SECRET|secret|Secret)?_?(ACCESS|access|Access)?_?(KEY|key|Key)(\"|')?\\s*(:|=>|=)\\s*(\"|')?[A-Za-z0-9/\\+=]{40}(\"|')?" -Rn .; then echo "check_secrets failed"; exit 1; fi;
+	if grep --exclude-dir=build --exclude-dir=vendor -exclude=integration/msi/tools/amazon-cloudwatch-agent.wxs -E "(A3T[A-Z0-9]|AKIA|AGPA|AIDA|AROA|AIPA|ANPA|ANVA|ASIA)[A-Z0-9]{16}|(\"|')?(AWS|aws|Aws)?_?(SECRET|secret|Secret)?_?(ACCESS|access|Access)?_?(KEY|key|Key)(\"|')?\\s*(:|=>|=)\\s*(\"|')?[A-Za-z0-9/\\+=]{40}(\"|')?" -Rn .; then echo "check_secrets failed"; exit 1; fi;
 
 create-version-file:
 	@echo Version: ${VERSION}
diff --git a/cmd/config-translator/translator.go b/cmd/config-translator/translator.go
index 4d2a929b9f..2b7c1908b3 100644
--- a/cmd/config-translator/translator.go
+++ b/cmd/config-translator/translator.go
@@ -28,7 +28,7 @@ func initFlags() {
 	var inputJsonFile = flag.String("input", "", "Please provide the path of input agent json config file")
 	var inputJsonDir = flag.String("input-dir", "", "Please provide the path of input agent json config directory.")
 	var inputTomlFile = flag.String("output", "", "Please provide the path of the output CWAgent config file")
-	var inputMode = flag.String("mode", "ec2", "Please provide the mode, i.e. ec2, onPremise, auto")
+	var inputMode = flag.String("mode", "ec2", "Please provide the mode, i.e. ec2, onPremise, onPrem, auto")
 	var inputConfig = flag.String("config", "", "Please provide the common-config file")
 	var multiConfig = flag.String("multi-config", "remove", "valid values: default, append, remove")
 	flag.Parse()
diff --git a/integration/msi/tools/amazon-cloudwatch-agent.wxs b/integration/msi/tools/amazon-cloudwatch-agent.wxs
index da45811895..b06749364a 100644
--- a/integration/msi/tools/amazon-cloudwatch-agent.wxs
+++ b/integration/msi/tools/amazon-cloudwatch-agent.wxs
@@ -2,8 +2,6 @@
 <Wix xmlns='http://schemas.microsoft.com/wix/2006/wi'
      xmlns:util='http://schemas.microsoft.com/wix/UtilExtension'>
 
-  <?define FixPermissionScriptAction=""powershell.exe" -ExecutionPolicy Bypass -File "[INSTALLDIR]permission.ps1"?>
-
   <Product Id='*'
     Name='Amazon CloudWatch Agent'
     UpgradeCode='c537c936-91b3-4270-94d7-e128acfc3e86'
@@ -26,7 +24,13 @@
     />
 
     <MediaTemplate EmbedCab='yes' />
-
+    <Property Id="POWERSHELLEXE">
+      <RegistrySearch Id="POWERSHELLEXE"
+                      Type="raw"
+                      Root="HKLM"
+                      Key="SOFTWARE\Microsoft\PowerShell\1\ShellIds\Microsoft.PowerShell"
+                      Name="Path" />
+    </Property>
     <Feature Id='ProductFeature' Title="Amazon CloudWatch Agent" Level='1'>
       <ComponentRef Id='StarterEXE' />
       <ComponentRef Id='AgentEXE' />
@@ -200,11 +204,22 @@
             <CreateFolder />
         </Component>
     </DirectoryRef>
-
-    <CustomAction Id="UpdateConfigPermission" Directory="INSTALLDIR" ExeCommand="$(var.FixPermissionScriptAction)" Execute="deferred" Return="check" Impersonate="no" />
+     <!-- Find and use powershell to run the command, because just running "powershell.exe" did not resolve (not in ENV path) when using "WixQuietExec".-->
+    <SetProperty Id="QtExecUpdateConfigPermission" 
+        Sequence="execute"
+        Before ="QtExecUpdateConfigPermission"
+        Value='&quot;[POWERSHELLEXE]&quot;  -ExecutionPolicy Bypass -File "[INSTALLDIR]permission.ps1" ' 
+    />
+    <!-- Setup a silent execution contrainer around the command -->
+    <CustomAction Id="QtExecUpdateConfigPermission" 
+    BinaryKey="WixCA" 
+    DllEntry="WixQuietExec" 
+    Execute="deferred" 
+    Return="check" 
+    Impersonate="no" />
 
     <InstallExecuteSequence>
-        <Custom Action="UpdateConfigPermission" After="InstallFiles">NOT UPGRADINGPRODUCTCODE AND NOT (REMOVE~="ALL")</Custom>
+    <Custom Action="QtExecUpdateConfigPermission" After="InstallFiles">NOT UPGRADINGPRODUCTCODE AND NOT (REMOVE~="ALL")</Custom>
     </InstallExecuteSequence>
 
     <MajorUpgrade AllowDowngrades="yes"/>
diff --git a/translator/config/mode.go b/translator/config/mode.go
index 314f293e64..9b0b748eee 100644
--- a/translator/config/mode.go
+++ b/translator/config/mode.go
@@ -4,6 +4,7 @@
 package config
 
 const (
-	ModeEC2    = "ec2"
-	ModeOnPrem = "onPremise"
+	ModeEC2       = "ec2"
+	ModeOnPrem    = "onPrem"
+        ModeOnPremise = "onPremise"
 )
diff --git a/translator/context/context.go b/translator/context/context.go
index 43eb33e26f..4670277db1 100644
--- a/translator/context/context.go
+++ b/translator/context/context.go
@@ -110,7 +110,7 @@ func (ctx *Context) SetMode(mode string) {
 	switch mode {
 	case config.ModeEC2:
 		ctx.mode = config.ModeEC2
-	case config.ModeOnPrem:
+	case config.ModeOnPrem,config.ModeOnPremise:
 		ctx.mode = config.ModeOnPrem
 	default:
 		log.Panicf("Invalid mode %s. Valid mode values are %s and %s.", mode, config.ModeEC2, config.ModeOnPrem)
