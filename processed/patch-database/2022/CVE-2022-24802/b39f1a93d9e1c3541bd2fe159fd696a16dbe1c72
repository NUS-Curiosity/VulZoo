diff --git a/src/deepmerge.ts b/src/deepmerge.ts
index 777929f4..82c580e3 100644
--- a/src/deepmerge.ts
+++ b/src/deepmerge.ts
@@ -438,7 +438,16 @@ function defaultMergeRecords<
       continue;
     }
 
-    result[key] = propertyResult;
+    if (key === "__proto__") {
+      Object.defineProperty(result, key, {
+        value: propertyResult,
+        configurable: true,
+        enumerable: true,
+        writable: true,
+      });
+    } else {
+      result[key] = propertyResult;
+    }
   }
 
   /* eslint-enable functional/no-loop-statement, functional/no-conditional-statement */
diff --git a/tests/deepmerge.test.ts b/tests/deepmerge.test.ts
index d8f29b7a..b352b5d6 100644
--- a/tests/deepmerge.test.ts
+++ b/tests/deepmerge.test.ts
@@ -539,3 +539,19 @@ test(`merging objects with null prototype`, (t) => {
 
   t.deepEqual(merged, expected);
 });
+
+test("prototype pollution", (t) => {
+  const payload = '{"__proto__":{"a0":true}}';
+
+  const x: any = JSON.parse(payload);
+  const y: any = {};
+
+  const merged: any = deepmerge(x, y);
+
+  t.deepEqual(JSON.stringify(merged), payload);
+
+  t.not(({} as any).a0, true, "Safe POJO");
+  t.not(x.a0, true, "Safe x input");
+  t.not(y.a0, true, "Safe y input");
+  t.not(merged.a0, true, "Safe output");
+});
