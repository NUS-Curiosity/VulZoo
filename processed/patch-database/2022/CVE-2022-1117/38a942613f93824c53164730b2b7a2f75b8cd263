diff --git a/fapolicyd.spec b/fapolicyd.spec
index 08a56751..49ab3b76 100644
--- a/fapolicyd.spec
+++ b/fapolicyd.spec
@@ -30,7 +30,15 @@ makes use of the kernel's fanotify interface to determine file access rights.
 # generate rules for python
 sed -i "s/%python2_path%/`readlink -f %{__python2} | sed 's/\//\\\\\//g'`/g" rules.d/*.rules
 sed -i "s/%python3_path%/`readlink -f %{__python3} | sed 's/\//\\\\\//g'`/g" rules.d/*.rules
-sed -i "s/%ld_so_path%/`find /usr/lib64/ -type f -name 'ld-2\.*.so' | sed 's/\//\\\\\//g'`/g" rules.d/*.rules
+
+# Detect run time linker directly from bash
+interpret=`readelf -e /usr/bin/bash \
+		| grep Requesting \
+		| sed 's/.$//' \
+		| rev | cut -d" " -f1 \
+		| rev`
+
+sed -i "s|%ld_so_path%|`realpath $interpret`|g" rules.d/*.rules
 
 %build
 %configure \
diff --git a/m4/dyn_linker.m4 b/m4/dyn_linker.m4
index 8dac75ba..0e269e91 100644
--- a/m4/dyn_linker.m4
+++ b/m4/dyn_linker.m4
@@ -1,6 +1,10 @@
 AC_DEFUN([LD_SO_PATH],
 [
-  xpath=`realpath /usr/lib64/ld-2.*.so`
+  xpath1=`readelf -e /usr/bin/bash | grep Requesting | sed 's/.$//' | rev | cut -d" " -f1 | rev`
+  xpath=`realpath $xpath1`
+  if test ! -f "$xpath" ; then
+    AC_MSG_ERROR([Cant find the dynamic linker])
+  fi
   echo "dynamic linker is.....$xpath"
   AC_DEFINE_UNQUOTED(SYSTEM_LD_SO, ["$xpath"], [dynamic linker])
 ])
