diff --git a/src/library/Box/Pagination.php b/src/library/Box/Pagination.php
index 3a56d0bd7a..d387c9cc2f 100644
--- a/src/library/Box/Pagination.php
+++ b/src/library/Box/Pagination.php
@@ -33,17 +33,24 @@ public function getPer_page()
         return $this->per_page;
     }
 
-    public function getSimpleResultSet($q, $values, $per_page = 100, $page = null)
+    public function getSimpleResultSet($q, $values, ?int $per_page = 100, ?int $page = null)
     {
         if (is_null($page)){
             $page = $_GET['page'] ?? 1;
         }
-        $per_page = $_GET['per_page'] ?? $per_page;
+        $per_page = $_GET['per_page'] ?? $per_page ?? 100;
+
+        if (!is_numeric($page) || $page < 1 ){
+           throw new \Box_Exception('Invalid page number');
+        }
+        if (!is_numeric($per_page) || $per_page < 1 ){
+           throw new \Box_Exception('Invalid per page number');
+        }
 
         $offset = ($page - 1) * $per_page;
 
         $sql = $q;
-        $sql .= sprintf(' LIMIT %s,%s', $offset, $per_page);
+        $sql .= sprintf(' LIMIT %u,%u', $offset, $per_page);
         $result = $this->di['db']->getAll($sql, $values);
 
         $exploded = explode('FROM', $q);
@@ -60,14 +67,21 @@ public function getSimpleResultSet($q, $values, $per_page = 100, $page = null)
         );
     }
 
-    public function getAdvancedResultSet($q, $values, $per_page = 100)
+    public function getAdvancedResultSet($q, $values, ?int $per_page = 100)
     {
-        $page = $page = $_GET['page'] ?? 1;
-        $per_page = $_GET['per_page'] ?? $per_page;
+        $page = $_GET['page'] ?? 1;
+        $per_page = $_GET['per_page'] ?? $per_page ?? 100;
+
+        if (!is_numeric($page) || $page < 1 ){
+           throw new \Box_Exception('Invalid page number');
+        }
+        if (!is_numeric($per_page) || $per_page < 1 ){
+           throw new \Box_Exception('Invalid per page number');
+        }
 
         $offset = ($page - 1) * $per_page;
         $q = str_replace('SELECT ', 'SELECT SQL_CALC_FOUND_ROWS ', $q);
-        $q .= sprintf(' LIMIT %s,%s', $offset, $per_page);
+        $q .= sprintf(' LIMIT %u,%u', $offset, $per_page);
         $result = $this->di['db']->getAll($q, $values);
         $total = $this->di['db']->getCell('SELECT FOUND_ROWS();');
 
diff --git a/src/modules/Client/Service.php b/src/modules/Client/Service.php
index a788e1a9b5..2f7c6ef855 100644
--- a/src/modules/Client/Service.php
+++ b/src/modules/Client/Service.php
@@ -177,8 +177,12 @@ public function getSearchQuery($data, $selectStmt = 'SELECT c.*')
     public function getPairs($data)
     {
         $limit = $data['per_page'] ?? 30;
+        if (!is_numeric($limit) || $limit < 1 ){
+            throw new \Box_Exception('Invalid per page number');
+        }
+
         [$sql, $params] = $this->getSearchQuery($data, "SELECT c.id, CONCAT_WS('', c.first_name,  ' ', c.last_name) as full_name");
-        $sql = $sql . ' LIMIT ' . $limit;
+        $sql .= sprintf(' LIMIT %u', $limit);
 
         return $this->di['db']->getAssoc($sql, $params);
     }
diff --git a/src/modules/Theme/Controller/Admin.php b/src/modules/Theme/Controller/Admin.php
index 60bcc1fdad..b6ee776a3c 100644
--- a/src/modules/Theme/Controller/Admin.php
+++ b/src/modules/Theme/Controller/Admin.php
@@ -63,7 +63,6 @@ public function save_theme_settings(\Box_App $app, $theme)
                 throw new \Box_Exception('Theme ":name" assets folder is not writable. Files can not be uploaded and settings can not be saved. Set folder permissions to 777', [':name' => $t->getName()]);
             }
             $service->updateSettings($t, $preset, $_POST);
-            $service->uploadAssets($t, $_FILES);
             $service->regenerateThemeCssAndJsFiles($t, $preset, $api);
         } catch (\Exception $e) {
             error_log($e);
diff --git a/src/modules/Theme/Service.php b/src/modules/Theme/Service.php
index 361a069e4e..b9146eb47b 100644
--- a/src/modules/Theme/Service.php
+++ b/src/modules/Theme/Service.php
@@ -161,24 +161,6 @@ public function getThemeSettings(Model\Theme $theme, $preset = null)
         }
     }
 
-    public function uploadAssets(Model\Theme $theme, array $files)
-    {
-        $dest = $theme->getPathAssets() . DIRECTORY_SEPARATOR;
-
-        foreach ($files as $filename => $f) {
-            if (UPLOAD_ERR_NO_FILE == $f['error']) {
-                continue;
-            }
-
-            $filename = str_replace('_', '.', $filename);
-            if (UPLOAD_ERR_OK != $f['error']) {
-                throw new \Box_Exception('Error uploading file :file Error code: :error', [':file' => $filename, ':error' => $f['error']]);
-            }
-
-            move_uploaded_file($f['tmp_name'], $dest . $filename);
-        }
-    }
-
     public function updateSettings(Model\Theme $theme, $preset, array $params)
     {
         $meta = $this->di['db']->findOne(
diff --git a/tests/integration/bb-modules/mod_theme/ServiceTest.php b/tests/integration/bb-modules/mod_theme/ServiceTest.php
index 0f09ba27d5..f5ff8a4f5c 100644
--- a/tests/integration/bb-modules/mod_theme/ServiceTest.php
+++ b/tests/integration/bb-modules/mod_theme/ServiceTest.php
@@ -34,26 +34,6 @@ public function testgetThemeSettings()
         $this->assertIsArray($result);
     }
 
-    public function testuploadAssets()
-    {
-        $files = array(
-            'file1' => array(
-                    'error' => UPLOAD_ERR_NO_FILE,
-                ),
-            'file2' => array(
-                'error' => UPLOAD_ERR_OK,
-                'tmp_name' => 'tmpName',
-            ),
-
-        );
-
-        $service = new \Box\Mod\Theme\Service();
-        $service->setDi($this->di);
-
-        $themeModel = $service->getTheme('huraga');
-        $service->uploadAssets($themeModel, $files);
-    }
-
     public function testupdateSettings()
     {
         $service = new \Box\Mod\Theme\Service();
@@ -111,4 +91,4 @@ public function testgetCurrentClientAreaTheme()
         $this->assertInstanceOf('\Box\Mod\Theme\Model\Theme', $result);
         $this->assertEquals('huraga', $result->getName());
     }
-}
\ No newline at end of file
+}
diff --git a/tests/modules/Theme/Controller/AdminTest.php b/tests/modules/Theme/Controller/AdminTest.php
index 16c6162b35..763d3c66d9 100644
--- a/tests/modules/Theme/Controller/AdminTest.php
+++ b/tests/modules/Theme/Controller/AdminTest.php
@@ -107,8 +107,6 @@ public function testsave_theme_settings()
             ->method('setCurrentThemePreset');
         $themeServiceMock->expects($this->atLeastOnce())
             ->method('updateSettings');
-        $themeServiceMock->expects($this->atLeastOnce())
-            ->method('uploadAssets');
         $themeServiceMock->expects($this->atLeastOnce())
             ->method('regenerateThemeCssAndJsFiles');
         $themeServiceMock->expects($this->atLeastOnce())
@@ -201,4 +199,3 @@ public function testsave_theme_settings_PathIsNotWritable()
     }
 
 }
- 
\ No newline at end of file
diff --git a/tests/modules/Theme/ServiceTest.php b/tests/modules/Theme/ServiceTest.php
index b34ee69c50..be1943986c 100644
--- a/tests/modules/Theme/ServiceTest.php
+++ b/tests/modules/Theme/ServiceTest.php
@@ -375,36 +375,5 @@ public function testgetCurrentClientAreaThemeCode()
         $this->assertEquals('huraga', $result);
     }
 
-    public function testuploadAssets()
-    {
-        $themeMock = $this->getMockBuilder('\Box\Mod\Theme\Model\Theme')->disableOriginalConstructor()->getMock();
-        $themeMock->expects($this->atLeastOnce())
-            ->method('getPathAssets');
-        $files = array(
-            'test2' => array(
-                'error' => UPLOAD_ERR_NO_FILE
-                ),
-            'test1' => array(
-                    'error' => UPLOAD_ERR_OK,
-                    'tmp_name' => 'tempName',
-                ),
-        );
-        $this->service->uploadAssets($themeMock, $files);
-    }
-
-    public function testuploadAssets_Exception()
-    {
-        $themeMock = $this->getMockBuilder('\Box\Mod\Theme\Model\Theme')->disableOriginalConstructor()->getMock();
-        $themeMock->expects($this->atLeastOnce())
-            ->method('getPathAssets');
-        $files = array(
-            'test0' => array(
-                'error' => UPLOAD_ERR_CANT_WRITE
-            ),
-        );
-        $this->expectException(\Box_Exception::class);
-        $this->expectExceptionMessage(sprintf("Error uploading file %s Error code: %d", 'test0', UPLOAD_ERR_CANT_WRITE));
-        $this->service->uploadAssets($themeMock, $files);
-    }
 
 }
