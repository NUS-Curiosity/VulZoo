diff --git a/web_progress/models/web_progress.py b/web_progress/models/web_progress.py
index 18de2ce..750dac3 100644
--- a/web_progress/models/web_progress.py
+++ b/web_progress/models/web_progress.py
@@ -165,7 +165,7 @@ def get_all_progress(self, recency=_progress_period_secs * 2):
         """
         query = """
         SELECT code, array_agg(state) FROM web_progress
-        WHERE create_date > timezone('utc', now()) - INTERVAL '{recency} SECOND'
+        WHERE create_date > timezone('utc', now()) - INTERVAL '%s SECOND'
               AND recur_depth = 0 {user_id}
         GROUP BY code
         """.format(
@@ -175,7 +175,7 @@ def get_all_progress(self, recency=_progress_period_secs * 2):
                 user_id=self.env.user.id,
             ) or '')
         # superuser has right to see (and cancel) progress of everybody
-        self.env.cr.execute(query)
+        self.env.cr.execute(query, (recency, ))
         result = self.env.cr.fetchall()
         ret = [{
             'code': r[0],
diff --git a/web_progress/tests/test_web_progress.py b/web_progress/tests/test_web_progress.py
index b562421..e693881 100644
--- a/web_progress/tests/test_web_progress.py
+++ b/web_progress/tests/test_web_progress.py
@@ -1,5 +1,7 @@
 from odoo.tests import common, tagged
-from odoo import exceptions
+from odoo import exceptions, api, registry
+from odoo.tools import mute_logger
+from psycopg2.errors import SyntaxError
 import uuid
 import logging
 from ..models.web_progress import last_report_time
@@ -115,3 +117,32 @@ def test_web_progress_percent(self):
         self.partner_ids.web_progress_percent(0, "Start")
         self.partner_ids.web_progress_percent(50, "Middle")
         self.partner_ids.web_progress_percent(100, "End")
+
+
+class WebProgressTestAllProgress(common.SavepointCase):
+    at_install = True
+    post_install = False
+
+    @mute_logger('odoo.sql_db')
+    def test_get_all_progress(self):
+        """
+        Check call to get_all_progress without and with parameters.
+        Verify if the parameter is properly escaped in the internal SQL query.
+        """
+        progress_code = str(uuid.uuid4())
+        partner_obj = self.env['res.partner'].with_context(progress_code=progress_code)
+        partner_obj.web_progress_percent(0, "Start")
+        with api.Environment.manage():
+            with registry(self.env.cr.dbname).cursor() as new_cr:
+                # Create a new environment with a new cursor
+                new_env = api.Environment(new_cr, self.env.uid, self.env.context)
+                progress_obj = self.env['web.progress'].with_env(new_env)
+                res = progress_obj.get_all_progress()
+                self.assertEqual(res, [{'code': progress_code}])
+                res = progress_obj.get_all_progress(0)
+                self.assertEqual(res, [])
+                with self.assertRaises(SyntaxError) as e:
+                    progress_obj.get_all_progress("0 SECOND' GROUP BY code; "
+                                                  "SELECT code, array_agg(state) FROM web_progress "
+                                                  "WHERE create_date > timezone('utc', now()) - INTERVAL '10")
+                new_cr.rollback()
