diff --git a/lib/avo/fields/belongs_to_field.rb b/lib/avo/fields/belongs_to_field.rb
index 0c156c5ef..dc77f6a8e 100644
--- a/lib/avo/fields/belongs_to_field.rb
+++ b/lib/avo/fields/belongs_to_field.rb
@@ -199,11 +199,13 @@ def to_permitted_param
       def fill_field(model, key, value, params)
         return model unless model.methods.include? key.to_sym
 
+        valid_model_class = valid_polymorphic_class params["#{polymorphic_as}_type"]
+
         if polymorphic_as.present?
-          model.send("#{polymorphic_as}_type=", params["#{polymorphic_as}_type"])
+          model.send("#{polymorphic_as}_type=", valid_model_class)
 
           # If the type is blank, reset the id too.
-          if params["#{polymorphic_as}_type"].blank?
+          if valid_model_class.blank?
             model.send("#{polymorphic_as}_id=", nil)
           else
             model.send("#{polymorphic_as}_id=", params["#{polymorphic_as}_id"])
@@ -215,6 +217,12 @@ def fill_field(model, key, value, params)
         model
       end
 
+      def valid_polymorphic_class(possible_class)
+        types.find do |type|
+          type.to_s == possible_class.to_s
+        end
+      end
+
       def database_id
         # If the field is a polymorphic value, return the polymorphic_type as key and pre-fill the _id in fill_field.
         return "#{polymorphic_as}_type" if polymorphic_as.present?
