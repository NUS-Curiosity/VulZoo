diff --git a/src/modules/Servicedownloadable/Api/Admin.php b/src/modules/Servicedownloadable/Api/Admin.php
index cab04c4567..7d9af517c8 100644
--- a/src/modules/Servicedownloadable/Api/Admin.php
+++ b/src/modules/Servicedownloadable/Api/Admin.php
@@ -29,6 +29,7 @@ public function upload($data)
         $required = [
             'id' => 'Product ID is missing',
         ];
+
         $this->di['validator']->checkRequiredParamsForArray($required, $data);
 
         $model = $this->di['db']->getExistingModelById('Product', $data['id'], 'Product not found');
diff --git a/src/modules/Servicedownloadable/Api/Client.php b/src/modules/Servicedownloadable/Api/Client.php
index 155a4b542e..589bbf8bda 100644
--- a/src/modules/Servicedownloadable/Api/Client.php
+++ b/src/modules/Servicedownloadable/Api/Client.php
@@ -36,7 +36,7 @@ public function send_file($data)
 
         $orderService = $this->di['mod_service']('order');
         $s = $orderService->getOrderService($order);
-        if (!$s instanceof \Model_ServiceDownloadable) {
+        if (!$s instanceof \Model_ServiceDownloadable || $order->status !== 'active') {
             throw new \Box_Exception('Order is not activated');
         }
 
diff --git a/tests/modules/Servicedownloadable/Api/ClientTest.php b/tests/modules/Servicedownloadable/Api/ClientTest.php
index 8773f8ca25..5e92d5601a 100644
--- a/tests/modules/Servicedownloadable/Api/ClientTest.php
+++ b/tests/modules/Servicedownloadable/Api/ClientTest.php
@@ -105,10 +105,14 @@ public function testsend_file()
             ->method('getOrderService')
             ->will($this->returnValue(new \Model_ServiceDownloadable()));
 
+        $mockOrder = new \Model_ClientOrder();
+        $mockOrder->loadBean(New \DummyBean());
+        $mockOrder->status = "active";
+
         $dbMock = $this->getMockBuilder('\Box_Database')->getMock();
         $dbMock->expects($this->atLeastOnce())
             ->method('findOne')
-            ->will($this->returnValue(new \Model_ClientOrder()));
+            ->will($this->returnValue($mockOrder));
 
         $di = new \Pimple\Container();
         $di['db'] = $dbMock;
