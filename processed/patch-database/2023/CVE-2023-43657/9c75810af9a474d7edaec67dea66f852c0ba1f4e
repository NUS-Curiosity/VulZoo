diff --git a/.discourse-compatibility b/.discourse-compatibility
index 13e4ba01..41ecac12 100644
--- a/.discourse-compatibility
+++ b/.discourse-compatibility
@@ -1,4 +1,3 @@
-3.1.999: 05ca875fb543350795f6709ab7afcbb6e8f5871b
 3.1.0.beta5: e0eb21f7a97c54cfe40eb07b2c5ca53cde7b370a
 3.1.0.beta3: 0f3c612bd1d274ba71362c423f16fd19a32bbd46
 2.9.0.beta3: adef8c76aaeccaeb081a61bdd8ce7ab90ca41538
diff --git a/assets/javascripts/discourse/initializers/decrypt-topics.js b/assets/javascripts/discourse/initializers/decrypt-topics.js
index 6f7f9f77..ed2624d4 100644
--- a/assets/javascripts/discourse/initializers/decrypt-topics.js
+++ b/assets/javascripts/discourse/initializers/decrypt-topics.js
@@ -313,7 +313,7 @@ export default {
 
     getTopicTitle(topicId).then((topicTitle) => {
       // Update fancy title stored in model
-      topicController.model.set("fancy_title", topicTitle);
+      topicController.model.set("fancy_title", escapeExpression(topicTitle));
 
       // Update document title
       const documentTitle = this.container.lookup("service:document-title");
diff --git a/test/javascripts/acceptance/encrypt-test.js b/test/javascripts/acceptance/encrypt-test.js
index dbcd2b2f..1c151dd5 100644
--- a/test/javascripts/acceptance/encrypt-test.js
+++ b/test/javascripts/acceptance/encrypt-test.js
@@ -207,11 +207,14 @@ function setupEncryptTests(needs) {
   });
 }
 
-async function setupEncryptedTopicPretender(server, { identity } = {}) {
+async function setupEncryptedTopicPretender(
+  server,
+  { identity, topicTitle = "Top Secret Title" } = {}
+) {
   identity = identity || (await getIdentity());
   const topicKey = await generateKey();
   const exportedTopicKey = await exportKey(topicKey, identity.encryptPublic);
-  const encryptedTitle = await encrypt(topicKey, { raw: "Top Secret Title" });
+  const encryptedTitle = await encrypt(topicKey, { raw: topicTitle });
   const encryptedRaw = await encrypt(topicKey, { raw: "Top Secret Post" });
 
   server.get("/t/42.json", () => {
@@ -844,6 +847,20 @@ acceptance("Encrypt - active", function (needs) {
     assert.strictEqual(query("#edit-title").value.trim(), "Top Secret Title");
   });
 
+  test("viewing encrypted topic escapes title correctly", async function (assert) {
+    globalAssert = assert;
+
+    const title = "Title <a>with some html chars</a>";
+    await setupEncryptedTopicPretender(pretender, { topicTitle: title });
+
+    await visit("/t/a-secret-message/42");
+
+    assert
+      .dom(".fancy-title")
+      .hasText(title, "Title in UI is escaped correctly");
+    assert.strictEqual(document.title, `${title} - QUnit Discourse Tests`);
+  });
+
   test("topic titles in notification panel are decrypted", async function (assert) {
     const identity = await getIdentity();
     const topicKey = await generateKey();
