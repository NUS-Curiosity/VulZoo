diff --git a/proto/packet.go b/proto/packet.go
index 2f10b56d56..b3efd26d06 100644
--- a/proto/packet.go
+++ b/proto/packet.go
@@ -596,6 +596,8 @@ func (p *Packet) GetOpMsg() (m string) {
 		m = "OpLcNodeScan"
 	case OpLcNodeSnapshotVerDel:
 		m = "OpLcNodeSnapshotVerDel"
+	case OpMetaReadDirOnly:
+		m = "OpMetaReadDirOnly"
 	default:
 		m = fmt.Sprintf("op:%v not found", p.Opcode)
 	}
diff --git a/sdk/data/stream/stream_writer.go b/sdk/data/stream/stream_writer.go
index 667837bf23..9a388adead 100644
--- a/sdk/data/stream/stream_writer.go
+++ b/sdk/data/stream/stream_writer.go
@@ -395,7 +395,8 @@ begin:
 				}
 			}
 			// try append write, get response
-			log.LogDebugf("action[streamer.write] doAppendWrite req %v FileOffset %v size %v", req.ExtentKey, req.FileOffset, req.Size)
+			log.LogDebugf("action[streamer.write] doAppendWrite req: ExtentKey(%v) FileOffset(%v) size(%v)",
+				req.ExtentKey, req.FileOffset, req.Size)
 			var status int32
 			// First, attempt sequential writes using neighboring extent keys. If the last extent has a different version,
 			// it indicates that the extent may have been fully utilized by the previous version.
diff --git a/util/string.go b/util/string.go
index aab9b9ef4d..84f4759691 100644
--- a/util/string.go
+++ b/util/string.go
@@ -15,9 +15,9 @@
 package util
 
 import (
-	"math/rand"
+	"crypto/rand"
+	"math/big"
 	"strings"
-	"time"
 )
 
 func SubString(sourceString string, begin, end int) string {
@@ -59,9 +59,9 @@ func RandomString(length int, seed RandomSeed) string {
 	runs := seed.Runes()
 	result := ""
 	for i := 0; i < length; i++ {
-		rand.Seed(time.Now().UnixNano())
-		randNumber := rand.Intn(len(runs))
-		result += string(runs[randNumber])
+		lenInt64 := int64(len(runs))
+		randNumber, _ := rand.Int(rand.Reader, big.NewInt(lenInt64))
+		result += string(runs[randNumber.Uint64()])
 	}
 	return result
 }
