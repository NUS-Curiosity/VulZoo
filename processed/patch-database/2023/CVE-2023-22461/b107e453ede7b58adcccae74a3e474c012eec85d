diff --git a/dist/lib/sanitizeSVG.js b/dist/lib/sanitizeSVG.js
index ed4daf0..4bc6e1f 100644
--- a/dist/lib/sanitizeSVG.js
+++ b/dist/lib/sanitizeSVG.js
@@ -1,5 +1,31 @@
 "use strict";
 Object.defineProperty(exports, "__esModule", { value: true });
+const svgDisallowed = [
+    'a',
+    'animate',
+    'color-profile',
+    'cursor',
+    'discard',
+    'fedropshadow',
+    'font-face',
+    'font-face-format',
+    'font-face-name',
+    'font-face-src',
+    'font-face-uri',
+    'foreignobject',
+    'hatch',
+    'hatchpath',
+    'mesh',
+    'meshgradient',
+    'meshpatch',
+    'meshrow',
+    'missing-glyph',
+    'script',
+    'set',
+    'solidcolor',
+    'unknown',
+    'use',
+];
 const getWindow = () => (typeof window === 'undefined' ? null : window);
 const readAsText = (svg) => new Promise((resolve) => {
     if (!isFile(svg)) {
@@ -24,13 +50,13 @@ const sanitizeSVG = async (svg, window = getWindow()) => {
     const svgText = await readAsText(svg);
     if (!svgText)
         throw new Error('Image corrupt');
-    const div = window.document.createElement('div');
-    div.innerHTML = svgText;
-    const svgEl = div.firstElementChild;
+    const playground = window.document.createElement('template');
+    playground.innerHTML = svgText;
+    const svgEl = playground.content.firstElementChild;
     const attributes = Array.from(svgEl.attributes).map(({ name }) => name);
     const hasScriptAttr = !!attributes.find((attr) => attr.startsWith('on'));
-    const scripts = svgEl.getElementsByTagName('script');
-    return scripts.length === 0 && !hasScriptAttr ? svg : null;
+    const disallowedSvgElements = svgEl.querySelectorAll(svgDisallowed.join(','));
+    return disallowedSvgElements.length === 0 && !hasScriptAttr ? svg : null;
 };
 exports.default = sanitizeSVG;
 //# sourceMappingURL=sanitizeSVG.js.map
\ No newline at end of file
diff --git a/dist/lib/sanitizeSVG.js.map b/dist/lib/sanitizeSVG.js.map
index 3bce35c..5540235 100644
--- a/dist/lib/sanitizeSVG.js.map
+++ b/dist/lib/sanitizeSVG.js.map
@@ -1 +1 @@
-{"version":3,"file":"sanitizeSVG.js","sourceRoot":"","sources":["../../src/sanitizeSVG.ts"],"names":[],"mappings":";;AAAA,MAAM,SAAS,GAAG,GAAG,EAAE,CAAC,CAAC,OAAO,MAAM,KAAK,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAA;AACvE,MAAM,UAAU,GAAG,CAAC,GAAkB,EAAE,EAAE,CACxC,IAAI,OAAO,CAAgB,CAAC,OAAO,EAAE,EAAE;IACrC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE;QAChB,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAA;KAC/B;SAAM;QACL,MAAM,UAAU,GAAG,IAAI,UAAU,EAAE,CAAA;QACnC,UAAU,CAAC,MAAM,GAAG,GAAG,EAAE;YACvB,OAAO,CAAC,UAAU,CAAC,MAAuB,CAAC,CAAA;QAC7C,CAAC,CAAA;QACD,UAAU,CAAC,UAAU,CAAC,GAAG,CAAC,CAAA;KAC3B;AACH,CAAC,CAAC,CAAA;AAEJ,MAAM,MAAM,GAAG,CAAC,GAAkB,EAAe,EAAE;IACjD,OAAQ,GAAY,CAAC,IAAI,KAAK,SAAS,CAAA;AACzC,CAAC,CAAA;AAED,MAAM,WAAW,GAAG,KAAK,EAAE,GAAkB,EAAE,MAAM,GAAG,SAAS,EAAE,EAAE,EAAE;IACrE,IAAI,CAAC,MAAM;QAAE,MAAM,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAA;IACnD,IAAI,MAAM,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC,IAAI,KAAK,eAAe;QAAE,OAAO,GAAG,CAAA;IAC3D,MAAM,OAAO,GAAG,MAAM,UAAU,CAAC,GAAG,CAAC,CAAA;IACrC,IAAI,CAAC,OAAO;QAAE,MAAM,IAAI,KAAK,CAAC,eAAe,CAAC,CAAA;IAC9C,MAAM,GAAG,GAAG,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAA;IAChD,GAAG,CAAC,SAAS,GAAG,OAAO,CAAA;IACvB,MAAM,KAAK,GAAG,GAAG,CAAC,iBAAkB,CAAA;IACpC,MAAM,UAAU,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,IAAI,CAAC,CAAA;IACvE,MAAM,aAAa,GAAG,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAA;IACxE,MAAM,OAAO,GAAG,KAAK,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAA;IACpD,OAAO,OAAO,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAA;AAC5D,CAAC,CAAA;AAED,kBAAe,WAAW,CAAA"}
\ No newline at end of file
+{"version":3,"file":"sanitizeSVG.js","sourceRoot":"","sources":["../../src/sanitizeSVG.ts"],"names":[],"mappings":";;AAEA,MAAM,aAAa,GAAG;IACpB,GAAG;IACH,SAAS;IACT,eAAe;IACf,QAAQ;IACR,SAAS;IACT,cAAc;IACd,WAAW;IACX,kBAAkB;IAClB,gBAAgB;IAChB,eAAe;IACf,eAAe;IACf,eAAe;IACf,OAAO;IACP,WAAW;IACX,MAAM;IACN,cAAc;IACd,WAAW;IACX,SAAS;IACT,eAAe;IACf,QAAQ;IACR,KAAK;IACL,YAAY;IACZ,SAAS;IACT,KAAK;CACN,CAAA;AAED,MAAM,SAAS,GAAG,GAAG,EAAE,CAAC,CAAC,OAAO,MAAM,KAAK,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,CAAA;AACvE,MAAM,UAAU,GAAG,CAAC,GAAkB,EAAE,EAAE,CACxC,IAAI,OAAO,CAAgB,CAAC,OAAO,EAAE,EAAE;IACrC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE;QAChB,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAA;KAC/B;SAAM;QACL,MAAM,UAAU,GAAG,IAAI,UAAU,EAAE,CAAA;QACnC,UAAU,CAAC,MAAM,GAAG,GAAG,EAAE;YACvB,OAAO,CAAC,UAAU,CAAC,MAAuB,CAAC,CAAA;QAC7C,CAAC,CAAA;QACD,UAAU,CAAC,UAAU,CAAC,GAAG,CAAC,CAAA;KAC3B;AACH,CAAC,CAAC,CAAA;AAEJ,MAAM,MAAM,GAAG,CAAC,GAAkB,EAAe,EAAE;IACjD,OAAQ,GAAY,CAAC,IAAI,KAAK,SAAS,CAAA;AACzC,CAAC,CAAA;AAED,MAAM,WAAW,GAAG,KAAK,EAAE,GAAkB,EAAE,MAAM,GAAG,SAAS,EAAE,EAAE,EAAE;IACrE,IAAI,CAAC,MAAM;QAAE,MAAM,IAAI,KAAK,CAAC,qBAAqB,CAAC,CAAA;IACnD,IAAI,MAAM,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC,IAAI,KAAK,eAAe;QAAE,OAAO,GAAG,CAAA;IAC3D,MAAM,OAAO,GAAG,MAAM,UAAU,CAAC,GAAG,CAAC,CAAA;IACrC,IAAI,CAAC,OAAO;QAAE,MAAM,IAAI,KAAK,CAAC,eAAe,CAAC,CAAA;IAC9C,MAAM,UAAU,GAAG,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,UAAU,CAAC,CAAA;IAC5D,UAAU,CAAC,SAAS,GAAG,OAAO,CAAA;IAC9B,MAAM,KAAK,GAAG,UAAU,CAAC,OAAO,CAAC,iBAAkB,CAAA;IACnD,MAAM,UAAU,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,EAAC,IAAI,EAAC,EAAE,EAAE,CAAC,IAAI,CAAC,CAAA;IACrE,MAAM,aAAa,GAAG,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAA;IACxE,MAAM,qBAAqB,GAAG,KAAK,CAAC,gBAAgB,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAA;IAC7E,OAAO,qBAAqB,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAA;AAC1E,CAAC,CAAA;AAED,kBAAe,WAAW,CAAA"}
\ No newline at end of file
diff --git a/dist/types/sanitizeSVG.d.ts.map b/dist/types/sanitizeSVG.d.ts.map
index ff4ed05..4a11537 100644
--- a/dist/types/sanitizeSVG.d.ts.map
+++ b/dist/types/sanitizeSVG.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"sanitizeSVG.d.ts","sourceRoot":"","sources":["../../src/sanitizeSVG.ts"],"names":[],"mappings":";AAkBA,QAAA,MAAM,WAAW,+EAYhB,CAAA;AAED,eAAe,WAAW,CAAA"}
\ No newline at end of file
+{"version":3,"file":"sanitizeSVG.d.ts","sourceRoot":"","sources":["../../src/sanitizeSVG.ts"],"names":[],"mappings":";AA+CA,QAAA,MAAM,WAAW,+EAYhB,CAAA;AAED,eAAe,WAAW,CAAA"}
\ No newline at end of file
diff --git a/src/sanitizeSVG.ts b/src/sanitizeSVG.ts
index 0eff462..4102320 100644
--- a/src/sanitizeSVG.ts
+++ b/src/sanitizeSVG.ts
@@ -1,3 +1,32 @@
+// List of disallowed SVG elements
+// Adjusted from https://github.com/cure53/DOMPurify/blob/f6fcdb9f1c13b3559697db0038744a0a327d46ab/src/tags.js#L201
+const svgDisallowed = [
+  'a',
+  'animate',
+  'color-profile',
+  'cursor',
+  'discard',
+  'fedropshadow',
+  'font-face',
+  'font-face-format',
+  'font-face-name',
+  'font-face-src',
+  'font-face-uri',
+  'foreignobject',
+  'hatch',
+  'hatchpath',
+  'mesh',
+  'meshgradient',
+  'meshpatch',
+  'meshrow',
+  'missing-glyph',
+  'script',
+  'set',
+  'solidcolor',
+  'unknown',
+  'use'
+]
+
 const getWindow = () => (typeof window === 'undefined' ? null : window)
 const readAsText = (svg: File | Buffer) =>
   new Promise<string | null>((resolve) => {
@@ -21,13 +50,13 @@ const sanitizeSVG = async (svg: File | Buffer, window = getWindow()) => {
   if (isFile(svg) && svg.type !== 'image/svg+xml') return svg
   const svgText = await readAsText(svg)
   if (!svgText) throw new Error('Image corrupt')
-  const div = window.document.createElement('div')
-  div.innerHTML = svgText
-  const svgEl = div.firstElementChild!
+  const playground = window.document.createElement('template')
+  playground.innerHTML = svgText
+  const svgEl = playground.content.firstElementChild!
   const attributes = Array.from(svgEl.attributes).map(({ name }) => name)
   const hasScriptAttr = !!attributes.find((attr) => attr.startsWith('on'))
-  const scripts = svgEl.getElementsByTagName('script')
-  return scripts.length === 0 && !hasScriptAttr ? svg : null
+  const disallowedSvgElements = svgEl.querySelectorAll(svgDisallowed.join(','))
+  return disallowedSvgElements.length === 0 && !hasScriptAttr ? svg : null
 }
 
 export default sanitizeSVG
