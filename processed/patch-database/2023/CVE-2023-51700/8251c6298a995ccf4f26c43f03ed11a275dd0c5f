diff --git a/includes/class-core.php b/includes/class-core.php
index 01966db..12d85d9 100644
--- a/includes/class-core.php
+++ b/includes/class-core.php
@@ -112,7 +112,7 @@ public function getAuthResponseFromDB( $order_ref ) {
 		}
 		return array(
 			'time_created' => $response->time_created,
-			'response'     => unserialize( $response->response ),
+			'response'     => $this->convert_json_order_response_to_array( $response->response ),
 			'orderRef'     => $response->orderRef, // phpcs:ignore -- We shall not modify $orderRef to snake_case.
 		);
 	}
@@ -131,7 +131,7 @@ private function saveAuthResponseToDB( $orderRef, $response ) { // phpcs:ignore
 			$table_name,
 			array(
 				'time_created' => time(),
-				'response'     => serialize( $response ),
+				'response'     => $this->convert_order_response_to_json( $response ),
 				'orderRef'     => $orderRef, // phpcs:ignore -- We shall not modify $orderRef to snake_case.
 			)
 		);
@@ -269,4 +269,57 @@ public function deleteAuthCookie() {
 			// Do nothing.
 		}
 	}
+
+	/**
+	 * Convert Dimafe6\BankID\OrderResponse to json.
+	 *
+	 * @param Dimafe6\BankID\OrderResponse $order_response Order response.
+	 * @return array
+	 * @since 1.0.1
+	 */
+	private function convert_order_response_to_json( $order_response ): string {
+		// Make sure that $order_response is an instance of Dimafe6\BankID\Model\OrderResponse.
+		if ( ! $order_response instanceof \Dimafe6\BankID\Model\OrderResponse ) {
+			return array();
+		}
+		$array = array(
+			'orderRef'       => $order_response->orderRef, // phpcs:ignore -- We shall not modify $orderRef to snake_case.
+			'autoStartToken' => $order_response->autoStartToken // phpcs:ignore -- We shall not modify $autoStartToken to snake_case.
+		);
+		// If property qrStartToken exists, add it to the array.
+		if ( property_exists( $order_response, 'qrStartToken' ) ) {
+			$array['qrStartToken'] = $order_response->qrStartToken; // phpcs:ignore -- We shall not modify $qrStartToken to snake_case.
+		}
+		// If property qrStartSecret exists, add it to the array.
+		if ( property_exists( $order_response, 'qrStartSecret' ) ) {
+			$array['qrStartSecret'] = $order_response->qrStartSecret; // phpcs:ignore -- We shall not modify $qrStartSecret to snake_case.
+		}
+
+		$json = wp_json_encode( $array );
+
+		return $json ? $json : '{}';
+	}
+
+	/**
+	 * Convert JSON OrderResponse to array after checking if it is valid.
+	 *
+	 * @param string $json JSON OrderResponse.
+	 * @throws \Exception If JSON or data is not valid.
+	 * @return array
+	 * @since 1.0.1
+	 */
+	private function convert_json_order_response_to_array( $json ): array {
+		// Check each property in the JSON OrderResponse against [0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}
+		// If any of the properties is not valid, return an empty array.
+		$json = json_decode( $json, true );
+		if ( ! is_array( $json ) ) {
+			throw new \Exception( 'Invalid JSON' );
+		}
+		foreach ( $json as $key => $value ) {
+			if ( ! preg_match( '/^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/', $value ) ) {
+				throw new \Exception( 'Data is not valid' );
+			}
+		}
+		return $json;
+	}
 }
diff --git a/includes/wp-login/class-api.php b/includes/wp-login/class-api.php
index f5e63c1..d155701 100644
--- a/includes/wp-login/class-api.php
+++ b/includes/wp-login/class-api.php
@@ -45,7 +45,7 @@ public function status() {
         $time = time();
         $time_since_auth = $time - $db_row['time_created'];
 
-        $status = $instance->get_bankid_service()->collectResponse($auth_response->orderRef);
+        $status = $instance->get_bankid_service()->collectResponse($auth_response['orderRef']);
 
         if ($status->status == "failed" ) {
             $instance->deleteAuthResponseFromDB($orderRef);
@@ -78,7 +78,7 @@ public function status() {
         }
 
         $qr = new QRCode;
-        $qrCode = $qr->render("bankid.".$auth_response->qrStartToken.".".$time_since_auth.".".hash_hmac('sha256', $time_since_auth, $auth_response->qrStartSecret));
+        $qrCode = $qr->render("bankid.".$auth_response['qrStartToken'].".".$time_since_auth.".".hash_hmac('sha256', $time_since_auth, $auth_response['qrStartSecret']));
         return [
             "qr" => $qrCode,
             "orderRef" => $orderRef,
