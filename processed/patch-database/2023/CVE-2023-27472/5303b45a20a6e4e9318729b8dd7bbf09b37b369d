diff --git a/src/lib/components/MinimalTree.svelte b/src/lib/components/MinimalTree.svelte
index 476d41c..7286fd5 100644
--- a/src/lib/components/MinimalTree.svelte
+++ b/src/lib/components/MinimalTree.svelte
@@ -4,7 +4,7 @@
 	import "./treeview.css"
 
 	import type { Entity } from "$lib/quickentity-types"
-	import { getReferencedLocalEntity } from "$lib/utils"
+	import { getReferencedLocalEntity, sanitise } from "$lib/utils"
 
 	import { createEventDispatcher, onMount } from "svelte"
 	import { v4 } from "uuid"
@@ -73,7 +73,8 @@
 					dots: true,
 					icons: true
 				},
-				check_callback: true
+				check_callback: true,
+				force_text: true
 			},
 			search: {
 				fuzzy: true,
@@ -155,7 +156,7 @@
 						: icons.find((a) => entityData.factory.includes(a[0]))
 						? icons.find((a) => entityData.factory.includes(a[0]))![1]
 						: "far fa-file",
-				text: `${entityData.name} (ref ${entityID})`,
+				text: `${sanitise(entityData.name)} (ref ${entityID})`,
 				folder: entityData.factory == "[modules:/zentity.class].pc_entitytype" && reverseReferences[entityID].some((a) => a.type == "parent") // for sorting and stuff
 			})
 		}
@@ -166,7 +167,7 @@
 				id: "comment-" + index,
 				parent: getReferencedLocalEntity(entry.parent) || "#",
 				icon: "far fa-sticky-note",
-				text: entry.name + " (comment)",
+				text: sanitise(entry.name) + " (comment)",
 				folder: false // for sorting and stuff
 			})
 
diff --git a/src/lib/components/Tree.svelte b/src/lib/components/Tree.svelte
index 657acbf..d3b345d 100644
--- a/src/lib/components/Tree.svelte
+++ b/src/lib/components/Tree.svelte
@@ -4,7 +4,7 @@
 	import "./treeview.css"
 
 	import type { Entity, FullRef, Ref, RefWithConstantValue, SubEntity } from "$lib/quickentity-types"
-	import { changeReferenceToLocalEntity, genRandHex, getReferencedEntities, getReferencedExternalEntities, getReferencedLocalEntity, normaliseToHash, traverseEntityTree } from "$lib/utils"
+	import { changeReferenceToLocalEntity, genRandHex, getReferencedEntities, getReferencedExternalEntities, getReferencedLocalEntity, normaliseToHash, sanitise, traverseEntityTree } from "$lib/utils"
 
 	import { createEventDispatcher, onMount } from "svelte"
 	import { v4 } from "uuid"
@@ -96,7 +96,8 @@
 					dots: true,
 					icons: true
 				},
-				check_callback: true
+				check_callback: true,
+				force_text: true
 			},
 			search: {
 				fuzzy: true,
@@ -751,7 +752,7 @@
 						: icons.find((a) => entityData.factory.includes(a[0]))
 						? icons.find((a) => entityData.factory.includes(a[0]))![1]
 						: "far fa-file",
-				text: `${entityData.name} (ref ${entityID})`,
+				text: `${sanitise(entityData.name)} (ref ${entityID})`,
 				folder: entityData.factory == "[modules:/zentity.class].pc_entitytype" && reverseReferences[entityID].some((a) => a.type == "parent") // for sorting and stuff
 			})
 		}
@@ -762,7 +763,7 @@
 				id: "comment-" + index,
 				parent: getReferencedLocalEntity(entry.parent) || "#",
 				icon: "far fa-sticky-note",
-				text: entry.name + " (comment)",
+				text: sanitise(entry.name) + " (comment)",
 				folder: false // for sorting and stuff
 			})
 
diff --git a/src/lib/utils.ts b/src/lib/utils.ts
index 9f1669b..6b21c6e 100644
--- a/src/lib/utils.ts
+++ b/src/lib/utils.ts
@@ -631,3 +631,10 @@ export function changeEntityHashesToFriendly(entity: Entity, friendly: Record<st
 export function changeEntityHashesFromFriendly(entity: Entity, friendly: Record<string, string>) {
 	changeEntityHashesToFriendly(entity, Object.fromEntries(Object.entries(friendly).map((a) => [a[1], a[0]])))
 }
+
+export function sanitise(a: string) {
+	const sanitiser = new DOMParser().parseFromString(`<div></div>`, "text/html")
+	sanitiser.querySelector("div")!.innerText = a
+
+	return sanitiser.querySelector("div")!.innerHTML
+}
\ No newline at end of file
