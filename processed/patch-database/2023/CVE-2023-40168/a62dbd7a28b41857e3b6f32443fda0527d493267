diff --git a/src/main/index.js b/src/main/index.js
index ea20705b..0b67bf9f 100644
--- a/src/main/index.js
+++ b/src/main/index.js
@@ -22,7 +22,6 @@ import {isBackgroundThrottlingEnabled, whenBackgroundThrottlingChanged} from './
 import './extensions';
 import {createAtomicWriteStream} from './atomic-file-write-stream';
 import './protocols';
-import './request-security';
 
 const readFile = util.promisify(fs.readFile);
 const brotliDecompress = util.promisify(zlib.brotliDecompress);
diff --git a/src/main/request-security.js b/src/main/request-security.js
deleted file mode 100644
index 0471f77c..00000000
--- a/src/main/request-security.js
+++ /dev/null
@@ -1,37 +0,0 @@
-import {app} from 'electron';
-
-const isRequestAllowed = (details) => {
-  const url = new URL(details.url);
-  if (url.protocol === 'file:') {
-    // Requests to files must be inside the application
-    return url.pathname.startsWith(__dirname);
-  }
-
-  if (details.resourceType !== 'xhr') {
-    // Immune to CORS even in standard browsers
-    return true;
-  }
-
-  if (url.protocol !== 'http:' && url.protocol !== 'https:') {
-    // Special protocols are immune to CORS
-    return true;
-  }
-
-  const allowOriginHeader = details.responseHeaders['access-control-allow-origin'];
-  if (!Array.isArray(allowOriginHeader)) {
-    // No header, not allowed
-    return false;
-  }
-
-  // Header must be set to "*"
-  // We don't have a real Origin that we can check
-  return allowOriginHeader.join(',') === '*';
-};
-
-app.on('session-created', (session) => {
-  session.webRequest.onHeadersReceived((details, callback) => {
-    callback({
-      cancel: !isRequestAllowed(details)
-    });
-  });
-});
