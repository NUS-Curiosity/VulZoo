diff --git a/connaisseur/res/targets_schema.json b/connaisseur/res/targets_schema.json
index 54c416d62..f4290e719 100644
--- a/connaisseur/res/targets_schema.json
+++ b/connaisseur/res/targets_schema.json
@@ -75,7 +75,7 @@
                                     },
                                     "name": {
                                         "type": "string",
-                                        "pattern": "^targets/([a-z\\d][a-z\\d_-]*)+$"
+                                        "pattern": "^targets/[a-z\\d][a-z\\d_-]*$"
                                     },
                                     "paths": {
                                         "type": "array",
diff --git a/docs/SECURITY.md b/docs/SECURITY.md
index f1a7a3179..3a9f70028 100644
--- a/docs/SECURITY.md
+++ b/docs/SECURITY.md
@@ -12,6 +12,7 @@ We stick to semantic versioning, so unless the major version changes, updating C
 | - | - | - | - |
 | initContainers not validated | <span>&#8804;</span> 1.3.0 | 1.3.1 | Prior to version 1.3.1 Connaisseur did not validate initContainers which allowed deploying unverified images to the cluster. |
 | Ephemeral containers not validated | <span>&#8804;</span> 3.1.1 | 3.2.0 | Prior to version 3.2.0 Connaisseur did not validate ephemeral containers (introduced in k8s 1.25) which allowed deploying unverified images to the cluster. |
+| Regex Denial of Service for Notary delegations | <span>&#8804;</span> 3.3.0 | 3.3.1 | Prior to version 3.3.1 Connaisseur did input validation on the names of delegations in an unsafe manner: An adversary with the ability to alter Notary responses, in particular an evil Notary server, could have provided Connaisseur with an invalid delegation name that would lead to catastrophic backtracking during a regex matching. Only users of type `notaryv1` validators are affected as Connaisseur will only perform this kind of input validation in the context of a Notary validation. If you mistrust the Docker Notary server, the default configuration is vulnerable as it contains a `notaryv1` validator with the root keys of both Connaisseur and the library of official Docker images. |
 
 ## Reporting a vulnerability
 
diff --git a/tests/data/trust_data/redos_targets.json b/tests/data/trust_data/redos_targets.json
new file mode 100644
index 000000000..3000b263b
--- /dev/null
+++ b/tests/data/trust_data/redos_targets.json
@@ -0,0 +1,45 @@
+{
+    "signed": {
+        "_type": "Targets",
+        "delegations": {
+            "keys": {
+                "6984a67934a29955b3f969835c58ee0dd09158f5bec43726d319515b56b0a878": {
+                    "keytype": "ecdsa",
+                    "keyval": {
+                        "private": null,
+                        "public": "MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEEchQNiJJt4PTaEeAzaztL+TQZqTa0iM0YSf+w0LjSElobVsYgnqIbCWe6pGX3UvcCngNw7N4uGkdVNVMS2Tslg=="
+                    }
+                },
+                "70aa109003a93131c63499c70dcfc8db3ba33ca81bdd1abcd52c067a8acc0492": {
+                    "keytype": "ecdsa",
+                    "keyval": {
+                        "private": null,
+                        "public": "MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEM0xl8F5nwIV3IAru1Pf85WCo4cfTOQ91jhxVaQ3xHMeW430q7R4H/tJmAXUZBe+nOTX8pgtmrLpT+Hu/H7pUhw=="
+                    }
+                }
+            },
+            "roles": [
+                {
+                    "keyids": [
+                        "70aa109003a93131c63499c70dcfc8db3ba33ca81bdd1abcd52c067a8acc0492"
+                    ],
+                    "name": "targets/abababababababababababababababababababababababababababababab*",
+                    "paths": [
+                        ""
+                    ],
+                    "threshold": 1
+                }
+            ]
+        },
+        "expires": "2023-01-12T16:55:17.056146761+01:00",
+        "targets": {},
+        "version": 3
+    },
+    "signatures": [
+        {
+            "keyid": "7c62922e6be165f1ea08252f77410152b9e4ec0d7bf4e69c1cc43f0e6c73da20",
+            "method": "ecdsa",
+            "sig": "ayUgIwW4LmtW+kuzHuyU7lkn8awoXlymBcXeO8j++JSAUpU3BSuFsBe7yx3SOOsxh57u+vWkCOzPdLEYVyQrqg=="
+        }
+    ]
+}
diff --git a/tests/validators/notaryv1/test_trust_data.py b/tests/validators/notaryv1/test_trust_data.py
index e8f6989a6..5cbd55203 100644
--- a/tests/validators/notaryv1/test_trust_data.py
+++ b/tests/validators/notaryv1/test_trust_data.py
@@ -247,6 +247,12 @@
         (fix.get_td("sample7_targets"), "targets", "TargetsData", fix.no_exc()),
         (fix.get_td("sample7_snapshot"), "snapshot", "SnapshotData", fix.no_exc()),
         (fix.get_td("missing_path"), "targets", "TargetsData", fix.no_exc()),
+        (
+            fix.get_td("redos_targets"),
+            "targets",
+            "TargetsData",
+            pytest.raises(exc.InvalidTrustDataFormatError),
+        ),
     ],
 )
 def test_trust_data_init(m_trust_data, data: dict, role: str, class_: str, exception):
