diff --git a/app/controllers/discourse_reactions/custom_reactions_controller.rb b/app/controllers/discourse_reactions/custom_reactions_controller.rb
index e8a241b..f232d86 100644
--- a/app/controllers/discourse_reactions/custom_reactions_controller.rb
+++ b/app/controllers/discourse_reactions/custom_reactions_controller.rb
@@ -45,7 +45,7 @@ def reactions_given
         include_inactive:
           current_user.try(:staff?) || (current_user && SiteSetting.show_inactive_accounts),
       )
-    raise Discourse::NotFound unless guardian.can_see_profile?(user)
+    raise Discourse::InvalidAccess unless guardian.can_see_notifications?(user)
 
     reaction_users =
       DiscourseReactions::ReactionUser
@@ -78,7 +78,7 @@ def reactions_received
         include_inactive:
           current_user.try(:staff?) || (current_user && SiteSetting.show_inactive_accounts),
       )
-    raise Discourse::NotFound unless guardian.can_see_profile?(user)
+    raise Discourse::InvalidAccess unless guardian.can_see_notifications?(user)
 
     posts = Post.joins(:topic).where(user_id: user.id)
     posts = guardian.filter_allowed_categories(posts)
diff --git a/spec/requests/custom_reactions_controller_spec.rb b/spec/requests/custom_reactions_controller_spec.rb
index e93c16a..7054245 100644
--- a/spec/requests/custom_reactions_controller_spec.rb
+++ b/spec/requests/custom_reactions_controller_spec.rb
@@ -167,27 +167,27 @@
       Fabricate(:reaction_user, reaction: secure_reaction, user: user_2, post: secure_post)
     end
 
-    it "returns reactions given by a user" do
-      sign_in(user_1)
+    it "returns reactions given by a user when current user is admin" do
+      sign_in(admin)
 
       get "/discourse-reactions/posts/reactions.json", params: { username: user_2.username }
-      parsed = response.parsed_body
+      expect(response.status).to eq(200)
 
-      expect(parsed[0]["user"]["id"]).to eq(user_2.id)
-      expect(parsed[0]["post_id"]).to eq(post_2.id)
-      expect(parsed[0]["post"]["user"]["id"]).to eq(user_1.id)
-      expect(parsed[0]["reaction"]["id"]).to eq(reaction_1.id)
+      parsed = response.parsed_body
+      expect(parsed[2]["user"]["id"]).to eq(user_2.id)
+      expect(parsed[2]["post_id"]).to eq(post_2.id)
+      expect(parsed[2]["post"]["user"]["id"]).to eq(user_1.id)
+      expect(parsed[2]["reaction"]["id"]).to eq(reaction_1.id)
     end
 
-    it "does not return reactions for private messages" do
+    it "does not return reactions for private messages of other users" do
       sign_in(user_1)
 
       get "/discourse-reactions/posts/reactions.json", params: { username: user_2.username }
-      parsed = response.parsed_body
-      expect(response.parsed_body.map { |reaction| reaction["post_id"] }).not_to include(
-        private_post.id,
-      )
+      expect(response.status).to eq(403)
+    end
 
+    it "returns reactions for private messages of current user" do
       sign_in(user_2)
 
       get "/discourse-reactions/posts/reactions.json", params: { username: user_2.username }
@@ -202,15 +202,11 @@
       sign_in(user_1)
 
       get "/discourse-reactions/posts/reactions.json", params: { username: user_2.username }
-      parsed = response.parsed_body
-      expect(response.parsed_body.map { |reaction| reaction["post_id"] }).not_to include(
-        secure_post.id,
-      )
+      expect(response.status).to eq(403)
 
       secure_group.add(user_1)
       get "/discourse-reactions/posts/reactions.json", params: { username: user_2.username }
-      parsed = response.parsed_body
-      expect(response.parsed_body.map { |reaction| reaction["post_id"] }).to include(secure_post.id)
+      expect(response.status).to eq(403)
 
       sign_in(user_2)
 
@@ -281,8 +277,8 @@
   end
 
   describe "#reactions_received" do
-    it "returns reactions received by a user" do
-      sign_in(user_2)
+    it "returns reactions received by a user when current user is admin" do
+      sign_in(admin)
 
       get "/discourse-reactions/posts/reactions-received.json",
           params: {
@@ -296,6 +292,17 @@
       expect(parsed[0]["reaction"]["id"]).to eq(reaction_2.id)
     end
 
+    it "does not return reactions received by a user when current user is not an admin" do
+      sign_in(user_1)
+
+      get "/discourse-reactions/posts/reactions-received.json",
+          params: {
+            username: user_2.username,
+          }
+
+      expect(response.status).to eq(403)
+    end
+
     it "filters by acting username" do
       sign_in(user_1)
 
