diff --git a/lib/tesseract.js b/lib/tesseract.js
index 54846f8..563deb4 100644
--- a/lib/tesseract.js
+++ b/lib/tesseract.js
@@ -4,12 +4,12 @@
  * Module dependencies.
  */
 var utils = require('./utils');
-var exec = require('child_process').exec;
+var execFile = require('child_process').execFile;
 var fs = require('fs');
 var tmpdir = require('os').tmpdir(); // let the os take care of removing zombie tmp files
 var uuid = require('uuid');
 var path = require('path');
-var { glob, } = require("glob");
+var { globSync, } = require("glob");
 
 var Tesseract = {
 
@@ -51,7 +51,7 @@ var Tesseract = {
       callback(Error('Invalid image path'));
       return;
     }
-    
+
     var defaultOptions = utils.merge({}, Tesseract.options);
     options = utils.merge(defaultOptions, options);
 
@@ -65,23 +65,23 @@ var Tesseract = {
     var command = [options.binary, image, output];
 
     if (options.l !== null) {
-      command.push('-l ' + options.l);
+      command.push('-l')
+      command.push(options.l);
     }
 
     if (options.psm !== null) {
-      command.push('--psm ' + options.psm);
+      command.push('--psm')
+      command.push(options.psm);
     }
 
     if (options.config !== null) {
       command.push(options.config);
     }
 
-    command = command.join(' ');
-
     var opts = options.env || {};
 
     // Run the tesseract command
-    exec(command, opts, function(err, stdout, stderr) {
+    execFile(command[0], command.slice(1), opts, function(err, stdout, stderr) {
       if (err) {
         // Something went wrong executing the assembled command
         callback(err, null);
@@ -98,11 +98,9 @@ var Tesseract = {
       }
 
       // Find one of the three possible extension
-      glob(output + '.+(html|hocr|txt)', function(err, files){
-        if (err) {
-          callback(err, null);
-          return;
-        }
+      try {
+        const files = globSync(output + '.{html,hocr,txt}');
+        const readFiles = function(files) {
         fs.readFile(files[0], Tesseract.outputEncoding, function(err, data) {
           if (err) {
             callback(err, null);
@@ -116,7 +114,11 @@ var Tesseract = {
 
           callback(null, data, extra);
         });
-      })
+        };
+        readFiles(files);
+      } catch (err) {
+        callback(err, null);
+      }
     }); // end exec
 
   }
diff --git a/package-lock.json b/package-lock.json
index 15672e7..e34a10f 100644
--- a/package-lock.json
+++ b/package-lock.json
@@ -1,12 +1,12 @@
 {
-  "name": "dawnsparks-tesseract",
-  "version": "0.4.0",
+  "name": "dawnsparks-node-tesseract",
+  "version": "0.4.1",
   "lockfileVersion": 3,
   "requires": true,
   "packages": {
     "": {
-      "name": "dawnsparks-tesseract",
-      "version": "0.4.0",
+      "name": "dawnsparks-node-tesseract",
+      "version": "0.4.1",
       "license": "MIT",
       "dependencies": {
         "glob": "^9.0.1",
diff --git a/package.json b/package.json
index 9a3f6ca..a5248f2 100644
--- a/package.json
+++ b/package.json
@@ -1,12 +1,12 @@
 {
   "name": "dawnsparks-node-tesseract",
-  "version": "0.4.0",
+  "version": "0.4.1",
   "author": "Rona Dini Hari <hari.ronadini@gmail.com>",
   "description": "A fork of a simple wrapper for the Tesseract OCR package",
   "main": "index.js",
   "repository": {
     "type": "git",
-    "url": "https://rona_dinihari@bitbucket.org/dawnsparks/dawnsparks-node-tesseract.git"
+    "url": "https://github.com/rona-dinihari/dawnsparks-node-tesseract.git"
   },
   "keywords": [
     "tesseract",
diff --git a/test/tesseract.js b/test/tesseract.js
index ab11592..6ed0ea4 100644
--- a/test/tesseract.js
+++ b/test/tesseract.js
@@ -9,28 +9,32 @@ const fs = require('fs');
 describe('process', function(){
   it('should return the string "node-tesseract"', function(done){
 
-    var testImage = "\"" + __dirname + '/test.png' + "\"";
+    var testImage = path.join(__dirname, 'test with spaces.png');
 
     tesseract.process(testImage, function(err, text) {
-      text.trim().should.equal('node-tesseract');
-      done();
+      if (err) {
+        done(err);
+      } else {
+        text.trim().should.equal('node-tesseract');
+        done();
+      }
     });
-
-    done();
   })
 })
 
 describe('orientation', function(){
   it('returns orientation equal to 0 using psm 1', function(done){
 
-    var testImage = "\"" + __dirname + '/test.png' + "\"";
+    var testImage = path.join(__dirname, 'test with spaces.png');
 
     tesseract.process(testImage, { psm: 1 }, function(err, text, extra) {
-      extra.orientation.should.equal(0);
-      done();
+      if (err) {
+        done(err);
+      } else {
+        extra.orientation.should.equal(0);
+        done();
+      }
     });
-
-    done();
   })
 })
 
diff --git a/test/test.png b/test/test with spaces.png
similarity index 100%
rename from test/test.png
rename to test/test with spaces.png
