diff --git a/plugins/hudson_git/include/HudsonGit/GitWebhooksSettingsEnhancer.php b/plugins/hudson_git/include/HudsonGit/GitWebhooksSettingsEnhancer.php
index fa16111593b..da74d4adbcf 100644
--- a/plugins/hudson_git/include/HudsonGit/GitWebhooksSettingsEnhancer.php
+++ b/plugins/hudson_git/include/HudsonGit/GitWebhooksSettingsEnhancer.php
@@ -20,6 +20,7 @@
 
 namespace Tuleap\HudsonGit;
 
+use Codendi_HTMLPurifier;
 use GitRepository;
 use Tuleap\Git\Webhook\ExternalWebhookPresenter;
 use Tuleap\HudsonGit\Git\Administration\JenkinsServerFactory;
@@ -29,6 +30,7 @@
 use CSRFSynchronizerToken;
 use TemplateRendererFactory;
 use Tuleap\HudsonGit\Log\LogFactory;
+use Tuleap\Sanitizer\URISanitizer;
 
 /**
  * I am responsible of adding the possibility to repo admin to define jenkins hook for a git repository and
@@ -61,6 +63,8 @@ public function __construct(
         LogFactory $log_factory,
         CSRFSynchronizerToken $csrf,
         JenkinsServerFactory $jenkins_server_factory,
+        private readonly Codendi_HTMLPurifier $html_purifier,
+        private readonly URISanitizer $uri_sanitizer,
     ) {
         $this->dao                    = $dao;
         $this->csrf                   = $csrf;
@@ -117,7 +121,9 @@ public function pimp(array $params): void
                         $repository,
                         $url,
                         $triggered_jobs,
-                        $this->csrf
+                        $this->csrf,
+                        $this->html_purifier,
+                        $this->uri_sanitizer,
                     ),
                 ]
             );
diff --git a/plugins/hudson_git/include/HudsonGit/JenkinsWebhookPresenter.php b/plugins/hudson_git/include/HudsonGit/JenkinsWebhookPresenter.php
index 3c9a28bbe00..c023acd1cd2 100644
--- a/plugins/hudson_git/include/HudsonGit/JenkinsWebhookPresenter.php
+++ b/plugins/hudson_git/include/HudsonGit/JenkinsWebhookPresenter.php
@@ -26,11 +26,18 @@
 use GitRepository;
 use CSRFSynchronizerToken;
 use Tuleap\HudsonGit\Log\Log;
+use Tuleap\Sanitizer\URISanitizer;
 
-class JenkinsWebhookPresenter extends GenericWebhookPresenter
+final class JenkinsWebhookPresenter extends GenericWebhookPresenter
 {
-    public function __construct(GitRepository $repository, $url, array $hooklogs, CSRFSynchronizerToken $csrf)
-    {
+    public function __construct(
+        GitRepository $repository,
+        string $url,
+        array $hooklogs,
+        CSRFSynchronizerToken $csrf,
+        private readonly Codendi_HTMLPurifier $html_purifier,
+        private readonly URISanitizer $uri_sanitizer,
+    ) {
         $use_default_edit_modal = false;
         parent::__construct($repository, 'jenkins', $url, [], $csrf, $use_default_edit_modal);
 
@@ -51,7 +58,6 @@ public function __construct(GitRepository $repository, $url, array $hooklogs, CS
      */
     private function generateHooklogs(array $hooklogs): void
     {
-        $hp = Codendi_HTMLPurifier::instance();
         foreach ($hooklogs as $log) {
             $purified_information = '';
             $job_list             = $log->getJobUrlList();
@@ -59,8 +65,12 @@ private function generateHooklogs(array $hooklogs): void
                 $purified_information .= '<div class="hook-log-triggered-jobs">';
                 $purified_information .= '<h4>' . dgettext("tuleap-hudson_git", "Git plugin triggered jobs:") . '</h4>';
                 foreach ($job_list as $triggered_job_url) {
-                    $purfied_job_url       = $hp->purify($triggered_job_url);
-                    $purified_information .= '<a href="' . $purfied_job_url . '">' . $purfied_job_url . '</a><br>';
+                    $sanitized_job_url = $this->uri_sanitizer->sanitizeForHTMLAttribute($triggered_job_url);
+                    if ($sanitized_job_url !== '' && $triggered_job_url !== '') {
+                        $purified_information .= '<a href="' . $this->html_purifier->purify($sanitized_job_url) . '">' . $this->html_purifier->purify($triggered_job_url) . '</a><br>';
+                    } else {
+                        $purified_information .= $this->html_purifier->purify($triggered_job_url);
+                    }
                 }
                 $purified_information .= '</div>';
             }
@@ -68,7 +78,7 @@ private function generateHooklogs(array $hooklogs): void
             if ($log->getStatusCode() !== null) {
                 $purified_information .= '<div class="hook-log-branch-source-status">';
                 $purified_information .= '<h4>' . dgettext("tuleap-hudson_git", "Branch source plugin:") . '</h4>';
-                $purified_information .= $log->getStatusCode();
+                $purified_information .= $this->html_purifier->purify((string) $log->getStatusCode());
                 $purified_information .= '</div>';
             }
 
diff --git a/plugins/hudson_git/include/hudson_gitPlugin.php b/plugins/hudson_git/include/hudson_gitPlugin.php
index 4d6c8cbfc26..1defa7533fc 100644
--- a/plugins/hudson_git/include/hudson_gitPlugin.php
+++ b/plugins/hudson_git/include/hudson_gitPlugin.php
@@ -166,7 +166,9 @@ public function plugin_git_settings_additional_webhooks(array $params) //phpcs:i
                     )
                 ),
                 $this->getCSRF(),
-                self::getJenkinsServerFactory()
+                self::getJenkinsServerFactory(),
+                Codendi_HTMLPurifier::instance(),
+                new \Tuleap\Sanitizer\URISanitizer(new Valid_HTTPURI()),
             );
             $xzibit->pimp($params);
         }
