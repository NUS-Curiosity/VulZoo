diff --git a/lib/streamlit/components/v1/components.py b/lib/streamlit/components/v1/components.py
index c6a88fd8153b..9787024f7baf 100644
--- a/lib/streamlit/components/v1/components.py
+++ b/lib/streamlit/components/v1/components.py
@@ -314,7 +314,7 @@ def get(self, path: str) -> None:
         component_name = parts[0]
         component_root = self._registry.get_component_path(component_name)
         if component_root is None:
-            self.write(f"{path} not found")
+            self.write("not found")
             self.set_status(404)
             return
 
@@ -327,7 +327,8 @@ def get(self, path: str) -> None:
             with open(abspath, "r", encoding="utf-8") as file:
                 contents = file.read()
         except (OSError, UnicodeDecodeError) as e:
-            self.write(f"{path} read error: {e}")
+            LOGGER.error(f"ComponentRequestHandler: GET {path} read error", exc_info=e)
+            self.write("read error")
             self.set_status(404)
             return
 
diff --git a/lib/streamlit/server/routes.py b/lib/streamlit/server/routes.py
index e79b0cc32ccd..44e83e514ecb 100644
--- a/lib/streamlit/server/routes.py
+++ b/lib/streamlit/server/routes.py
@@ -84,7 +84,7 @@ def validate_absolute_path(self, root, absolute_path):
             media_file_manager.get(absolute_path)
         except KeyError:
             LOGGER.error("MediaFileManager: Missing file %s" % absolute_path)
-            raise tornado.web.HTTPError(404, "%s not found", absolute_path)
+            raise tornado.web.HTTPError(404, "not found")
 
         return absolute_path
 
diff --git a/lib/tests/streamlit/components_test.py b/lib/tests/streamlit/components_test.py
index aee156d2115c..04eb7820e521 100644
--- a/lib/tests/streamlit/components_test.py
+++ b/lib/tests/streamlit/components_test.py
@@ -411,7 +411,7 @@ def test_invalid_component_request(self):
 
         response = self._request_component("invalid_component")
         self.assertEqual(404, response.code)
-        self.assertEqual(b"invalid_component not found", response.body)
+        self.assertEqual(b"not found", response.body)
 
     def test_invalid_content_request(self):
         """Test request failure when invalid content (file) is provided."""
@@ -425,7 +425,7 @@ def test_invalid_content_request(self):
 
         self.assertEqual(404, response.code)
         self.assertEqual(
-            b"components_test.test read error: Invalid content",
+            b"read error",
             response.body,
         )
 
@@ -443,7 +443,7 @@ def test_invalid_encoding_request(self):
 
         self.assertEqual(404, response.code)
         self.assertEqual(
-            b"components_test.test read error: 'utf-8' codec can't decode bytes in position 9-10: unexpected end of data",
+            b"read error",
             response.body,
         )
 
