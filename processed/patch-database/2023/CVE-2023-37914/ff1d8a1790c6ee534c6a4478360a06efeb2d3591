diff --git a/xwiki-platform-core/xwiki-platform-invitation/xwiki-platform-invitation-ui/src/main/resources/Invitation/InvitationCommon.xml b/xwiki-platform-core/xwiki-platform-invitation/xwiki-platform-invitation-ui/src/main/resources/Invitation/InvitationCommon.xml
index a8215260b652..ff785df5690e 100644
--- a/xwiki-platform-core/xwiki-platform-invitation/xwiki-platform-invitation-ui/src/main/resources/Invitation/InvitationCommon.xml
+++ b/xwiki-platform-core/xwiki-platform-invitation/xwiki-platform-invitation-ui/src/main/resources/Invitation/InvitationCommon.xml
@@ -825,7 +825,7 @@ $services.localization.render('xe.invitation.emailContent.reportMessage', ["&lt;
       <smtp_server_username/>
     </property>
     <property>
-      <subjectLineTemplate>{{velocity}}$services.localization.render('xe.invitation.emailContent.subjectLine', [$xcontext.getUser().replaceAll("^[^\.]*.", ""), $xwiki.getRequestURL().replaceAll("https?://([^/:]*).*$", "$1"), $!subjectLine]){{/velocity}}</subjectLineTemplate>
+      <subjectLineTemplate>{{velocity wiki='false'}}$services.localization.render('xe.invitation.emailContent.subjectLine', [$xcontext.getUser().replaceAll("^[^\.]*.", ""), $xwiki.getRequestURL().replaceAll("https?://([^/:]*).*$", "$1"), $!subjectLine]){{/velocity}}</subjectLineTemplate>
     </property>
     <property>
       <usersMayPersonalizeMessage>1</usersMayPersonalizeMessage>
diff --git a/xwiki-platform-core/xwiki-platform-invitation/xwiki-platform-invitation-ui/src/main/resources/Invitation/InvitationConfig.xml b/xwiki-platform-core/xwiki-platform-invitation/xwiki-platform-invitation-ui/src/main/resources/Invitation/InvitationConfig.xml
index ab60cebcf8a6..3d7172ffd135 100644
--- a/xwiki-platform-core/xwiki-platform-invitation/xwiki-platform-invitation-ui/src/main/resources/Invitation/InvitationConfig.xml
+++ b/xwiki-platform-core/xwiki-platform-invitation/xwiki-platform-invitation-ui/src/main/resources/Invitation/InvitationConfig.xml
@@ -420,7 +420,7 @@ $services.localization.render('xe.invitation.emailContent.reportMessage', ["&lt;
       <smtp_server_username/>
     </property>
     <property>
-      <subjectLineTemplate>{{velocity}}$services.localization.render('xe.invitation.emailContent.subjectLine', [$xcontext.getUser().replaceAll("^[^\.]*.", ""), $xwiki.getRequestURL().replaceAll("https?://([^/:]*).*$", "$1"), $!subjectLine]){{/velocity}}</subjectLineTemplate>
+      <subjectLineTemplate>{{velocity wiki='false'}}$services.localization.render('xe.invitation.emailContent.subjectLine', [$xcontext.getUser().replaceAll("^[^\.]*.", ""), $xwiki.getRequestURL().replaceAll("https?://([^/:]*).*$", "$1"), $!subjectLine]){{/velocity}}</subjectLineTemplate>
     </property>
     <property>
       <usersMayPersonalizeMessage>1</usersMayPersonalizeMessage>
diff --git a/xwiki-platform-core/xwiki-platform-invitation/xwiki-platform-invitation-ui/src/test/java/org/xwiki/invitation/InvitationCommonPageTest.java b/xwiki-platform-core/xwiki-platform-invitation/xwiki-platform-invitation-ui/src/test/java/org/xwiki/invitation/InvitationCommonPageTest.java
index b2afed39a2c8..a7f47d967b9d 100644
--- a/xwiki-platform-core/xwiki-platform-invitation/xwiki-platform-invitation-ui/src/test/java/org/xwiki/invitation/InvitationCommonPageTest.java
+++ b/xwiki-platform-core/xwiki-platform-invitation/xwiki-platform-invitation-ui/src/test/java/org/xwiki/invitation/InvitationCommonPageTest.java
@@ -33,7 +33,6 @@
 import org.xwiki.rendering.internal.configuration.DefaultRenderingConfigurationComponentList;
 import org.xwiki.rendering.internal.macro.message.ErrorMessageMacro;
 import org.xwiki.rendering.internal.macro.message.InfoMessageMacro;
-import org.xwiki.rendering.syntax.Syntax;
 import org.xwiki.script.ScriptContextManager;
 import org.xwiki.security.authorization.AuthorizationManager;
 import org.xwiki.test.annotation.ComponentList;
@@ -51,6 +50,9 @@
 import static org.junit.jupiter.api.Assertions.assertEquals;
 import static org.mockito.ArgumentMatchers.any;
 import static org.mockito.Mockito.when;
+import static org.xwiki.rendering.syntax.Syntax.PLAIN_1_0;
+import static org.xwiki.rendering.syntax.Syntax.XWIKI_2_0;
+import static org.xwiki.rendering.syntax.Syntax.XWIKI_2_1;
 
 /**
  * Test of {@code Invitation.InvitationCommon}.
@@ -73,6 +75,9 @@
 })
 class InvitationCommonPageTest extends PageTest
 {
+    public static final DocumentReference INVITATION_COMMON_REFERENCE =
+        new DocumentReference("xwiki", "Invitation", "InvitationCommon");
+
     private ScriptContext scriptContext;
 
     @BeforeEach
@@ -91,8 +96,7 @@ void testEq0() throws Exception
         this.context.setDoc(this.xwiki.getDocument(
             new DocumentReference("xwiki", "]]  {{noscript/}}", "InvitationCommon"), this.context));
 
-        DocumentReference invitationCommonReference = new DocumentReference("xwiki", "Invitation", "InvitationCommon");
-        Document document = Jsoup.parse(loadPage(invitationCommonReference).getRenderedContent(this.context));
+        Document document = Jsoup.parse(loadPage(INVITATION_COMMON_REFERENCE).getRenderedContent(this.context));
         assertEquals("xe.invitation.internalDocument []] {{noscript/}}.WebHome]",
             document.selectFirst(".infomessage").text());
     }
@@ -101,7 +105,6 @@ void testEq0() throws Exception
     void testEq1ConfigClassIsNew() throws Exception
     {
         String spaceName = "<script>console.log</script>]]{{noscript/}}";
-        DocumentReference invitationCommonReference = new DocumentReference("xwiki", "Invitation", "InvitationCommon");
 
         XWikiDocument doc =
             this.xwiki.getDocument(new DocumentReference("xwiki", spaceName, "InvitationCommon"), this.context);
@@ -110,7 +113,7 @@ void testEq1ConfigClassIsNew() throws Exception
 
         this.request.put("test", "1");
 
-        Document document = Jsoup.parse(loadPage(invitationCommonReference).getRenderedContent(this.context));
+        Document document = Jsoup.parse(loadPage(INVITATION_COMMON_REFERENCE).getRenderedContent(this.context));
 
         assertEquals("testLoadInvitationConfig", document.selectFirst(".infomessage").text());
         Element errorMessage = document.selectFirst(".errormessage");
@@ -148,7 +151,7 @@ void testEq1ConfigClassExistsInvalidFromAddress() throws Exception
 
         this.request.put("test", "1");
 
-        XWikiDocument invitationCommonDoc = loadPage(new DocumentReference("xwiki", "Invitation", "InvitationCommon"));
+        XWikiDocument invitationCommonDoc = loadPage(INVITATION_COMMON_REFERENCE);
         Document document = Jsoup.parse(invitationCommonDoc.getRenderedContent(this.context));
 
         assertEquals("testLoadInvitationConfig", document.selectFirst(".infomessage").text());
@@ -187,8 +190,7 @@ void testEq1ConfigClassExistsConfigMapTooSmall() throws Exception
 
         this.request.put("test", "1");
 
-        DocumentReference reference = new DocumentReference("xwiki", "Invitation", "InvitationCommon");
-        XWikiDocument invitationCommonDoc = loadPage(reference);
+        XWikiDocument invitationCommonDoc = loadPage(INVITATION_COMMON_REFERENCE);
         Document document = Jsoup.parse(invitationCommonDoc.getRenderedContent(this.context));
 
         assertEquals("testLoadInvitationConfig", document.selectFirst(".infomessage").text());
@@ -229,8 +231,7 @@ void testEq1ConfigClassExistsNewInvitationConfig() throws Exception
 
         this.request.put("test", "1");
 
-        DocumentReference reference = new DocumentReference("xwiki", "Invitation", "InvitationCommon");
-        XWikiDocument invitationCommonDoc = loadPage(reference);
+        XWikiDocument invitationCommonDoc = loadPage(INVITATION_COMMON_REFERENCE);
         Document document = Jsoup.parse(invitationCommonDoc.getRenderedContent(this.context));
 
         assertEquals("testLoadInvitationConfig", document.selectFirst(".infomessage").text());
@@ -241,7 +242,7 @@ void testEq1ConfigClassExistsNewInvitationConfig() throws Exception
     @Test
     void displayMessageVelocityMacro() throws Exception
     {
-        loadPage(new DocumentReference("xwiki", "Invitation", "InvitationCommon"));
+        loadPage(INVITATION_COMMON_REFERENCE);
         DocumentReference invitationMailClassDocumentReference =
             new DocumentReference("xwiki", "Invitation", "InvitationMailClass");
         loadPage(invitationMailClassDocumentReference);
@@ -249,7 +250,7 @@ void displayMessageVelocityMacro() throws Exception
         XWikiDocument page = this.xwiki.getDocument(new DocumentReference("xwiki", "Space", "Page"), this.context);
         BaseObject invitationMailXObject = page.newXObject(invitationMailClassDocumentReference, this.context);
         invitationMailXObject.set("messageBody", "<strong>message body</strong>", this.context);
-        page.setSyntax(Syntax.XWIKI_2_1);
+        page.setSyntax(XWIKI_2_1);
         page.setContent("{{include reference=\"Invitation.InvitationCommon\"/}}\n"
             + "\n"
             + "{{velocity}}\n"
@@ -262,4 +263,22 @@ void displayMessageVelocityMacro() throws Exception
         Document document = renderHTMLPage(page);
         assertEquals("<strong>message body</strong>", document.selectFirst("#preview-messagebody-field").html());
     }
+
+    /**
+     * Check if the value of subjectLine correctly escape its parameters.
+     */
+    @Test
+    void subjectLineTemplate() throws Exception
+    {
+        com.xpn.xwiki.api.Document invitationCommonDocument =
+            new com.xpn.xwiki.api.Document(loadPage(INVITATION_COMMON_REFERENCE), this.context);
+        String value = String.valueOf(
+            invitationCommonDocument.getObject("xwiki:Invitation.WebHome").getProperty("subjectLineTemplate")
+                .getValue());
+        this.oldcore.getScriptContext().setAttribute("subjectLine", "{{noscript/}}", GLOBAL_SCOPE);
+        com.xpn.xwiki.api.Document testDocument = new com.xpn.xwiki.api.Document(
+            this.xwiki.getDocument(new DocumentReference("xwiki", "Space", "Test"), this.context), this.context);
+        String renderedContent = testDocument.getRenderedContent(value, XWIKI_2_0.toIdString(), PLAIN_1_0.toIdString());
+        assertEquals("xe.invitation.emailContent.subjectLine [XWikiGuest, null, {{noscript/}}]", renderedContent);
+    }
 }
diff --git a/xwiki-platform-core/xwiki-platform-invitation/xwiki-platform-invitation-ui/src/test/java/org/xwiki/invitation/InvitationConfigPageTest.java b/xwiki-platform-core/xwiki-platform-invitation/xwiki-platform-invitation-ui/src/test/java/org/xwiki/invitation/InvitationConfigPageTest.java
index ab1e4a036962..93f62fa2342d 100644
--- a/xwiki-platform-core/xwiki-platform-invitation/xwiki-platform-invitation-ui/src/test/java/org/xwiki/invitation/InvitationConfigPageTest.java
+++ b/xwiki-platform-core/xwiki-platform-invitation/xwiki-platform-invitation-ui/src/test/java/org/xwiki/invitation/InvitationConfigPageTest.java
@@ -36,7 +36,10 @@
 
 import com.xpn.xwiki.doc.XWikiDocument;
 
+import static javax.script.ScriptContext.GLOBAL_SCOPE;
 import static org.junit.jupiter.api.Assertions.assertEquals;
+import static org.xwiki.rendering.syntax.Syntax.PLAIN_1_0;
+import static org.xwiki.rendering.syntax.Syntax.XWIKI_2_0;
 
 /**
  * Test of {@code Invitation.InvitationConfig}.
@@ -59,13 +62,13 @@
 })
 class InvitationConfigPageTest extends PageTest
 {
-    private static final DocumentReference INVITATION_CONFIG_DOCUMENT_REFERENCE =
+    private static final DocumentReference INVITATION_CONFIG_REFERENCE =
         new DocumentReference("xwiki", "Invitation", "InvitationConfig");
 
     @Test
     void escapeInfoMessageInternalDocumentParameter() throws Exception
     {
-        XWikiDocument invitationGuestActionsDocument = loadPage(INVITATION_CONFIG_DOCUMENT_REFERENCE);
+        XWikiDocument invitationGuestActionsDocument = loadPage(INVITATION_CONFIG_REFERENCE);
 
         // Set up the current doc in the context so that $doc is bound in scripts
         this.context.setDoc(
@@ -75,4 +78,19 @@ void escapeInfoMessageInternalDocumentParameter() throws Exception
         Element infomessage = document.selectFirst(".infomessage");
         assertEquals("xe.invitation.internalDocument [Invitation.WebHome]", infomessage.text());
     }
+
+    @Test
+    void subjectLineTemplate() throws Exception
+    {
+        com.xpn.xwiki.api.Document invitationConfigDocument =
+            new com.xpn.xwiki.api.Document(loadPage(INVITATION_CONFIG_REFERENCE), this.context);
+        String value = String.valueOf(
+            invitationConfigDocument.getObject("xwiki:Invitation.WebHome").getProperty("subjectLineTemplate")
+                .getValue());
+        this.oldcore.getScriptContext().setAttribute("subjectLine", "{{noscript/}}", GLOBAL_SCOPE);
+        com.xpn.xwiki.api.Document testDocument = new com.xpn.xwiki.api.Document(
+            this.xwiki.getDocument(new DocumentReference("xwiki", "Space", "Test"), this.context), this.context);
+        String renderedContent = testDocument.getRenderedContent(value, XWIKI_2_0.toIdString(), PLAIN_1_0.toIdString());
+        assertEquals("xe.invitation.emailContent.subjectLine [XWikiGuest, null, {{noscript/}}]", renderedContent);
+    }
 }
