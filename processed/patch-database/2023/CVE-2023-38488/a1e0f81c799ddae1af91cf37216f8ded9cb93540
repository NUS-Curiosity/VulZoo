diff --git a/src/Data/Txt.php b/src/Data/Txt.php
index 10b4e64b20..432d25563f 100644
--- a/src/Data/Txt.php
+++ b/src/Data/Txt.php
@@ -93,10 +93,14 @@ public static function decode($string): array
 			throw new InvalidArgumentException('Invalid TXT data; please pass a string');
 		}
 
-		// remove BOM
-		$string = str_replace("\xEF\xBB\xBF", '', $string);
+		// remove Unicode BOM at the beginning of the file
+		if (Str::startsWith($string, "\xEF\xBB\xBF") === true) {
+			$string = substr($string, 3);
+		}
+
 		// explode all fields by the line separator
 		$fields = preg_split('!\n----\s*\n*!', $string);
+
 		// start the data array
 		$data = [];
 
diff --git a/tests/Data/TxtTest.php b/tests/Data/TxtTest.php
index 58e4ce2c9b..f1a54533f6 100644
--- a/tests/Data/TxtTest.php
+++ b/tests/Data/TxtTest.php
@@ -195,6 +195,34 @@ public function testDecodeFile()
 		$this->assertSame($array, $data);
 	}
 
+	/**
+	 * @covers ::decode
+	 */
+	public function testDecodeBom1()
+	{
+		$string = "\xEF\xBB\xBFTitle: title field with BOM \xEF\xBB\xBF\n----\nText: text field";
+		$array  = [
+			'title' => "title field with BOM \xEF\xBB\xBF",
+			'text'  => 'text field'
+		];
+
+		$this->assertSame($array, Txt::decode($string));
+	}
+
+	/**
+	 * @covers ::decode
+	 */
+	public function testDecodeBom2()
+	{
+		$string = "\xEF\xBB\xBFTitle: title field with BOM\n--\xEF\xBB\xBF--\nand more text\n----\nText: text field";
+		$array  = [
+			'title' => "title field with BOM\n--\xEF\xBB\xBF--\nand more text",
+			'text'  => 'text field'
+		];
+
+		$this->assertSame($array, Txt::decode($string));
+	}
+
 	/**
 	 * @covers ::decode
 	 */
