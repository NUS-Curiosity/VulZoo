diff --git a/modules/fbs-core/api/src/main/scala/de/thm/ii/fbs/controller/LoginController.scala b/modules/fbs-core/api/src/main/scala/de/thm/ii/fbs/controller/LoginController.scala
index a6cd859e7..a64d2db1d 100644
--- a/modules/fbs-core/api/src/main/scala/de/thm/ii/fbs/controller/LoginController.scala
+++ b/modules/fbs-core/api/src/main/scala/de/thm/ii/fbs/controller/LoginController.scala
@@ -118,11 +118,11 @@ class LoginController extends CasClientConfigurerAdapter {
         password <- jsonNode.retrive("password").asText()
         ldapUser <- ldapService.login(username, password)
         user <- loadUserFromLdap(ldapUser.getAttribute("uid").getStringValue)
-      } yield (user, password)
+      } yield user
 
       login match {
-        case Some((user, password)) =>
-          val localUser = userService.find(user.username).getOrElse(userService.create(user, password))
+        case Some((user)) =>
+          val localUser = userService.find(user.username).getOrElse(userService.create(user, null))
           authService.renewAuthentication(localUser, response)
         case None => throw new UnauthorizedException()
       }
