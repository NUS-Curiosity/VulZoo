diff --git a/main/inc/lib/extra_field.lib.php b/main/inc/lib/extra_field.lib.php
index 63712392984..15e801a8562 100755
--- a/main/inc/lib/extra_field.lib.php
+++ b/main/inc/lib/extra_field.lib.php
@@ -2233,9 +2233,9 @@ public function return_form($url, $action)
     {
         $form = new FormValidator($this->type.'_field', 'post', $url);
 
-        $form->addElement('hidden', 'type', $this->type);
+        $form->addHidden('type', $this->type);
         $id = isset($_GET['id']) ? (int) $_GET['id'] : null;
-        $form->addElement('hidden', 'id', $id);
+        $form->addHidden('id', $id);
 
         // Setting the form elements
         $header = get_lang('Add');
@@ -2247,7 +2247,7 @@ public function return_form($url, $action)
             $defaults = $this->get($id, false);
         }
 
-        $form->addElement('header', $header);
+        $form->addHeader($header);
 
         if ('edit' === $action) {
             $translateUrl = api_get_path(WEB_CODE_PATH).'extrafield/translate.php?'
@@ -2259,7 +2259,7 @@ public function return_form($url, $action)
                 [get_lang('Name'), $translateButton]
             );
         } else {
-            $form->addElement('text', 'display_text', get_lang('Name'));
+            $form->addText('display_text', get_lang('Name'));
         }
 
         // Field type
@@ -2272,8 +2272,8 @@ public function return_form($url, $action)
             $types,
             ['id' => 'field_type']
         );
-        $form->addElement('label', get_lang('Example'), '<div id="example">-</div>');
-        $form->addElement('text', 'variable', get_lang('FieldLabel'), ['class' => 'span5']);
+        $form->addLabel(get_lang('Example'), '<div id="example">-</div>');
+        $form->addText('variable', get_lang('FieldLabel'), false);
         $form->addElement(
             'text',
             'field_options',
@@ -2297,23 +2297,23 @@ public function return_form($url, $action)
                     get_lang('EditExtraFieldOptions'),
                     'extra_field_options.php?type='.$this->type.'&field_id='.$id
                 );
-                $form->addElement('label', null, $url);
+                $form->addLabel(null, $url);
 
                 if (self::FIELD_TYPE_SELECT == $defaults['field_type']) {
                     $urlWorkFlow = Display::url(
                         get_lang('EditExtraFieldWorkFlow'),
                         'extra_field_workflow.php?type='.$this->type.'&field_id='.$id
                     );
-                    $form->addElement('label', null, $urlWorkFlow);
+                    $form->addLabel(null, $urlWorkFlow);
                 }
 
                 $form->freeze('field_options');
             }
         }
-        $form->addElement(
-            'text',
+        $form->addText(
             'default_value',
             get_lang('FieldDefaultValue'),
+            false,
             ['id' => 'default_value']
         );
 
@@ -2344,7 +2344,7 @@ public function return_form($url, $action)
         $form->addGroup($group, '', get_lang('FieldLoggeable'), '', false);
         */
 
-        $form->addElement('text', 'field_order', get_lang('FieldOrder'));
+        $form->addNumeric('field_order', get_lang('FieldOrder'), ['step' => 1, 'min' => 0]);
 
         if ('edit' == $action) {
             $option = new ExtraFieldOption($this->type);
