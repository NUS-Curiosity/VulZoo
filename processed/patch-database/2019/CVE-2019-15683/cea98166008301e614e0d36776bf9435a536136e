diff --git a/unix/Xvnc/programs/Xserver/hw/vnc/auth.c b/unix/Xvnc/programs/Xserver/hw/vnc/auth.c
index 2abc763c8..801afbc93 100644
--- a/unix/Xvnc/programs/Xserver/hw/vnc/auth.c
+++ b/unix/Xvnc/programs/Xserver/hw/vnc/auth.c
@@ -393,7 +393,7 @@ Bool rfbOptPamAuth(void)
 
   for (s = secTypes; s->name != NULL; s++) {
     if ((!strcmp(s->name, "unixlogin") ||
-         !strcmp(&s->name[strlen(s->name) - 5], "plain")) && s->enabled)
+         strstr(s->name, "plain")) && s->enabled)
       return TRUE;
   }
 
diff --git a/unix/Xvnc/programs/Xserver/hw/vnc/rfbserver.c b/unix/Xvnc/programs/Xserver/hw/vnc/rfbserver.c
index 03baa6360..58b306665 100644
--- a/unix/Xvnc/programs/Xserver/hw/vnc/rfbserver.c
+++ b/unix/Xvnc/programs/Xserver/hw/vnc/rfbserver.c
@@ -1314,13 +1314,15 @@ static void rfbProcessClientNormalMessage(rfbClientPtr cl)
 
       flags = Swap32IfLE(msg.f.flags);
 
-      READ(data, msg.f.length)
-
-      if (msg.f.length > sizeof(data))
+      if (msg.f.length > sizeof(data)) {
         rfbLog("Ignoring fence.  Payload of %d bytes is too large.\n",
                msg.f.length);
-      else
+        SKIP(msg.f.length)
+      } else {
+        READ(data, msg.f.length)
         HandleFence(cl, flags, msg.f.length, data);
+      }
+
       return;
     }
 
