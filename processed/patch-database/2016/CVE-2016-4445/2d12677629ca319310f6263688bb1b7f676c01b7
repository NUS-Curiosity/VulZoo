diff --git a/framework/src/sealert b/framework/src/sealert
index 9126012..d095a22 100755
--- a/framework/src/sealert
+++ b/framework/src/sealert
@@ -141,7 +141,7 @@ def fix_lookup_id(local_id, analysis_id):
         async_rpc.add_errback(query_alerts_error)
 
     def query_alerts_callback(sigs):
-        import commands
+        import subprocess
         for siginfo in sigs.signature_list:
             for plugin  in siginfo.plugin_list:
                 if analysis_id == plugin.analysis_id:
@@ -151,12 +151,12 @@ def fix_lookup_id(local_id, analysis_id):
                         cl.main_loop.quit()
                         return
                     siginfo.update_derived_template_substitutions()
-                    command = siginfo.substitute(p.get_fix_cmd(siginfo.audit_event, plugin.args))
-                    rc, output = commands.getstatusoutput(command)
-                    if rc == 0:
-                        print _("Successfully ran %s" % command)
-                    else:
-                        print output
+                    command = siginfo.substitute_array(p.get_fix_cmd(siginfo.audit_event, plugin.args).split())
+                    try:
+                        output = subprocess.check_output(command)
+                        print _("Successfully ran %s" % ' '.join(command))
+                    except subprocess.CalledProcessError as e:
+                        print(e.output)
                     cl.main_loop.quit()
                     return
         print _("Plugin %s not valid for %s id") % (analysis_id, local_id)
diff --git a/framework/src/setroubleshoot/signature.py b/framework/src/setroubleshoot/signature.py
index 04c875c..7d19e82 100755
--- a/framework/src/setroubleshoot/signature.py
+++ b/framework/src/setroubleshoot/signature.py
@@ -460,6 +460,9 @@ def get_plugins(self, all = False):
     def substitute(self, txt):
         return Template(txt).safe_substitute(self.template_substitutions)
 
+    def substitute_array(self, args):
+        return [self.substitute(txt) for txt in args]
+
     def format_details(self, replace=False):
         env = self.environment
 
