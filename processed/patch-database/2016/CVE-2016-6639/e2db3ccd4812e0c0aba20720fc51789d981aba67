diff --git a/cf_spec/fixtures/php_app_with_profile_script/.profile b/cf_spec/fixtures/php_app_with_profile_script/.profile
new file mode 100755
index 000000000..66f1ae262
--- /dev/null
+++ b/cf_spec/fixtures/php_app_with_profile_script/.profile
@@ -0,0 +1 @@
+export PROFILE_SCRIPT_IS_PRESENT_AND_RAN="Hooray for environment variables!"
\ No newline at end of file
diff --git a/cf_spec/fixtures/php_app_with_profile_script/index.php b/cf_spec/fixtures/php_app_with_profile_script/index.php
new file mode 100644
index 000000000..7436d672f
--- /dev/null
+++ b/cf_spec/fixtures/php_app_with_profile_script/index.php
@@ -0,0 +1 @@
+<?php echo phpinfo() ?>
diff --git a/cf_spec/integration/profile_d_sets_environment_variables_spec.rb b/cf_spec/integration/profile_d_sets_environment_variables_spec.rb
index 3bd81b9a1..d04804bea 100644
--- a/cf_spec/integration/profile_d_sets_environment_variables_spec.rb
+++ b/cf_spec/integration/profile_d_sets_environment_variables_spec.rb
@@ -17,4 +17,18 @@
       expect(browser).to have_body('TEST_ENV_VAR')
     end
   end
+
+  context 'deploying a PHP app with .profile script' do
+    let(:app_name) { 'php_app_with_profile_script' }
+
+    it "sets environment variables via .profile script" do
+      cf_api_output = Machete::CF::API.new.execute
+
+      cf_api_version = cf_api_output.match( /API version: (?<version_number>\d+\.\d+\.\d+)/ )['version_number']
+      minimum_acceptable_cf_api_version = Gem::Version.new('2.57.0')
+      skip(".profile script functionality not supported before CF API version #{minimum_acceptable_cf_api_version}") if Gem::Version.new(cf_api_version) < minimum_acceptable_cf_api_version
+      browser.visit_path('/')
+      expect(browser).to have_body('PROFILE_SCRIPT_IS_PRESENT_AND_RAN')
+    end
+  end
 end
diff --git a/lib/compile_helpers.py b/lib/compile_helpers.py
index f063e8e67..6a82cb41a 100644
--- a/lib/compile_helpers.py
+++ b/lib/compile_helpers.py
@@ -54,6 +54,8 @@ def setup_webdir_if_it_doesnt_exist(ctx):
                 '^%s/.*$' % os.path.join(ctx['BUILD_DIR'], ctx['LIBDIR']))
             fu.where_name_does_not_match(
                 '^%s/.*$' % os.path.join(ctx['BUILD_DIR'], '.profile.d'))
+            fu.where_name_does_not_match(
+                '^%s$' % os.path.join(ctx['BUILD_DIR'], '.profile'))
             fu.done()
 
 
diff --git a/tests/data/app-with-all-possible-system-files-that-should-not-move/.bp-config/.gitkeep b/tests/data/app-with-all-possible-system-files-that-should-not-move/.bp-config/.gitkeep
new file mode 100644
index 000000000..e69de29bb
diff --git a/tests/data/app-with-all-possible-system-files-that-should-not-move/.bp/.gitkeep b/tests/data/app-with-all-possible-system-files-that-should-not-move/.bp/.gitkeep
new file mode 100644
index 000000000..e69de29bb
diff --git a/tests/data/app-with-all-possible-system-files-that-should-not-move/.extensions/.gitkeep b/tests/data/app-with-all-possible-system-files-that-should-not-move/.extensions/.gitkeep
new file mode 100644
index 000000000..e69de29bb
diff --git a/tests/data/app-with-all-possible-system-files-that-should-not-move/.profile b/tests/data/app-with-all-possible-system-files-that-should-not-move/.profile
new file mode 100644
index 000000000..e69de29bb
diff --git a/tests/data/app-with-all-possible-system-files-that-should-not-move/.profile.d/.gitkeep b/tests/data/app-with-all-possible-system-files-that-should-not-move/.profile.d/.gitkeep
new file mode 100644
index 000000000..e69de29bb
diff --git a/tests/data/app-with-all-possible-system-files-that-should-not-move/README.txt b/tests/data/app-with-all-possible-system-files-that-should-not-move/README.txt
new file mode 100644
index 000000000..b781642f8
--- /dev/null
+++ b/tests/data/app-with-all-possible-system-files-that-should-not-move/README.txt
@@ -0,0 +1 @@
+This directory is not a "real" app. It is a fixture intended to support test_system_files_not_moved_into_webdir. That's why all the files and folders are empty.
\ No newline at end of file
diff --git a/tests/data/app-with-all-possible-system-files-that-should-not-move/manifest.yml b/tests/data/app-with-all-possible-system-files-that-should-not-move/manifest.yml
new file mode 100644
index 000000000..e69de29bb
diff --git a/tests/test_compile_helpers.py b/tests/test_compile_helpers.py
index 06821d2d0..7ff87c92f 100644
--- a/tests/test_compile_helpers.py
+++ b/tests/test_compile_helpers.py
@@ -120,7 +120,6 @@ def test_setup_if_htdocs_does_not_exist_but_library_does(self):
         self.assert_exists(self.build_dir, '.bp-config', 'options.json')
         self.assert_exists(self.build_dir, '.bp-config', 'httpd', 'extra',
                            'httpd-remoteip.conf')
-        self.assert_exists(self.build_dir, 'manifest.yml')
         eq_(4, len(os.listdir(self.build_dir)))
         eq_(4, len(os.listdir(os.path.join(self.build_dir, 'htdocs'))))
 
@@ -195,6 +194,20 @@ def test_setup_if_custom_webdir_does_not_exist_with_extensions(self):
         eq_(4, len(os.listdir(self.build_dir)))
         eq_(3, len(os.listdir(os.path.join(self.build_dir, 'public'))))
 
+    def test_system_files_not_moved_into_webdir(self):
+        shutil.copytree('tests/data/app-with-all-possible-system-files-that-should-not-move', self.build_dir)
+        setup_webdir_if_it_doesnt_exist(utils.FormattedDict({
+            'BUILD_DIR': self.build_dir,
+            'WEBDIR': 'htdocs',
+            'LIBDIR': 'lib'
+        }))
+        self.assert_exists(self.build_dir, '.bp')
+        self.assert_exists(self.build_dir, '.extensions')
+        self.assert_exists(self.build_dir, '.bp-config')
+        self.assert_exists(self.build_dir, 'manifest.yml')
+        self.assert_exists(self.build_dir, '.profile.d')
+        self.assert_exists(self.build_dir, '.profile')
+
     def test_setup_if_htdocs_with_stand_alone_app(self):
         shutil.copytree('tests/data/app-5', self.build_dir)
         setup_webdir_if_it_doesnt_exist(utils.FormattedDict({
