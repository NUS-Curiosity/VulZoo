diff --git a/lib/OA/Auth.php b/lib/OA/Auth.php
index f5dec0ba02..c8b7bfac39 100644
--- a/lib/OA/Auth.php
+++ b/lib/OA/Auth.php
@@ -83,7 +83,6 @@ function login($redirectCallback = null)
             $doUser = OA_Auth::authenticateUser();
 
             if (!$doUser) {
-                sleep(3);
                 OA_Auth::restart($GLOBALS['strUsernameOrPasswordWrong']);
             }
 
diff --git a/lib/OX/Extension/authentication/authentication.php b/lib/OX/Extension/authentication/authentication.php
index 7b4153e127..f9dd020620 100644
--- a/lib/OX/Extension/authentication/authentication.php
+++ b/lib/OX/Extension/authentication/authentication.php
@@ -15,6 +15,7 @@
 require_once 'Date.php';
 require_once MAX_PATH . '/lib/max/language/Loader.php';
 require_once MAX_PATH . '/lib/pear/HTML/QuickForm/Rule/Email.php';
+require_once MAX_PATH . '/lib/OA/DB/AdvisoryLock.php';
 
 Language_Loader::load('settings');
 
@@ -98,16 +99,55 @@ function _getCredentials($performCookieCheck = true)
      */
     function checkPassword($username, $password)
     {
+        // Introduce a random delay in case of failures, as recommended by:
+        // https://www.owasp.org/index.php/Blocking_Brute_Force_Attacks
+        //
+        // The base delay is 1-5 seconds.
+        $waitMs = mt_rand(1000, 5000);
+
+        $oLock = OA_DB_AdvisoryLock::factory();
+
+        // Username check is case insensitive
+        $username = strtolower($username);
+
+        // Try to acquire an excusive advisory lock for the username
+        $lock = $oLock->get('auth.'.md5($username));
+
+        if (!$lock) {
+            // We couldn't acquire the lock immediately, which means that
+            // another authentication process for the same username is underway.
+            //
+            // This might mean that the account is being targeted by a
+            // multi-threaded brute force attack, so we try to discourage such
+            // behaviour by increasing the delay time by 4x.
+            //
+            // However, if the actual user tries to log in while their account
+            // is being attacked, we will allow them in, they'd just have to
+            // be patient (max 20 seconds).
+            usleep($waitMs * 4000);
+        }
+
         $doUser = OA_Dal::factoryDO('users');
-        $doUser->username = strtolower($username);
+        $doUser->username = $username;
         $doUser->password = md5($password);
+
         $doUser->find();
 
         if ($doUser->fetch()) {
+            $oLock->release();
+
             return $doUser;
-        } else {
-            return false;
         }
+
+        if ($lock) {
+            // The password was wrong, but no other login attempt was in place
+            // so we apply just the base delay time.
+            usleep($waitMs * 1000);
+        }
+
+        $oLock->release();
+
+        return false;
     }
 
     /**
@@ -517,4 +557,7 @@ function validateUsersData($data)
     }
 }
 
-?>
\ No newline at end of file
+
+class Plugins_Authentication_Exception extends Exception
+{
+}
