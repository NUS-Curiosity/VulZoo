diff --git a/app/models/mailer.rb b/app/models/mailer.rb
index fe0279240bb..f6b16b9f2fa 100644
--- a/app/models/mailer.rb
+++ b/app/models/mailer.rb
@@ -406,7 +406,10 @@ def self.reminders(options={})
     end
 
     issues_by_assignee.each do |assignee, issues|
-      reminder(assignee, issues, days).deliver if assignee.is_a?(User) && assignee.active?
+      if assignee.is_a?(User) && assignee.active? && issues.present?
+        visible_issues = issues.select {|i| i.visible?(assignee)}
+        reminder(assignee, visible_issues, days).deliver if visible_issues.present?
+      end
     end
   end
 
diff --git a/test/unit/mailer_test.rb b/test/unit/mailer_test.rb
index b4983f925a0..bc5fa9ea2c0 100644
--- a/test/unit/mailer_test.rb
+++ b/test/unit/mailer_test.rb
@@ -663,6 +663,25 @@ def test_reminders_with_version_option
     end
   end
 
+  def test_reminders_should_only_include_issues_the_user_can_see
+    with_settings :default_language => 'en' do
+      user = User.find(3)
+      member = Member.create!(:project_id => 2, :principal => user, :role_ids => [1])
+      Issue.create!(:project_id => 2, :tracker_id => 1, :status_id => 1,
+                      :subject => 'Issue dlopper should not see', :assigned_to_id => 3,
+                      :due_date => 5.days.from_now,
+                      :author_id => 2)
+      member.destroy
+      ActionMailer::Base.deliveries.clear
+
+      Mailer.reminders(:days => 42)
+      assert_equal 1, ActionMailer::Base.deliveries.size
+      mail = last_email
+      assert mail.bcc.include?('dlopper@somenet.foo')
+      assert_mail_body_no_match 'Issue dlopper should not see', mail
+    end
+  end
+
   def test_security_notification
     set_language_if_valid User.find(1).language
     with_settings :emails_footer => "footer without link" do
