diff --git a/changelog.md b/changelog.md
index 45bf1a91f..4618f174c 100755
--- a/changelog.md
+++ b/changelog.md
@@ -9,8 +9,10 @@
  Fixed some other security failures (credit to â€‹security at Amossys)
  Improved security regarding uploading files
  Fixed issue while restoring DB from administration page
+ Fixed "PW copy to clipboard" log unconsistency in specific case
  Improved / Fixed administration task for encrypting/decrypting files
  Improved security regarding item history display
+ Improved the possibility to define the access level on Roles when creating new folder
  Added filter in Roles
  New: confirm deletion of attachment
  #1956 Warning appears on Category and API pages in admin mode
diff --git a/folders.load.php b/folders.load.php
index 4127be0df..1d5c28171 100644
--- a/folders.load.php
+++ b/folders.load.php
@@ -20,6 +20,7 @@
 <script type="text/javascript">
 //<![CDATA[
 $(function() {
+    $("#span_new_rep_roles").hide();
 
     //Launch the datatables pluggin
     var tableFolders = $("#t_folders").dataTable({
@@ -61,7 +62,7 @@
             $("#new_folder_wait").hide();
 
             //empty dialogbox
-            $("#div_add_group input, #div_add_group select").val("");
+            $("#div_add_group input, #div_add_group select, #new_rep_roles").val("");
             $("#add_node_renewal_period").val("0");
             $("#folder_block_modif, #folder_block_creation").val("0");
             $("#parent_id").val("na");
@@ -89,7 +90,8 @@
                             "parent_id": $('#parent_id').val().replace(/"/g,'&quot;') ,
                             "renewal_period": $('#add_node_renewal_period').val().replace(/"/g,'&quot;') ,
                             "block_creation": $("#folder_block_creation").val() ,
-                            "block_modif": $("#folder_block_modif").val()
+                            "block_modif": $("#folder_block_modif").val(),
+                            "access_level": $("#new_rep_roles").val()
                         };
 
                         //send query
@@ -334,6 +336,14 @@ function(data) {
     $("#click_refresh_folders_list").click(function() {
         tableFolders.api().ajax.reload();
     });
+
+    $("#parent_id").change(function() {
+        if ($(this).val() === "0") {
+            $("#span_new_rep_roles").show();
+        } else {
+            $("#span_new_rep_roles").hide();
+        }
+    })
 });
 
 
diff --git a/folders.php b/folders.php
index 0f3473273..decc631c3 100644
--- a/folders.php
+++ b/folders.php
@@ -116,7 +116,7 @@
 <div id="div_add_group" style="display:none;">
     <div id="addgroup_show_error" style="text-align:center;margin:2px;display:none;" class="ui-state-error ui-corner-all"></div>
 
-    <label for="ajouter_groupe_titre" class="label_cpm">'.$LANG['group_title'].'</label>
+    <label for="ajouter_groupe_titre" class="label_cpm">'.addslashes($LANG['group_title']).'</label>
     <input type="text" id="ajouter_groupe_titre" class="input_text text ui-widget-content ui-corner-all" />
 
     <label for="parent_id" class="label_cpm">'.addslashes($LANG['group_parent']).'</label>
@@ -124,7 +124,7 @@
         '.$droplist.'
     </select>
 
-    <label for="new_rep_complexite" class="label_cpm">'.$LANG['complex_asked'].'</label>
+    <label for="new_rep_complexite" class="label_cpm">'.addslashes($LANG['complex_asked']).'</label>
     <select id="new_rep_complexite" class="input_text text ui-widget-content ui-corner-all">';
 foreach ($SETTINGS_EXT['pwComplexity'] as $complex) {
     echo '<option value="'.$complex[0].'">'.$complex[1].'</option>';
@@ -132,17 +132,26 @@
 echo '
     </select>
 
-    <label for="add_node_renewal_period" class="label_cpm">'.$LANG['group_pw_duration'].'</label>
+    <span id="span_new_rep_roles">
+    <label for="new_rep_roles" class="label_cpm">'.addslashes($LANG['access_level_for_roles']).'</label>
+    <select id="new_rep_roles" class="input_text text ui-widget-content ui-corner-all">
+        <option value="">'.$LANG['no_access'].'</option>
+        <option value="R">'.$LANG['read'].'</option>
+        <option value="W">'.$LANG['write'].'</option>
+    </select>
+    </span>
+
+    <label for="add_node_renewal_period" class="label_cpm">'.addslashes($LANG['group_pw_duration']).'</label>
     <input type="text" id="add_node_renewal_period" value="0" class="input_text text ui-widget-content ui-corner-all" />
 
-    <label for="folder_block_creation" class="">'.$LANG['auth_creation_without_complexity'].'</label>
+    <label for="folder_block_creation" class="">'.addslashes($LANG['auth_creation_without_complexity']).'</label>
     <select id="folder_block_creation" class="ui-widget-content ui-corner-all">
         <option value="0">'.$LANG['no'].'</option>
         <option value="1">'.$LANG['yes'].'</option>
     </select>
 
     <div style="margin-top:10px;">
-        <label for="folder_block_modif">'.$LANG['auth_modification_without_complexity'].'</label>
+        <label for="folder_block_modif">'.addslashes($LANG['auth_modification_without_complexity']).'</label>
         <select id="folder_block_modif" class="ui-widget-content ui-corner-all">
             <option value="0">'.$LANG['no'].'</option>
             <option value="1">'.$LANG['yes'].'</option>
diff --git a/includes/language/arabic.php b/includes/language/arabic.php
index 1d9fb77e5..368e1367e 100644
--- a/includes/language/arabic.php
+++ b/includes/language/arabic.php
@@ -14,6 +14,7 @@
  */
 global $LANG;
 $LANG = array (
+    'access_level_for_roles' => 'Associated access for Roles',
     'admin_script_backup_secret' => 'Passkey for backup execution',
     'admin_script_backup_secret_tip' => 'The backup passkey needs to be provided to start the backup. It has to be added a key parameter to script.backup.php. Example:scripts.backup.php?key=your_passkey',
     'text' => 'Text',
diff --git a/includes/language/bulgarian.php b/includes/language/bulgarian.php
index d3786f80b..6bf1303bc 100644
--- a/includes/language/bulgarian.php
+++ b/includes/language/bulgarian.php
@@ -14,6 +14,7 @@
  */
 global $LANG;
 $LANG = array (
+    'access_level_for_roles' => 'Associated access for Roles',
     'admin_script_backup_secret' => 'Passkey for backup execution',
     'admin_script_backup_secret_tip' => 'The backup passkey needs to be provided to start the backup. It has to be added a key parameter to script.backup.php. Example:scripts.backup.php?key=your_passkey',
     'text' => 'Text',
diff --git a/includes/language/catalan.php b/includes/language/catalan.php
index 0889632d3..61a8ea84a 100644
--- a/includes/language/catalan.php
+++ b/includes/language/catalan.php
@@ -14,6 +14,7 @@
  */
 global $LANG;
 $LANG = array (
+    'access_level_for_roles' => 'Associated access for Roles',
     'admin_script_backup_secret' => 'Passkey for backup execution',
     'admin_script_backup_secret_tip' => 'The backup passkey needs to be provided to start the backup. It has to be added a key parameter to script.backup.php. Example:scripts.backup.php?key=your_passkey',
     'text' => 'Text',
diff --git a/includes/language/chinese.php b/includes/language/chinese.php
index 334eb09e3..c5f83235e 100644
--- a/includes/language/chinese.php
+++ b/includes/language/chinese.php
@@ -14,6 +14,7 @@
  */
 global $LANG;
 $LANG = array (
+    'access_level_for_roles' => 'Associated access for Roles',
     'admin_script_backup_secret' => 'Passkey for backup execution',
     'admin_script_backup_secret_tip' => 'The backup passkey needs to be provided to start the backup. It has to be added a key parameter to script.backup.php. Example:scripts.backup.php?key=your_passkey',
     'text' => 'Text',
diff --git a/includes/language/czech.php b/includes/language/czech.php
index ac7de46ab..58b2798f1 100644
--- a/includes/language/czech.php
+++ b/includes/language/czech.php
@@ -14,6 +14,7 @@
  */
 global $LANG;
 $LANG = array (
+    'access_level_for_roles' => 'Associated access for Roles',
     'admin_script_backup_secret' => 'Passkey for backup execution',
     'admin_script_backup_secret_tip' => 'The backup passkey needs to be provided to start the backup. It has to be added a key parameter to script.backup.php. Example:scripts.backup.php?key=your_passkey',
     'text' => 'Text',
diff --git a/includes/language/dutch.php b/includes/language/dutch.php
index 5c474700d..dbb8b2b7c 100644
--- a/includes/language/dutch.php
+++ b/includes/language/dutch.php
@@ -14,6 +14,7 @@
  */
 global $LANG;
 $LANG = array (
+    'access_level_for_roles' => 'Associated access for Roles',
     'admin_script_backup_secret' => 'Passkey for backup execution',
     'admin_script_backup_secret_tip' => 'The backup passkey needs to be provided to start the backup. It has to be added a key parameter to script.backup.php. Example:scripts.backup.php?key=your_passkey',
     'text' => 'Text',
diff --git a/includes/language/english.php b/includes/language/english.php
index 4d1a5b133..b5a2c1062 100644
--- a/includes/language/english.php
+++ b/includes/language/english.php
@@ -1,4 +1,4 @@
-<?php 
+<?php
 /**
  *
  * @file          english.php
@@ -14,6 +14,7 @@
  */
 global $LANG;
 $LANG = array (
+    'access_level_for_roles' => 'Associated access for Roles',
     'admin_script_backup_secret' => 'Passkey for backup execution',
     'admin_script_backup_secret_tip' => 'The backup passkey needs to be provided to start the backup. It has to be added a key parameter to script.backup.php. Example:scripts.backup.php?key=your_passkey',
     'user_ga_code' => 'Email Google Authentication to user',
diff --git a/includes/language/estonian.php b/includes/language/estonian.php
index adea12611..c8fc29cf3 100644
--- a/includes/language/estonian.php
+++ b/includes/language/estonian.php
@@ -14,6 +14,7 @@
  */
 global $LANG;
 $LANG = array (
+    'access_level_for_roles' => 'Associated access for Roles',
     'admin_script_backup_secret' => 'Passkey for backup execution',
     'admin_script_backup_secret_tip' => 'The backup passkey needs to be provided to start the backup. It has to be added a key parameter to script.backup.php. Example:scripts.backup.php?key=your_passkey',
     'text' => 'Text',
diff --git a/includes/language/french.php b/includes/language/french.php
index a04ef6b73..c296e9737 100644
--- a/includes/language/french.php
+++ b/includes/language/french.php
@@ -14,6 +14,7 @@
  */
 global $LANG;
 $LANG = array (
+    'access_level_for_roles' => 'Droit associÃ© des Roles',
     'user_ga_code' => 'Envoyer le code Google Authenticator Ã  l\'utilisateur par email',
     'send_ga_code' => 'Google Authenticator pour l\'utilisateur',
     'error_no_email' => 'Cet utilisateur n\'a pas de courriel de dÃ©fini !',
diff --git a/includes/language/german.php b/includes/language/german.php
index ac4f2600c..a2cf5429c 100644
--- a/includes/language/german.php
+++ b/includes/language/german.php
@@ -14,6 +14,7 @@
  */
 global $LANG;
 $LANG = array (
+    'access_level_for_roles' => 'Associated access for Roles',
     'admin_script_backup_secret' => 'Passkey for backup execution',
     'admin_script_backup_secret_tip' => 'The backup passkey needs to be provided to start the backup. It has to be added a key parameter to script.backup.php. Example:scripts.backup.php?key=your_passkey',
     'text' => 'Text',
diff --git a/includes/language/greek.php b/includes/language/greek.php
index 4c337650c..e0acf60ec 100644
--- a/includes/language/greek.php
+++ b/includes/language/greek.php
@@ -14,6 +14,7 @@
  */
 global $LANG;
 $LANG = array (
+    'access_level_for_roles' => 'Associated access for Roles',
     'admin_script_backup_secret' => 'Passkey for backup execution',
     'admin_script_backup_secret_tip' => 'The backup passkey needs to be provided to start the backup. It has to be added a key parameter to script.backup.php. Example:scripts.backup.php?key=your_passkey',
     'text' => 'Text',
diff --git a/includes/language/hungarian.php b/includes/language/hungarian.php
index 3720ee97a..8b340236b 100644
--- a/includes/language/hungarian.php
+++ b/includes/language/hungarian.php
@@ -14,6 +14,7 @@
  */
 global $LANG;
 $LANG = array (
+    'access_level_for_roles' => 'Associated access for Roles',
     'admin_script_backup_secret' => 'Passkey for backup execution',
     'admin_script_backup_secret_tip' => 'The backup passkey needs to be provided to start the backup. It has to be added a key parameter to script.backup.php. Example:scripts.backup.php?key=your_passkey',
     'text' => 'Text',
diff --git a/includes/language/italian.php b/includes/language/italian.php
index 3927d266d..78d0bda2b 100644
--- a/includes/language/italian.php
+++ b/includes/language/italian.php
@@ -14,6 +14,7 @@
  */
 global $LANG;
 $LANG = array (
+    'access_level_for_roles' => 'Associated access for Roles',
     'admin_script_backup_secret' => 'Passkey for backup execution',
     'admin_script_backup_secret_tip' => 'The backup passkey needs to be provided to start the backup. It has to be added a key parameter to script.backup.php. Example:scripts.backup.php?key=your_passkey',
     'text' => 'Text',
diff --git a/includes/language/japanese.php b/includes/language/japanese.php
index dd7634e2e..ae7d53029 100644
--- a/includes/language/japanese.php
+++ b/includes/language/japanese.php
@@ -14,6 +14,7 @@
  */
 global $LANG;
 $LANG = array (
+    'access_level_for_roles' => 'Associated access for Roles',
     'admin_script_backup_secret' => 'Passkey for backup execution',
     'admin_script_backup_secret_tip' => 'The backup passkey needs to be provided to start the backup. It has to be added a key parameter to script.backup.php. Example:scripts.backup.php?key=your_passkey',
     'text' => 'Text',
diff --git a/includes/language/norwegian.php b/includes/language/norwegian.php
index f4a705757..bc4eb1f20 100644
--- a/includes/language/norwegian.php
+++ b/includes/language/norwegian.php
@@ -14,6 +14,7 @@
  */
 global $LANG;
 $LANG = array (
+    'access_level_for_roles' => 'Associated access for Roles',
     'admin_script_backup_secret' => 'Passkey for backup execution',
     'admin_script_backup_secret_tip' => 'The backup passkey needs to be provided to start the backup. It has to be added a key parameter to script.backup.php. Example:scripts.backup.php?key=your_passkey',
     'text' => 'Text',
diff --git a/includes/language/polish.php b/includes/language/polish.php
index e68b60301..6621de9d6 100644
--- a/includes/language/polish.php
+++ b/includes/language/polish.php
@@ -14,6 +14,7 @@
  */
 global $LANG;
 $LANG = array (
+    'access_level_for_roles' => 'Associated access for Roles',
     'admin_script_backup_secret' => 'Passkey for backup execution',
     'admin_script_backup_secret_tip' => 'The backup passkey needs to be provided to start the backup. It has to be added a key parameter to script.backup.php. Example:scripts.backup.php?key=your_passkey',
     'text' => 'Text',
diff --git a/includes/language/portuguese.php b/includes/language/portuguese.php
index 7cc01a841..e466eabd4 100644
--- a/includes/language/portuguese.php
+++ b/includes/language/portuguese.php
@@ -14,6 +14,7 @@
  */
 global $LANG;
 $LANG = array (
+    'access_level_for_roles' => 'Associated access for Roles',
     'admin_script_backup_secret' => 'Passkey for backup execution',
     'admin_script_backup_secret_tip' => 'The backup passkey needs to be provided to start the backup. It has to be added a key parameter to script.backup.php. Example:scripts.backup.php?key=your_passkey',
     'text' => 'Text',
diff --git a/includes/language/portuguese_br.php b/includes/language/portuguese_br.php
index 51a4d0cb1..be6e461b1 100644
--- a/includes/language/portuguese_br.php
+++ b/includes/language/portuguese_br.php
@@ -14,6 +14,7 @@
  */
 global $LANG;
 $LANG = array (
+    'access_level_for_roles' => 'Associated access for Roles',
     'admin_script_backup_secret' => 'Passkey for backup execution',
     'admin_script_backup_secret_tip' => 'The backup passkey needs to be provided to start the backup. It has to be added a key parameter to script.backup.php. Example:scripts.backup.php?key=your_passkey',
     'text' => 'Text',
diff --git a/includes/language/romanian.php b/includes/language/romanian.php
index af2c5faf0..71e2a0537 100644
--- a/includes/language/romanian.php
+++ b/includes/language/romanian.php
@@ -14,6 +14,7 @@
  */
 global $LANG;
 $LANG = array (
+    'access_level_for_roles' => 'Associated access for Roles',
     'admin_script_backup_secret' => 'Passkey for backup execution',
     'admin_script_backup_secret_tip' => 'The backup passkey needs to be provided to start the backup. It has to be added a key parameter to script.backup.php. Example:scripts.backup.php?key=your_passkey',
     'text' => 'Text',
diff --git a/includes/language/russian.php b/includes/language/russian.php
index c0d718fa3..a1c8a3ad5 100644
--- a/includes/language/russian.php
+++ b/includes/language/russian.php
@@ -14,6 +14,7 @@
  */
 global $LANG;
 $LANG = array (
+    'access_level_for_roles' => 'Associated access for Roles',
     'admin_script_backup_secret' => 'Passkey for backup execution',
     'admin_script_backup_secret_tip' => 'The backup passkey needs to be provided to start the backup. It has to be added a key parameter to script.backup.php. Example:scripts.backup.php?key=your_passkey',
     'text' => 'Text',
diff --git a/includes/language/spanish.php b/includes/language/spanish.php
index 3a60282e4..5c10f45fc 100644
--- a/includes/language/spanish.php
+++ b/includes/language/spanish.php
@@ -14,6 +14,7 @@
  */
 global $LANG;
 $LANG = array (
+    'access_level_for_roles' => 'Associated access for Roles',
     'admin_script_backup_secret' => 'Passkey for backup execution',
     'admin_script_backup_secret_tip' => 'The backup passkey needs to be provided to start the backup. It has to be added a key parameter to script.backup.php. Example:scripts.backup.php?key=your_passkey',
     'text' => 'Text',
diff --git a/includes/language/swedish.php b/includes/language/swedish.php
index 48fb35bcb..22cbfce6f 100644
--- a/includes/language/swedish.php
+++ b/includes/language/swedish.php
@@ -14,6 +14,7 @@
  */
 global $LANG;
 $LANG = array (
+    'access_level_for_roles' => 'Associated access for Roles',
     'admin_script_backup_secret' => 'Passkey for backup execution',
     'admin_script_backup_secret_tip' => 'The backup passkey needs to be provided to start the backup. It has to be added a key parameter to script.backup.php. Example:scripts.backup.php?key=your_passkey',
     'text' => 'Text',
diff --git a/includes/language/turkish.php b/includes/language/turkish.php
index 68308706d..bf4780308 100644
--- a/includes/language/turkish.php
+++ b/includes/language/turkish.php
@@ -14,6 +14,7 @@
  */
 global $LANG;
 $LANG = array (
+    'access_level_for_roles' => 'Associated access for Roles',
     'admin_script_backup_secret' => 'Passkey for backup execution',
     'admin_script_backup_secret_tip' => 'The backup passkey needs to be provided to start the backup. It has to be added a key parameter to script.backup.php. Example:scripts.backup.php?key=your_passkey',
     'text' => 'Text',
diff --git a/includes/language/ukrainian.php b/includes/language/ukrainian.php
index 92b3a5dd4..a65cd2330 100644
--- a/includes/language/ukrainian.php
+++ b/includes/language/ukrainian.php
@@ -14,6 +14,7 @@
  */
 global $LANG;
 $LANG = array (
+    'access_level_for_roles' => 'Associated access for Roles',
     'admin_script_backup_secret' => 'Passkey for backup execution',
     'admin_script_backup_secret_tip' => 'The backup passkey needs to be provided to start the backup. It has to be added a key parameter to script.backup.php. Example:scripts.backup.php?key=your_passkey',
     'text' => 'Text',
diff --git a/includes/language/vietnamese.php b/includes/language/vietnamese.php
index 0a51eade4..09469ba37 100644
--- a/includes/language/vietnamese.php
+++ b/includes/language/vietnamese.php
@@ -14,6 +14,7 @@
  */
 global $LANG;
 $LANG = array (
+    'access_level_for_roles' => 'Associated access for Roles',
     'admin_script_backup_secret' => 'Passkey for backup execution',
     'admin_script_backup_secret_tip' => 'The backup passkey needs to be provided to start the backup. It has to be added a key parameter to script.backup.php. Example:scripts.backup.php?key=your_passkey',
     'text' => 'Text',
diff --git a/items.load.php b/items.load.php
index 351a98126..a1a92bf6d 100755
--- a/items.load.php
+++ b/items.load.php
@@ -3932,15 +3932,17 @@ function() {
 /*
 * permits to save
 */
-function itemLog(log_case)
+function itemLog(log_case, item_id)
 {
+    console.log("> "+item_id);
+    item_id = item_id || $('#id_item').val();
     $.post(
         "sources/items.logs.php",
         {
             type        : log_case,
-            id_item     : $('#id_item').val(),
+            id_item     : item_id,
             folder_id   : $('#hid_cat').val(),
-        hid_label   : $('#hid_label').val(),
+            hid_label   : $('#hid_label').val(),
             key         : "<?php echo $_SESSION['key']; ?>"
         }
     );
@@ -4025,7 +4027,7 @@ function proceed_list_update(stop_proceeding)
         var clipboard = new Clipboard('.mini_pw');
         clipboard.on('success', function(e) {
             $("#message_box").html("<?php echo addslashes($LANG['pw_copied_clipboard']); ?>").show().fadeOut(1000);
-            itemLog("item_password_copied");
+            itemLog("item_password_copied", e.trigger.dataset.clipboardId);
             e.clearSelection();
         });
 
diff --git a/profile.php b/profile.php
index 622fbca3f..1d366eb32 100644
--- a/profile.php
+++ b/profile.php
@@ -92,6 +92,16 @@
     $arraFlags[$record['label']] = $record['label'];
 }
 
+// Prepare Headers
+header('Access-Control-Allow-Origin: *');
+echo '
+<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
+<html>
+    <head>
+        <title>User Profile</title>
+    </head>
+<body>';
+
 echo '
 <input type="hidden" id="profile_user_token" value="" />
 <table style="margin-left:7px;">
@@ -717,3 +727,5 @@ function(data){
     );
 }
 </script>
+</body>
+</html>
diff --git a/sources/folders.queries.php b/sources/folders.queries.php
index 32f61e021..e2ac66e7a 100644
--- a/sources/folders.queries.php
+++ b/sources/folders.queries.php
@@ -438,6 +438,19 @@
             $complexity = htmlspecialchars_decode($dataReceived['complexity']);
             $parentId = htmlspecialchars_decode($dataReceived['parent_id']);
             $renewalPeriod = htmlspecialchars_decode($dataReceived['renewal_period']);
+            if ($parentId === "0") {
+                if (isset($dataReceived['access_level']) === true) {
+                    $access_level_by_role = filter_var(htmlspecialchars_decode($dataReceived['access_level']), FILTER_SANITIZE_STRING);
+                } else {
+                    if ($_SESSION['user_manager'] === "1") {
+                        $access_level_by_role = "W";
+                    } else {
+                        $access_level_by_role = "";
+                    }
+                }
+            } else {
+                $access_level_by_role = "";
+            }
 
             //Check if title doesn't contains html codes
             if (preg_match_all("|<[^>]+>(.*)</[^>]+>|U", $title, $out)) {
@@ -544,46 +557,52 @@
                     $tree = new Tree\NestedTree\NestedTree(prefix_table("nested_tree"), 'id', 'parent_id', 'title');
                     $tree->rebuild();
 
-                    if ($isPersonal !== 1
-                        && isset($SETTINGS['subfolder_rights_as_parent'])
-                        && $SETTINGS['subfolder_rights_as_parent'] === 1
-                        || ($isPersonal !== 1 && $parentId === "0")
-                    ) {
+                    // Add right to see this folder
+                    if ($_SESSION['is_admin'] === "1" || $_SESSION['user_manager'] === "1") {
                         //Get user's rights
                         identifyUserRights(
-                            array_push($_SESSION['groupes_visibles'], $newId),
+                            $_SESSION['groupes_visibles'],
                             implode(";", $_SESSION['groupes_interdits']),
                             $_SESSION['is_admin'],
-                            $_SESSION['fonction_id']
+                            is_array($_SESSION['fonction_id']) === true ? implode(";", $_SESSION['fonction_id']) : $_SESSION['fonction_id']
                         );
+                    }
 
+                    if ($isPersonal !== 1
+                        && $parentId === "0"
+                    ) {
                         //add access to this new folder
                         foreach (explode(';', $_SESSION['fonction_id']) as $role) {
-                            if (!empty($role)) {
+                            if (empty($role) === false && empty($access_level_by_role) === false) {
                                 DB::insert(
                                     prefix_table("roles_values"),
                                     array(
                                         'role_id' => $role,
                                         'folder_id' => $newId,
-                                        'type' => "W"
+                                        'type' => $access_level_by_role
                                     )
                                 );
                             }
                         }
                     }
 
-                    //If it is a subfolder, then give access to it for all roles that allows the parent folder
-                    $rows = DB::query("SELECT role_id, type FROM ".prefix_table("roles_values")." WHERE folder_id = %i", $parentId);
-                    foreach ($rows as $record) {
-                        //add access to this subfolder
-                        DB::insert(
-                            prefix_table("roles_values"),
-                            array(
-                                'role_id' => $record['role_id'],
-                                'folder_id' => $newId,
-                                'type' => $record['type']
-                            )
-                        );
+
+                    if (isset($SETTINGS['subfolder_rights_as_parent']) === true
+                        && $SETTINGS['subfolder_rights_as_parent'] === "1"
+                    ) {
+                        //If it is a subfolder, then give access to it for all roles that allows the parent folder
+                        $rows = DB::query("SELECT role_id, type FROM ".prefix_table("roles_values")." WHERE folder_id = %i", $parentId);
+                        foreach ($rows as $record) {
+                            //add access to this subfolder
+                            DB::insert(
+                                prefix_table("roles_values"),
+                                array(
+                                    'role_id' => $record['role_id'],
+                                    'folder_id' => $newId,
+                                    'type' => $record['type']
+                                )
+                            );
+                        }
                     }
 
                     // if parent folder has Custom Fields Categories then add to this child one too
diff --git a/sources/items.queries.php b/sources/items.queries.php
index d10d13cb7..f29ef12b1 100644
--- a/sources/items.queries.php
+++ b/sources/items.queries.php
@@ -2695,7 +2695,7 @@
                                     $new_line .= '<i class="fa fa-sm fa-user mi-black mini_login" data-clipboard-text="'.strtr($record['login'], '"', "&quot;").'" title="'.$LANG['item_menu_copy_login'].'"></i>&nbsp;';
                                 }
                                 if (empty($pw) === false) {
-                                    $new_line .= '<i class="fa fa-sm fa-lock mi-black mini_pw" data-clipboard-text="'.strtr($pw, '"', "&quot;").'" title="'.$LANG['item_menu_copy_pw'].'"></i>&nbsp;';
+                                    $new_line .= '<i class="fa fa-sm fa-lock mi-black mini_pw" data-clipboard-text="'.strtr($pw, '"', "&quot;").'" title="'.$LANG['item_menu_copy_pw'].'" data-clipboard-id="'.$record['id'].'"></i>&nbsp;';
                                 }
                             }
                         }
diff --git a/sources/main.functions.php b/sources/main.functions.php
index 28b90e44e..a86f2f552 100644
--- a/sources/main.functions.php
+++ b/sources/main.functions.php
@@ -510,6 +510,9 @@ function defuse_return_decrypted($value)
 function trimElement($chaine, $element)
 {
     if (!empty($chaine)) {
+        if (is_array($chaine) === true) {
+            $chaine = implode(";", $chaine);
+        }
         $chaine = trim($chaine);
         if (substr($chaine, 0, 1) == $element) {
             $chaine = substr($chaine, 1);
@@ -658,7 +661,7 @@ function identifyUserRights($groupesVisiblesUser, $groupesInterditsUser, $isAdmi
         $_SESSION['read_only_folders'] = array();
         $_SESSION['fonction_id'] = $idFonctions;
         $groupesInterdits = array();
-        if (!is_array($groupesInterditsUser)) {
+        if (is_array($groupesInterditsUser) === false) {
             $groupesInterditsUser = explode(';', trimElement($groupesInterditsUser, ";"));
         }
         if (!empty($groupesInterditsUser) && count($groupesInterditsUser) > 0) {
