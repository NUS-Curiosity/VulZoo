diff --git a/AndroidManifest.xml b/AndroidManifest.xml
index df270b3..ce75a73 100644
--- a/AndroidManifest.xml
+++ b/AndroidManifest.xml
@@ -1,8 +1,8 @@
 <?xml version="1.0" encoding="utf-8"?>
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
     package="at.hgz.vocabletrainer"
-    android:versionCode="9"
-    android:versionName="1.3.0" >
+    android:versionCode="10"
+    android:versionName="1.3.1" >
 
     <uses-sdk
         android:minSdkVersion="14"
diff --git a/src/at/hgz/vocabletrainer/VocableTrainerProvider.java b/src/at/hgz/vocabletrainer/VocableTrainerProvider.java
index 1b81786..77f204b 100755
--- a/src/at/hgz/vocabletrainer/VocableTrainerProvider.java
+++ b/src/at/hgz/vocabletrainer/VocableTrainerProvider.java
@@ -2,6 +2,7 @@
 
 import java.io.File;
 import java.io.FileNotFoundException;
+import java.io.IOException;
 
 import android.content.ContentProvider;
 import android.content.ContentValues;
@@ -13,11 +14,19 @@
 public class VocableTrainerProvider extends ContentProvider {
 	
 	@Override
-	public ParcelFileDescriptor openFile(Uri uri, String mode) throws FileNotFoundException {       
-	     File cacheDir = getContext().getCacheDir();
-	     File privateFile = new File(cacheDir, uri.getLastPathSegment());
+	public ParcelFileDescriptor openFile(Uri uri, String mode) throws FileNotFoundException {
+		try {
+			String cacheDir = getContext().getCacheDir().toString();
+			File privateFile = new File(cacheDir, uri.getLastPathSegment());
 
-	     return ParcelFileDescriptor.open(privateFile, ParcelFileDescriptor.MODE_READ_ONLY);
+			if (!privateFile.getCanonicalPath().startsWith(cacheDir)) {
+				throw new IllegalArgumentException();
+			}
+
+			return ParcelFileDescriptor.open(privateFile, ParcelFileDescriptor.MODE_READ_ONLY);
+		} catch (IOException e) {
+			throw new RuntimeException(e.getMessage(), e);
+		}
 	}
 	
 	@Override
