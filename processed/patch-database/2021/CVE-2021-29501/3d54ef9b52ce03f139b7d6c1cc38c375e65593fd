diff --git a/ticketer/ticketer.py b/ticketer/ticketer.py
index f6463c5..d0b7d50 100644
--- a/ticketer/ticketer.py
+++ b/ticketer/ticketer.py
@@ -6,14 +6,15 @@
 
 class Ticketer(commands.Cog):
     """Ticketer"""
-    __version__="1.0.0"
+
+    __version__ = "1.0.1"
 
     async def red_delete_data_for_user(self, *, requester, user_id):
         # This cog stores no EUD
         return
 
     def format_help_for_context(self, ctx: commands.Context) -> str:
-        #Thanks Sinbad! And Trusty in whose cogs I found this.
+        # Thanks Sinbad! And Trusty in whose cogs I found this.
         pre_processed = super().format_help_for_context(ctx)
         return f"{pre_processed}\n\nVersion: {self.__version__}"
 
@@ -83,7 +84,7 @@ async def closed(self, ctx, *, category: discord.CategoryChannel):
     async def message(self, ctx, *, message: str):
         """Set the message that is shown at the start of each ticket channel.\n\nUse ``{user.mention}`` to mention the person who created the ticket."""
         try:
-            message.format(user=ctx.author)
+            message.format(user=SafeMember(ctx.author))
             await self.config.guild(ctx.guild).message.set(message)
             await ctx.send(f"The message has been set to `{message}`.")
         except KeyError:
@@ -244,7 +245,7 @@ async def create(
                     category=ctx.guild.get_channel(settings["open_category"]),
                     topic=reason,
                 )
-                await ticketchannel.send(settings["message"].format(user=ctx.author))
+                await ticketchannel.send(settings["message"].format(user=SafeMember(ctx.author)))
                 embed = discord.Embed(
                     title=name,
                     description=reason,
@@ -368,3 +369,17 @@ async def _check_settings(self, ctx: commands.Context) -> bool:
             return True
         else:
             return False
+
+
+class SafeMember:
+    """Thank you kenny https://github.com/kennnyshiwa/kennnyshiwa-cogs"""
+
+    def __init__(self, member: discord.Member):
+        self.name = member.name
+        self.mention = member.mention
+
+    def __str__(self):
+        return self.name
+
+    def __getattr__(self, name):
+        return ""
\ No newline at end of file
