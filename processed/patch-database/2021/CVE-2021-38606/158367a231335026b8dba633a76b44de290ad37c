diff --git a/web/reNgine/tasks.py b/web/reNgine/tasks.py
index 07141765a..09f39c8f4 100644
--- a/web/reNgine/tasks.py
+++ b/web/reNgine/tasks.py
@@ -4,6 +4,7 @@
 import json
 import csv
 import validators
+import random
 import requests
 import logging
 import metafinder.extractor as metadata_extractor
@@ -97,8 +98,7 @@ def initiate_scan(
         send_notification('reNgine has initiated recon for target {} with engine type {}'.format(domain.name, engine_object.engine_name))
 
     try:
-        current_scan_dir = domain.name + '_' + \
-            str(datetime.datetime.strftime(timezone.now(), '%Y_%m_%d_%H_%M_%S'))
+        current_scan_dir = domain.name + '_' + str(random.randint(100000000000, 999999999999))
         os.mkdir(current_scan_dir)
         task.results_dir = current_scan_dir
         task.save()
@@ -257,7 +257,7 @@ def initiate_scan(
     task.stop_scan_date = timezone.now()
     task.save()
     # cleanup results
-    # delete_scan_data(results_dir)
+    delete_scan_data(results_dir)
     return {"status": True}
 
 
@@ -1334,7 +1334,7 @@ def vulnerability_scan(
                         if Hackerone.objects.all().exists() and severity != 'info' and severity \
                             != 'low' and vulnerability.target_domain.h1_team_handle:
                             hackerone = Hackerone.objects.all()[0]
-                            
+
                             if hackerone.send_critical and severity == 'critical':
                                 send_hackerone_report(vulnerability.id)
                             elif hackerone.send_high and severity == 'high':
diff --git a/web/startScan/views.py b/web/startScan/views.py
index e0996f10b..c7c5fc2f6 100644
--- a/web/startScan/views.py
+++ b/web/startScan/views.py
@@ -258,10 +258,8 @@ def export_urls(request, scan_id):
 def delete_scan(request, id):
     obj = get_object_or_404(ScanHistory, id=id)
     if request.method == "POST":
-        delete_dir = obj.domain.name + '_' + \
-            str(datetime.datetime.strftime(obj.start_scan_date, '%Y_%m_%d_%H_%M_%S'))
-        delete_path = settings.TOOL_LOCATION + 'scan_results/' + delete_dir
-        os.system('rm -rf ' + delete_path)
+        delete_dir = obj.results_dir
+        os.system('rm -rf /usr/src/scan_results/' + delete_dir)
         obj.delete()
         messageData = {'status': 'true'}
         messages.add_message(
@@ -613,7 +611,10 @@ def delete_scans(request):
 
         for key, value in request.POST.items():
             if key != "scan_history_table_length" and key != "csrfmiddlewaretoken":
-                ScanHistory.objects.filter(id=value).delete()
+                obj = get_object_or_404(ScanHistory, id=value)
+                delete_dir = obj.results_dir
+                os.system('rm -rf /usr/src/scan_results/' + delete_dir)
+                obj.delete()
         messages.add_message(
             request,
             messages.INFO,
