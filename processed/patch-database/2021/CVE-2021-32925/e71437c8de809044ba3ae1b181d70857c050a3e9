diff --git a/main/admin/user_import.php b/main/admin/user_import.php
index afbf111f3e6..69ed2baab13 100644
--- a/main/admin/user_import.php
+++ b/main/admin/user_import.php
@@ -1,4 +1,5 @@
 <?php
+
 /* For licensing terms, see /license.txt */
 
 use Chamilo\CoreBundle\Entity\ExtraFieldOptions;
@@ -13,7 +14,6 @@
 // Set this option to true to enforce strict purification for usenames.
 $purification_option_for_usernames = false;
 $userId = api_get_user_id();
-
 api_protect_admin_script(true, null);
 api_protect_limit_for_session_admin();
 set_time_limit(0);
@@ -220,7 +220,6 @@ function save_data($users, $sendMail = false)
     if (!isset($inserted_in_course)) {
         $inserted_in_course = [];
     }
-
     $usergroup = new UserGroup();
     if (is_array($users)) {
         $efo = new ExtraFieldOption('user');
@@ -433,10 +432,9 @@ function parse_csv_data($users, $fileName, $sendEmail = 0, $checkUniqueEmail = t
  *
  * @return array All user information read from the file
  */
-function parse_xml_data($file)
+function parse_xml_data($file, $sendEmail = 0, $checkUniqueEmail = true)
 {
-    $crawler = new \Symfony\Component\DomCrawler\Crawler();
-    $crawler->addXmlContent(file_get_contents($file));
+    $crawler = Import::xml($file);
     $crawler = $crawler->filter('Contacts > Contact ');
     $array = [];
     foreach ($crawler as $domElement) {
@@ -451,6 +449,16 @@ function parse_xml_data($file)
         }
     }
 
+    Session::write(
+        'user_import_data_'.api_get_user_id(),
+        [
+            'check_unique_email' => $checkUniqueEmail,
+            'send_email' => $sendEmail,
+            'date' => api_get_utc_datetime(),
+            'log_messages' => '',
+        ]
+    );
+
     return $array;
 }
 
@@ -548,7 +556,11 @@ function processUsers(&$users, $sendMail)
             $users = validate_data($users, $checkUniqueEmail);
             $error_kind_file = false;
         } elseif (strcmp($file_type, 'xml') === 0 && $ext_import_file == $allowed_file_mimetype[1]) {
-            $users = parse_xml_data($_FILES['import_file']['tmp_name']);
+            $users = parse_xml_data(
+                $_FILES['import_file']['tmp_name'],
+                $sendMail,
+                $checkUniqueEmail
+            );
             $users = validate_data($users, $checkUniqueEmail);
             $error_kind_file = false;
         }
@@ -590,7 +602,7 @@ function processUsers(&$users, $sendMail)
 $formContinue = false;
 $resumeStop = true;
 if (!empty($importData)) {
-    $isResume = $importData['resume'];
+    $isResume = $importData['resume'] ?? false;
 
     $formContinue = new FormValidator('user_import_continue', 'post', api_get_self());
     $label = get_lang('Results');
@@ -598,7 +610,9 @@ function processUsers(&$users, $sendMail)
         $label = get_lang('ContinueLastImport');
     }
     $formContinue->addHeader($label);
-    $formContinue->addLabel(get_lang('File'), $importData['filename']);
+    if (isset($importData['filename'])) {
+        $formContinue->addLabel(get_lang('File'), $importData['filename'] ?? '');
+    }
 
     $resumeStop = true;
     if ($isResume) {
@@ -614,10 +628,12 @@ function processUsers(&$users, $sendMail)
             $importData['counter'].' / '.count($importData['complete_list'])
         );
     } else {
-        $formContinue->addLabel(
-            get_lang('Users'),
-            count($importData['complete_list'])
-        );
+        if (!empty($importData['complete_list'])) {
+            $formContinue->addLabel(
+                get_lang('Users'),
+                count($importData['complete_list'])
+            );
+        }
     }
 
     $formContinue->addLabel(
diff --git a/main/admin/user_update_import.php b/main/admin/user_update_import.php
index 8d6d9518841..2c6fb74037f 100644
--- a/main/admin/user_update_import.php
+++ b/main/admin/user_update_import.php
@@ -256,8 +256,7 @@ function parse_csv_data($file)
 
 function parse_xml_data($file)
 {
-    $crawler = new Crawler();
-    $crawler->addXmlContent(file_get_contents($file));
+    $crawler = Import::xml($file);
     $crawler = $crawler->filter('Contacts > Contact ');
     $array = [];
     foreach ($crawler as $domElement) {
diff --git a/main/inc/lib/import.lib.php b/main/inc/lib/import.lib.php
index 9f7d027786f..e03367eb4f0 100755
--- a/main/inc/lib/import.lib.php
+++ b/main/inc/lib/import.lib.php
@@ -1,8 +1,10 @@
 <?php
+
 /* For licensing terms, see /license.txt */
 
 use Ddeboer\DataImport\Reader\ExcelReader;
 use League\Csv\Reader;
+use Symfony\Component\DomCrawler\Crawler;
 
 /**
  * Class Import
@@ -79,8 +81,22 @@ public static function xlsToArray($filename)
         }
 
         $file = new \SplFileObject($filename);
-        $reader = new ExcelReader($file, 0);
 
-        return $reader;
+        return new ExcelReader($file, 0);
+    }
+
+    /**
+     * @param string $file
+     *
+     * @return Crawler
+     */
+    public static function xml($file)
+    {
+        @libxml_disable_entity_loader(true);
+
+        $crawler = new Crawler();
+        $crawler->addXmlContent(file_get_contents($file));
+
+        return $crawler;
     }
 }
diff --git a/main/inc/lib/myspace.lib.php b/main/inc/lib/myspace.lib.php
index bd50c355bd6..2a908da1de9 100644
--- a/main/inc/lib/myspace.lib.php
+++ b/main/inc/lib/myspace.lib.php
@@ -3727,8 +3727,7 @@ public function parse_csv_data($file)
      */
     public static function parse_xml_data($file)
     {
-        $crawler = new \Symfony\Component\DomCrawler\Crawler();
-        $crawler->addXmlContent(file_get_contents($file));
+        $crawler = Import::xml($file);
         $crawler = $crawler->filter('Contacts > Contact ');
         $array = [];
         foreach ($crawler as $domElement) {
diff --git a/main/lp/scorm.class.php b/main/lp/scorm.class.php
index 5611f680c79..8c8a4e940be 100755
--- a/main/lp/scorm.class.php
+++ b/main/lp/scorm.class.php
@@ -95,8 +95,9 @@ public function parse_manifest($file = '')
             // UTF-8 is supported by DOMDocument class, this is for sure.
             $xml = api_utf8_encode_xml($xml, $this->manifest_encoding);
 
-            $crawler = new Crawler();
-            $crawler->addXmlContent($xml);
+            /*$crawler = new Crawler();
+            $crawler->addXmlContent($xml);*/
+            $crawler = Import::xml($xml);
 
             $xmlErrors = libxml_get_errors();
 
