diff --git a/app/views/groups/index.html.erb b/app/views/groups/index.html.erb
index 0b18bdeeac..78ca0cf5a9 100644
--- a/app/views/groups/index.html.erb
+++ b/app/views/groups/index.html.erb
@@ -48,22 +48,26 @@
 <% end %>
 
 <% if @available_groups.any? %>
-  <div class="title"><%= t('groups.index.available_groups') %></div>
-  <div class="gridTwo">
-    <% @available_groups.each do |group| %>
-      <div class="gridTwoItemBoxLight">
-        <%= react_component('Story', html_options: html_options, props: {
-          name: group.name,
-          link: url_for(group),
-          actions: {
-            join: {
-              name: t('common.actions.join'),
-              link: group_membership_path(group_id: group.id, id: 'join'),
-              dataMethod: 'post'
+  <div class="smallMarginTop">
+    <div class="title">
+      <%= t('groups.index.available_groups') %>
+    </div>
+    <div class="gridTwo">
+      <% @available_groups.each do |group| %>
+        <div class="gridTwoItemBoxLight">
+          <%= react_component('Story', html_options: html_options, props: {
+            name: group.name,
+            link: url_for(group),
+            actions: {
+              join: {
+                name: t('common.actions.join'),
+                link: group_membership_path(group_id: group.id, id: 'join'),
+                dataMethod: 'post'
+              }
             }
-          }
-        }) %>
-      </div>
-    <% end %>
+          }) %>
+        </div>
+      <% end %>
+    </div>
   </div>
 <% end %>
diff --git a/client/app/components/Avatar/index.jsx b/client/app/components/Avatar/index.jsx
index 4b4bde2980..664de20a59 100644
--- a/client/app/components/Avatar/index.jsx
+++ b/client/app/components/Avatar/index.jsx
@@ -32,7 +32,9 @@ export const Avatar = (props: Props) => {
   const height = getHeight(small, large);
   return (
     <div
-      className={`avatar ${css.avatar} ${large ? css.large : ''} ${small ? css.small : ''}`}
+      className={`avatar ${css.avatar} ${large ? css.large : ''} ${
+        small ? css.small : ''
+      }`}
     >
       <LazyLoad height={height} offset={height} once tabIndex={0}>
         {src ? (
diff --git a/client/app/components/Input/InputTextarea.jsx b/client/app/components/Input/InputTextarea.jsx
index 2123f9bbfa..f0b880d769 100644
--- a/client/app/components/Input/InputTextarea.jsx
+++ b/client/app/components/Input/InputTextarea.jsx
@@ -1,5 +1,6 @@
 // @flow
 import React, { useState, useEffect, useRef } from 'react';
+import { sanitize } from 'dompurify';
 import ReactDOMServer from 'react-dom/server';
 import { init, exec } from 'pell';
 import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';
@@ -7,8 +8,6 @@ import { faLink } from '@fortawesome/free-solid-svg-icons';
 import css from './InputTextarea.scss';
 import inputCss from './Input.scss';
 
-// TODO (julianguyen): More tests after writing stubs for Pell editor
-
 const handleResult = (type: string) => {
   switch (type) {
     case 'link': {
@@ -67,12 +66,12 @@ export function InputTextarea(props: Props) {
   const {
     id, name, value: propValue, required, hasError, myRef, dark,
   } = props;
-  const [value, setValue] = useState<string>(propValue || '');
+  const [value, setValue] = useState<string>(sanitize(propValue) || '');
   const editorRef = useRef(null);
   const editor = useRef(null);
 
   const onChange = (updatedValue: string) => {
-    setValue(updatedValue);
+    setValue(sanitize(updatedValue));
   };
 
   const onBlur = () => {
@@ -95,7 +94,7 @@ export function InputTextarea(props: Props) {
 
     const text = (e.originalEvent || e).clipboardData.getData('text/plain') ?? '';
 
-    document.execCommand('insertHTML', false, text);
+    document.execCommand('insertHTML', false, sanitize(text));
   };
 
   useEffect(() => {
