diff --git a/dist/jsuites.basic.css b/dist/jsuites.basic.css
index dd92f9f..71e1a8d 100644
--- a/dist/jsuites.basic.css
+++ b/dist/jsuites.basic.css
@@ -840,6 +840,40 @@
   pointer-events: auto;
 }
 
+@media only screen and (max-width: 420px) {
+    .jcontextmenu {
+        top: initial !important;
+        left: 0px !important;
+        bottom: 0px !important;
+        width: 100vw;
+        height: 260px;
+        overflow: scroll;
+        animation: slide-bottom-in 0.4s forwards;
+    }
+    .jcontextmenu div {
+        width: 100%;
+        text-align: center;
+        border-bottom: 1px solid #ccc;
+        padding: 15px;
+    }
+    .jcontextmenu > div::before {
+        display: none;
+    }
+    .jcontextmenu a {
+        font-size: 1.4em;
+        text-transform: uppercase;
+    }
+    .jcontextmenu span {
+        display: none;
+    }
+    .jcontextmenu span {
+        display: none;
+    }
+    .jcontextmenu hr {
+        display: none;
+    }
+}
+
 .jdropdown {
     cursor:pointer;
     -webkit-touch-callout: none;
diff --git a/dist/jsuites.basic.js b/dist/jsuites.basic.js
index 7f1db8c..fa1098a 100644
--- a/dist/jsuites.basic.js
+++ b/dist/jsuites.basic.js
@@ -17,7 +17,7 @@
 
 var jSuites = function(options) {
     var obj = {}
-    var version = '4.9.9';
+    var version = '4.4.0';
 
     var find = function(DOMElement, component) {
         if (DOMElement[component.type] && DOMElement[component.type] == component) {
@@ -5271,7 +5271,7 @@ jSuites.editor = (function(el, options) {
     }
 
     // Elements to be removed
-    var remove = [HTMLUnknownElement];
+    var remove = [HTMLUnknownElement,HTMLAudioElement,HTMLEmbedElement,HTMLIFrameElement,HTMLTextAreaElement,HTMLInputElement,HTMLScriptElement];
 
     // Valid CSS attributes
     var validStyle = ['color', 'font-weight', 'font-size', 'background', 'background-color', 'margin'];
@@ -5296,9 +5296,9 @@ jSuites.editor = (function(el, options) {
                }
            }
            // Process image
-           if (element.tagName == 'IMG') {
+           if (element.tagName.toUpperCase() == 'IMG') {
                if (! obj.options.acceptImages) {
-                   element.remove();
+                   element.parentNode.removeChild(element);
                } else {
                    // Check if is data
                    element.setAttribute('tabindex', '900');
@@ -5334,9 +5334,11 @@ jSuites.editor = (function(el, options) {
         if (data) {
             data = data.replace(new RegExp('<!--(.*?)-->', 'gsi'), '');
         }
+        var parser = new DOMParser();
+        var d = parser.parseFromString(data, "text/html");
+        parse(d);
         var span = document.createElement('span');
-        span.innerHTML = data;
-        parse(span);
+        span.innerHTML = d.firstChild.innerHTML;
         return span;
     } 
 
@@ -9114,7 +9116,8 @@ jSuites.tabs = (function(el, options) {
 });
 
 jSuites.toolbar = (function(el, options) {
-    var obj = {};
+    // New instance
+    var obj = { type:'toolbar' };
     obj.options = {};
 
     // Default configuration
@@ -9124,6 +9127,7 @@ jSuites.toolbar = (function(el, options) {
         badge: false,
         title: false,
         responsive: false,
+        maxWidth: null,
         items: [],
     }
 
@@ -9322,16 +9326,21 @@ jSuites.toolbar = (function(el, options) {
 
     obj.refresh = function() {
         if (obj.options.responsive == true) {
+            // Width of the c
+            var rect = el.parentNode.getBoundingClientRect();
+            if (! obj.options.maxWidth) {
+                obj.options.maxWidth = rect.width;
+            }
+            // Max width
+            var width = parseInt(obj.options.maxWidth); 
             // Remove arrow
             toolbarArrow.remove();
             // Move all items to the toolbar
             while (toolbarFloating.firstChild) {
                 toolbarContent.appendChild(toolbarFloating.firstChild);
             }
-            // Width of the c
-            var rect = el.parentNode.getBoundingClientRect();
             // Available parent space
-            var available = rect.width;
+            var available = obj.options.maxWidth;
             // Toolbar is larger than the parent, move elements to the floating element
             if (available < toolbarContent.offsetWidth) {
                 // Give space to the floating element
diff --git a/dist/jsuites.css b/dist/jsuites.css
index 62cc88f..429d9de 100644
--- a/dist/jsuites.css
+++ b/dist/jsuites.css
@@ -840,6 +840,40 @@
   pointer-events: auto;
 }
 
+@media only screen and (max-width: 420px) {
+    .jcontextmenu {
+        top: initial !important;
+        left: 0px !important;
+        bottom: 0px !important;
+        width: 100vw;
+        height: 260px;
+        overflow: scroll;
+        animation: slide-bottom-in 0.4s forwards;
+    }
+    .jcontextmenu div {
+        width: 100%;
+        text-align: center;
+        border-bottom: 1px solid #ccc;
+        padding: 15px;
+    }
+    .jcontextmenu > div::before {
+        display: none;
+    }
+    .jcontextmenu a {
+        font-size: 1.4em;
+        text-transform: uppercase;
+    }
+    .jcontextmenu span {
+        display: none;
+    }
+    .jcontextmenu span {
+        display: none;
+    }
+    .jcontextmenu hr {
+        display: none;
+    }
+}
+
 .jdropdown {
     cursor:pointer;
     -webkit-touch-callout: none;
diff --git a/dist/jsuites.js b/dist/jsuites.js
index d3035ce..7957182 100644
--- a/dist/jsuites.js
+++ b/dist/jsuites.js
@@ -17,7 +17,7 @@
 
 var jSuites = function(options) {
     var obj = {}
-    var version = '4.9.9';
+    var version = '4.4.0';
 
     var find = function(DOMElement, component) {
         if (DOMElement[component.type] && DOMElement[component.type] == component) {
@@ -5282,7 +5282,7 @@ jSuites.editor = (function(el, options) {
     }
 
     // Elements to be removed
-    var remove = [HTMLUnknownElement];
+    var remove = [HTMLUnknownElement,HTMLAudioElement,HTMLEmbedElement,HTMLIFrameElement,HTMLTextAreaElement,HTMLInputElement,HTMLScriptElement];
 
     // Valid CSS attributes
     var validStyle = ['color', 'font-weight', 'font-size', 'background', 'background-color', 'margin'];
@@ -5307,9 +5307,9 @@ jSuites.editor = (function(el, options) {
                }
            }
            // Process image
-           if (element.tagName == 'IMG') {
+           if (element.tagName.toUpperCase() == 'IMG') {
                if (! obj.options.acceptImages) {
-                   element.remove();
+                   element.parentNode.removeChild(element);
                } else {
                    // Check if is data
                    element.setAttribute('tabindex', '900');
@@ -5345,9 +5345,11 @@ jSuites.editor = (function(el, options) {
         if (data) {
             data = data.replace(new RegExp('<!--(.*?)-->', 'gsi'), '');
         }
+        var parser = new DOMParser();
+        var d = parser.parseFromString(data, "text/html");
+        parse(d);
         var span = document.createElement('span');
-        span.innerHTML = data;
-        parse(span);
+        span.innerHTML = d.firstChild.innerHTML;
         return span;
     } 
 
@@ -11019,7 +11021,8 @@ jSuites.tags = (function(el, options) {
 });
 
 jSuites.toolbar = (function(el, options) {
-    var obj = {};
+    // New instance
+    var obj = { type:'toolbar' };
     obj.options = {};
 
     // Default configuration
@@ -11029,6 +11032,7 @@ jSuites.toolbar = (function(el, options) {
         badge: false,
         title: false,
         responsive: false,
+        maxWidth: null,
         items: [],
     }
 
@@ -11227,16 +11231,21 @@ jSuites.toolbar = (function(el, options) {
 
     obj.refresh = function() {
         if (obj.options.responsive == true) {
+            // Width of the c
+            var rect = el.parentNode.getBoundingClientRect();
+            if (! obj.options.maxWidth) {
+                obj.options.maxWidth = rect.width;
+            }
+            // Max width
+            var width = parseInt(obj.options.maxWidth); 
             // Remove arrow
             toolbarArrow.remove();
             // Move all items to the toolbar
             while (toolbarFloating.firstChild) {
                 toolbarContent.appendChild(toolbarFloating.firstChild);
             }
-            // Width of the c
-            var rect = el.parentNode.getBoundingClientRect();
             // Available parent space
-            var available = rect.width;
+            var available = obj.options.maxWidth;
             // Toolbar is larger than the parent, move elements to the floating element
             if (available < toolbarContent.offsetWidth) {
                 // Give space to the floating element
diff --git a/package.json b/package.json
index e26271d..58946c4 100644
--- a/package.json
+++ b/package.json
@@ -19,7 +19,7 @@
         "javascript plugins"
     ],
     "main": "dist/jsuites.js",
-    "version": "4.9.9",
+    "version": "4.9.10",
     "bugs": "https://github.com/jsuites/jsuites/issues",
     "homepage": "https://github.com/jsuites/jsuites",
     "docs": "https://jsuites.net",
diff --git a/src/contextmenu.css b/src/contextmenu.css
index 1d176f3..90cba2b 100644
--- a/src/contextmenu.css
+++ b/src/contextmenu.css
@@ -95,4 +95,38 @@
   -webkit-transform: translate(0, 0) scale(1);
   transform: translate(0, 0) scale(1);
   pointer-events: auto;
+}
+
+@media only screen and (max-width: 420px) {
+    .jcontextmenu {
+        top: initial !important;
+        left: 0px !important;
+        bottom: 0px !important;
+        width: 100vw;
+        height: 260px;
+        overflow: scroll;
+        animation: slide-bottom-in 0.4s forwards;
+    }
+    .jcontextmenu div {
+        width: 100%;
+        text-align: center;
+        border-bottom: 1px solid #ccc;
+        padding: 15px;
+    }
+    .jcontextmenu > div::before {
+        display: none;
+    }
+    .jcontextmenu a {
+        font-size: 1.4em;
+        text-transform: uppercase;
+    }
+    .jcontextmenu span {
+        display: none;
+    }
+    .jcontextmenu span {
+        display: none;
+    }
+    .jcontextmenu hr {
+        display: none;
+    }
 }
\ No newline at end of file
diff --git a/src/editor.js b/src/editor.js
index 48b7e21..be6d685 100644
--- a/src/editor.js
+++ b/src/editor.js
@@ -724,7 +724,7 @@ jSuites.editor = (function(el, options) {
     }
 
     // Elements to be removed
-    var remove = [HTMLUnknownElement];
+    var remove = [HTMLUnknownElement,HTMLAudioElement,HTMLEmbedElement,HTMLIFrameElement,HTMLTextAreaElement,HTMLInputElement,HTMLScriptElement];
 
     // Valid CSS attributes
     var validStyle = ['color', 'font-weight', 'font-size', 'background', 'background-color', 'margin'];
@@ -749,9 +749,9 @@ jSuites.editor = (function(el, options) {
                }
            }
            // Process image
-           if (element.tagName == 'IMG') {
+           if (element.tagName.toUpperCase() == 'IMG') {
                if (! obj.options.acceptImages) {
-                   element.remove();
+                   element.parentNode.removeChild(element);
                } else {
                    // Check if is data
                    element.setAttribute('tabindex', '900');
@@ -787,9 +787,11 @@ jSuites.editor = (function(el, options) {
         if (data) {
             data = data.replace(new RegExp('<!--(.*?)-->', 'gsi'), '');
         }
+        var parser = new DOMParser();
+        var d = parser.parseFromString(data, "text/html");
+        parse(d);
         var span = document.createElement('span');
-        span.innerHTML = data;
-        parse(span);
+        span.innerHTML = d.firstChild.innerHTML;
         return span;
     } 
 
diff --git a/src/toolbar.js b/src/toolbar.js
index 8a8dfdb..90cd7e9 100644
--- a/src/toolbar.js
+++ b/src/toolbar.js
@@ -1,5 +1,6 @@
 jSuites.toolbar = (function(el, options) {
-    var obj = {};
+    // New instance
+    var obj = { type:'toolbar' };
     obj.options = {};
 
     // Default configuration
@@ -9,6 +10,7 @@ jSuites.toolbar = (function(el, options) {
         badge: false,
         title: false,
         responsive: false,
+        maxWidth: null,
         items: [],
     }
 
@@ -207,16 +209,21 @@ jSuites.toolbar = (function(el, options) {
 
     obj.refresh = function() {
         if (obj.options.responsive == true) {
+            // Width of the c
+            var rect = el.parentNode.getBoundingClientRect();
+            if (! obj.options.maxWidth) {
+                obj.options.maxWidth = rect.width;
+            }
+            // Max width
+            var width = parseInt(obj.options.maxWidth); 
             // Remove arrow
             toolbarArrow.remove();
             // Move all items to the toolbar
             while (toolbarFloating.firstChild) {
                 toolbarContent.appendChild(toolbarFloating.firstChild);
             }
-            // Width of the c
-            var rect = el.parentNode.getBoundingClientRect();
             // Available parent space
-            var available = rect.width;
+            var available = obj.options.maxWidth;
             // Toolbar is larger than the parent, move elements to the floating element
             if (available < toolbarContent.offsetWidth) {
                 // Give space to the floating element
