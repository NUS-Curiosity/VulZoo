diff --git a/cli.js b/cli.js
index c2ddfd2..f8a5eb4 100644
--- a/cli.js
+++ b/cli.js
@@ -5,13 +5,14 @@ async function task() {
 	const port = process.argv.pop();
 	const command = process.argv.pop();
 
+	let result;
 	switch (command) {
 		case "kill":
-			const result = await main.killAllProcessesOnPort(port);
+			result = await main.killAllProcessesOnPort(port);
 			console.log(result.filter(item => !item.success).map(item => `Failed to kill process ${item.pid}`).join('\n'));
 			break;
 		case "list":
-			const result = await main.listProcessesOnPort(port);
+			result = await main.listProcessesOnPort(port);
 			console.log(result);
 			break;
 		default:
diff --git a/index.js b/index.js
index 746e349..4812a18 100644
--- a/index.js
+++ b/index.js
@@ -1,7 +1,12 @@
 const exec = require('./exec');
 const listProcessesOnPort = module.exports.listProcessesOnPort = async port => {
+	const portNumber = parseInt(port, 10);
+	if (Number.isNaN(portNumber)) {
+		console.error("Must provide number for port.");
+		return;
+	}
 	try {
-		const result = (await exec(`lsof -i :${port}`)).output.split('\n');
+		const result = (await exec(`lsof -i :${portNumber}`)).output.split('\n');
 		const headers = result.shift().split(' ').filter(item => !!item.trim() && item.trim() !== "").map(item => item.toLowerCase());
 		return result.filter(item => !!item.trim() && item.trim() !== "").reduce((accumulator, currentValue) => {
 			accumulator.push(currentValue.split(' ').filter(item => !!item.trim() && item.trim() !== "").reduce((accumulator, currentValue, index) => {
@@ -19,8 +24,14 @@ const listProcessesOnPort = module.exports.listProcessesOnPort = async port => {
 	}
 };
 const killProcess = module.exports.killProcess = async pid => {
+	const pidNumber = parseInt(pid, 10);
+	if (Number.isNaN(pidNumber)) {
+		console.error("Must provide number for process identifier.");
+		return false;
+	}
+
 	try {
-		await exec(`kill ${pid}`);
+		await exec(`kill ${pidNumber}`);
 		return true;
 	} catch (e) {
 		return false;
