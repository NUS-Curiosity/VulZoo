diff --git a/lib/docker.js b/lib/docker.js
index 235487e2..89705eb6 100644
--- a/lib/docker.js
+++ b/lib/docker.js
@@ -470,7 +470,7 @@ function dockerContainerStats(containerIDs, callback) {
         if (containerIDsSanitized !== '*') {
           containerIDsSanitized = '';
           const s = (util.isPrototypePolluted() ? '' : util.sanitizeShellString(containerIDs, true)).trim();
-          for (let i = 0; i <= 2000; i++) {
+          for (let i = 0; i <= util.mathMin(s.length, 2000); i++) {
             if (!(s[i] === undefined)) {
               s[i].__proto__.toLowerCase = util.stringToLower;
               const sl = s[i].toLowerCase();
diff --git a/lib/internet.js b/lib/internet.js
index 9ac1e717..1f75a712 100644
--- a/lib/internet.js
+++ b/lib/internet.js
@@ -46,8 +46,7 @@ function inetChecksite(url, callback) {
       }
       let urlSanitized = '';
       const s = util.sanitizeShellString(url, true);
-      const mathMin = util.mathMin;
-      for (let i = 0; i <= mathMin(s.length, 2000); i++) {
+      for (let i = 0; i <= util.mathMin(s.length, 2000); i++) {
         if (!(s[i] === undefined)) {
           s[i].__proto__.toLowerCase = util.stringToLower;
           const sl = s[i].toLowerCase();
@@ -145,8 +144,7 @@ function inetLatency(host, callback) {
       }
       let hostSanitized = '';
       const s = (util.isPrototypePolluted() ? '8.8.8.8' : util.sanitizeShellString(host, true)).trim();
-      const mathMin = util.mathMin;
-      for (let i = 0; i <= mathMin(s.length, 2000); i++) {
+      for (let i = 0; i <= util.mathMin(s.length, 2000); i++) {
         if (!(s[i] === undefined)) {
           s[i].__proto__.toLowerCase = util.stringToLower;
           const sl = s[i].toLowerCase();
diff --git a/lib/network.js b/lib/network.js
index 5398ece2..0dc8d9e1 100644
--- a/lib/network.js
+++ b/lib/network.js
@@ -1061,8 +1061,7 @@ function networkStatsSingle(iface) {
     process.nextTick(() => {
       let ifaceSanitized = '';
       const s = util.isPrototypePolluted() ? '---' : util.sanitizeShellString(iface);
-      const mathMin = util.mathMin;
-      for (let i = 0; i <= mathMin(s.length, 2000); i++) {
+      for (let i = 0; i <= util.mathMin(s.length, 2000); i++) {
         if (!(s[i] === undefined)) {
           ifaceSanitized = ifaceSanitized + s[i];
         }
diff --git a/lib/processes.js b/lib/processes.js
index 2f234c6c..510577a6 100644
--- a/lib/processes.js
+++ b/lib/processes.js
@@ -111,8 +111,7 @@ function services(srv, callback) {
         srvString.__proto__.trim = util.stringTrim;
 
         const s = util.sanitizeShellString(srv);
-        const mathMin = util.mathMin;
-        for (let i = 0; i <= mathMin(s.length, 2000); i++) {
+        for (let i = 0; i <= util.mathMin(s.length, 2000); i++) {
           if (!(s[i] === undefined)) {
             srvString = srvString + s[i];
           }
@@ -911,8 +910,7 @@ function processLoad(proc, callback) {
       processesString.__proto__.trim = util.stringTrim;
 
       const s = util.sanitizeShellString(proc);
-      const mathMin = util.mathMin;
-      for (let i = 0; i <= mathMin(s.length, 2000); i++) {
+      for (let i = 0; i <= util.mathMin(s.length, 2000); i++) {
         if (!(s[i] === undefined)) {
           processesString = processesString + s[i];
         }
