diff --git a/flask_unchained/bundles/controller/utils.py b/flask_unchained/bundles/controller/utils.py
index c9946d97..cf6a672e 100644
--- a/flask_unchained/bundles/controller/utils.py
+++ b/flask_unchained/bundles/controller/utils.py
@@ -185,7 +185,7 @@ def method_name_to_url(method_name) -> str:
 
 def encode_non_url_reserved_characters(url):
     # safe url reserved characters: https://datatracker.ietf.org/doc/html/rfc3986#section-2.2
-    return urlquote(url, safe=":/?#[]@!$&'()*+,;=")
+    return urlquote(url, safe=":/?#[]@!$&'()*+,;=<>")
 
 
 # modified from flask_security.utils.get_post_action_redirect
diff --git a/requirements.txt b/requirements.txt
index e9c16cf8..9d779e30 100644
--- a/requirements.txt
+++ b/requirements.txt
@@ -18,6 +18,7 @@ flask_migrate==2.7.0
 flask-oauthlib==0.9.5
 flask-principal==0.4.0
 flask-session==0.3.2
+flask-sqlalchemy==2.5.1
 flask-sqlalchemy-unchained==0.7.4
 flask_wtf==0.14.3
 graphene==2.1.8
diff --git a/tests/bundles/controller/test_utils.py b/tests/bundles/controller/test_utils.py
index ca114690..2f74e61e 100644
--- a/tests/bundles/controller/test_utils.py
+++ b/tests/bundles/controller/test_utils.py
@@ -190,6 +190,9 @@ class TestValidateRedirectUrl:
     def test_it_fails_on_garbage(self):
         assert _validate_redirect_url(None) is False
         assert _validate_redirect_url(' ') is False
+        assert _validate_redirect_url('///evil.com') is False
+        assert _validate_redirect_url('\\\\\\evil.com') is False
+        assert _validate_redirect_url('\x00evil.com') is False
 
     def test_it_fails_with_invalid_netloc(self, app, monkeypatch):
         with app.test_request_context():
@@ -197,17 +200,30 @@ def test_it_fails_with_invalid_netloc(self, app, monkeypatch):
             assert _validate_redirect_url('http://fail.com') is False
             monkeypatch.undo()
 
-    @pytest.mark.options(EXTERNAL_SERVER_NAME='works.com')
+    def test_it_requires_same_scheme(self, app, monkeypatch):
+        with app.test_request_context():
+            monkeypatch.setattr('flask.request.host_url', 'https://example.com')
+            assert _validate_redirect_url('http://example.com/foo') is False
+            monkeypatch.undo()
+
+    @pytest.mark.options(EXTERNAL_SERVER_NAME='http://works.com')
     def test_it_works_with_external_server_name(self, app, monkeypatch):
         with app.test_request_context():
             monkeypatch.setattr('flask.request.host_url', 'http://example.com')
             assert _validate_redirect_url('http://works.com') is True
             monkeypatch.undo()
 
+    @pytest.mark.options(EXTERNAL_SERVER_NAME='https://works.com')
+    def test_it_requires_same_external_server_name_scheme(self, app, monkeypatch):
+        with app.test_request_context():
+            monkeypatch.setattr('flask.request.host_url', 'http://example.com')
+            assert _validate_redirect_url('http://works.com') is False
+            monkeypatch.undo()
+
     def test_it_works_with_explicit_external_host(self, app, monkeypatch):
         with app.test_request_context():
             monkeypatch.setattr('flask.request.host_url', 'http://example.com')
             result = _validate_redirect_url('http://works.com',
-                                            _external_host='works.com')
+                                            _external_host='http://works.com')
             assert result is True
             monkeypatch.undo()
