diff --git a/lib/filters.js b/lib/filters.js
index f94091bae..af37378de 100755
--- a/lib/filters.js
+++ b/lib/filters.js
@@ -66,9 +66,9 @@ exports.to_display = function (input) {
     && input._id
   ) {
     retHTML += '<div class="tooDamnBig" doc_id="' + encodeURIComponent(JSON.stringify(input._id)) + '" '
-      + 'doc_prop="' + input.attribu + '" title="Max prop size: ' + input.maxSize + '">';
+      + 'doc_prop="' + entifyGTLTAmp(input.attribu) + '" title="Max prop size: ' + input.maxSize + '">';
     retHTML += input.display + '<br>~' + input.humanSz;
-    retHTML += '<br>Preview:' + input.preview;
+    retHTML += '<br>Preview:' + entifyGTLTAmp(input.preview);
     retHTML += '<br>Click to fetch this property';
     retHTML += '</div>';
     return retHTML;
@@ -87,9 +87,9 @@ exports.to_display = function (input) {
     && input._id
   ) {
     retHTML += '<div class="tooDamnBig" doc_id="' + encodeURIComponent(JSON.stringify(input._id)) + '" '
-      + 'doc_prop="' + input.attribu + '" title="Max row size: ' + input.maxSize + '">';
-    retHTML += input.display + '<br>' + input.attribu + ': ~' + input.humanSz;
-    retHTML += '<br>Preview:' + input.preview;
+      + 'doc_prop="' + entifyGTLTAmp(input.attribu) + '" title="Max row size: ' + input.maxSize + '">';
+    retHTML += input.display + '<br>' + entifyGTLTAmp(input.attribu) + ': ~' + input.humanSz;
+    retHTML += '<br>Preview:' +  entifyGTLTAmp(input.preview);
     retHTML += '<br>Click to fetch this property';
     retHTML += '</div>';
     return retHTML;
@@ -105,7 +105,7 @@ exports.to_display = function (input) {
       || input.substr(0, 23) === 'data:image/jpeg;base64,'
     )
   )  {
-    return '<img src="' + input + '" style="max-height:100%; max-width:100%; "/>';
+    return '<img src="' + entifyGTLTAmp(input) + '" style="max-height:100%; max-width:100%; "/>';
   }
 
   // Audio inline
@@ -116,7 +116,7 @@ exports.to_display = function (input) {
       || input.substr(0, 22) === 'data:audio/mp3;base64,'
     )
   )  {
-    return '<audio controls style="width:45px;" src="' + input + '">Your browser does not support the audio element.</audio>';
+    return '<audio controls style="width:45px;" src="' + entifyGTLTAmp(input) + '">Your browser does not support the audio element.</audio>';
   }
 
   // Video inline
@@ -128,7 +128,8 @@ exports.to_display = function (input) {
       ||  input.substr(0, 22) === 'data:video/ogv;base64,'
     )
   )  {
-    return '<video controls><source type="' + input.substring(input.indexOf(':') + 1, input.indexOf(';')) + '" src="' + input + '"/>'
+    const videoFormat = input.match(/^data:(.*);base64/)[1];
+    return '<video controls><source type="' + videoFormat + '" src="' + entifyGTLTAmp(input) + '"/>'
       + 'Your browser does not support the video element.</video>';
   }
 
diff --git a/lib/scripts/collection.js b/lib/scripts/collection.js
index 5a3ff5782..98d72ee4e 100644
--- a/lib/scripts/collection.js
+++ b/lib/scripts/collection.js
@@ -1,6 +1,7 @@
 import $ from 'jquery';
 import renderjson from 'renderjson';
 import CodeMirror from './codeMirrorLoader';
+import escapeHtml from './escapeHtml';
 
 function getParameterByName(name) {
   name = name.replace(/\[/, '\\[').replace(/[\]]/, '\\]');
@@ -137,7 +138,7 @@ $(() => {
     // Set the element with spinner for now
     target.html(spinner);
 
-    $.get(`${makeCollectionUrl()}${encodeURIComponent(_id)}/${prop}`, function (input) {
+    function renderProp(input) {
       // Images inline
       if (
         typeof input === 'string'
@@ -148,7 +149,7 @@ $(() => {
           || input.substr(0, 23) === 'data:image/jpeg;base64,'
         )
       )  {
-        input = '<img src="' + input + '" style="max-height:100%; max-width:100%; "/>';
+        return `<img src="${escapeHtml(input)}" style="max-height:100%; max-width:100%; "/>`;
       }
 
       // Audio inline
@@ -160,7 +161,7 @@ $(() => {
           || input.substr(0, 22) === 'data:audio/mp3;base64,'
         )
       )  {
-        input = '<audio controls style="width:45px;" src="' + input + '">Your browser does not support the audio element.</audio>';
+        return `<audio controls style="width:45px;" src="${escapeHtml(input)}">Your browser does not support the audio element.</audio>`;
       }
 
       // Video inline
@@ -172,16 +173,22 @@ $(() => {
           ||  input.substr(0, 22) === 'data:video/ogv;base64,'
         )
       )  {
-        input = '<video controls><source type="' + input.substring(input.indexOf(':') + 1, input.indexOf(';')) + '" src="' + input + '"/>'
-          + 'Your browser does not support the video element.</video>';
+        const videoFormat = input.match(/^data:(.*);base64/)[1];
+        return `<video controls><source type="${escapeHtml(videoFormat)}" src="${escapeHtml(input)}"/>
+          + 'Your browser does not support the video element.</video>`;
       }
-
       if (typeof input === 'object' && (input.toString() === '[object Object]' || input.toString().substr(0, 7) === '[object')) {
-        input = renderjson(input);
+        return renderjson(input);
       }
 
+      // treat unknown data as escaped string
+      return escapeHtml(input.toString());
+    }
+
+    $.get(`${makeCollectionUrl()}${encodeURIComponent(_id)}/${prop}`, function (prop) {
+      prop = renderProp(prop);
       // Set the element with gotten datas
-      target.parent().html(input);
+      target.parent().html(prop);
 
       // Set original scroll position
       $('.tableWrapper').scrollLeft(leftScroll);
diff --git a/lib/scripts/escapeHtml.js b/lib/scripts/escapeHtml.js
new file mode 100644
index 000000000..026c8e0d6
--- /dev/null
+++ b/lib/scripts/escapeHtml.js
@@ -0,0 +1,8 @@
+export default function (html) {
+  // Turn < ? > into HTML entities, so data doesn't get interpreted by the browser
+  return html.replace(/&/g, '&amp;')
+    .replace(/</g, '&lt;')
+    .replace(/>/g, '&gt;')
+    .replace(/"/g, '&quot;')
+    .replace(/'/g, '&apos;');
+}
