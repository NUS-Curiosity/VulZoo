diff --git a/CHANGELOG.md b/CHANGELOG.md
index b3e310f..af5eae1 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -2,6 +2,10 @@
 
 ## [Unreleased]
 
+### Fixed
+
+- Fix performance issues of tags in `<blockquote>`
+
 ## v4.5.0 - 2021-12-02
 
 ### Added
diff --git a/src/mrkdwn/escape.ts b/src/mrkdwn/escape.ts
index c6634e8..5702c5f 100644
--- a/src/mrkdwn/escape.ts
+++ b/src/mrkdwn/escape.ts
@@ -8,9 +8,8 @@ const generateReplacerForEscape = (fallback: string) => (matched: string) =>
 export const escapeReplacers = {
   blockquote: (partial: string) =>
     partial
-      .replace(
-        /^((?:<.*?>)*)(&gt;)/gm,
-        (_, leading, character) => `${leading}\u00ad${character}`
+      .replace(/^((?:<.*?>)*)(.{4})/gm, (matched, leading, character) =>
+        character === '&gt;' ? `${leading}\u00ad&gt;` : matched
       )
       .replace(
         /^((?:<.*?>)*)(ï¼ž)/gm,
diff --git a/test/mrkdwn.tsx b/test/mrkdwn.tsx
index a4cc086..f6e4e60 100644
--- a/test/mrkdwn.tsx
+++ b/test/mrkdwn.tsx
@@ -587,6 +587,21 @@ describe('HTML parser for mrkdwn', () => {
       ).toBe('&gt; *A*\n&gt; \n&gt; *_B_*\n&gt; \n&gt; *C*\n&gt; ')
     })
 
+    it('renders many tags in the blockquote tag immediately', () => {
+      const startTime = Date.now()
+
+      mrkdwn(
+        <blockquote>
+          {[...Array(30)].map((_, i) => (
+            <b>{i}</b>
+          ))}
+        </blockquote>
+      )
+
+      const processTime = Date.now() - startTime
+      expect(processTime).toBeLessThan(1000)
+    })
+
     it('ignores invalid double markup', () =>
       expect(
         mrkdwn(
