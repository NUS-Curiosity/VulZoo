diff --git a/app/controllers/notifications_controller.rb b/app/controllers/notifications_controller.rb
index 29c7e6d19a..7bbfbc0b25 100644
--- a/app/controllers/notifications_controller.rb
+++ b/app/controllers/notifications_controller.rb
@@ -47,7 +47,9 @@ def render_notification(notification)
     uniqueid = notification[:uniqueid]
     data = convert_to_hash(notification[:data])
     # In case data[:name] is invalid
-    data[:email] = User.find(data[:user_id]).email
+    if data[:user_id]
+      data[:email] = User.find(data[:user_id]).email
+    end
     case data[:type]
     when /comment/ then comment_link(uniqueid, data)
     when /accepted_ally_request/ then accepted_ally_link(uniqueid, data)
diff --git a/app/helpers/comments_helper.rb b/app/helpers/comments_helper.rb
index 6f7b0ef1be..3b8660f2b8 100644
--- a/app/helpers/comments_helper.rb
+++ b/app/helpers/comments_helper.rb
@@ -42,6 +42,7 @@ def comment_hash(comment, user)
       commentByUid: user.uid,
       commentByName: user.name,
       commentByAvatar: user.avatar.url,
+      commentByAdmin: user.admin?,
       comment: sanitize(comment.comment),
       viewers: CommentViewersService.viewers(comment, current_user),
       createdAt: created_at(comment.created_at),
diff --git a/app/views/allies/index.html.erb b/app/views/allies/index.html.erb
index f0cd50e982..c48fc48cb2 100644
--- a/app/views/allies/index.html.erb
+++ b/app/views/allies/index.html.erb
@@ -56,9 +56,11 @@
           <div>
             <%= link_to t('common.actions.remove'), remove_allies_path(ally_id: ally.id), method: :post, data: { confirm: t('common.actions.confirm') } %>
           </div>
-          <div>
-            <%= link_to t('common.actions.report'), new_report_path(uid: ally.uid) %>
-          </div>
+          <% if !ally.admin? && ally != current_user %>
+            <div>
+              <%= link_to t('common.actions.report'), new_report_path(uid: ally.uid) %>
+            </div>
+          <% end %>
         </div>
       <% end %>
     </div>
diff --git a/app/views/profile/index.html.erb b/app/views/profile/index.html.erb
index d432265510..c6ccf604e6 100644
--- a/app/views/profile/index.html.erb
+++ b/app/views/profile/index.html.erb
@@ -26,9 +26,11 @@
         <div>
           <%= link_to t('common.actions.remove'), remove_allies_path(ally_id: @profile.id), method: :post, data: { confirm: t('common.actions.confirm') } %>
         </div>
-        <div>
-          <%= link_to t('common.actions.report'), new_report_path(uid: @profile.uid) %>
-        </div>
+        <% if !@profile.admin? && @profile != current_user %>
+          <div>
+            <%= link_to t('common.actions.report'), new_report_path(uid: @profile.uid) %>
+          </div>
+        <% end %>
       <% elsif current_user.allies_by_status(:pending_from_user).include? @profile %>
         <div>
           <%= link_to t('allies.accept'), add_allies_path(ally_id: @profile.id), method: :post %> | <%= link_to t('allies.reject'), remove_allies_path(ally_id: @profile.id), method: :post, data: { confirm: t('common.actions.confirm') } %>
@@ -39,7 +41,7 @@
         </div>
       <% end %>
     <% end %>
-    <% if current_user.admin? %>
+    <% if @profile != current_user && current_user.admin? %>
       <% if @profile.banned? %>
         <div>
           <%= link_to t('reports.remove_ban'), remove_ban_profile_index_path(user_id: @profile.id), method: :post %>
diff --git a/app/views/search/index.html.erb b/app/views/search/index.html.erb
index e43611e753..82ae99a38f 100644
--- a/app/views/search/index.html.erb
+++ b/app/views/search/index.html.erb
@@ -15,9 +15,11 @@
             <div>
               <%= link_to t('common.actions.remove'), remove_allies_path(ally_id: user.id), method: :post, data: { confirm: t('common.actions.confirm') } %>
             </div>
-            <div>
-              <%= link_to t('common.actions.report'), new_report_path(uid: user.uid) %>
-            </div>
+            <% if !user.admin? && user != current_user %>
+              <div>
+                <%= link_to t('common.actions.report'), new_report_path(uid: user.uid) %>
+              </div>
+            <% end %>
           <% else %>
             <%= link_to t('allies.add_ally'), add_allies_path(ally_id: user.id), method: :post %>
           <% end %>
diff --git a/client/app/widgets/Comments/__tests__/Comments.spec.jsx b/client/app/widgets/Comments/__tests__/Comments.spec.jsx
index e308366144..2425114629 100644
--- a/client/app/widgets/Comments/__tests__/Comments.spec.jsx
+++ b/client/app/widgets/Comments/__tests__/Comments.spec.jsx
@@ -64,50 +64,92 @@ const value = 'Hey';
 
 const id = 1;
 
-const comment = {
+const getComment = ({ commentByAdmin } = {}) => ({
   comment: value,
-  currentUserId: 'some-uid',
+  currentUserUid: 'some-uid',
   commentByAvatar: null,
+  commentByAdmin: Boolean(commentByAdmin),
   commentByName: 'Kind Human',
   commentByUid: 'uid',
   createdAt: 'Created less than a minute ago',
   deleteAction: '/comments/delete?comment_id=1',
   id,
   viewers: 'Visible only between you and Lane Kim',
-};
-
-const component = <Comments formProps={formProps} />;
+});
 
 describe('Comments', () => {
-  beforeEach(() => {
-    jest.spyOn(axios, 'post').mockResolvedValue({
-      data: { comment },
+  describe('when written by a non-admin user', () => {
+    it('renders correctly with a report link', () => {
+      render(<Comments formProps={formProps} comments={[getComment()]} />);
+      expect(screen.getByRole('textbox')).toBeInTheDocument();
+      expect(screen.getByRole('article')).toBeInTheDocument();
+      expect(
+        screen.getByRole('button', { name: 'Submit' }),
+      ).toBeInTheDocument();
+      expect(screen.getByRole('link', { name: 'Report' })).toBeInTheDocument();
     });
-    jest.spyOn(axios, 'delete').mockResolvedValue({
-      data: { id },
+
+    it('add and delete a comment', async () => {
+      jest.spyOn(axios, 'post').mockResolvedValue({
+        data: { comment: getComment() },
+      });
+      jest.spyOn(axios, 'delete').mockResolvedValue({
+        data: { id },
+      });
+      render(<Comments formProps={formProps} />);
+      expect(screen.queryByRole('article')).not.toBeInTheDocument();
+
+      userEvent.type(screen.getByRole('textbox'));
+      userEvent.selectOptions(screen.getByRole('combobox'), 'private');
+      userEvent.click(screen.getByRole('button', { name: 'Submit' }));
+
+      await waitFor(() => expect(screen.getByRole('article')).toBeInTheDocument());
+      expect(screen.getByRole('article')).toHaveTextContent('Hey');
+
+      userEvent.click(screen.getByRole('link', { name: 'Delete' }));
+
+      await waitFor(() => expect(screen.queryByRole('article')).not.toBeInTheDocument());
     });
   });
 
-  it('renders correctly', () => {
-    render(component);
-    expect(screen.getByRole('textbox')).toBeInTheDocument();
-    expect(screen.queryByRole('article')).not.toBeInTheDocument();
-    expect(screen.getByRole('button', { name: 'Submit' })).toBeInTheDocument();
-  });
+  describe('when written by an admin user', () => {
+    it('renders correctly without a report link', () => {
+      render(
+        <Comments
+          formProps={formProps}
+          comments={[getComment({ commentByAdmin: true })]}
+        />,
+      );
+      expect(screen.getByRole('textbox')).toBeInTheDocument();
+      expect(screen.getByRole('article')).toBeInTheDocument();
+      expect(
+        screen.getByRole('button', { name: 'Submit' }),
+      ).toBeInTheDocument();
+      expect(
+        screen.queryByRole('link', { name: 'Report' }),
+      ).not.toBeInTheDocument();
+    });
 
-  it('add and delete a comment', async () => {
-    render(component);
-    expect(screen.queryByRole('article')).not.toBeInTheDocument();
+    it('add and delete a comment', async () => {
+      jest.spyOn(axios, 'post').mockResolvedValue({
+        data: { comment: getComment({ commentByAdmin: true }) },
+      });
+      jest.spyOn(axios, 'delete').mockResolvedValue({
+        data: { id },
+      });
+      render(<Comments formProps={formProps} />);
+      expect(screen.queryByRole('article')).not.toBeInTheDocument();
 
-    userEvent.type(screen.getByRole('textbox'));
-    userEvent.selectOptions(screen.getByRole('combobox'), 'private');
-    userEvent.click(screen.getByRole('button', { name: 'Submit' }));
+      userEvent.type(screen.getByRole('textbox'));
+      userEvent.selectOptions(screen.getByRole('combobox'), 'private');
+      userEvent.click(screen.getByRole('button', { name: 'Submit' }));
 
-    await waitFor(() => expect(screen.getByRole('article')).toBeInTheDocument());
-    expect(screen.getByRole('article')).toHaveTextContent('Hey');
+      await waitFor(() => expect(screen.getByRole('article')).toBeInTheDocument());
+      expect(screen.getByRole('article')).toHaveTextContent('Hey');
 
-    userEvent.click(screen.getByRole('link', { name: 'Delete' }));
+      userEvent.click(screen.getByRole('link', { name: 'Delete' }));
 
-    await waitFor(() => expect(screen.queryByRole('article')).not.toBeInTheDocument());
+      await waitFor(() => expect(screen.queryByRole('article')).not.toBeInTheDocument());
+    });
   });
 });
diff --git a/client/app/widgets/Comments/index.jsx b/client/app/widgets/Comments/index.jsx
index 5edddcaa3c..65fa406936 100644
--- a/client/app/widgets/Comments/index.jsx
+++ b/client/app/widgets/Comments/index.jsx
@@ -24,6 +24,7 @@ type Comment = {
   commentByUid: string,
   commentByName: string,
   commentByAvatar?: string,
+  commentByAdmin: Boolean,
   comment: any,
   viewers?: string,
   createdAt: string,
@@ -68,9 +69,10 @@ export const Comments = ({ comments, formProps }: Props) => {
     currentUserUid: string,
     uid: string,
     id: number,
+    commentByAdmin: Boolean,
   ) => {
     const actions = {};
-    if (currentUserUid !== uid) {
+    if (currentUserUid !== uid && !commentByAdmin) {
       actions.report = reportAction(uid, id);
     }
     if (viewers) {
@@ -94,6 +96,7 @@ export const Comments = ({ comments, formProps }: Props) => {
       commentByUid,
       commentByName,
       commentByAvatar,
+      commentByAdmin,
       comment,
       viewers,
       createdAt,
@@ -113,6 +116,7 @@ export const Comments = ({ comments, formProps }: Props) => {
               currentUserUid,
               commentByUid,
               id,
+              commentByAdmin,
             )}
             hasStory
           />
diff --git a/spec/helpers/comments_helper_spec.rb b/spec/helpers/comments_helper_spec.rb
index 14d1fbb338..1b147f5ed5 100644
--- a/spec/helpers/comments_helper_spec.rb
+++ b/spec/helpers/comments_helper_spec.rb
@@ -32,6 +32,7 @@
                                                                                           commentByUid: user1.uid,
                                                                                           commentByName: user1.name,
                                                                                           commentByAvatar: user1.avatar.url,
+                                                                                          commentByAdmin: false,
                                                                                           comment: comment,
                                                                                           createdAt: created_at,
                                                                                           viewers: nil,
@@ -47,6 +48,7 @@
                                                                                           commentByUid: user1.uid,
                                                                                           commentByName: user1.name,
                                                                                           commentByAvatar: user1.avatar.url,
+                                                                                          commentByAdmin: false,
                                                                                           comment: comment,
                                                                                           createdAt: created_at,
                                                                                           viewers: "Visible only between you and #{user2.name}",
@@ -68,6 +70,7 @@
                                                                                           commentByUid: user2.uid,
                                                                                           commentByName: user2.name,
                                                                                           commentByAvatar: user2.avatar.url,
+                                                                                          commentByAdmin: false,
                                                                                           comment: comment,
                                                                                           createdAt: created_at,
                                                                                           viewers: nil,
@@ -83,6 +86,7 @@
                                                                                           commentByUid: user2.uid,
                                                                                           commentByName: user2.name,
                                                                                           commentByAvatar: user2.avatar.url,
+                                                                                          commentByAdmin: false,
                                                                                           comment: comment,
                                                                                           createdAt: created_at,
                                                                                           viewers: "Visible only between you and #{user1.name}",
@@ -108,6 +112,7 @@
                                                                                           commentByUid: user1.uid,
                                                                                           commentByName: user1.name,
                                                                                           commentByAvatar: user1.avatar.url,
+                                                                                          commentByAdmin: false,
                                                                                           comment: comment,
                                                                                           createdAt: created_at,
                                                                                           viewers: nil,
@@ -123,6 +128,7 @@
                                                                                           commentByUid: user1.uid,
                                                                                           commentByName: user1.name,
                                                                                           commentByAvatar: user1.avatar.url,
+                                                                                          commentByAdmin: false,
                                                                                           comment: comment,
                                                                                           createdAt: created_at,
                                                                                           viewers: "Visible only between you and #{user2.name}",
@@ -144,6 +150,7 @@
                                                                                           commentByUid: user2.uid,
                                                                                           commentByName: user2.name,
                                                                                           commentByAvatar: user2.avatar.url,
+                                                                                          commentByAdmin: false,
                                                                                           comment: comment,
                                                                                           createdAt: created_at,
                                                                                           viewers: nil,
@@ -159,6 +166,7 @@
                                                                                           commentByUid: user2.uid,
                                                                                           commentByName: user2.name,
                                                                                           commentByAvatar: user2.avatar.url,
+                                                                                          commentByAdmin: false,
                                                                                           comment: comment,
                                                                                           createdAt: created_at,
                                                                                           viewers: "Visible only between you and #{user1.name}",
@@ -186,6 +194,7 @@
                                                                                           commentByUid: user1.uid,
                                                                                           commentByName: user1.name,
                                                                                           commentByAvatar: user1.avatar.url,
+                                                                                          commentByAdmin: false,
                                                                                           comment: comment,
                                                                                           createdAt: created_at,
                                                                                           viewers: nil,
@@ -204,6 +213,7 @@
                                                                                           commentByUid: user2.uid,
                                                                                           commentByName: user2.name,
                                                                                           commentByAvatar: user2.avatar.url,
+                                                                                          commentByAdmin: false,
                                                                                           comment: comment,
                                                                                           createdAt: created_at,
                                                                                           viewers: nil,
