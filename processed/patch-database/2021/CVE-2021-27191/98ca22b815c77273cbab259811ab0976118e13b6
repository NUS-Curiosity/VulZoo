diff --git a/index.test.ts b/index.test.ts
index 339c16b..29e2c93 100644
--- a/index.test.ts
+++ b/index.test.ts
@@ -91,4 +91,16 @@ describe('for two IP addresses', () => {
   it('should support hyphenated range in IPv5', () => {
     expect(getIPRange('::ffff:102:304-::ffff:102:307')).toEqual(successResponsev6);
   });
+
+  it('should throw if the range is greater than 10000 default', () => {
+    const throwFn = () => getIPRange('128.0.0.0/1');
+    expect(throwFn).toThrow('Too many IPs in range. Total number: 2147483647. Max count is 10000, to increase, set the limit with the MAX_RANGE environment variable');
+  });
+
+  it('should throw if the range is greater than process.env.MAX_RANGE', () => {
+    process.env.MAX_RANGE = '5000';
+
+    const throwFn = () => getIPRange('128.0.0.0/1');
+    expect(throwFn).toThrow('Too many IPs in range. Total number: 2147483647. Max count is 5000, to increase, set the limit with the MAX_RANGE environment variable');
+  });
 });
diff --git a/index.ts b/index.ts
index 369bab1..14d5ac3 100644
--- a/index.ts
+++ b/index.ts
@@ -2,6 +2,9 @@ import { toLong, fromLong } from 'ip';
 // @ts-ignore
 import { Address4, Address6 } from 'ip-address';
 
+// Set default max range
+let maxRange = 10000;
+
 const getIPv4 = (ip: string): Address4 | null => {
   try {
     return new Address4(ip);
@@ -24,6 +27,13 @@ const getRangev4 = (ip1: string, ip2: string) => {
   let firstAddressLong = toLong(ip1);
   const lastAddressLong = toLong(ip2);
 
+  const totalIPs = lastAddressLong - firstAddressLong;
+
+  // Prevent DoS
+  if (totalIPs > maxRange) {
+    throw new Error(`Too many IPs in range. Total number: ${totalIPs}. Max count is ${maxRange}, to increase, set the limit with the MAX_RANGE environment variable`)
+  }
+
   for (firstAddressLong; firstAddressLong <= lastAddressLong; firstAddressLong++)
     ips.push(fromLong(firstAddressLong));
 
@@ -48,6 +58,8 @@ const isCIDR = (ipCIDR: Address4 | Address6): boolean => Boolean(ipCIDR.parsedSu
 const isRange = (ipRange: string): boolean => ipRange.indexOf('-') !== -1;
 
 const getIPRange = (ip1: string, ip2?: string): Array<string> => {
+  maxRange = parseInt(process.env.MAX_RANGE || '10000');
+
   const ip1v4 = getIPv4(ip1);
   const ip1v6 = getIPv6(ip1);
 
