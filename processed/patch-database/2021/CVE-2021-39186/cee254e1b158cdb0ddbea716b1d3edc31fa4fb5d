diff --git a/extension.json b/extension.json
index f940a35..4ea9b5c 100644
--- a/extension.json
+++ b/extension.json
@@ -41,7 +41,12 @@
 		"GlobalNewFilesMoveJob": "GlobalNewFilesMoveJob"
 	},
 	"SpecialPages": {
-		"GlobalNewFiles": "SpecialGlobalNewFiles"
+		"GlobalNewFiles": {
+			"class": "SpecialGlobalNewFiles",
+			"services": [
+				"LinkRenderer"
+			]
+		}
 	},
 	"Hooks": {
 		"CreateWikiTables": [
diff --git a/includes/GlobalNewFilesHooks.php b/includes/GlobalNewFilesHooks.php
index 51f5315..fed9dab 100644
--- a/includes/GlobalNewFilesHooks.php
+++ b/includes/GlobalNewFilesHooks.php
@@ -42,7 +42,7 @@ public static function onLoadExtensionSchemaUpdates( DatabaseUpdater $updater )
 			$updater->modifyExtensionField(
 				'gnf_files',
 				'files_timestamp',
-				__DIR__ . '/../sql/patches/patch-gnf_files-binary.sql' 
+				__DIR__ . '/../sql/patches/patch-gnf_files-binary.sql'
 			);
 
 			$updater->modifyTable(
diff --git a/includes/GlobalNewFilesPager.php b/includes/GlobalNewFilesPager.php
index 7054852..0875a58 100644
--- a/includes/GlobalNewFilesPager.php
+++ b/includes/GlobalNewFilesPager.php
@@ -1,18 +1,24 @@
 <?php
 
+use MediaWiki\Linker\LinkRenderer;
 use MediaWiki\MediaWikiServices;
 
 class GlobalNewFilesPager extends TablePager {
-	function __construct() {
+	/** @var LinkRenderer */
+	private $linkRenderer;
+
+	function __construct( RequestContext $context, LinkRenderer $linkRenderer ) {
+		parent::__construct( $context );
+
+		$this->linkRenderer = $linkRenderer;
+
 		$this->mDb = GlobalNewFilesHooks::getGlobalDB( DB_REPLICA, 'gnf_files' );
 
-		if ( $this->getRequest()->getText( 'sort', 'files_date' ) == 'files_date' ) {
+		if ( $context->getRequest()->getText( 'sort', 'files_date' ) == 'files_date' ) {
 			$this->mDefaultDirection = IndexPager::DIR_DESCENDING;
 		} else {
 			$this->mDefaultDirection = IndexPager::DIR_ASCENDING;
 		}
-
-		parent::__construct( $this->getContext() );
 	}
 
 	function getFieldNames() {
@@ -36,8 +42,6 @@ function getFieldNames() {
 	function formatValue( $name, $value ) {
 		$row = $this->mCurrentRow;
 
-		$wiki = $row->files_dbname;
-
 		switch ( $name ) {
 			case 'files_timestamp':
 				$formatted = htmlspecialchars( $this->getLanguage()->userTimeAndDate( $row->files_timestamp, $this->getUser() ) );
@@ -46,13 +50,29 @@ function formatValue( $name, $value ) {
 				$formatted = $row->files_dbname;
 				break;
 			case 'files_url':
-				$formatted = "<img src=\"{$row->files_url}\" style=\"width:135px;height:135px;\">";
+				$formatted = Html::element(
+					'img',
+					[
+						'src' => $row->files_url,
+						'style' => 'width: 135px; height: 135px;'
+					]
+				);
 				break;
 			case 'files_name':
-				$formatted = "<a href=\"{$row->files_page}\">{$row->files_name}</a>";
+				$formatted = Html::element(
+					'a',
+					[
+						'href' => $row->files_page,
+					],
+					$row->files_name
+				);
+
 				break;
 			case 'files_user':
-				$formatted = "<a href=\"/wiki/Special:CentralAuth/{$row->files_user}\">{$row->files_user}</a>";
+				$formatted = $this->linkRenderer->makeLink(
+					SpecialPage::getTitleFor( 'CentralAuth', $row->files_user ),
+					$row->files_user
+				);
 				break;
 			default:
 				$formatted = "Unable to format $name";
diff --git a/includes/SpecialGlobalNewFiles.php b/includes/SpecialGlobalNewFiles.php
index ec36b9d..7b18d75 100644
--- a/includes/SpecialGlobalNewFiles.php
+++ b/includes/SpecialGlobalNewFiles.php
@@ -1,17 +1,22 @@
 <?php
 
+use MediaWiki\Linker\LinkRenderer;
+
 class SpecialGlobalNewFiles extends SpecialPage {
+	/** @var LinkRenderer */
+	private $linkRenderer;
 
-	function __construct() {
+	function __construct( LinkRenderer $linkRenderer ) {
 		parent::__construct( 'GlobalNewFiles' );
+		$this->linkRenderer = $linkRenderer;
 	}
 
 	function execute( $par ) {
 		$this->setHeaders();
 		$this->outputHeader();
 
-		$pager = new GlobalNewFilesPager();
-		
+		$pager = new GlobalNewFilesPager( $this->getContext(), $this->linkRenderer );
+
 		$this->getOutput()->addParserOutputContent( $pager->getFullOutput() );
 	}
 
