diff --git a/AjaxPro/Utilities/Constant.cs b/AjaxPro/Utilities/Constant.cs
index 42cf933..4b3c46c 100644
--- a/AjaxPro/Utilities/Constant.cs
+++ b/AjaxPro/Utilities/Constant.cs
@@ -52,6 +52,6 @@ public sealed class Constant
         /// <summary>
 		/// The assembly version.
 		/// </summary>
-        public const string AssemblyVersion = "21.12.21.2";
+        public const string AssemblyVersion = "21.12.22.1";
 	}
 }
diff --git a/AjaxPro/core.js b/AjaxPro/core.js
index dfe4698..aeeade2 100644
--- a/AjaxPro/core.js
+++ b/AjaxPro/core.js
@@ -179,7 +179,7 @@ Object.extend(AjaxPro, {
 			var d = date.match(/Date\((.*?)\)/)[1];
 			return "new Date(" + parseInt(d) + ")";
 		}
-		else { // ISO Date 2007-12-31T23:59:59Z                                     
+		/*else { // ISO Date 2007-12-31T23:59:59Z
 			var matches = date.split(/[-,:,T,Z]/);
 			if (matches.length == 7) {
 				matches[1] = (parseInt(matches[1], 0) - 1).toString();
@@ -194,21 +194,17 @@ Object.extend(AjaxPro, {
 						s += ",";
                     }
 					s += parseInt(matches[i], 10);
+					console.log(s);
 				}
 				if (isDate) {
 					return "new Date(Date.UTC(" + s + "))";
 				}
 			}
-		}
+		}*/
 		return str;
 	},
 	parse: function (text) {
-		// not yet possible as we still return new type() JSON
-		//		if (!(!(/[^,:{}\[\]0-9.\-+Eaeflnr-u \n\r\t]/.test(
-		//		text.replace(/"(\\.|[^"\\])*"/g, '')))  ))
-		//			throw new Error("Invalid characters in JSON parse string.");                 
-		var regEx = /(\"\d{4}-\d{2}-\d{2}T\d{2}:\d{2}.*?\")|(\"\\\/Date\(.*?\)\\\/")/g;
-		text = text.replace(regEx, this.regExDate);
+		text = text.replace(/(\"\\\/Date\(\d+\)\\\/")/g, this.regExDate);
 		return eval('(' + text + ')');
 	},
 	m: {
