diff --git a/lib/merge.js b/lib/merge.js
index c1bd798..dc465ce 100644
--- a/lib/merge.js
+++ b/lib/merge.js
@@ -33,7 +33,7 @@ function merge(target, source, options = {}) {
   const keys = Object.getOwnPropertyNames(source);
   keys.push(...Object.getOwnPropertySymbols(source));
   for (const key of keys) {
-    if (key === '__proto__')
+    if (key === '__proto__' || key === 'constructor')
       continue;
     if (options.filter && !options.filter(source, key))
       continue;
diff --git a/package.json b/package.json
index 67c44d1..6fb1340 100644
--- a/package.json
+++ b/package.json
@@ -19,9 +19,9 @@
     "object"
   ],
   "devDependencies": {
-    "eslint": "^7.19.0",
+    "eslint": "^8.8.0",
     "eslint-config-google": "^0.14.0",
-    "mocha": "^9.0.2",
+    "mocha": "^9.2.0",
     "nyc": "^15.1.0"
   },
   "engines": {
diff --git a/test/merge.js b/test/merge.js
index 11f30e8..3fa3ae9 100644
--- a/test/merge.js
+++ b/test/merge.js
@@ -237,11 +237,18 @@ describe('merge', function() {
     );
   });
 
-  it('should prevent Prototype Pollution vulnerability', function() {
+  it('should prevent Prototype Pollution vulnerability (__proto__)', function() {
     const payload = JSON.parse('{"__proto__":{"polluted":"Yes! Its Polluted"}}');
     const obj = {};
     merge(obj, payload, {deep: true});
     assert.strictEqual(obj.polluted, undefined);
   });
 
+  it('should prevent Prototype Pollution vulnerability (constructor)', function() {
+    const payload = JSON.parse('{"constructor": {"prototype": {"polluted": "yes"}}}');
+    let obj = {};
+    merge(obj, payload, {deep: true});
+    assert.strictEqual(obj.polluted, undefined);
+  });
+
 });
