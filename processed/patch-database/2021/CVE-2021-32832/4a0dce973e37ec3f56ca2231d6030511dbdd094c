diff --git a/.docker/Dockerfile.rhel b/.docker/Dockerfile.rhel
index d55091c02acd..5c2ddc556b6a 100644
--- a/.docker/Dockerfile.rhel
+++ b/.docker/Dockerfile.rhel
@@ -1,6 +1,6 @@
 FROM registry.access.redhat.com/ubi8/nodejs-12
 
-ENV RC_VERSION 3.11.2
+ENV RC_VERSION 3.11.3
 
 MAINTAINER buildmaster@rocket.chat
 
diff --git a/.github/history-manual.json b/.github/history-manual.json
index bc95e8c181b0..c0d533af0ec9 100644
--- a/.github/history-manual.json
+++ b/.github/history-manual.json
@@ -63,5 +63,21 @@
 		"contributors": [
 			"sampaiodiego"
 		]
+	}],
+	"3.11.3": [{
+		"title": "[FIX] Bump Livechat widget",
+		"userLogin": "sampaiodiego",
+		"contributors": [
+			"sampaiodiego"
+		]
+	}, {
+		"title": "[FIX] Security Hotfix (https://docs.rocket.chat/guides/security/security-updates)",
+		"userLogin": "sampaiodiego",
+		"contributors": [
+			"sampaiodiego",
+			"g-thome",
+			"KevLehman",
+			"matheusbsilva137"
+		]
 	}]
 }
diff --git a/.github/history.json b/.github/history.json
index 6146bb8c3014..b36d376fb784 100644
--- a/.github/history.json
+++ b/.github/history.json
@@ -55349,6 +55349,28 @@
           ]
         }
       ]
+    },
+    "3.10.6": {
+      "node_version": "12.18.4",
+      "npm_version": "6.14.8",
+      "apps_engine_version": "1.21.0-alpha.4235",
+      "mongo_versions": [
+        "3.4",
+        "3.6",
+        "4.0"
+      ],
+      "pull_requests": []
+    },
+    "3.11.3": {
+      "node_version": "12.18.4",
+      "npm_version": "6.14.8",
+      "apps_engine_version": "1.22.2",
+      "mongo_versions": [
+        "3.4",
+        "3.6",
+        "4.0"
+      ],
+      "pull_requests": []
     }
   }
 }
\ No newline at end of file
diff --git a/.github/workflows/build_and_test.yml b/.github/workflows/build_and_test.yml
index 27c376f35f62..fe8fdb71df65 100644
--- a/.github/workflows/build_and_test.yml
+++ b/.github/workflows/build_and_test.yml
@@ -381,6 +381,7 @@ jobs:
       env:
         AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
         AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
+        AWS_DEFAULT_REGION: 'us-east-1'
         GPG_PASSWORD: ${{ secrets.GPG_PASSWORD }}
         REDHAT_REGISTRY_PID: ${{ secrets.REDHAT_REGISTRY_PID }}
         REDHAT_REGISTRY_KEY: ${{ secrets.REDHAT_REGISTRY_KEY }}
diff --git a/.snapcraft/resources/prepareRocketChat b/.snapcraft/resources/prepareRocketChat
index e48d9bcd5e8a..4004f36f6293 100755
--- a/.snapcraft/resources/prepareRocketChat
+++ b/.snapcraft/resources/prepareRocketChat
@@ -1,6 +1,6 @@
 #!/bin/bash
 
-curl -SLf "https://releases.rocket.chat/3.11.2/download/" -o rocket.chat.tgz
+curl -SLf "https://releases.rocket.chat/3.11.3/download/" -o rocket.chat.tgz
 
 tar xf rocket.chat.tgz --strip 1
 
diff --git a/.snapcraft/snap/snapcraft.yaml b/.snapcraft/snap/snapcraft.yaml
index e27edb458392..7ae7e4fc61ab 100644
--- a/.snapcraft/snap/snapcraft.yaml
+++ b/.snapcraft/snap/snapcraft.yaml
@@ -7,7 +7,7 @@
 # 5.  `snapcraft snap`
 
 name: rocketchat-server
-version: 3.11.2
+version: 3.11.3
 summary: Rocket.Chat server
 description: Have your own Slack like online chat, built with Meteor. https://rocket.chat/
 confinement: strict
diff --git a/HISTORY.md b/HISTORY.md
index 8b38fbc88c86..4507c05ed588 100644
--- a/HISTORY.md
+++ b/HISTORY.md
@@ -1,6 +1,6 @@
 
-# 3.11.2
-`2021-02-28  ·  4 🐛  ·  4 👩‍💻👨‍💻`
+# 3.11.3
+`2021-03-26  ·  2 🐛  ·  4 👩‍💻👨‍💻`
 
 ### Engine versions
 - Node: `12.18.4`
@@ -11,8 +11,29 @@
 ### 🐛 Bug fixes
 
 
+- Bump Livechat widget
+
 - Security Hotfix (https://docs.rocket.chat/guides/security/security-updates)
 
+### 👩‍💻👨‍💻 Core Team 🤓
+
+- [@KevLehman](https://github.com/KevLehman)
+- [@g-thome](https://github.com/g-thome)
+- [@matheusbsilva137](https://github.com/matheusbsilva137)
+- [@sampaiodiego](https://github.com/sampaiodiego)
+
+# 3.11.2
+`2021-02-28  ·  4 🐛  ·  4 👩‍💻👨‍💻`
+
+### Engine versions
+- Node: `12.18.4`
+- NPM: `6.14.8`
+- MongoDB: `3.4, 3.6, 4.0`
+- Apps-Engine: `1.22.2`
+
+### 🐛 Bug fixes
+
+
 - External systems not being able to change Omnichannel Inquiry priorities  ([#20740](https://github.com/RocketChat/Rocket.Chat/pull/20740))
 
   Due to a wrong property name, external applications were not able to change the priority of Omnichannel Inquires.
@@ -23,6 +44,8 @@
 
   use correct permissions to check if room owner can override global retention policy
 
+- Security Hotfix (https://docs.rocket.chat/guides/security/security-updates)
+
 ### 👩‍💻👨‍💻 Core Team 🤓
 
 - [@g-thome](https://github.com/g-thome)
@@ -90,20 +113,18 @@
 
 - **ENTERPRISE:** Omnichannel Contact Manager as preferred agent for routing ([#20244](https://github.com/RocketChat/Rocket.Chat/pull/20244))
 
-  If the `Contact-Manager` is assigned to a Visitor, the chat will automatically get transferred to the respective Contact-Manager, provided the Contact-Manager is online. In-case the Contact-Manager is offline, the chat will be transferred to any other online agent.
-  We have provided a setting to control this auto-assignment feature
-  ![image](https://user-images.githubusercontent.com/34130764/104880961-8104d780-5986-11eb-9d87-82b99814b028.png)
-
-  Behavior based-on Routing method
-
-
-  1. Auto-selection, Load-Balancing, or External Service (`autoAssignAgent = true`)
-    This is straightforward,
-        - if the Contact-manager is online, the chat will be transferred to the Contact-Manger only
-        - if the Contact-manager is offline, the chat will be transferred to any other online-agent based on the Routing system
-
-  2. Manual-selection (`autoAssignAgent = false`)
-        - If the Contact-Manager is online, the chat will appear in the Queue of Contact-Manager **ONLY**
+  If the `Contact-Manager` is assigned to a Visitor, the chat will automatically get transferred to the respective Contact-Manager, provided the Contact-Manager is online. In-case the Contact-Manager is offline, the chat will be transferred to any other online agent.
+  We have provided a setting to control this auto-assignment feature
+  ![image](https://user-images.githubusercontent.com/34130764/104880961-8104d780-5986-11eb-9d87-82b99814b028.png)
+
+  Behavior based-on Routing method
+  
+  1. Auto-selection, Load-Balancing, or External Service (`autoAssignAgent = true`)
+    This is straightforward, 
+        - if the Contact-manager is online, the chat will be transferred to the Contact-Manger only
+        - if the Contact-manager is offline, the chat will be transferred to any other online-agent based on the Routing system  
+  2. Manual-selection (`autoAssignAgent = false`)
+        - If the Contact-Manager is online, the chat will appear in the Queue of Contact-Manager **ONLY**
         - If the Contact-Manager is offline, the chat will appear in the Queue of all related Agents/Manager ( like it's done right now )
 
 - Banner system and NPS ([#20221](https://github.com/RocketChat/Rocket.Chat/pull/20221))
@@ -112,34 +133,34 @@
 
 - Email Inboxes for Omnichannel ([#20101](https://github.com/RocketChat/Rocket.Chat/pull/20101))
 
-  With this new feature, email accounts will receive email messages(threads) which will be transformed into Omnichannel chats. It'll be possible to set up multiple email accounts, test the connection with email server(email provider) and define the behaviour of each account.
-
-  https://user-images.githubusercontent.com/2493803/105430398-242d4980-5c32-11eb-835a-450c94837d23.mp4
-
-  ### New item on admin menu
-
-  ![image](https://user-images.githubusercontent.com/2493803/105428723-bc293400-5c2e-11eb-8c02-e8d36ea82726.png)
-
-
-  ### Send test email tooltip
-
-  ![image](https://user-images.githubusercontent.com/2493803/104366986-eaa16380-54f8-11eb-9ba7-831cfde2319c.png)
-
-
-  ### Inbox Info
-
-  ![image](https://user-images.githubusercontent.com/2493803/104366796-ab731280-54f8-11eb-9941-a3cc8eb610e1.png)
-
-  ### SMTP Info
-
-  ![image](https://user-images.githubusercontent.com/2493803/104366868-c47bc380-54f8-11eb-969e-ccc29070957c.png)
-
-  ### IMAP Info
-
-  ![image](https://user-images.githubusercontent.com/2493803/104366897-cd6c9500-54f8-11eb-80c4-97d5b0c002d5.png)
-
-  ### Messages
-
+  With this new feature, email accounts will receive email messages(threads) which will be transformed into Omnichannel chats. It'll be possible to set up multiple email accounts, test the connection with email server(email provider) and define the behaviour of each account.
+
+  https://user-images.githubusercontent.com/2493803/105430398-242d4980-5c32-11eb-835a-450c94837d23.mp4
+
+  ### New item on admin menu
+
+  ![image](https://user-images.githubusercontent.com/2493803/105428723-bc293400-5c2e-11eb-8c02-e8d36ea82726.png)
+
+
+  ### Send test email tooltip
+
+  ![image](https://user-images.githubusercontent.com/2493803/104366986-eaa16380-54f8-11eb-9ba7-831cfde2319c.png)
+
+
+  ### Inbox Info
+
+  ![image](https://user-images.githubusercontent.com/2493803/104366796-ab731280-54f8-11eb-9941-a3cc8eb610e1.png)
+
+  ### SMTP Info
+
+  ![image](https://user-images.githubusercontent.com/2493803/104366868-c47bc380-54f8-11eb-969e-ccc29070957c.png)
+
+  ### IMAP Info
+
+  ![image](https://user-images.githubusercontent.com/2493803/104366897-cd6c9500-54f8-11eb-80c4-97d5b0c002d5.png)
+
+  ### Messages
+
   ![image](https://user-images.githubusercontent.com/2493803/105428971-45d90180-5c2f-11eb-992a-022a3df94471.png)
 
 - Encrypted Discussions and new Encryption Permissions ([#20201](https://github.com/RocketChat/Rocket.Chat/pull/20201))
@@ -151,7 +172,7 @@
 
 - Add extra SAML settings to update room subs and add private room subs. ([#19489](https://github.com/RocketChat/Rocket.Chat/pull/19489) by [@tlskinneriv](https://github.com/tlskinneriv))
 
-  Added a SAML setting to support updating room subscriptions each time a user logs in via SAML.
+  Added a SAML setting to support updating room subscriptions each time a user logs in via SAML.
   Added a SAML setting to support including private rooms in SAML updated subscriptions (whether initial or on each logon).
 
 - Autofocus on directory ([#20509](https://github.com/RocketChat/Rocket.Chat/pull/20509))
@@ -178,7 +199,7 @@
 
 - Tooltip added for Kebab menu on chat header ([#20116](https://github.com/RocketChat/Rocket.Chat/pull/20116) by [@yash-rajpal](https://github.com/yash-rajpal))
 
-  Added the missing Tooltip for kebab menu on chat header.
+  Added the missing Tooltip for kebab menu on chat header.
   ![tooltip after](https://user-images.githubusercontent.com/58601732/104031406-b07f4b80-51f2-11eb-87a4-1e8da78a254f.gif)
 
 ### 🐛 Bug fixes
@@ -200,7 +221,7 @@
 
 - Added context check for closing active tabbar for member-list ([#20228](https://github.com/RocketChat/Rocket.Chat/pull/20228) by [@yash-rajpal](https://github.com/yash-rajpal))
 
-  When we click on a username and then click on see user's full profile, a tab gets active and shows us the user's profile, the problem occurs when the tab is still active and we try to see another user's profile. In this case, tabbar gets closed.
+  When we click on a username and then click on see user's full profile, a tab gets active and shows us the user's profile, the problem occurs when the tab is still active and we try to see another user's profile. In this case, tabbar gets closed.
   To resolve this, added context check for closing action of active tabbar.
 
 - Added Margin between status bullet and status label ([#20199](https://github.com/RocketChat/Rocket.Chat/pull/20199) by [@yash-rajpal](https://github.com/yash-rajpal))
@@ -209,8 +230,8 @@
 
 - Added success message on saving notification preference. ([#20220](https://github.com/RocketChat/Rocket.Chat/pull/20220) by [@Darshilp326](https://github.com/Darshilp326))
 
-  Added success message after saving notification preferences.
-
+  Added success message after saving notification preferences.
+
   https://user-images.githubusercontent.com/55157259/104774617-03ca3e80-579d-11eb-8fa4-990b108dd8d9.mp4
 
 - Admin User Info email verified status ([#20110](https://github.com/RocketChat/Rocket.Chat/pull/20110) by [@bdelwood](https://github.com/bdelwood))
@@ -219,10 +240,10 @@
 
 - Change header's favorite icon to filled star ([#20174](https://github.com/RocketChat/Rocket.Chat/pull/20174))
 
-  ### Before:
-  ![image](https://user-images.githubusercontent.com/27704687/104351819-a60bcd00-54e4-11eb-8b43-7d281a6e5dcb.png)
-
-  ### After:
+  ### Before: 
+  ![image](https://user-images.githubusercontent.com/27704687/104351819-a60bcd00-54e4-11eb-8b43-7d281a6e5dcb.png)
+
+  ### After:
   ![image](https://user-images.githubusercontent.com/27704687/104351632-67761280-54e4-11eb-87ba-25b940494bb5.png)
 
 - Changed success message for adding custom sound. ([#20272](https://github.com/RocketChat/Rocket.Chat/pull/20272) by [@Darshilp326](https://github.com/Darshilp326))
@@ -231,24 +252,24 @@
 
 - Changed success message for ignoring member. ([#19996](https://github.com/RocketChat/Rocket.Chat/pull/19996) by [@Darshilp326](https://github.com/Darshilp326))
 
-  Different messages for ignoring/unignoring will be displayed.
-
+  Different messages for ignoring/unignoring will be displayed.
+
   https://user-images.githubusercontent.com/55157259/103310307-4241c880-4a3d-11eb-8c6c-4c9b99d023db.mp4
 
 - Creation of Omnichannel rooms not working correctly through the Apps when the agent parameter is set ([#19997](https://github.com/RocketChat/Rocket.Chat/pull/19997))
 
 - Engagement dashboard graphs labels superposing each other ([#20267](https://github.com/RocketChat/Rocket.Chat/pull/20267))
 
-  Now after a certain breakpoint, the graphs should stack vertically, and overlapping text rotated.
-
+  Now after a certain breakpoint, the graphs should stack vertically, and overlapping text rotated.
+
   ![image](https://user-images.githubusercontent.com/40830821/105098926-93b40500-5a89-11eb-9a56-2fc3b1552914.png)
 
 - Fields overflowing page ([#20287](https://github.com/RocketChat/Rocket.Chat/pull/20287))
 
-  ### Before
-  ![image](https://user-images.githubusercontent.com/40830821/105246952-c1b14c00-5b52-11eb-8671-cff88edf242d.png)
-
-  ### After
+  ### Before
+  ![image](https://user-images.githubusercontent.com/40830821/105246952-c1b14c00-5b52-11eb-8671-cff88edf242d.png)
+
+  ### After
   ![image](https://user-images.githubusercontent.com/40830821/105247125-0a690500-5b53-11eb-9f3c-d6a68108e336.png)
 
 - Fix error that occurs on changing archive status of room ([#20098](https://github.com/RocketChat/Rocket.Chat/pull/20098) by [@aKn1ghtOut](https://github.com/aKn1ghtOut))
@@ -265,7 +286,7 @@
 
 - Livechat.RegisterGuest method removing unset fields ([#20124](https://github.com/RocketChat/Rocket.Chat/pull/20124))
 
-  After changes made on https://github.com/RocketChat/Rocket.Chat/pull/19931, the `Livechat.RegisterGuest` method started removing properties from the visitor inappropriately. The properties that did not receive value were removed from the object.
+  After changes made on https://github.com/RocketChat/Rocket.Chat/pull/19931, the `Livechat.RegisterGuest` method started removing properties from the visitor inappropriately. The properties that did not receive value were removed from the object.
   Those changes were made to support the new Contact Form, but now the form has its own method to deal with Contact data so those changes are no longer necessary.
 
 - Markdown added for Header Room topic ([#20021](https://github.com/RocketChat/Rocket.Chat/pull/20021) by [@yash-rajpal](https://github.com/yash-rajpal))
@@ -286,18 +307,18 @@
 
 - Omnichannel - Contact Center form is not validating custom fields properly ([#20196](https://github.com/RocketChat/Rocket.Chat/pull/20196))
 
-  The contact form is accepting undefined values in required custom fields when creating or editing contacts, and, the errror message isn't following Rocket.chat design system.
-
-  ### Before
-  ![image](https://user-images.githubusercontent.com/2493803/104522668-31688980-55dd-11eb-92c5-83f96073edc4.png)
-
-  ### After
-
-  #### New
-  ![image](https://user-images.githubusercontent.com/2493803/104770494-68f74300-574f-11eb-94a3-c8fd73365308.png)
-
-
-  #### Edit
+  The contact form is accepting undefined values in required custom fields when creating or editing contacts, and, the errror message isn't following Rocket.chat design system.
+
+  ### Before
+  ![image](https://user-images.githubusercontent.com/2493803/104522668-31688980-55dd-11eb-92c5-83f96073edc4.png)
+
+  ### After
+
+  #### New
+  ![image](https://user-images.githubusercontent.com/2493803/104770494-68f74300-574f-11eb-94a3-c8fd73365308.png)
+
+
+  #### Edit
   ![image](https://user-images.githubusercontent.com/2493803/104770538-7b717c80-574f-11eb-829f-1ae304103369.png)
 
 - Omnichannel Agents unable to take new chats in the queue ([#20022](https://github.com/RocketChat/Rocket.Chat/pull/20022))
@@ -318,15 +339,15 @@
 
 - Room special name in prompts ([#20277](https://github.com/RocketChat/Rocket.Chat/pull/20277) by [@aKn1ghtOut](https://github.com/aKn1ghtOut))
 
-  The "Hide room" and "Leave Room" confirmation prompts use the "name" key from the room info. When the setting "
-  Allow Special Characters in Room Names" is enabled, the prompts show the normalized names instead of those that contain the special characters.
-
-  Changed the value being used from name to fname, which always has the user-set name.
-
-  Previous:
-  ![Screenshot from 2021-01-20 15-52-29](https://user-images.githubusercontent.com/38764067/105161642-9b31e780-5b37-11eb-8b0c-ec4b1414c948.png)
-
-  Updated:
+  The "Hide room" and "Leave Room" confirmation prompts use the "name" key from the room info. When the setting "
+  Allow Special Characters in Room Names" is enabled, the prompts show the normalized names instead of those that contain the special characters.
+
+  Changed the value being used from name to fname, which always has the user-set name.
+
+  Previous:
+  ![Screenshot from 2021-01-20 15-52-29](https://user-images.githubusercontent.com/38764067/105161642-9b31e780-5b37-11eb-8b0c-ec4b1414c948.png)
+
+  Updated:
   ![Screenshot from 2021-01-20 15-50-19](https://user-images.githubusercontent.com/38764067/105161627-966d3380-5b37-11eb-9812-3dd9352b4f95.png)
 
 - Room's list showing all rooms with same name ([#20176](https://github.com/RocketChat/Rocket.Chat/pull/20176))
@@ -337,9 +358,9 @@
 
 - Saving with blank email in edit user ([#20259](https://github.com/RocketChat/Rocket.Chat/pull/20259) by [@RonLek](https://github.com/RonLek))
 
-  Disallows showing a success popup when email field is made blank in Edit User and instead shows the relevant error popup.
-
-
+  Disallows showing a success popup when email field is made blank in Edit User and instead shows the relevant error popup.
+
+
   https://user-images.githubusercontent.com/28918901/104960749-dbd81680-59fa-11eb-9c7b-2b257936f894.mp4
 
 - Search list filter ([#19937](https://github.com/RocketChat/Rocket.Chat/pull/19937))
@@ -386,7 +407,7 @@
 
 - Add translation of Edit Status in all languages ([#19916](https://github.com/RocketChat/Rocket.Chat/pull/19916) by [@sushant52](https://github.com/sushant52))
 
-  Closes [#19915](https://github.com/RocketChat/Rocket.Chat/issues/19915)
+  Closes [#19915](https://github.com/RocketChat/Rocket.Chat/issues/19915)
   The profile options menu is well translated in many languages. However, Edit Status is the only button which is not well translated. With this change, the whole profile options will be properly translated in a lot of languages.
 
 - Bump axios from 0.18.0 to 0.18.1 ([#20055](https://github.com/RocketChat/Rocket.Chat/pull/20055) by [@dependabot[bot]](https://github.com/dependabot[bot]))
@@ -421,10 +442,10 @@
 
 - Regression: Announcement bar not showing properly Markdown content ([#20290](https://github.com/RocketChat/Rocket.Chat/pull/20290))
 
-  **Before**:
-  ![image](https://user-images.githubusercontent.com/27704687/105273746-a4907380-5b7a-11eb-8121-aff665251c44.png)
-
-  **After**:
+  **Before**:
+  ![image](https://user-images.githubusercontent.com/27704687/105273746-a4907380-5b7a-11eb-8121-aff665251c44.png)
+
+  **After**:
   ![image](https://user-images.githubusercontent.com/27704687/105274050-2e404100-5b7b-11eb-93b2-b6282a7bed95.png)
 
 - regression: Announcement link open in new tab ([#20435](https://github.com/RocketChat/Rocket.Chat/pull/20435))
@@ -439,23 +460,23 @@
 
 - Regression: Change sort icon ([#20177](https://github.com/RocketChat/Rocket.Chat/pull/20177))
 
-  ### Before
-  ![image](https://user-images.githubusercontent.com/40830821/104366414-1bcd6400-54f8-11eb-9fc7-c6f13f07a61e.png)
-
-  ### After
+  ### Before
+  ![image](https://user-images.githubusercontent.com/40830821/104366414-1bcd6400-54f8-11eb-9fc7-c6f13f07a61e.png)
+
+  ### After
   ![image](https://user-images.githubusercontent.com/40830821/104366542-4cad9900-54f8-11eb-83ca-acb99899515a.png)
 
 - Regression: Custom field labels are not displayed properly on Omnichannel Contact Profile form ([#20393](https://github.com/RocketChat/Rocket.Chat/pull/20393))
 
-  ### Before
-  ![image](https://user-images.githubusercontent.com/2493803/105780399-20116c80-5f4f-11eb-9620-0901472e453b.png)
-
-  ![image](https://user-images.githubusercontent.com/2493803/105780420-2e5f8880-5f4f-11eb-8e93-8115ebc685be.png)
-
-  ### After
-
-  ![image](https://user-images.githubusercontent.com/2493803/105780832-1ccab080-5f50-11eb-8042-188dd0c41904.png)
-
+  ### Before
+  ![image](https://user-images.githubusercontent.com/2493803/105780399-20116c80-5f4f-11eb-9620-0901472e453b.png)
+
+  ![image](https://user-images.githubusercontent.com/2493803/105780420-2e5f8880-5f4f-11eb-8e93-8115ebc685be.png)
+
+  ### After
+
+  ![image](https://user-images.githubusercontent.com/2493803/105780832-1ccab080-5f50-11eb-8042-188dd0c41904.png)
+
   ![image](https://user-images.githubusercontent.com/2493803/105780911-500d3f80-5f50-11eb-96e0-7df3f179dbd5.png)
 
 - Regression: ESLint Warning - explicit-function-return-type ([#20434](https://github.com/RocketChat/Rocket.Chat/pull/20434) by [@aditya-mitra](https://github.com/aditya-mitra))
@@ -472,8 +493,8 @@
 
 - Regression: Fixed update room avatar issue. ([#20433](https://github.com/RocketChat/Rocket.Chat/pull/20433) by [@Darshilp326](https://github.com/Darshilp326))
 
-  Users can now update their room avatar without any error.
-
+  Users can now update their room avatar without any error.
+
   https://user-images.githubusercontent.com/55157259/105951602-560d3880-6096-11eb-97a5-b5eb9a28b58d.mp4
 
 - Regression: Info Page Icon style and usage graph breaking ([#20180](https://github.com/RocketChat/Rocket.Chat/pull/20180))
@@ -490,11 +511,11 @@
 
 - Regression: Unread superposing announcement. ([#20306](https://github.com/RocketChat/Rocket.Chat/pull/20306))
 
-  ### Before
-  ![image](https://user-images.githubusercontent.com/40830821/105412619-c2f67d80-5c13-11eb-8204-5932ea880c8a.png)
-
-
-  ### After
+  ### Before
+  ![image](https://user-images.githubusercontent.com/40830821/105412619-c2f67d80-5c13-11eb-8204-5932ea880c8a.png)
+
+
+  ### After
   ![image](https://user-images.githubusercontent.com/40830821/105411176-d1439a00-5c11-11eb-8d1b-ea27c8485214.png)
 
 - Regression: User Dropdown margin ([#20222](https://github.com/RocketChat/Rocket.Chat/pull/20222))
@@ -779,8 +800,8 @@
 
 - Hightlights validation on Account Preferences page ([#19902](https://github.com/RocketChat/Rocket.Chat/pull/19902) by [@aKn1ghtOut](https://github.com/aKn1ghtOut))
 
-  This PR fixes two issues in the account settings "preferences" panel.
-  Once set, the "Highlighted Words" setting cannot be reset to an empty string. This was fixed by changing the string validation from checking the length to checking the type of variable.
+  This PR fixes two issues in the account settings "preferences" panel.
+  Once set, the "Highlighted Words" setting cannot be reset to an empty string. This was fixed by changing the string validation from checking the length to checking the type of variable.
   Secondly, it tracks the changes to correctly identify if changes after the last "save changes" action have been made, using an "updates" state variable, instead of just comparing against the initialValue that does not change on clicking "save changes".
 
 - Image preview for image URLs on messages ([#19734](https://github.com/RocketChat/Rocket.Chat/pull/19734))
@@ -839,14 +860,10 @@
 
 - Chore: Update Pull Request template ([#19768](https://github.com/RocketChat/Rocket.Chat/pull/19768))
 
-  Improve the template of Pull Requests in order to make it clear reducing duplicated information and removing the visible checklists that were generating noise and misunderstanding with the PR progress.
-
-  - Moved the checklists to inside comments
-
-  - Merge the changelog and proposed changes sections to have a single source of description that goes to the changelog
-
-  - Remove the screenshot section, they can be added inside the description
-
+  Improve the template of Pull Requests in order to make it clear reducing duplicated information and removing the visible checklists that were generating noise and misunderstanding with the PR progress.  
+  - Moved the checklists to inside comments  
+  - Merge the changelog and proposed changes sections to have a single source of description that goes to the changelog  
+  - Remove the screenshot section, they can be added inside the description  
   - Changed the proposed changes title to incentivizing the usage of images and videos
 
 - Frontend folder structure ([#19631](https://github.com/RocketChat/Rocket.Chat/pull/19631))
@@ -881,11 +898,11 @@
 
 - Regression: Double Scrollbars on tables ([#19980](https://github.com/RocketChat/Rocket.Chat/pull/19980))
 
-  Before:
-  ![image](https://user-images.githubusercontent.com/40830821/103242719-0ec84680-4936-11eb-87a7-68b6eea8de7b.png)
-
-
-  After:
+  Before:
+  ![image](https://user-images.githubusercontent.com/40830821/103242719-0ec84680-4936-11eb-87a7-68b6eea8de7b.png)
+
+
+  After:
   ![image](https://user-images.githubusercontent.com/40830821/103242680-ee988780-4935-11eb-99e2-a95de99f78f1.png)
 
 - Regression: Failed autolinker and markdown rendering ([#19831](https://github.com/RocketChat/Rocket.Chat/pull/19831))
@@ -904,7 +921,7 @@
 
 - Regression: Omnichannel Custom Fields Form no longer working after refactoring ([#19948](https://github.com/RocketChat/Rocket.Chat/pull/19948))
 
-  The Omnichannel `Custom Fields` form is not working anymore after some refactorings on client-side.
+  The Omnichannel `Custom Fields` form is not working anymore after some refactorings on client-side.
   When the user clicks on `Custom Field` in the Omnichannel menu, a blank page appears.
 
 - Regression: polishing licenses endpoints  ([#19981](https://github.com/RocketChat/Rocket.Chat/pull/19981))
@@ -1097,8 +1114,8 @@
 
 - Bundle Size Client ([#19533](https://github.com/RocketChat/Rocket.Chat/pull/19533))
 
-  temporarily removes some codeblock languages
-  Moved some libraries to dynamic imports
+  temporarily removes some codeblock languages
+  Moved some libraries to dynamic imports
   Removed some shared code not used on the client side
 
 - Forward Omnichannel room to agent in another department ([#19576](https://github.com/RocketChat/Rocket.Chat/pull/19576) by [@mrfigueiredo](https://github.com/mrfigueiredo))
@@ -2176,10 +2193,8 @@
 
 - **2FA:** Password enforcement setting and 2FA protection when saving settings or resetting E2E encryption ([#18640](https://github.com/RocketChat/Rocket.Chat/pull/18640))
 
-  - Increase the 2FA remembering time from 5min to 30min
-
-  - Add new setting to enforce 2FA password fallback (enabled only for new installations)
-
+  - Increase the 2FA remembering time from 5min to 30min  
+  - Add new setting to enforce 2FA password fallback (enabled only for new installations)  
   - Require 2FA to save settings and reset E2E Encryption keys
 
 - **Omnichannel:** Allow set other agent status via method `livechat:changeLivechatStatus ` ([#18571](https://github.com/RocketChat/Rocket.Chat/pull/18571))
@@ -2197,7 +2212,7 @@
 
 - 2FA by Email setting showing for the user even when disabled by the admin ([#18473](https://github.com/RocketChat/Rocket.Chat/pull/18473))
 
-  The option to disable/enable the **Two-factor authentication via Email** at `Account > Security > Two Factor Authentication
+  The option to disable/enable the **Two-factor authentication via Email** at `Account > Security > Two Factor Authentication
   ` was visible even when the setting **Enable Two Factor Authentication via Email** at `Admin > Accounts > Two Factor Authentication` was disabled leading to misbehavior since the functionality was disabled.
 
 - Agents enabledDepartment attribute not set on collection ([#18614](https://github.com/RocketChat/Rocket.Chat/pull/18614) by [@paulobernardoaf](https://github.com/paulobernardoaf))
@@ -2547,16 +2562,13 @@
 
 - Mention autocomplete UI and performance improvements  ([#18309](https://github.com/RocketChat/Rocket.Chat/pull/18309))
 
-  * New setting to configure the number of suggestions `Admin > Layout > User Interface > Number of users' autocomplete suggestions` (default 5)
-
-  * The UI shows whenever the user is not a member of the room
-
-  * The UI shows when the suggestion came from the last messages for quick selection/reply
-
-  * The suggestions follow this order:
-    * The user with the exact username and member of the room
-    * The user with the exact username but not a member of the room (if allowed to list non-members)
-    * The users containing the text in username, name or nickname and member of the room
+  * New setting to configure the number of suggestions `Admin > Layout > User Interface > Number of users' autocomplete suggestions` (default 5)  
+  * The UI shows whenever the user is not a member of the room  
+  * The UI shows when the suggestion came from the last messages for quick selection/reply  
+  * The suggestions follow this order:
+    * The user with the exact username and member of the room
+    * The user with the exact username but not a member of the room (if allowed to list non-members)
+    * The users containing the text in username, name or nickname and member of the room
     * The users containing the text in username, name or nickname and not a member of the room (if allowed to list non-members)
 
 - Message action styles ([#18190](https://github.com/RocketChat/Rocket.Chat/pull/18190))
@@ -2898,10 +2910,10 @@
 
 - Split NOTIFICATIONS_SCHEDULE_DELAY into three separate variables ([#17669](https://github.com/RocketChat/Rocket.Chat/pull/17669) by [@jazztickets](https://github.com/jazztickets))
 
-  Email notification delay can now be customized with the following environment variables:
-  NOTIFICATIONS_SCHEDULE_DELAY_ONLINE
-  NOTIFICATIONS_SCHEDULE_DELAY_AWAY
-  NOTIFICATIONS_SCHEDULE_DELAY_OFFLINE
+  Email notification delay can now be customized with the following environment variables:
+  NOTIFICATIONS_SCHEDULE_DELAY_ONLINE
+  NOTIFICATIONS_SCHEDULE_DELAY_AWAY
+  NOTIFICATIONS_SCHEDULE_DELAY_OFFLINE
   Setting the value to -1 disable notifications for that type.
 
 - Threads ([#17416](https://github.com/RocketChat/Rocket.Chat/pull/17416))
@@ -3301,11 +3313,11 @@
 
 - **ENTERPRISE:** Omnichannel Last-Chatted Agent Preferred option ([#17666](https://github.com/RocketChat/Rocket.Chat/pull/17666))
 
-  If activated, this feature will store the last agent that assisted each Omnichannel visitor when a conversation is taken. So, when a visitor returns(it works with any entry point, Livechat, Facebook, REST API, and so on) and starts a new chat, the routing system checks:
-
-  1   - The visitor object for any stored agent that the visitor has previously talked to;
-  2   - If a previous agent is not found, the system will try to find a previous conversation of the same visitor. If a room is found, the system will get the previous agent from the room;
-
+  If activated, this feature will store the last agent that assisted each Omnichannel visitor when a conversation is taken. So, when a visitor returns(it works with any entry point, Livechat, Facebook, REST API, and so on) and starts a new chat, the routing system checks:
+
+  1   - The visitor object for any stored agent that the visitor has previously talked to;
+  2   - If a previous agent is not found, the system will try to find a previous conversation of the same visitor. If a room is found, the system will get the previous agent from the room;
+
   After this process, if an agent has been found, the system will check the agent's availability to assist the new chat. If it's not available, then the routing system will get the next available agent in the queue.
 
 - **ENTERPRISE:** Support for custom Livechat registration form fields ([#17581](https://github.com/RocketChat/Rocket.Chat/pull/17581))
@@ -3410,12 +3422,9 @@
 
 - Notification sounds ([#17616](https://github.com/RocketChat/Rocket.Chat/pull/17616))
 
-  * Global CDN config was ignored when loading the sound files
-
-  * Upload of custom sounds wasn't getting the file extension correctly
-
-  * Some translations were missing
-
+  * Global CDN config was ignored when loading the sound files  
+  * Upload of custom sounds wasn't getting the file extension correctly  
+  * Some translations were missing  
   * Edit and delete of custom sounds were not working correctly
 
 - Omnichannel departments are not saved when the offline channel name is not defined ([#17553](https://github.com/RocketChat/Rocket.Chat/pull/17553))
@@ -3703,19 +3712,14 @@
 
 - Better Push and Email Notification logic ([#17357](https://github.com/RocketChat/Rocket.Chat/pull/17357))
 
-  We are still using the same logic to define which notifications every new message will generate, it takes some servers' settings, users's preferences and subscriptions' settings in consideration to determine who will receive each notification type (desktop, audio, email and mobile push), but now it doesn't check the user's status (online, away, offline) for email and mobile push notifications but send those notifications to a new queue with the following rules:
-
-
-  - When the user is online the notification is scheduled to be sent in 120 seconds
-
-  - When the user is away the notification is scheduled to be sent in 120 seconds minus the amount of time he is away
-
-  - When the user is offline the notification is scheduled to be sent right away
-
-  - When the user reads a channel all the notifications for that user are removed (clear queue)
-
-  - When a notification is processed to be sent to a user and there are other scheduled notifications:
-    - All the scheduled notifications for that user are rescheduled to now
+  We are still using the same logic to define which notifications every new message will generate, it takes some servers' settings, users's preferences and subscriptions' settings in consideration to determine who will receive each notification type (desktop, audio, email and mobile push), but now it doesn't check the user's status (online, away, offline) for email and mobile push notifications but send those notifications to a new queue with the following rules:
+  
+  - When the user is online the notification is scheduled to be sent in 120 seconds  
+  - When the user is away the notification is scheduled to be sent in 120 seconds minus the amount of time he is away  
+  - When the user is offline the notification is scheduled to be sent right away  
+  - When the user reads a channel all the notifications for that user are removed (clear queue)  
+  - When a notification is processed to be sent to a user and there are other scheduled notifications:
+    - All the scheduled notifications for that user are rescheduled to now
     - The current notification goes back to the queue to be processed ordered by creation date
 
 - Buttons to check/uncheck all users and channels on import ([#17207](https://github.com/RocketChat/Rocket.Chat/pull/17207))
@@ -4078,7 +4082,7 @@
 
 - Translation via MS translate ([#16363](https://github.com/RocketChat/Rocket.Chat/pull/16363) by [@mrsimpson](https://github.com/mrsimpson))
 
-  Adds Microsoft's translation service (https://translator.microsoft.com/) as a provider for translation of messages.
+  Adds Microsoft's translation service (https://translator.microsoft.com/) as a provider for translation of messages.
   In addition to implementing the interface (similar to google and DeepL), a small change has been done in order to display the translation provider on the UI.
 
 - Two Factor authentication via email ([#15949](https://github.com/RocketChat/Rocket.Chat/pull/15949))
@@ -15617,4 +15621,4 @@
 - [@graywolf336](https://github.com/graywolf336)
 - [@marceloschmidt](https://github.com/marceloschmidt)
 - [@rodrigok](https://github.com/rodrigok)
-- [@sampaiodiego](https://github.com/sampaiodiego)
+- [@sampaiodiego](https://github.com/sampaiodiego)
\ No newline at end of file
diff --git a/app/api/server/v1/users.js b/app/api/server/v1/users.js
index 2e17b8ff9df5..8d4a8da23ed6 100644
--- a/app/api/server/v1/users.js
+++ b/app/api/server/v1/users.js
@@ -714,7 +714,8 @@ API.v1.addRoute('users.2fa.sendEmailCode', {
 		const userId = this.userId || Users[method](emailOrUsername, { fields: { _id: 1 } })?._id;
 
 		if (!userId) {
-			throw new Meteor.Error('error-invalid-user', 'Invalid user');
+			this.logger.error('[2fa] User was not found when requesting 2fa email code');
+			return API.v1.success();
 		}
 
 		emailCheck.sendEmailCode(getUserForCheck(userId));
diff --git a/app/emoji-custom/server/methods/insertOrUpdateEmoji.js b/app/emoji-custom/server/methods/insertOrUpdateEmoji.js
index 72a0a6a0694f..e635265e1f02 100644
--- a/app/emoji-custom/server/methods/insertOrUpdateEmoji.js
+++ b/app/emoji-custom/server/methods/insertOrUpdateEmoji.js
@@ -45,6 +45,8 @@ Meteor.methods({
 			emojiData.aliases = [];
 		}
 
+		emojiData.extension = emojiData.extension === 'svg+xml' ? 'png' : emojiData.extension;
+
 		let matchingResults = [];
 
 		if (emojiData._id) {
diff --git a/app/emoji-custom/server/methods/uploadEmojiCustom.js b/app/emoji-custom/server/methods/uploadEmojiCustom.js
index 1f3d4cf4d1c4..685d4f0270ae 100644
--- a/app/emoji-custom/server/methods/uploadEmojiCustom.js
+++ b/app/emoji-custom/server/methods/uploadEmojiCustom.js
@@ -1,13 +1,24 @@
 import { Meteor } from 'meteor/meteor';
 import limax from 'limax';
+import sharp from 'sharp';
 
 import { hasPermission } from '../../../authorization';
 import { RocketChatFile } from '../../../file';
 import { RocketChatFileEmojiCustomInstance } from '../startup/emoji-custom';
 import { api } from '../../../../server/sdk/api';
 
+const getFile = async (file, extension) => {
+	if (extension !== 'svg+xml') {
+		return file;
+	}
+
+	return sharp(file)
+		.png()
+		.toBuffer();
+};
+
 Meteor.methods({
-	uploadEmojiCustom(binaryContent, contentType, emojiData) {
+	async uploadEmojiCustom(binaryContent, contentType, emojiData) {
 		if (!hasPermission(this.userId, 'manage-emoji')) {
 			throw new Meteor.Error('not_authorized');
 		}
@@ -15,7 +26,10 @@ Meteor.methods({
 		emojiData.name = limax(emojiData.name, { replacement: '_' });
 		// delete aliases for notification purposes. here, it is a string rather than an array
 		delete emojiData.aliases;
-		const file = new Buffer(binaryContent, 'binary');
+
+		const file = await getFile(Buffer.from(binaryContent, 'binary'), emojiData.extension);
+
+		emojiData.extension = emojiData.extension === 'svg+xml' ? 'png' : emojiData.extension;
 
 		const rs = RocketChatFile.bufferToStream(file);
 		RocketChatFileEmojiCustomInstance.deleteFile(encodeURIComponent(`${ emojiData.name }.${ emojiData.extension }`));
diff --git a/app/mailer/server/api.js b/app/mailer/server/api.js
index 395af628b7d1..26839474bc01 100644
--- a/app/mailer/server/api.js
+++ b/app/mailer/server/api.js
@@ -8,6 +8,7 @@ import stripHtml from 'string-strip-html';
 
 import { settings } from '../../settings/server';
 import { escapeHTML } from '../../../lib/escapeHTML';
+import { replaceVariables } from './utils.js';
 
 let contentHeader;
 let contentFooter;
@@ -25,7 +26,7 @@ settings.get('Language', (key, value) => {
 });
 
 export const replacekey = (str, key, value = '') => str.replace(new RegExp(`(\\[${ key }\\]|__${ key }__)`, 'igm'), escapeHTML(value));
-export const translate = (str) => str.replace(/\{ ?([^\} ]+)(( ([^\}]+))+)? ?\}/gmi, (match, key) => TAPi18n.__(key, { lng }));
+export const translate = (str) => replaceVariables(str, (match, key) => TAPi18n.__(key, { lng }));
 export const replace = function replace(str, data = {}) {
 	if (!str) {
 		return '';
diff --git a/app/mailer/server/utils.js b/app/mailer/server/utils.js
new file mode 100644
index 000000000000..796215bd89c7
--- /dev/null
+++ b/app/mailer/server/utils.js
@@ -0,0 +1 @@
+export const replaceVariables = (str, callback) => str.replace(/\{ *([^\{\} ]+)[^\{\}]*\}/gmi, callback);
diff --git a/app/mailer/tests/api.tests.js b/app/mailer/tests/api.tests.js
new file mode 100644
index 000000000000..6ecf3b9f9de1
--- /dev/null
+++ b/app/mailer/tests/api.tests.js
@@ -0,0 +1,66 @@
+/* eslint-env mocha */
+import assert from 'assert';
+
+import { replaceVariables } from '../server/utils.js';
+
+describe('Mailer-API', function() {
+	describe('translate', () => {
+		const i18n = {
+			key: 'value',
+		};
+
+		describe('single key', function functionName() {
+			it(`should be equal to test ${ i18n.key }`, () => {
+				assert.equal(`test ${ i18n.key }`, replaceVariables('test {key}', (match, key) => i18n[key]));
+			});
+		});
+
+		describe('multiple keys', function functionName() {
+			it(`should be equal to test ${ i18n.key } and ${ i18n.key }`, () => {
+				assert.equal(`test ${ i18n.key } and ${ i18n.key }`, replaceVariables('test {key} and {key}', (match, key) => i18n[key]));
+			});
+		});
+
+		describe('key with a trailing space', function functionName() {
+			it(`should be equal to test ${ i18n.key }`, () => {
+				assert.equal(`test ${ i18n.key }`, replaceVariables('test {key }', (match, key) => i18n[key]));
+			});
+		});
+
+		describe('key with a leading space', function functionName() {
+			it(`should be equal to test ${ i18n.key }`, () => {
+				assert.equal(`test ${ i18n.key }`, replaceVariables('test { key}', (match, key) => i18n[key]));
+			});
+		});
+
+		describe('key with leading and trailing spaces', function functionName() {
+			it(`should be equal to test ${ i18n.key }`, () => {
+				assert.equal(`test ${ i18n.key }`, replaceVariables('test { key }', (match, key) => i18n[key]));
+			});
+		});
+
+		describe('key with multiple words', function functionName() {
+			it(`should be equal to test ${ i18n.key }`, () => {
+				assert.equal(`test ${ i18n.key }`, replaceVariables('test {key ignore}', (match, key) => i18n[key]));
+			});
+		});
+
+		describe('key with multiple opening brackets', function functionName() {
+			it(`should be equal to test {${ i18n.key }`, () => {
+				assert.equal(`test {${ i18n.key }`, replaceVariables('test {{key}', (match, key) => i18n[key]));
+			});
+		});
+
+		describe('key with multiple closing brackets', function functionName() {
+			it(`should be equal to test ${ i18n.key }}`, () => {
+				assert.equal(`test ${ i18n.key }}`, replaceVariables('test {key}}', (match, key) => i18n[key]));
+			});
+		});
+
+		describe('key with multiple opening and closing brackets', function functionName() {
+			it(`should be equal to test {${ i18n.key }}`, () => {
+				assert.equal(`test {${ i18n.key }}`, replaceVariables('test {{key}}', (match, key) => i18n[key]));
+			});
+		});
+	});
+});
diff --git a/app/utils/rocketchat.info b/app/utils/rocketchat.info
index 55d145f9ac7f..88613e175380 100644
--- a/app/utils/rocketchat.info
+++ b/app/utils/rocketchat.info
@@ -1,3 +1,3 @@
 {
-	"version": "3.11.2"
+	"version": "3.11.3"
 }
diff --git a/ee/client/omnichannel/additionalForms/CustomFieldsAdditionalForm.js b/ee/client/omnichannel/additionalForms/CustomFieldsAdditionalForm.js
index d728bb08933b..425037cd9f02 100644
--- a/ee/client/omnichannel/additionalForms/CustomFieldsAdditionalForm.js
+++ b/ee/client/omnichannel/additionalForms/CustomFieldsAdditionalForm.js
@@ -12,7 +12,13 @@ const getInitialValues = (data) => ({
 	public: !!data.public,
 });
 
-const checkInvalidOptions = (value) => value.trim() !== '' && !/^([a-zA-Z0-9-_ ]+)(,\s*[a-zA-Z0-9-_ ]+)*$/i.test(value);
+const checkInvalidOptions = (value) => {
+	if (!value || value.trim() === '') {
+		return false;
+	}
+
+	return value.split(',').every((v) => /^[a-zA-Z0-9-_ ]+$/.test(v));
+};
 
 const CustomFieldsAdditionalFormContainer = ({ data = {}, state, onChange, className }) => {
 	const t = useTranslation();
diff --git a/package-lock.json b/package-lock.json
index d7a67774062b..bd6d96da0368 100644
--- a/package-lock.json
+++ b/package-lock.json
@@ -1,6 +1,6 @@
 {
 	"name": "Rocket.Chat",
-	"version": "3.11.2",
+	"version": "3.11.3",
 	"lockfileVersion": 1,
 	"requires": true,
 	"dependencies": {
@@ -6014,9 +6014,9 @@
 			"integrity": "sha512-Q6llwucmJX5f9+GfjrUW+bR/XVtxxpF0RrUaxaL1n+IRjUPl19GdQ5ycyzSuzI96UMzLqeV4fZxIUmxnN/GY+Q=="
 		},
 		"@rocket.chat/livechat": {
-			"version": "1.7.6",
-			"resolved": "https://registry.npmjs.org/@rocket.chat/livechat/-/livechat-1.7.6.tgz",
-			"integrity": "sha512-EcnACq6jXRc3+B0WEY1/jKHboEv03Zh9iRi4a52HD4y3TRkrNxrGivfQ5h2TravTm/HM8srjqjocC4w9f2u1Kg==",
+			"version": "1.9.0",
+			"resolved": "https://registry.npmjs.org/@rocket.chat/livechat/-/livechat-1.9.0.tgz",
+			"integrity": "sha512-4VbwxCfcX18Ulk63ySHiND1DfEXIRPOPJbQAWfQuFvtggB3QkpkLuPaDevW++wFBwMl4Gy3BAOgTwq3d9AVCyw==",
 			"dev": true,
 			"requires": {
 				"@kossnocorp/desvg": "^0.2.0",
@@ -6025,6 +6025,7 @@
 				"css-vars-ponyfill": "^2.3.2",
 				"date-fns": "^2.15.0",
 				"desvg": "^1.0.2",
+				"dompurify": "^2.2.6",
 				"emoji-mart": "^3.0.0",
 				"history": "^5.0.0",
 				"i18nline": "^2.0.1",
@@ -6045,20 +6046,21 @@
 					"dev": true
 				},
 				"query-string": {
-					"version": "6.13.7",
-					"resolved": "https://registry.npmjs.org/query-string/-/query-string-6.13.7.tgz",
-					"integrity": "sha512-CsGs8ZYb39zu0WLkeOhe0NMePqgYdAuCqxOYKDR5LVCytDZYMGx3Bb+xypvQvPHVPijRXB0HZNFllCzHRe4gEA==",
+					"version": "6.14.1",
+					"resolved": "https://registry.npmjs.org/query-string/-/query-string-6.14.1.tgz",
+					"integrity": "sha512-XDxAeVmpfu1/6IjyT/gXHOl+S0vQ9owggJ30hhWKdHAsNPOcasn5o9BW0eejZqL2e4vMjhAxoW3jVHcD6mbcYw==",
 					"dev": true,
 					"requires": {
 						"decode-uri-component": "^0.2.0",
+						"filter-obj": "^1.1.0",
 						"split-on-first": "^1.0.0",
 						"strict-uri-encode": "^2.0.0"
 					}
 				},
 				"whatwg-fetch": {
-					"version": "3.5.0",
-					"resolved": "https://registry.npmjs.org/whatwg-fetch/-/whatwg-fetch-3.5.0.tgz",
-					"integrity": "sha512-jXkLtsR42xhXg7akoDKvKWE40eJeI+2KZqcp2h3NsOrRnDvtWX36KcKl30dy+hxECivdk2BVUHVNrPtoMBUx6A==",
+					"version": "3.6.2",
+					"resolved": "https://registry.npmjs.org/whatwg-fetch/-/whatwg-fetch-3.6.2.tgz",
+					"integrity": "sha512-bJlen0FcuU/0EMLrdbJ7zOnW6ITZLrZMIarMUVmdKtsGvZna8vxKYaexICWPfZ8qwf9fzNq+UEIZrnSaApt6RA==",
 					"dev": true
 				}
 			}
@@ -16883,9 +16885,9 @@
 			}
 		},
 		"css-vars-ponyfill": {
-			"version": "2.4.1",
-			"resolved": "https://registry.npmjs.org/css-vars-ponyfill/-/css-vars-ponyfill-2.4.1.tgz",
-			"integrity": "sha512-duoN5j10VJPdPUgo/H4PwvxhSxhJWgfymjeIGpTA7+KzQ2AmeFHnlKwrCYC9Ii+HUpC8BrIS5fhwcuaNOs/Hrg==",
+			"version": "2.4.3",
+			"resolved": "https://registry.npmjs.org/css-vars-ponyfill/-/css-vars-ponyfill-2.4.3.tgz",
+			"integrity": "sha512-PBfIwjSu27s8kebu8taEYFM8ehVr8o2Qw4H4nSlJzHAJgcduAqxz4oPmYTJuzgauOKaWII9SHWStQ965fxsdZA==",
 			"dev": true
 		},
 		"css-what": {
@@ -17257,9 +17259,9 @@
 			"integrity": "sha512-lcWy3AXDRJOD7MplwZMmNSRM//kZtJaLz4n6D1P5z9wEmZGBKhJRBIr1Xs9KNQJmdXPblvgffynYji4iylUTcA=="
 		},
 		"date-fns": {
-			"version": "2.16.1",
-			"resolved": "https://registry.npmjs.org/date-fns/-/date-fns-2.16.1.tgz",
-			"integrity": "sha512-sAJVKx/FqrLYHAQeN7VpJrPhagZc9R4ImZIWYRFZaaohR3KzmuK88touwsSwSVT8Qcbd4zoDsnGfX4GFB4imyQ==",
+			"version": "2.19.0",
+			"resolved": "https://registry.npmjs.org/date-fns/-/date-fns-2.19.0.tgz",
+			"integrity": "sha512-X3bf2iTPgCAQp9wvjOQytnf5vO5rESYRXlPIVcgSbtT5OTScPcsf9eZU+B/YIkKAtYr5WeCii58BgATrNitlWg==",
 			"dev": true
 		},
 		"date-now": {
@@ -17888,9 +17890,9 @@
 			"integrity": "sha1-BpYswKRCFnWbo7mOOyV3wM4w/Aw="
 		},
 		"emoji-mart": {
-			"version": "3.0.0",
-			"resolved": "https://registry.npmjs.org/emoji-mart/-/emoji-mart-3.0.0.tgz",
-			"integrity": "sha512-r5DXyzOLJttdwRYfJmPq/XL3W5tiAE/VsRnS0Hqyn27SqPA/GOYwVUSx50px/dXdJyDSnvmoPbuJ/zzhwSaU4A==",
+			"version": "3.0.1",
+			"resolved": "https://registry.npmjs.org/emoji-mart/-/emoji-mart-3.0.1.tgz",
+			"integrity": "sha512-sxpmMKxqLvcscu6mFn9ITHeZNkGzIvD0BSNFE/LJESPbCA8s1jM6bCDPjWbV31xHq7JXaxgpHxLB54RCbBZSlg==",
 			"dev": true,
 			"requires": {
 				"@babel/runtime": "^7.0.0",
@@ -19445,6 +19447,12 @@
 				}
 			}
 		},
+		"filter-obj": {
+			"version": "1.1.0",
+			"resolved": "https://registry.npmjs.org/filter-obj/-/filter-obj-1.1.0.tgz",
+			"integrity": "sha1-mzERErxsYSehbgFsbF1/GeCAXFs=",
+			"dev": true
+		},
 		"finalhandler": {
 			"version": "1.1.2",
 			"resolved": "https://registry.npmjs.org/finalhandler/-/finalhandler-1.1.2.tgz",
@@ -19890,7 +19898,7 @@
 				},
 				"chownr": {
 					"version": "1.1.1",
-					"resolved": "",
+					"resolved": false,
 					"integrity": "sha512-j38EvO5+LHX84jlo6h4UzmOwi0UgW61WRyPtJz4qaadK5eY3BTS5TY/S1Stc3Uk2lIM6TPevAlULiEJwie860g==",
 					"dev": true,
 					"optional": true
@@ -19925,7 +19933,7 @@
 				},
 				"debug": {
 					"version": "4.1.1",
-					"resolved": "",
+					"resolved": false,
 					"integrity": "sha512-pYAIzeRo8J6KPEaJ0VWOh5Pzkbw/RetuzehGM7QRRX5he4fPHx2rdKMB256ehJCkX+XRQm16eZLqLNS8RSZXZw==",
 					"dev": true,
 					"optional": true,
@@ -19956,7 +19964,7 @@
 				},
 				"fs-minipass": {
 					"version": "1.2.5",
-					"resolved": "",
+					"resolved": false,
 					"integrity": "sha512-JhBl0skXjUPCFH7x6x61gQxrKyXsxB5gcgePLZCwfyCGGsTISMoIeObbrvVeP6Xmyaudw4TT43qV2Gz+iyd2oQ==",
 					"dev": true,
 					"optional": true,
@@ -19990,7 +19998,7 @@
 				},
 				"glob": {
 					"version": "7.1.3",
-					"resolved": "",
+					"resolved": false,
 					"integrity": "sha512-vcfuiIxogLV4DlGBHIUOwI0IbrJ8HWPc4MU7HzviGeNho/UJDfi6B5p3sHeWIQ0KGIU0Jpxi5ZHxemQfLkkAwQ==",
 					"dev": true,
 					"optional": true,
@@ -20022,7 +20030,7 @@
 				},
 				"ignore-walk": {
 					"version": "3.0.1",
-					"resolved": "",
+					"resolved": false,
 					"integrity": "sha512-DTVlMx3IYPe0/JJcYP7Gxg7ttZZu3IInhuEhbchuqneY9wWe5Ojy2mXLBaQFUQmo0AW2r3qG7m1mg86js+gnlQ==",
 					"dev": true,
 					"optional": true,
@@ -20043,7 +20051,7 @@
 				},
 				"inherits": {
 					"version": "2.0.3",
-					"resolved": "",
+					"resolved": false,
 					"integrity": "sha1-Yzwsg+PaQqUC9SRmAiSA9CCCYd4=",
 					"dev": true,
 					"optional": true
@@ -20091,7 +20099,7 @@
 				},
 				"minipass": {
 					"version": "2.3.5",
-					"resolved": "",
+					"resolved": false,
 					"integrity": "sha512-Gi1W4k059gyRbyVUZQ4mEqLm0YIUiGYfvxhF6SIlk3ui1WVxMTGfGdQ2SInh3PDrRTVvPKgULkpJtT4RH10+VA==",
 					"dev": true,
 					"optional": true,
@@ -20102,7 +20110,7 @@
 				},
 				"minizlib": {
 					"version": "1.2.1",
-					"resolved": "",
+					"resolved": false,
 					"integrity": "sha512-7+4oTUOWKg7AuL3vloEWekXY2/D20cevzsrNT2kGWm+39J9hGTCBv8VI5Pm5lXZ/o3/mdR4f8rflAPhnQb8mPA==",
 					"dev": true,
 					"optional": true,
@@ -20122,7 +20130,7 @@
 				},
 				"ms": {
 					"version": "2.1.1",
-					"resolved": "",
+					"resolved": false,
 					"integrity": "sha512-tgp+dl5cGk28utYktBsrFqA7HKgrhgPsg6Z/EfhWI4gl1Hwq8B/GmY/0oXZ6nF8hDVesS/FpnYaD/kOWhYQvyg==",
 					"dev": true,
 					"optional": true
@@ -20136,7 +20144,7 @@
 				},
 				"needle": {
 					"version": "2.3.0",
-					"resolved": "",
+					"resolved": false,
 					"integrity": "sha512-QBZu7aAFR0522EyaXZM0FZ9GLpq6lvQ3uq8gteiDUp7wKdy0lSd2hPlgFwVuW1CBkfEs9PfDQsQzZghLs/psdg==",
 					"dev": true,
 					"optional": true,
@@ -20148,7 +20156,7 @@
 				},
 				"node-pre-gyp": {
 					"version": "0.12.0",
-					"resolved": "",
+					"resolved": false,
 					"integrity": "sha512-4KghwV8vH5k+g2ylT+sLTjy5wmUOb9vPhnM8NHvRf9dHmnW/CndrFXy2aRPaPST6dugXSdHXfeaHQm77PIz/1A==",
 					"dev": true,
 					"optional": true,
@@ -20178,14 +20186,14 @@
 				},
 				"npm-bundled": {
 					"version": "1.0.6",
-					"resolved": "",
+					"resolved": false,
 					"integrity": "sha512-8/JCaftHwbd//k6y2rEWp6k1wxVfpFzB6t1p825+cUb7Ym2XQfhwIC5KwhrvzZRJu+LtDE585zVaS32+CGtf0g==",
 					"dev": true,
 					"optional": true
 				},
 				"npm-packlist": {
 					"version": "1.4.1",
-					"resolved": "",
+					"resolved": false,
 					"integrity": "sha512-+TcdO7HJJ8peiiYhvPxsEDhF3PJFGUGRcFsGve3vxvxdcpO2Z4Z7rkosRM0kWj6LfbK/P0gu3dzk5RU1ffvFcw==",
 					"dev": true,
 					"optional": true,
@@ -20265,7 +20273,7 @@
 				},
 				"process-nextick-args": {
 					"version": "2.0.0",
-					"resolved": "",
+					"resolved": false,
 					"integrity": "sha512-MtEC1TqN0EU5nephaJ4rAtThHtC86dNN9qCuEhtshvpVBkAW5ZO7BASN9REnF9eoXGcRub+pFuKEpOHE+HbEMw==",
 					"dev": true,
 					"optional": true
@@ -20310,7 +20318,7 @@
 				},
 				"rimraf": {
 					"version": "2.6.3",
-					"resolved": "",
+					"resolved": false,
 					"integrity": "sha512-mwqeW5XsA2qAejG46gYdENaxXjx9onRNCfn7L0duuP4hCuTIi/QO7PDK07KJfp1d+izWPrzEJDcSqBa0OZQriA==",
 					"dev": true,
 					"optional": true,
@@ -20341,7 +20349,7 @@
 				},
 				"semver": {
 					"version": "5.7.0",
-					"resolved": "",
+					"resolved": false,
 					"integrity": "sha512-Ya52jSX2u7QKghxeoFGpLwCtGlt7j0oY9DYb5apt9nPlJ42ID+ulTXESnt/qAQcoSERyZ5sl3LDIOw0nAn/5DA==",
 					"dev": true,
 					"optional": true
@@ -20401,7 +20409,7 @@
 				},
 				"tar": {
 					"version": "4.4.8",
-					"resolved": "",
+					"resolved": false,
 					"integrity": "sha512-LzHF64s5chPQQS0IYBn9IN5h3i98c12bo4NCO7e0sGM2llXQ3p2FGC5sdENN4cTW48O915Sh+x+EXx7XW96xYQ==",
 					"dev": true,
 					"optional": true,
@@ -20441,7 +20449,7 @@
 				},
 				"yallist": {
 					"version": "3.0.3",
-					"resolved": "",
+					"resolved": false,
 					"integrity": "sha512-S+Zk8DEWE6oKpV+vI3qWkaK+jSbIK86pCwe2IF/xwIpQ8jEuxpw9NyaGjmp9+BoJv5FV2piqCDcoCtStppiq2A==",
 					"dev": true,
 					"optional": true
@@ -29696,9 +29704,9 @@
 			}
 		},
 		"preact": {
-			"version": "10.5.5",
-			"resolved": "https://registry.npmjs.org/preact/-/preact-10.5.5.tgz",
-			"integrity": "sha512-5ONLNH1SXMzzbQoExZX4TELemNt+TEDb622xXFNfZngjjM9qtrzseJt+EfiUu4TZ6EJ95X5sE1ES4yqHFSIdhg==",
+			"version": "10.5.13",
+			"resolved": "https://registry.npmjs.org/preact/-/preact-10.5.13.tgz",
+			"integrity": "sha512-q/vlKIGNwzTLu+jCcvywgGrt+H/1P/oIRSD6mV4ln3hmlC+Aa34C7yfPI4+5bzW8pONyVXYS7SvXosy2dKKtWQ==",
 			"dev": true
 		},
 		"preact-i18nline": {
@@ -31392,12 +31400,6 @@
 				"source-map": "~0.6.1"
 			},
 			"dependencies": {
-				"esprima": {
-					"version": "4.0.1",
-					"resolved": "https://registry.npmjs.org/esprima/-/esprima-4.0.1.tgz",
-					"integrity": "sha512-eGuFFw7Upda+g4p+QHvnW0RyTX/SVeJBDM/gCtMARO0cLuT2HcEKnTPvhjV6aGeqrCB/sbNop0Kszm0jsaWU4A==",
-					"dev": true
-				},
 				"source-map": {
 					"version": "0.6.1",
 					"resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
diff --git a/package.json b/package.json
index d43572679a2b..672cd535ceb3 100644
--- a/package.json
+++ b/package.json
@@ -1,7 +1,7 @@
 {
 	"name": "Rocket.Chat",
 	"description": "The Ultimate Open Source WebChat Platform",
-	"version": "3.11.2",
+	"version": "3.11.3",
 	"author": {
 		"name": "Rocket.Chat",
 		"url": "https://rocket.chat/"
@@ -56,7 +56,7 @@
 		"@babel/register": "^7.12.1",
 		"@octokit/rest": "^16.43.2",
 		"@rocket.chat/eslint-config": "^0.3.0",
-		"@rocket.chat/livechat": "^1.7.6",
+		"@rocket.chat/livechat": "^1.9.0",
 		"@settlin/spacebars-loader": "^1.0.8",
 		"@storybook/addon-essentials": "^6.1.11",
 		"@storybook/addons": "^6.1.11",
