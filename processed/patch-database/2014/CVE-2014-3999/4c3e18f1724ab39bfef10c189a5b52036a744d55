diff --git a/framework/Ldap/lib/Horde/Ldap.php b/framework/Ldap/lib/Horde/Ldap.php
index fc3443a48dc..25be6c2b93f 100644
--- a/framework/Ldap/lib/Horde/Ldap.php
+++ b/framework/Ldap/lib/Horde/Ldap.php
@@ -206,10 +206,10 @@ protected function setConfig($config)
     public function bind($dn = null, $password = null)
     {
         /* Fetch current bind credentials. */
-        if (empty($dn)) {
+        if (is_null($dn)) {
             $dn = $this->_config['binddn'];
         }
-        if (empty($password)) {
+        if (is_null($password)) {
             $password = $this->_config['bindpw'];
         }
 
diff --git a/framework/Ldap/test/Horde/Ldap/LdapTest.php b/framework/Ldap/test/Horde/Ldap/LdapTest.php
index 15d12bb758a..5081a5178c2 100644
--- a/framework/Ldap/test/Horde/Ldap/LdapTest.php
+++ b/framework/Ldap/test/Horde/Ldap/LdapTest.php
@@ -83,6 +83,19 @@ public function testConnectAndAnonymousBind()
         $ldap = new Horde_Ldap($lcfg);
     }
 
+    /**
+     * Tests if the server can connect and bind, but not rebind with empty
+     * password.
+     *
+     * @expectedException Horde_Ldap_Exception
+     */
+    public function testConnectAndEmptyRebind()
+    {
+        // Simple working connect and privileged bind.
+        $ldap = new Horde_Ldap(self::$ldapcfg['server']);
+        $ldap->bind(self::$ldapcfg['server']['binddn'], '');
+    }
+
     /**
      * Tests startTLS() if server supports it.
      */
