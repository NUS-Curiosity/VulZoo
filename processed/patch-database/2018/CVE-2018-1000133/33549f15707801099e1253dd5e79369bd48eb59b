diff --git a/lib/ctx.go b/lib/ctx.go
index 1cf6d99..65cd161 100755
--- a/lib/ctx.go
+++ b/lib/ctx.go
@@ -944,7 +944,7 @@ func (ctx *PfCtxS) IsSysAdmin() bool {
 //  perm1,perm2,perm3
 //
 // When an unknown permission is encountered, this function will return an error.
-func (perm Perm) FromString(str string) (err error) {
+func FromString(str string) (perm Perm,err error) {
 	str = strings.ToLower(str)
 
 	perm = PERM_NOTHING
@@ -1332,7 +1332,7 @@ func (ctx *PfCtxS) CheckPerms(what string, perms Perm) (ok bool, err error) {
 func (ctx *PfCtxS) CheckPermsT(what string, permstr string) (ok bool, err error) {
 	var perms Perm
 
-	err = perms.FromString(permstr)
+	perms,err = FromString(permstr)
 	if err != nil {
 		return
 	}
diff --git a/lib/struct.go b/lib/struct.go
index fcc447b..7f6be98 100755
--- a/lib/struct.go
+++ b/lib/struct.go
@@ -1353,6 +1353,7 @@ func StructDetailsA(ctx PfCtx, obj interface{}, field string, opts StructDetails
 		if checkperms {
 			ok := true
 			permstr := f.Tag.Get("pfset")
+
 			ok, err = ctx.CheckPermsT("StructDetails("+fname+")", permstr)
 			if !ok {
 				return "", "", "", err
@@ -1533,7 +1534,7 @@ func StructMenuA(ctx PfCtx, subjects []string, objtrail []interface{}, obj inter
 		}
 
 		set := f.Tag.Get(tag)
-		err = perms.FromString(set)
+		perms,err = FromString(set)
 		if err != nil {
 			return
 		}
