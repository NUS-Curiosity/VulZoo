diff --git a/CHANGELOG.md b/CHANGELOG.md
index ff726fec8d..705c5dedc7 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -12,6 +12,7 @@ About changelog [here](https://keepachangelog.com/en/1.0.0/)
 - Documentation for OMICS variants and updating a case
 ### Fixed
 - Broken heading anchors in the documentation (`admin-guide/login-system.md` and `admin-guide/setup-scout.md` files)
+- Avoid open login redirect attacks by always redirecting to cases page upon user login
 
 ## [4.88.1]
 ### Fixed
diff --git a/scout/server/app.py b/scout/server/app.py
index 417fb8835f..7e784d4fcb 100644
--- a/scout/server/app.py
+++ b/scout/server/app.py
@@ -83,10 +83,7 @@ def check_user():
             relevant_endpoint = not (static_endpoint or public_endpoint)
             # if endpoint requires auth, check if user is authenticated
             if relevant_endpoint and not current_user.is_authenticated:
-                # combine visited URL (convert byte string query string to unicode!)
-                next_url = "{}?{}".format(request.path, request.query_string.decode())
-                login_url = url_for("public.index", next=next_url)
-                return redirect(login_url)
+                return redirect(url_for("public.index"))
 
     return app
 
diff --git a/scout/server/blueprints/login/views.py b/scout/server/blueprints/login/views.py
index 945876f5c1..66d45a5a9f 100644
--- a/scout/server/blueprints/login/views.py
+++ b/scout/server/blueprints/login/views.py
@@ -47,8 +47,6 @@ def load_user(user_id):
 @public_endpoint
 def login():
     """Login a user if they have access."""
-    if "next" in request.args:
-        session["next_url"] = request.args["next"]
 
     user_id = None
     user_mail = None
@@ -130,7 +128,6 @@ def users():
 def perform_login(user_dict):
     if login_user(user_dict, remember=True):
         flash("you logged in as: {}".format(user_dict.name), "success")
-        next_url = session.pop("next_url", None)
-        return redirect(request.args.get("next") or next_url or url_for("cases.index"))
+        return redirect(url_for("cases.index"))
     flash("sorry, you could not log in", "warning")
     return redirect(url_for("public.index"))
