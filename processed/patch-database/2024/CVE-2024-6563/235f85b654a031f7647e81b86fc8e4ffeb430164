diff --git a/drivers/renesas/common/io/io_rcar.c b/drivers/renesas/common/io/io_rcar.c
index 21ed411137..b1638a1e0f 100644
--- a/drivers/renesas/common/io/io_rcar.c
+++ b/drivers/renesas/common/io/io_rcar.c
@@ -306,21 +306,21 @@ static int32_t check_load_area(uintptr_t dst, uintptr_t len)
 	if (dst >= prot_start && dst < prot_end) {
 		ERROR("BL2: dst address is on the protected area.\n");
 		result = IO_FAIL;
+		goto done;
 	}
 
 	if ((dst < prot_start && dst > prot_start - len) || prot_start < len) {
 		ERROR("BL2: loaded data is on the protected area.\n");
 		result = IO_FAIL;
-	}
-done:
-	if (result == IO_FAIL) {
-		ERROR("BL2: Out of range : dst=0x%lx len=0x%lx\n", dst, len);
+		goto done;
 	}
 
 	if (addr_loaded_cnt >= CHECK_IMAGE_AREA_CNT) {
 		ERROR("BL2: max loadable non secure images reached\n");
 		result = IO_FAIL;
+		goto done;
 	}
+
 	addr_loaded[addr_loaded_cnt].dest = dst;
 	addr_loaded[addr_loaded_cnt].length = len;
 	for(int n=0; n<addr_loaded_cnt; n++) {
@@ -348,10 +348,16 @@ static int32_t check_load_area(uintptr_t dst, uintptr_t len)
 		     (dst + len >= addr_loaded[n].dest + addr_loaded[n].length))) {
 			ERROR("BL2: next image overlap a previous image area.\n");
 			result = IO_FAIL;
+			goto done;
 		}
 	}
 	addr_loaded_cnt++;
 
+done:
+	if (result == IO_FAIL) {
+		ERROR("BL2: Out of range : dst=0x%lx len=0x%lx\n", dst, len);
+	}
+
 	return result;
 }
 
