diff --git a/lib/darwin.js b/lib/darwin.js
index 2247e45..2609650 100644
--- a/lib/darwin.js
+++ b/lib/darwin.js
@@ -16,6 +16,10 @@ function trim_exec(cmd, cb) {
   })
 }
 
+function ensure_valid_nic(str) {
+  if (str.match(/[^\w]/))
+    throw new Error("Invalid nic name given: " + str);
+}
 
 function determine_nic_type(str) {
   return str.match(/Ethernet/)
@@ -62,20 +66,24 @@ exports.interface_type_for = function(nic_name, cb) {
 */
 
 exports.mac_address_for = function(nic_name, cb) {
+  ensure_valid_nic(nic_name);
   var cmd = "networksetup -getmacaddress " + nic_name + " | awk '{print $3}'";
   trim_exec(cmd, cb);
 };
 
 exports.gateway_ip_for = function(nic_name, cb) {
+  ensure_valid_nic(nic_name);
   var cmd = "ipconfig getoption " + nic_name + " router";
   trim_exec(cmd, cb);
 };
 
 exports.netmask_for = function(nic_name, cb) {
+  ensure_valid_nic(nic_name);
   var cmd = "ipconfig getoption " + nic_name + " subnet_mask";
   trim_exec(cmd, cb);
 };
-exports.status_for = function(nic_name, cb){
+exports.status_for = function(nic_name, cb) {
+  ensure_valid_nic(nic_name);
   var cmd = "netstat -rn | grep " + nic_name + ' | grep UG | wc -l | sed -e "s/1/active/" | sed -e "s/0/inactive/"'
   trim_exec(cmd, cb)
 }
@@ -140,8 +148,7 @@ exports.get_network_interfaces_list = function(cb) {
       append_data(obj);
     })
 
-    if (count == 0)
-      cb(new Error('No interfaces found.'))
+    if (count == 0) cb(new Error('No interfaces found.'))
   })
 
 };
