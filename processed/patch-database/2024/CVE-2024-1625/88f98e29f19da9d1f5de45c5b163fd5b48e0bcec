diff --git a/packages/backend/src/api/v1/projects/index.ts b/packages/backend/src/api/v1/projects/index.ts
index 68535fd3..584df166 100644
--- a/packages/backend/src/api/v1/projects/index.ts
+++ b/packages/backend/src/api/v1/projects/index.ts
@@ -1,3 +1,4 @@
+import { verifyProjectAccess } from "@/src/utils/authorization"
 import sql from "@/src/utils/db"
 import Context from "@/src/utils/koa"
 import Router from "koa-router"
@@ -69,7 +70,19 @@ projects.post("/", async (ctx: Context) => {
 
 projects.delete("/:projectId", async (ctx: Context) => {
   const { projectId } = ctx.params
-  const { orgId } = ctx.state
+  const { orgId, userId } = ctx.state
+  console.log(ctx.state)
+
+  const hasProjectAccess = await verifyProjectAccess(projectId, userId)
+  const [user] = await sql`select * from account where id = ${userId}`
+
+  if (!hasProjectAccess) {
+    ctx.throw(401, "Not allowed")
+  }
+
+  if (user.role !== "admin") {
+    ctx.throw(403, "You must be an admin to delete a project")
+  }
 
   const [{ count }] =
     await sql`select count(*)::int from  project where org_id = ${orgId}`
@@ -77,6 +90,7 @@ projects.delete("/:projectId", async (ctx: Context) => {
   if (count > 1) {
     await sql`delete from project where id = ${projectId}`
     ctx.status = 200
+    ctx.body = {}
   } else {
     ctx.status = 422
 
diff --git a/packages/backend/src/utils/authorization.ts b/packages/backend/src/utils/authorization.ts
new file mode 100644
index 00000000..3cf0c4b4
--- /dev/null
+++ b/packages/backend/src/utils/authorization.ts
@@ -0,0 +1,13 @@
+import sql from "./db"
+
+export async function verifyProjectAccess(projectId: string, userId: string) {
+  const [{ exists: hasAccess }] = await sql`
+      select exists (
+        select 1 
+        from project 
+        where org_id = (select org_id from account where id = ${userId}) 
+          and id = ${projectId}
+      )
+    `
+  return hasAccess
+}
