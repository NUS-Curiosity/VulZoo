diff --git a/Cervantes.CORE/ViewModel/UserEditViewModel.cs b/Cervantes.CORE/ViewModel/UserEditViewModel.cs
index 48a83a8..0b56719 100644
--- a/Cervantes.CORE/ViewModel/UserEditViewModel.cs
+++ b/Cervantes.CORE/ViewModel/UserEditViewModel.cs
@@ -40,6 +40,6 @@ public class UserEditViewModel
     public Guid? ClientId { get; set; }
     public string ImagePath { get; set; }
     
-    public bool LockoutEnabled { get; set; }
+    public bool Lockout { get; set; }
     public bool TwoFactorEnabled { get; set; }
 }
\ No newline at end of file
diff --git a/Cervantes.DAL/Cervantes.DAL.csproj b/Cervantes.DAL/Cervantes.DAL.csproj
index 413619a..fccbd9d 100644
--- a/Cervantes.DAL/Cervantes.DAL.csproj
+++ b/Cervantes.DAL/Cervantes.DAL.csproj
@@ -13,6 +13,7 @@
     </ItemGroup>
 
     <ItemGroup>
+      <PackageReference Include="HtmlSanitizer" Version="8.0.811" />
       <PackageReference Include="Microsoft.AspNetCore.Identity.EntityFrameworkCore" Version="8.0.1" />
       <PackageReference Include="Microsoft.EntityFrameworkCore" Version="8.0.1" />
       <PackageReference Include="Microsoft.EntityFrameworkCore.Abstractions" Version="8.0.1" />
diff --git a/Cervantes.DAL/DataInitializer.cs b/Cervantes.DAL/DataInitializer.cs
index e37e057..2364574 100644
--- a/Cervantes.DAL/DataInitializer.cs
+++ b/Cervantes.DAL/DataInitializer.cs
@@ -3,9 +3,11 @@
 using Microsoft.AspNetCore.Identity;
 using System.Linq;
 using System.Security.Cryptography;
+using System.Web;
 using System.Xml;
 using Cervantes.Contracts;
 using Cervantes.CORE.Entities;
+using Ganss.Xss;
 using Microsoft.Extensions.Logging;
 using Task = System.Threading.Tasks.Task;
 
@@ -35,7 +37,9 @@ public static void SeedCwe(ICweManager cweManager, string cweFile)
             xmlDocument.Load(cweFile);
 
             XmlNodeList weaknessNodes = xmlDocument.GetElementsByTagName("Weakness");
-
+            var sanitizer = new HtmlSanitizer();
+            sanitizer.AllowedSchemes.Add("data");
+            
             foreach (XmlNode weaknessNode in weaknessNodes)
             {
                 string id = weaknessNode.Attributes["ID"].Value;
@@ -47,8 +51,8 @@ public static void SeedCwe(ICweManager cweManager, string cweFile)
 
                 Cwe cwe = new Cwe();
                 cwe.Id = Convert.ToInt32(id);
-                cwe.Name = name;
-                cwe.Description = desc;
+                cwe.Name = sanitizer.Sanitize(HttpUtility.HtmlDecode(name));
+                cwe.Description = sanitizer.Sanitize(HttpUtility.HtmlDecode(desc));
                 
                 cweManager.Add(cwe);
                 cweManager.Context.SaveChanges();
diff --git a/Cervantes.IFR/Cervantes.IFR.csproj b/Cervantes.IFR/Cervantes.IFR.csproj
index b0beb87..9fad5f5 100644
--- a/Cervantes.IFR/Cervantes.IFR.csproj
+++ b/Cervantes.IFR/Cervantes.IFR.csproj
@@ -19,6 +19,7 @@
       <PackageReference Include="CsvHelper" Version="30.1.0" />
       <PackageReference Include="Html2JiraMarkup" Version="1.0.4" />
       <PackageReference Include="HtmlAgilityPack" Version="1.11.58" />
+      <PackageReference Include="HtmlSanitizer" Version="8.0.811" />
       <PackageReference Include="MailKit" Version="4.3.0" />
       <PackageReference Include="Microsoft.AspNetCore.Hosting" Version="2.2.7" />
       <PackageReference Include="Microsoft.AspNetCore.Hosting.Abstractions" Version="2.2.0" />
diff --git a/Cervantes.IFR/Parsers/CSV/CsvParser.cs b/Cervantes.IFR/Parsers/CSV/CsvParser.cs
index 21ee462..044b7e2 100644
--- a/Cervantes.IFR/Parsers/CSV/CsvParser.cs
+++ b/Cervantes.IFR/Parsers/CSV/CsvParser.cs
@@ -3,11 +3,13 @@
 using System.IO;
 using System.Linq;
 using System.Security.Claims;
+using System.Web;
 using Cervantes.Contracts;
 using Cervantes.CORE;
 using Cervantes.CORE.Entities;
 using CsvHelper;
 using CsvHelper.Configuration;
+using Ganss.Xss;
 
 namespace Cervantes.IFR.Parsers.CSV;
 
@@ -31,6 +33,9 @@ public void Parse(Guid? project, string user, string path)
         {
             Delimiter = ";"
         };
+        var sanitizer = new HtmlSanitizer();
+        sanitizer.AllowedSchemes.Add("data");
+        
         using (var reader = new StreamReader(path))
         using (var csv = new CsvReader(reader, config))
         {
@@ -44,28 +49,28 @@ public void Parse(Guid? project, string user, string path)
                 foreach (var vul in records)
                 {
                     Vuln vuln = new Vuln();
-                    vuln.Name = vul.Name == "" ? "No Name" : vul.Name;
+                    vuln.Name = vul.Name == "" ? "No Name" : sanitizer.Sanitize(HttpUtility.HtmlDecode(vul.Name));
                     
                     vuln.Template = vul.Template.HasValue && vul.Template.Value;
-                    vuln.cve = vul.CVE == "" ? "None" : vul.CVE;
-                    vuln.Description = vul.Description == "" ? "No Data" : vul.Description;
-                    vuln.Impact = vul.Impact == "" ? "No Data" : vul.Impact;
+                    vuln.cve = vul.CVE == "" ? "None" : sanitizer.Sanitize(HttpUtility.HtmlDecode(vul.CVE));
+                    vuln.Description = vul.Description == "" ? "No Data" : sanitizer.Sanitize(HttpUtility.HtmlDecode(vul.Description));
+                    vuln.Impact = vul.Impact == "" ? "No Data" : sanitizer.Sanitize(HttpUtility.HtmlDecode(vul.Impact));
                     vuln.Risk = vul.Risk ?? VulnRisk.Info;
                     vuln.Status = vul.Status ?? VulnStatus.Open;
                     vuln.CreatedDate = DateTime.Now.ToUniversalTime();
                     vuln.JiraCreated = false;
-                    vuln.Remediation = vul.Remediation == "" ? "No Data" : vul.Remediation;
+                    vuln.Remediation = vul.Remediation == "" ? "No Data" : sanitizer.Sanitize(HttpUtility.HtmlDecode(vul.Remediation));
                     vuln.RemediationPriority = vul.RemediationPriority ?? RemediationPriority.Low;
                     vuln.RemediationComplexity = vul.RemediationComplexity ?? RemediationComplexity.Low;
-                    vuln.OWASPRisk = vul.OwaspRisk == "" ? "No Data" : vul.OwaspRisk;
-                    vuln.OWASPImpact = vul.OwaspImpact == "" ? "No Data" : vul.OwaspImpact;
-                    vuln.OWASPLikehood = vul.OwaspLikehood == "" ? "No Data" : vul.OwaspLikehood;
-                    vuln.OWASPVector = vul.OwaspVector == "" ? "No Data" : vul.OwaspVector;
+                    vuln.OWASPRisk = vul.OwaspRisk == "" ? "No Data" : sanitizer.Sanitize(HttpUtility.HtmlDecode(vul.OwaspRisk));
+                    vuln.OWASPImpact = vul.OwaspImpact == "" ? "No Data" : sanitizer.Sanitize(HttpUtility.HtmlDecode(vul.OwaspImpact));
+                    vuln.OWASPLikehood = vul.OwaspLikehood == "" ? "No Data" : sanitizer.Sanitize(HttpUtility.HtmlDecode(vul.OwaspLikehood));
+                    vuln.OWASPVector = vul.OwaspVector == "" ? "No Data" : sanitizer.Sanitize(HttpUtility.HtmlDecode(vul.OwaspVector));
                     vuln.ProjectId = project;
-                    vuln.ProofOfConcept = vul.Poc == "" ? "No Data" : vul.Poc;
+                    vuln.ProofOfConcept = vul.Poc == "" ? "No Data" : sanitizer.Sanitize(HttpUtility.HtmlDecode(vul.Poc));
                     vuln.UserId = user;
                     vuln.CVSS3 = vul.CVSS3 ?? 0;
-                    vuln.CVSSVector = vul.CVSSVector == "" ? "No Data" : vul.CVSSVector;
+                    vuln.CVSSVector = vul.CVSSVector == "" ? "No Data" : sanitizer.Sanitize(HttpUtility.HtmlDecode(vul.CVSSVector));
                     var cat = vulnCategoryManager.GetByName(vul.VulnCategory);
                     if (cat != null)
                     {
@@ -86,28 +91,28 @@ public void Parse(Guid? project, string user, string path)
                 foreach (var vul in records)
                 {
                     Vuln vuln = new Vuln();
-                    vuln.Name = vul.Name == "" ? "No Name" : vul.Name;
+                    vuln.Name = vul.Name == "" ? "No Name" : sanitizer.Sanitize(HttpUtility.HtmlDecode(vul.Name));
                     
                     vuln.Template = vul.Template.HasValue && vul.Template.Value;
-                    vuln.cve = vul.CVE == "" ? "None" : vul.CVE;
-                    vuln.Description = vul.Description == "" ? "No Data" : vul.Description;
-                    vuln.Impact = vul.Impact == "" ? "No Data" : vul.Impact;
+                    vuln.cve = vul.CVE == "" ? "None" : sanitizer.Sanitize(HttpUtility.HtmlDecode(vul.CVE));
+                    vuln.Description = vul.Description == "" ? "No Data" : sanitizer.Sanitize(HttpUtility.HtmlDecode(vul.Description));
+                    vuln.Impact = vul.Impact == "" ? "No Data" : sanitizer.Sanitize(HttpUtility.HtmlDecode(vul.Impact));
                     vuln.Risk = vul.Risk ?? VulnRisk.Info;
                     vuln.Status = vul.Status ?? VulnStatus.Open;
                     vuln.CreatedDate = DateTime.Now.ToUniversalTime();
                     vuln.JiraCreated = false;
-                    vuln.Remediation = vul.Remediation == "" ? "No Data" : vul.Remediation;
+                    vuln.Remediation = vul.Remediation == "" ? "No Data" : sanitizer.Sanitize(HttpUtility.HtmlDecode(vul.Remediation));
                     vuln.RemediationPriority = vul.RemediationPriority ?? RemediationPriority.Low;
                     vuln.RemediationComplexity = vul.RemediationComplexity ?? RemediationComplexity.Low;
-                    vuln.OWASPRisk = vul.OwaspRisk == "" ? "No Data" : vul.OwaspRisk;
-                    vuln.OWASPImpact = vul.OwaspImpact == "" ? "No Data" : vul.OwaspImpact;
-                    vuln.OWASPLikehood = vul.OwaspLikehood == "" ? "No Data" : vul.OwaspLikehood;
-                    vuln.OWASPVector = vul.OwaspVector == "" ? "No Data" : vul.OwaspVector;
+                    vuln.OWASPRisk = vul.OwaspRisk == "" ? "No Data" : sanitizer.Sanitize(HttpUtility.HtmlDecode(vul.OwaspRisk));
+                    vuln.OWASPImpact = vul.OwaspImpact == "" ? "No Data" : sanitizer.Sanitize(HttpUtility.HtmlDecode(vul.OwaspImpact));
+                    vuln.OWASPLikehood = vul.OwaspLikehood == "" ? "No Data" : sanitizer.Sanitize(HttpUtility.HtmlDecode(vul.OwaspLikehood));
+                    vuln.OWASPVector = vul.OwaspVector == "" ? "No Data" : sanitizer.Sanitize(HttpUtility.HtmlDecode(vul.OwaspVector));
                     vuln.ProjectId = null;
                     vuln.ProofOfConcept = vul.Poc == "" ? "No Data" : vul.Poc;
                     vuln.UserId = user;
                     vuln.CVSS3 = vul.CVSS3 ?? 0;
-                    vuln.CVSSVector = vul.CVSSVector == "" ? "No Data" : vul.CVSSVector;
+                    vuln.CVSSVector = vul.CVSSVector == "" ? "No Data" : sanitizer.Sanitize(HttpUtility.HtmlDecode(vul.CVSSVector));
                     var cat = vulnCategoryManager.GetByName(vul.VulnCategory);
                     if (cat != null)
                     {
diff --git a/Cervantes.IFR/Parsers/Nessus/NessusParser.cs b/Cervantes.IFR/Parsers/Nessus/NessusParser.cs
index 0583229..43c257f 100644
--- a/Cervantes.IFR/Parsers/Nessus/NessusParser.cs
+++ b/Cervantes.IFR/Parsers/Nessus/NessusParser.cs
@@ -1,10 +1,12 @@
 using System;
 using System.Globalization;
 using System.Linq;
+using System.Web;
 using System.Xml;
 using Cervantes.Contracts;
 using Cervantes.CORE;
 using Cervantes.CORE.Entities;
+using Ganss.Xss;
 
 namespace Cervantes.IFR.Parsers.Nessus;
 
@@ -28,7 +30,8 @@ public void Parse(Guid? project, string user, string path)
         doc.Load(path);
 
         XmlNodeList hosts = doc.GetElementsByTagName("ReportHost");
-
+        var sanitizer = new HtmlSanitizer();
+        sanitizer.AllowedSchemes.Add("data");
         if (project != null)
         {
             var pro = projectManager.GetById((Guid) project);
@@ -56,8 +59,8 @@ public void Parse(Guid? project, string user, string path)
                     {
                         UserId = user,
                         ProjectId = project,
-                        Name = hostName,
-                        Description = "<p>Host created from Nessus Scan Import</p>" + "<p>OS: "+ os +"</p>"+ "<p>Host Ip: "+ hostIp +"</p>",
+                        Name = sanitizer.Sanitize(HttpUtility.HtmlDecode(hostName)),
+                        Description = "<p>Host created from Nessus Scan Import</p>" + "<p>OS: "+ sanitizer.Sanitize(HttpUtility.HtmlDecode(os)) +"</p>"+ "<p>Host Ip: "+ sanitizer.Sanitize(HttpUtility.HtmlDecode(hostIp)) +"</p>",
                         Type = TargetType.Hostname
                     };
 
@@ -96,7 +99,7 @@ public void Parse(Guid? project, string user, string path)
                     var vulNum = vulnManager.GetAll().Count(x => x.ProjectId == project && x.Template == false) + 1;
                     vuln.FindingId = pro.FindingsId + "-" + vulNum.ToString("D2");
                     vuln.Template = false;
-                    vuln.Name = pluginName;
+                    vuln.Name = sanitizer.Sanitize(HttpUtility.HtmlDecode(pluginName));
                     vuln.CreatedDate = DateTime.Now.ToUniversalTime();
                     vuln.UserId = user;
                     vuln.ProjectId = project;
@@ -120,10 +123,10 @@ public void Parse(Guid? project, string user, string path)
                             break;
                     }
                     vuln.Status = VulnStatus.Open;
-                    vuln.cve = cve;
-                    vuln.Description = "<p>"+description+"</p>"+ "<p>References: " +"<p>"+refrences+"</p>";
-                    vuln.ProofOfConcept = pluginOutput;
-                    vuln.Impact = impact;
+                    vuln.cve = sanitizer.Sanitize(HttpUtility.HtmlDecode(cve));
+                    vuln.Description = "<p>"+sanitizer.Sanitize(HttpUtility.HtmlDecode(description))+"</p>"+ "<p>References: " +"<p>"+sanitizer.Sanitize(HttpUtility.HtmlDecode(refrences))+"</p>";
+                    vuln.ProofOfConcept = sanitizer.Sanitize(HttpUtility.HtmlDecode(pluginOutput));
+                    vuln.Impact = sanitizer.Sanitize(HttpUtility.HtmlDecode(impact));
                     if (cvss != "")
                     {
                         vuln.CVSS3 = float.Parse(cvss,CultureInfo.InvariantCulture);
@@ -133,8 +136,8 @@ public void Parse(Guid? project, string user, string path)
                         vuln.CVSS3 = 0;
                     }
                     
-                    vuln.CVSSVector = cvssVector;
-                    vuln.Remediation = solution;
+                    vuln.CVSSVector = sanitizer.Sanitize(HttpUtility.HtmlDecode(cvssVector));
+                    vuln.Remediation = sanitizer.Sanitize(HttpUtility.HtmlDecode(solution));
                     vuln.RemediationComplexity = RemediationComplexity.Low;
                     vuln.RemediationPriority = RemediationPriority.Low;
                     vuln.JiraCreated = false;
@@ -205,7 +208,7 @@ public void Parse(Guid? project, string user, string path)
                     
                     var vuln = new Vuln();
                     vuln.Template = false;
-                    vuln.Name = pluginName;
+                    vuln.Name = sanitizer.Sanitize(HttpUtility.HtmlDecode(pluginName));
                     vuln.CreatedDate = DateTime.Now.ToUniversalTime();
                     vuln.UserId = user;
                     vuln.ProjectId = null;
@@ -229,10 +232,10 @@ public void Parse(Guid? project, string user, string path)
                             break;
                     }
                     vuln.Status = VulnStatus.Open;
-                    vuln.cve = cve;
-                    vuln.Description = "<p>"+description+"</p>"+ "<p>References: " +"<p>"+refrences+"</p>";
-                    vuln.ProofOfConcept = pluginOutput;
-                    vuln.Impact = impact;
+                    vuln.cve = sanitizer.Sanitize(HttpUtility.HtmlDecode(cve));
+                    vuln.Description = "<p>"+sanitizer.Sanitize(HttpUtility.HtmlDecode(description))+"</p>"+ "<p>References: " +"<p>"+sanitizer.Sanitize(HttpUtility.HtmlDecode(refrences))+"</p>";
+                    vuln.ProofOfConcept = sanitizer.Sanitize(HttpUtility.HtmlDecode(pluginOutput));
+                    vuln.Impact = sanitizer.Sanitize(HttpUtility.HtmlDecode(impact));
                     if (cvss != "")
                     {
                         vuln.CVSS3 = float.Parse(cvss,CultureInfo.InvariantCulture);
@@ -242,8 +245,8 @@ public void Parse(Guid? project, string user, string path)
                         vuln.CVSS3 = 0;
                     }
                     
-                    vuln.CVSSVector = cvssVector;
-                    vuln.Remediation = solution;
+                    vuln.CVSSVector = sanitizer.Sanitize(HttpUtility.HtmlDecode(cvssVector));
+                    vuln.Remediation = sanitizer.Sanitize(HttpUtility.HtmlDecode(solution));
                     vuln.RemediationComplexity = RemediationComplexity.Low;
                     vuln.RemediationPriority = RemediationPriority.Low;
                     vuln.JiraCreated = false;
diff --git a/Cervantes.IFR/Parsers/Nmap/NmapParser.cs b/Cervantes.IFR/Parsers/Nmap/NmapParser.cs
index 2ffc90e..2c34424 100644
--- a/Cervantes.IFR/Parsers/Nmap/NmapParser.cs
+++ b/Cervantes.IFR/Parsers/Nmap/NmapParser.cs
@@ -2,11 +2,13 @@
 using System.IO;
 using System.Linq;
 using System.Text;
+using System.Web;
 using System.Xml;
 using System.Xml.Linq;
 using Cervantes.Contracts;
 using Cervantes.CORE;
 using Cervantes.CORE.Entities;
+using Ganss.Xss;
 
 
 namespace Cervantes.IFR.Parsers.Nmap;
@@ -34,7 +36,9 @@ public void Parse(Guid project, string user, string path)
         XElement nmap = XElement.Load(file);
 
         var hosts = nmap.Descendants("host");
-
+        var sanitizer = new HtmlSanitizer();
+        sanitizer.AllowedSchemes.Add("data");
+        
         foreach (var host in hosts)
         {
             var status = host.Element("status");
@@ -47,7 +51,7 @@ public void Parse(Guid project, string user, string path)
             
             Target target = new Target
             {
-                Name = address.Attribute("addr").Value,
+                Name = sanitizer.Sanitize(HttpUtility.HtmlDecode(address.Attribute("addr").Value)),
                 Description = "Imported from Nmap",
                 Type = TargetType.IP,
                 ProjectId = project,
@@ -131,10 +135,10 @@ public void Parse(Guid project, string user, string path)
                 {
                     UserId = user,
                     TargetId = target.Id,
-                    Name = product + " (" + name +")",
-                    Description = info + Environment.NewLine + sb.ToString(),
+                    Name = sanitizer.Sanitize(HttpUtility.HtmlDecode(product)) + " (" + sanitizer.Sanitize(HttpUtility.HtmlDecode(name)) +")",
+                    Description = sanitizer.Sanitize(HttpUtility.HtmlDecode(info)) + Environment.NewLine + sanitizer.Sanitize(HttpUtility.HtmlDecode(sb.ToString())),
                     Port = Int32.Parse(number),
-                    Version = version,
+                    Version =sanitizer.Sanitize(HttpUtility.HtmlDecode(version)),
                     Note = "Imported from Nmap"
                     
                     
diff --git a/Cervantes.IFR/Parsers/Pwndoc/PwndocParser.cs b/Cervantes.IFR/Parsers/Pwndoc/PwndocParser.cs
index 6c3bc90..3318412 100644
--- a/Cervantes.IFR/Parsers/Pwndoc/PwndocParser.cs
+++ b/Cervantes.IFR/Parsers/Pwndoc/PwndocParser.cs
@@ -2,9 +2,11 @@
 using System.Collections.Generic;
 using System.IO;
 using System.Linq;
+using System.Web;
 using Cervantes.Contracts;
 using Cervantes.CORE;
 using Cervantes.CORE.Entities;
+using Ganss.Xss;
 using YamlDotNet.RepresentationModel;
 using YamlDotNet.Serialization;
 using YamlDotNet.Serialization.NamingConventions;
@@ -31,7 +33,9 @@ public void Parse(Guid? project, string user, string path)
 
             //yml contains a string containing your YAML
            var vulns = deserializer.Deserialize<List<PwndocVuln>>(reader);
-
+           var sanitizer = new HtmlSanitizer();
+           sanitizer.AllowedSchemes.Add("data");
+           
             if (project != null)
             {
                 var pro = projectManager.GetById((Guid) project);
@@ -39,9 +43,9 @@ public void Parse(Guid? project, string user, string path)
                 {
                     int i = 0;
                     Vuln vuln = new Vuln();
-                    vuln.Name = vul.Details[i].Title == "" ? "No Name" : vul.Details[i].Title;
-                    vuln.Description = vul.Details[i].Description  == "" ? "No Data" : vul.Details[i].Description;
-                    vuln.Impact = vul.Details[i].Observation == "" ? "No Data" : vul.Details[i].Observation;
+                    vuln.Name = vul.Details[i].Title == "" ? "No Name" : sanitizer.Sanitize(HttpUtility.HtmlDecode(vul.Details[i].Title)); 
+                    vuln.Description = vul.Details[i].Description  == "" ? "No Data" : sanitizer.Sanitize(HttpUtility.HtmlDecode(vul.Details[i].Description));
+                    vuln.Impact = vul.Details[i].Observation == "" ? "No Data" : sanitizer.Sanitize(HttpUtility.HtmlDecode(vul.Details[i].Observation));
                     switch (vul.Priority)
                     {
                         case 1:
@@ -61,7 +65,7 @@ public void Parse(Guid? project, string user, string path)
                     vuln.Status = VulnStatus.Open;
                     vuln.CreatedDate = DateTime.Now.ToUniversalTime();
                     vuln.JiraCreated = false;
-                    vuln.Remediation = vul.Details[i].Remediation == "" ? "No Data" : vul.Details[i].Remediation;
+                    vuln.Remediation = vul.Details[i].Remediation == "" ? "No Data" : sanitizer.Sanitize(HttpUtility.HtmlDecode(vul.Details[i].Remediation));
                     switch (vul.Priority)
                     {
                         case 1:
@@ -112,9 +116,9 @@ public void Parse(Guid? project, string user, string path)
                 {
                     int i = 0;
                     Vuln vuln = new Vuln();
-                    vuln.Name = vul.Details[i].Title == "" ? "No Name" : vul.Details[i].Title;
-                    vuln.Description = vul.Details[i].Description  == "" ? "No Data" : vul.Details[i].Description;
-                    vuln.Impact = vul.Details[i].Observation == "" ? "No Data" : vul.Details[i].Observation;
+                    vuln.Name = vul.Details[i].Title == "" ? "No Name" : sanitizer.Sanitize(HttpUtility.HtmlDecode(vul.Details[i].Title)); 
+                    vuln.Description = vul.Details[i].Description  == "" ? "No Data" : sanitizer.Sanitize(HttpUtility.HtmlDecode(vul.Details[i].Description));
+                    vuln.Impact = vul.Details[i].Observation == "" ? "No Data" : sanitizer.Sanitize(HttpUtility.HtmlDecode(vul.Details[i].Observation));
                     switch (vul.Priority)
                     {
                         case 1:
@@ -134,7 +138,7 @@ public void Parse(Guid? project, string user, string path)
                     vuln.Status = VulnStatus.Open;
                     vuln.CreatedDate = DateTime.Now.ToUniversalTime();
                     vuln.JiraCreated = false;
-                    vuln.Remediation = vul.Details[i].Remediation == "" ? "No Data" : vul.Details[i].Remediation;
+                    vuln.Remediation = vul.Details[i].Remediation == "" ? "No Data" : sanitizer.Sanitize(HttpUtility.HtmlDecode(vul.Details[i].Remediation));
                     switch (vul.Priority)
                     {
                         case 1:
diff --git a/Cervantes.Web/Components/Pages/Admin/Users/UserDialog.razor b/Cervantes.Web/Components/Pages/Admin/Users/UserDialog.razor
index 061e5ea..69e5bc7 100644
--- a/Cervantes.Web/Components/Pages/Admin/Users/UserDialog.razor
+++ b/Cervantes.Web/Components/Pages/Admin/Users/UserDialog.razor
@@ -46,83 +46,85 @@
 				        <MudForm Model="@model" @ref="@form" Validation="@(userModelFluentValidator.ValidateValue)" ValidationDelay="0">
 
 					        <MudStack AlignItems="AlignItems.Stretch">
-							<MudTextField Placeholder="John Doe"  @bind-Value="model.FullName"
-                            				              For="@(() => model.FullName)"
-                            				              Immediate="true"
-                            				              Label="@localizer["name"]" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Person"/>
-                            
-                            
-                            				<MudTextField Placeholder="john.doe@foobar.com" @bind-Value="model.Email"
-                            				              For="@(() => model.Email)"
-                            				              Immediate="true"
-                            				              Label="Email" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Email" InputType="InputType.Email"/>
-                            				
-                            				<MudTextField Placeholder="+00 000 00 00 00" @bind-Value="model.PhoneNumber"
-                            				              For="@(() => model.PhoneNumber)"
-                            				              Immediate="true"
-                            				              Label="@localizer["phone"]" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Phone" InputType="InputType.Telephone"/>
-                            				
-                            				<TinyMCE.Blazor.Editor ScriptSrc="lib/tinymce/tinymce.min.js" Conf="@editorConf" @bind-Value="model.Description" data-mce-placeholder="Description"/>
-                            
-				                            <MudTextField @bind-Value="model.Password"
-				                                          For="@(() => model.Password)"
-				                                          Immediate="true"
-				                                          Label="@localizer["changePassword"]" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Password" InputType="InputType.Password"/>
-				                            <MudTextField @bind-Value="model.ConfirmPassword"
-				                                          For="@(() => model.ConfirmPassword)"
-				                                          Immediate="true"
-				                                          Label="@localizer["confirmPassword"]" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Password" InputType="InputType.Password"/>
-				                            
-                            
-                            				<MudTextField Placeholder="Pentester..."  @bind-Value="model.Position"
-                            				              For="@(() => model.Position)"
-                            				              Immediate="true"
-                            				              Label="@localizer["position"]" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.PermIdentity"/>
-                            
-                            				<MudSelect Placeholder="@localizer["role"]" @bind-Value="model.Role" For="@(() => model.Role)" Label="@localizer["role"]" AdornmentIcon="@Icons.Material.Filled.PersonSearch" Adornment="Adornment.Start" TransformOrigin="Origin.BottomCenter" AnchorOrigin="Origin.BottomCenter" PopoverClass="fixed">
-                            					<MudSelectItem Value="Guid.Empty.ToString()" Disabled="true">@localizer["selectRole"]</MudSelectItem>
-                            					@foreach (var role in Roles)
-                            					{
-                            						<MudSelectItem Value="@role.Name">@role.Name</MudSelectItem>
-                            					}
-                            				</MudSelect>
-                            				
-                            				@if (model.Role == "Client")
-                            				{
-                            					<MudSelect Placeholder="@localizer["client"]" @bind-Value="model.ClientId" For="@(() => model.ClientId)" Label="Client" AdornmentIcon="@Icons.Material.Filled.Contacts" Adornment="Adornment.Start" TransformOrigin="Origin.BottomCenter" AnchorOrigin="Origin.BottomCenter" PopoverClass="fixed">
-                            						<MudSelectItem Value="Guid.Empty.ToString()" Disabled="true">@localizer["selectClient"]</MudSelectItem>
-                            						@foreach (var cli in Clients)
-                            						{
-                            							<MudSelectItem Value="@cli.Id">@cli.Name</MudSelectItem>
-                            						}
-                            					</MudSelect>
-                            					
-                            				}
-                            
-                            				<MudFileUpload T="IBrowserFile" @bind-Files="File" Accept=".jpg,.png,.gif,.jpeg,.tiff,.bmp">
-                            					<ButtonTemplate>
-                            						<MudButton HtmlTag="label"
-                            						           Variant="Variant.Filled"
-                            						           Color="Color.Primary"
-                            						           StartIcon="@Icons.Material.Filled.CloudUpload"
-                            						           for="@context">
-                            							@localizer["uploadFile"]
-                            						</MudButton>
-                            					</ButtonTemplate>
-                            					<SelectedTemplate>
-                            
-                            						@if (File != null)
-                            						{
-                            							<MudText> <MudIcon Icon="@Icons.Material.Filled.Attachment" /> @File.Name </MudText>
-                                                            
-                            						}
-                            						else
-                            						{
-                            							<MudText><MudIcon Icon="@Icons.Material.Filled.Attachment" /> @localizer["noFiles"]</MudText>
-                            						}
-                            					</SelectedTemplate>
-                            				</MudFileUpload>
-						        
+						        <MudSwitch @bind-Value="@model.Lockout" Label="@localizer["locked"]" Color="Color.Primary"  />
+						        <MudSwitch @bind-Value="@model.TwoFactorEnabled" Label="@localizer["twoFactor"]" Color="Color.Primary" />
+						        <MudTextField Placeholder="John Doe" @bind-Value="model.FullName"
+						                      For="@(() => model.FullName)"
+						                      Immediate="true"
+						                      Label="@localizer["name"]" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Person"/>
+
+
+						        <MudTextField Placeholder="john.doe@foobar.com" @bind-Value="model.Email"
+						                      For="@(() => model.Email)"
+						                      Immediate="true"
+						                      Label="Email" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Email" InputType="InputType.Email"/>
+
+						        <MudTextField Placeholder="+00 000 00 00 00" @bind-Value="model.PhoneNumber"
+						                      For="@(() => model.PhoneNumber)"
+						                      Immediate="true"
+						                      Label="@localizer["phone"]" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Phone" InputType="InputType.Telephone"/>
+
+						        <TinyMCE.Blazor.Editor ScriptSrc="lib/tinymce/tinymce.min.js" Conf="@editorConf" @bind-Value="model.Description" data-mce-placeholder="Description"/>
+
+						        <MudTextField @bind-Value="model.Password"
+						                      For="@(() => model.Password)"
+						                      Immediate="true"
+						                      Label="@localizer["changePassword"]" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Password" InputType="InputType.Password"/>
+						        <MudTextField @bind-Value="model.ConfirmPassword"
+						                      For="@(() => model.ConfirmPassword)"
+						                      Immediate="true"
+						                      Label="@localizer["confirmPassword"]" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Password" InputType="InputType.Password"/>
+
+
+						        <MudTextField Placeholder="Pentester..." @bind-Value="model.Position"
+						                      For="@(() => model.Position)"
+						                      Immediate="true"
+						                      Label="@localizer["position"]" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.PermIdentity"/>
+
+						        <MudSelect Placeholder="@localizer["role"]" @bind-Value="model.Role" For="@(() => model.Role)" Label="@localizer["role"]" AdornmentIcon="@Icons.Material.Filled.PersonSearch" Adornment="Adornment.Start" TransformOrigin="Origin.BottomCenter" AnchorOrigin="Origin.BottomCenter" PopoverClass="fixed">
+							        <MudSelectItem Value="Guid.Empty.ToString()" Disabled="true">@localizer["selectRole"]</MudSelectItem>
+							        @foreach (var role in Roles)
+							        {
+								        <MudSelectItem Value="@role.Name">@role.Name</MudSelectItem>
+							        }
+						        </MudSelect>
+
+						        @if (model.Role == "Client")
+						        {
+							        <MudSelect Placeholder="@localizer["client"]" @bind-Value="model.ClientId" For="@(() => model.ClientId)" Label="Client" AdornmentIcon="@Icons.Material.Filled.Contacts" Adornment="Adornment.Start" TransformOrigin="Origin.BottomCenter" AnchorOrigin="Origin.BottomCenter" PopoverClass="fixed">
+								        <MudSelectItem Value="Guid.Empty.ToString()" Disabled="true">@localizer["selectClient"]</MudSelectItem>
+								        @foreach (var cli in Clients)
+								        {
+									        <MudSelectItem Value="@cli.Id">@cli.Name</MudSelectItem>
+								        }
+							        </MudSelect>
+
+						        }
+
+						        <MudFileUpload T="IBrowserFile" @bind-Files="File" Accept=".jpg,.png,.gif,.jpeg,.tiff,.bmp">
+							        <ButtonTemplate>
+								        <MudButton HtmlTag="label"
+								                   Variant="Variant.Filled"
+								                   Color="Color.Primary"
+								                   StartIcon="@Icons.Material.Filled.CloudUpload"
+								                   for="@context">
+									        @localizer["uploadFile"]
+								        </MudButton>
+							        </ButtonTemplate>
+							        <SelectedTemplate>
+
+								        @if (File != null)
+								        {
+									        <MudText> <MudIcon Icon="@Icons.Material.Filled.Attachment"/> @File.Name </MudText>
+
+								        }
+								        else
+								        {
+									        <MudText><MudIcon Icon="@Icons.Material.Filled.Attachment"/> @localizer["noFiles"]</MudText>
+								        }
+							        </SelectedTemplate>
+						        </MudFileUpload>
+
 
 
 					        </MudStack>
diff --git a/Cervantes.Web/Components/Pages/Admin/Users/UserDialog.razor.cs b/Cervantes.Web/Components/Pages/Admin/Users/UserDialog.razor.cs
index eff928f..4b95fd6 100644
--- a/Cervantes.Web/Components/Pages/Admin/Users/UserDialog.razor.cs
+++ b/Cervantes.Web/Components/Pages/Admin/Users/UserDialog.razor.cs
@@ -110,7 +110,16 @@ async Task EditMode()
             model.Position = user.Position;
             model.ImagePath = user.Avatar;
             model.TwoFactorEnabled = user.TwoFactorEnabled;
-            model.LockoutEnabled = user.LockoutEnabled;
+            bool locked = false;
+            if (user.LockoutEnd != null)
+            {
+                locked = true;
+            }
+            else
+            {
+                locked = false;
+            }
+            model.Lockout = locked;
             if (user.ClientId != null)
             {
                 model.ClientId = user.ClientId;
@@ -167,13 +176,13 @@ public UserModelFluentValidator()
                 .Cascade(CascadeMode.Stop)
                 .NotEmpty()
                 .EmailAddress();
-            RuleFor(p => p.Password).NotEmpty()
+            RuleFor(p => p.Password)
                 .MinimumLength(8).WithMessage("Your password length must be at least 8.")
                 .Matches(@"[A-Z]+").WithMessage("Your password must contain at least one uppercase letter.")
                 .Matches(@"[a-z]+").WithMessage("Your password must contain at least one lowercase letter.")
                 .Matches(@"[0-9]+").WithMessage("Your password must contain at least one number.")
                 .Matches(@"[\!\?\*\.]+").WithMessage("Your password must contain at least one (!? *.).");
-            RuleFor(x => x.ConfirmPassword).NotEmpty()
+            RuleFor(x => x.ConfirmPassword)
                 .MinimumLength(8).WithMessage("Your password length must be at least 8.")
                 .Matches(@"[A-Z]+").WithMessage("Your password must contain at least one uppercase letter.")
                 .Matches(@"[a-z]+").WithMessage("Your password must contain at least one lowercase letter.")
diff --git a/Cervantes.Web/Components/Pages/Admin/Users/Users.razor b/Cervantes.Web/Components/Pages/Admin/Users/Users.razor
index 96fc757..457842c 100644
--- a/Cervantes.Web/Components/Pages/Admin/Users/Users.razor
+++ b/Cervantes.Web/Components/Pages/Admin/Users/Users.razor
@@ -81,6 +81,20 @@
 
                         <PropertyColumn Property="x => x.Email" Title="@localizer["email"]"/>
                         <PropertyColumn Property="x => x.Position" Title="@localizer["position"]"/>
+                        <PropertyColumn Property="x => x.LockoutEnd" Title="@localizer["locked"]">
+                            <CellTemplate Context="cellContext">
+                                @if (@cellContext.Item.LockoutEnd != null && @cellContext.Item.LockoutEnd > DateTime.Now)
+                                {
+                                    <MudIcon Icon="@Icons.Material.Filled.CheckCircle" Color="Color.Success"/>
+                                }
+                                else
+                                {
+                                    <MudIcon Icon="@Icons.Material.Filled.Cancel" Color="Color.Error"/>
+                                }
+                                                
+                            </CellTemplate>
+                        </PropertyColumn>
+                        
                         <PropertyColumn Property="x => x.TwoFactorEnabled" Title="@localizer["mfaEnabled"]">
                             <CellTemplate Context="cellContext">
                                 @if (@cellContext.Item.TwoFactorEnabled)
diff --git a/Cervantes.Web/Components/Pages/Projects/ProjectDialog.razor b/Cervantes.Web/Components/Pages/Projects/ProjectDialog.razor
index 563b5e2..a3eb372 100644
--- a/Cervantes.Web/Components/Pages/Projects/ProjectDialog.razor
+++ b/Cervantes.Web/Components/Pages/Projects/ProjectDialog.razor
@@ -685,19 +685,22 @@ else
                              Hideable="true" Hover="true" RowClick="@RowClickedReports" MultiSelection="true" SelectedItemsChanged="@SelectedReportsChanged" Virtualize="true" DragDropColumnReordering="true">
                     <ToolBarContent>
                         <MudStack Row="true">
-                            <AuthorizeView Roles="Admin,SuperUser">
-                                <MudButton Variant="Variant.Filled" StartIcon="@Icons.Custom.FileFormats.FilePdf" Color="Color.Primary" OnClick="@((e) => OpenDialogReportCreate(maxWidth))">@localizer["createReport"]</MudButton>
-                                @if (seleReports.Count() != 0)
-                                {
-                                    <MudButtonGroup Color="Color.Primary" Variant="Variant.Outlined">
-                                        <MudButton>@localizer["actions"]</MudButton>
-                                        <MudMenu Icon="@Icons.Material.Filled.ArrowDropDown" Style="align-self: auto;">
-                                            <MudMenuItem OnClick="@((e) => BtnActionsReports(0))">@localizer["delete"]</MudMenuItem>
-                                        </MudMenu>
-                                    </MudButtonGroup>
-                                }
+                            @if (inProject)
+                            {
+                                <AuthorizeView Roles="Admin,SuperUser">
+                                    <MudButton Variant="Variant.Filled" StartIcon="@Icons.Custom.FileFormats.FilePdf" Color="Color.Primary" OnClick="@((e) => OpenDialogReportCreate(maxWidth))">@localizer["createReport"]</MudButton>
+                                    @if (seleReports.Count() != 0)
+                                    {
+                                        <MudButtonGroup Color="Color.Primary" Variant="Variant.Outlined">
+                                            <MudButton>@localizer["actions"]</MudButton>
+                                            <MudMenu Icon="@Icons.Material.Filled.ArrowDropDown" Style="align-self: auto;">
+                                                <MudMenuItem OnClick="@((e) => BtnActionsReports(0))">@localizer["delete"]</MudMenuItem>
+                                            </MudMenu>
+                                        </MudButtonGroup>
+                                    }
 
-                            </AuthorizeView>
+                                </AuthorizeView>
+                            }
                         </MudStack>
                         <MudSpacer/>
                         <MudTextField @bind-Value="searchStringReport" Placeholder="@localizer["search"]" Adornment="Adornment.Start" Immediate="true"
diff --git a/Cervantes.Web/Components/Pages/Workspace/Project/WorkspaceProject.razor.cs b/Cervantes.Web/Components/Pages/Workspace/Project/WorkspaceProject.razor.cs
index 31ef6ca..3447d54 100644
--- a/Cervantes.Web/Components/Pages/Workspace/Project/WorkspaceProject.razor.cs
+++ b/Cervantes.Web/Components/Pages/Workspace/Project/WorkspaceProject.razor.cs
@@ -150,7 +150,7 @@ protected override async Task OnInitializedAsync()
             new BreadcrumbItem(@localizer["home"], href: "/",icon: Icons.Material.Filled.Home),
             new BreadcrumbItem("Workspace", href: "/workspaces",icon: Icons.Material.Filled.Workspaces),
             new BreadcrumbItem(pro.Name, href: "/workspace/"+project,icon: Icons.Material.Filled.Folder),
-            new BreadcrumbItem(@localizer["checklist"], href: null, disabled: true, icon: Icons.Material.Filled.Checklist)
+            new BreadcrumbItem(@localizer["project"], href: null, disabled: true, icon: Icons.Material.Filled.Folder)
         };
         aiEnabled = _aiService.IsEnabled();
         await base.OnInitializedAsync();
diff --git a/Cervantes.Web/Controllers/UserController.cs b/Cervantes.Web/Controllers/UserController.cs
index 6e4234c..c3d640c 100644
--- a/Cervantes.Web/Controllers/UserController.cs
+++ b/Cervantes.Web/Controllers/UserController.cs
@@ -267,8 +267,16 @@ public async Task<IActionResult> Edit([FromBody] UserEditViewModel model)
                 user.FullName = sanitizer.Sanitize(HttpUtility.HtmlDecode(model.FullName));
                 user.Description = sanitizer.Sanitize(HttpUtility.HtmlDecode(model.Description));
                 user.Position = sanitizer.Sanitize(HttpUtility.HtmlDecode(model.Position));
-                user.LockoutEnabled = model.LockoutEnabled;
                 user.TwoFactorEnabled = model.TwoFactorEnabled;
+                if (model.Lockout)
+                {
+                    user.LockoutEnd = DateTimeOffset.MaxValue;
+                }
+                else
+                {
+                    user.LockoutEnd = null;
+                }
+                
                 if (model.Role == "Client")
                 {
                     user.ClientId = model.ClientId;
diff --git a/Cervantes.Web/Localization/Resource.es-ES.resx b/Cervantes.Web/Localization/Resource.es-ES.resx
index a95d880..4c4e9ba 100644
--- a/Cervantes.Web/Localization/Resource.es-ES.resx
+++ b/Cervantes.Web/Localization/Resource.es-ES.resx
@@ -1758,4 +1758,7 @@ Una vez que hayas escaneado el código QR o ingresado la clave anterior, tu apli
     <data name="deleteChecklist" xml:space="preserve">
         <value>Eliminar Lista de Verificación</value>
     </data>
+    <data name="noCategory" xml:space="preserve">
+        <value>Sin Categoría</value>
+    </data>
 </root>
\ No newline at end of file
diff --git a/Cervantes.Web/Localization/Resource.resx b/Cervantes.Web/Localization/Resource.resx
index 23365d5..11d84ec 100644
--- a/Cervantes.Web/Localization/Resource.resx
+++ b/Cervantes.Web/Localization/Resource.resx
@@ -1688,4 +1688,7 @@
     <data name="deleteChecklist" xml:space="preserve">
         <value>Delete Checklist</value>
     </data>
+    <data name="noCategory" xml:space="preserve">
+        <value>No Category</value>
+    </data>
 </root>
\ No newline at end of file
