diff --git a/system/controllers/photos/actions/camera.php b/system/controllers/photos/actions/camera.php
index f736502af..fcbf6c2f3 100755
--- a/system/controllers/photos/actions/camera.php
+++ b/system/controllers/photos/actions/camera.php
@@ -1,11 +1,13 @@
 <?php
 
-class actionPhotosCamera extends cmsAction{
+class actionPhotosCamera extends cmsAction {
 
-    public function run(){
+    public function run() {
 
-        $camera = urldecode($this->request->get('name', ''));
-        if(!$camera){ cmsCore::error404(); }
+        $camera = trim(strip_tags(urldecode($this->request->get('name', ''))));
+        if (!$camera) {
+            return cmsCore::error404();
+        }
 
         if (cmsUser::isAllowed('albums', 'view_all')) {
             $this->model->disablePrivacyFilter();
@@ -21,36 +23,38 @@ public function run(){
         $this->model->orderBy($this->options['ordering'], $this->options['orderto']);
 
         $photos = $this->getPhotosList();
-        if (!$photos) { cmsCore::error404(); }
+        if (!$photos) {
+            return cmsCore::error404();
+        }
 
-        if($photos && (count($photos) > $perpage)){
-            $has_next = true; array_pop($photos);
+        if ($photos && (count($photos) > $perpage)) {
+            $has_next = true;
+            array_pop($photos);
         } else {
             $has_next = false;
         }
 
         $ctype = cmsCore::getModel('content')->getContentTypeByName('albums');
 
-        $this->cms_template->render('camera', array(
+        $this->cms_template->render([
             'page_title'   => sprintf(LANG_PHOTOS_CAMERA_TITLE, $camera),
             'ctype'        => $ctype,
             'page'         => $page,
             'row_height'   => $this->getRowHeight(),
             'user'         => $this->cms_user,
-            'item'         => array(
+            'item'         => [
                 'id'         => 0,
                 'user_id'    => 0,
-                'url_params' => array('camera' => $camera),
+                'url_params' => ['camera' => $camera],
                 'base_url'   => href_to('photos', 'camera-' . urlencode($camera))
-            ),
-            'item_type' => 'camera',
+            ],
+            'item_type'    => 'camera',
             'photos'       => $photos,
             'is_owner'     => cmsUser::isAllowed('albums', 'delete', 'all'),
             'has_next'     => $has_next,
             'hooks_html'   => cmsEventsManager::hookAll('photo_camera_html', $camera),
             'preset_small' => $this->options['preset_small']
-        ));
-
+        ]);
     }
 
 }
diff --git a/system/libs/files.helper.php b/system/libs/files.helper.php
index da15be05e..bd6a29ccd 100755
--- a/system/libs/files.helper.php
+++ b/system/libs/files.helper.php
@@ -482,85 +482,85 @@ function img_get_params($path) {
         return false;
     }
 
+    // Получаем базовую информацию об изображении
     $s = getimagesize($path);
     if ($s === false) {
         return false;
     }
 
     $exif_data = [];
-
-    $exif = (function_exists('exif_read_data') && $s['mime'] === 'image/jpeg') ? (@exif_read_data($path, null, true)) : null;
-
-    if ($exif) {
-        if (isset($exif['COMPUTED']['ApertureFNumber'])) {
-            $exif_data['aperturefnumber'] = $exif['COMPUTED']['ApertureFNumber'];
-        } elseif (isset($exif['EXIF']['FNumber'])) {
-            $num = explode('/', $exif['EXIF']['FNumber']);
-            $exif_data['aperturefnumber'] = 'f/' . ($num[0] / $num[1]);
-        }
-        if (isset($exif['EXIF']['ExposureTime'])) {
-            $num = explode('/', $exif['EXIF']['ExposureTime']);
-            $exif_data['exposuretime'] = ($num[0] == 1) ? $exif['EXIF']['ExposureTime'] : '1/' . round($num[1] / $num[0]) . 's';
-        } elseif (isset($exif['IFD0']['ExposureTime'])) {
-            $exif_data['exposuretime'] = $exif['IFD0']['ExposureTime'];
-        }
-        $make = false;
-        if (isset($exif['IFD0']['Make'])) {
-            $exif['IFD0']['Make'] = trim($exif['IFD0']['Make']);
-            if ($exif['IFD0']['Make'] != 'NIKON CORPORATION' && $exif['IFD0']['Make'] != 'Canon' && $exif['IFD0']['Make'] != 'Lenovo ') {
-                $exif_data['camera'] = $exif['IFD0']['Make'];
-                $make = true;
+    // Получаем EXIF-данные, если это JPEG
+    if (function_exists('exif_read_data') && $s['mime'] === 'image/jpeg') {
+
+        $exif = @exif_read_data($path, null, true);
+
+        if ($exif) {
+            // Диафрагма
+            $exif_data['aperturefnumber'] = $exif['COMPUTED']['ApertureFNumber'] ??
+                (isset($exif['EXIF']['FNumber']) ? 'f/' . eval_fraction($exif['EXIF']['FNumber']) : null);
+
+            // Выдержка
+            $exif_data['exposuretime'] = $exif['EXIF']['ExposureTime'] ??
+                (isset($exif['EXIF']['ExposureTime']) ? '1/' . round(eval_fraction($exif['EXIF']['ExposureTime'])) . 's' : null);
+
+            // Камера
+            $make = isset($exif['IFD0']['Make']) ? trim($exif['IFD0']['Make']) : null;
+            $model = $exif['IFD0']['Model'] ?? null;
+            if ($make && !in_array($make, ['NIKON CORPORATION', 'Canon', 'Lenovo'])) {
+                $exif_data['camera'] = $model ? "$make $model" : $make;
+            } elseif ($model) {
+                $exif_data['camera'] = $model;
             }
-        }
-        if (isset($exif['IFD0']['Model'])) {
-            $exif_data['camera'] = $make ? $exif['IFD0']['Make'] . ' ' . $exif['IFD0']['Model'] : $exif['IFD0']['Model'];
-        }
 
-        if (isset($exif['EXIF']['DateTimeOriginal'])) {
-            $exif_data['date'] = $exif['EXIF']['DateTimeOriginal'];
-        } elseif (isset($exif['EXIF']['DateTimeDigitized'])) {
-            $exif_data['date'] = $exif['EXIF']['DateTimeDigitized'];
-        }
+            // Дата создания
+            $exif_data['date'] = $exif['EXIF']['DateTimeOriginal'] ?? $exif['EXIF']['DateTimeDigitized'] ?? null;
 
-        if (isset($exif['EXIF']['ISOSpeedRatings'])) {
-            $exif_data['isospeedratings'] = $exif['EXIF']['ISOSpeedRatings'];
-            if (is_array($exif_data['isospeedratings'])) {
-                $exif_data['isospeedratings'] = current($exif_data['isospeedratings']);
-            }
-        }
+            // ISO
+            $iso = $exif['EXIF']['ISOSpeedRatings'] ?? null;
+            $exif_data['isospeedratings'] = is_array($iso) ? current($iso) : $iso;
 
-        if (isset($exif['EXIF']['FocalLength'])) {
-            $num = explode('/', $exif['EXIF']['FocalLength']);
-            $exif_data['focallength'] = floor($num[0] / $num[1]) . 'mm';
-        }
+            // Фокусное расстояние
+            $exif_data['focallength'] = isset($exif['EXIF']['FocalLength']) ? eval_fraction($exif['EXIF']['FocalLength']) . 'mm' : null;
+            $exif_data['focallengthin35mmfilm'] = isset($exif['EXIF']['FocalLengthIn35mmFilm']) ? $exif['EXIF']['FocalLengthIn35mmFilm'] . 'mm' : null;
 
-        if (isset($exif['EXIF']['FocalLengthIn35mmFilm'])) {
-            $exif_data['focallengthin35mmfilm'] = $exif['EXIF']['FocalLengthIn35mmFilm'] . 'mm';
-        }
+            // Ориентация
+            $exif_data['orientation'] = $exif['IFD0']['Orientation'] ?? null;
 
-        if (isset($exif['IFD0']['Orientation'])) {
-            $exif_data['orientation'] = $exif['IFD0']['Orientation'];
+            $exif_data = array_filter($exif_data);
+
+            foreach ($exif_data as $key => $value) {
+                $exif_data[$key] = is_string($value) ? strip_tags($value) : $value;
+            }
         }
     }
 
-    $orientation = 'square';
-    if ($s[0] > $s[1]) {
-        $orientation = 'landscape';
-    }
-    if ($s[0] < $s[1]) {
-        $orientation = 'portrait';
-    }
+    // Определение ориентации изображения
+    $orientation = $s[0] === $s[1] ? 'square' : ($s[0] > $s[1] ? 'landscape' : 'portrait');
 
     return [
         'orientation' => $orientation,
         'width'       => $s[0],
         'height'      => $s[1],
         'mime'        => $s['mime'],
-        'exif'        => $exif_data,
-        'filesize'    => round(filesize($path))
+        'exif'        => array_filter($exif_data),
+        'filesize'    => filesize($path)
     ];
 }
 
+/**
+ * Вспомогательная функция для вычисления дробных значений EXIF
+ *
+ * @param string $fraction Строка дробного числа в формате 'числитель/знаменатель'
+ * @return float
+ */
+function eval_fraction($fraction) {
+    if (strpos($fraction, '/') !== false) {
+        list($numerator, $denominator) = explode('/', $fraction);
+        return $denominator == 0 ? 0 : $numerator / $denominator;
+    }
+    return (float)$fraction;
+}
+
 /**
  * Выполняет команду в shell и возвращает массив строк ответа
  *
diff --git a/templates/modern/controllers/photos/camera.tpl.php b/templates/modern/controllers/photos/camera.tpl.php
index 369354f9e..9270743a6 100755
--- a/templates/modern/controllers/photos/camera.tpl.php
+++ b/templates/modern/controllers/photos/camera.tpl.php
@@ -16,7 +16,7 @@
 
 ?>
 
-<h1 class="mb-3"><?php echo $page_title; ?></h1>
+<h1 class="mb-3"><?php html($page_title); ?></h1>
 <?php if ($hooks_html) { ?>
     <div class="camera_hints">
         <?php echo html_each($hooks_html); ?>
@@ -24,18 +24,18 @@
 <?php } ?>
 
 <div class="album-photos-wrap d-flex flex-wrap m-n1" id="album-photos-list"<?php if ($is_owner) { ?> data-delete-url="<?php echo $this->href_to('delete'); ?>"<?php } ?>>
-    <?php echo $this->renderChild('photos', array(
-        'photos'   => $photos,
-        'is_owner' => $is_owner,
-        'user'     => $user,
-        'has_next' => $has_next,
+    <?php echo $this->renderChild('photos', [
+        'photos'       => $photos,
+        'is_owner'     => $is_owner,
+        'user'         => $user,
+        'has_next'     => $has_next,
         'preset_small' => $preset_small,
-        'page'     => $page
-    )); ?>
+        'page'         => $page
+    ]); ?>
 </div>
 
 <?php if($photos && ($has_next || (!$has_next && $page > 1))){ ?>
-<a class="btn btn-primary btn-block btn-sm mt-2  mb-3 show-more" href="<?php echo $item['base_url'].((strpos($item['base_url'], '?') !== false) ? '&' : '?').'photo_page='.($has_next ? ($page+1) : 1); ?>" onclick="return icms.photos.showMore(this);" data-url="<?php echo href_to('photos', 'more', array($item_type, $item['id'])); ?>" data-url-params="<?php html(json_encode($item['url_params'])); ?>" data-first-page-url="<?php echo $item['base_url']; ?>">
+<a class="btn btn-primary btn-block btn-sm mt-2  mb-3 show-more" href="<?php echo $item['base_url'].((strpos($item['base_url'], '?') !== false) ? '&' : '?').'photo_page='.($has_next ? ($page+1) : 1); ?>" onclick="return icms.photos.showMore(this);" data-url="<?php echo href_to('photos', 'more', [$item_type, $item['id']]); ?>" data-url-params="<?php html(json_encode($item['url_params'])); ?>" data-first-page-url="<?php echo $item['base_url']; ?>">
     <span data-to-first="<?php echo LANG_RETURN_TO_FIRST; ?>">
         <?php if($has_next){ echo LANG_SHOW_MORE; } else { echo LANG_RETURN_TO_FIRST; } ?>
     </span>
