diff --git a/upload/admin/controller/extension/module/divido_calculator.php b/upload/admin/controller/extension/module/divido_calculator.php
deleted file mode 100644
index 94421426545..00000000000
--- a/upload/admin/controller/extension/module/divido_calculator.php
+++ /dev/null
@@ -1,64 +0,0 @@
-<?php
-class ControllerExtensionModuleDividoCalculator extends Controller {
-	private $error = array();
-
-	public function index() {
-		$this->load->language('extension/module/divido_calculator');
-		$this->load->model('setting/setting');
-
-		$this->document->setTitle($this->language->get('heading_title'));
-
-		if (($this->request->server['REQUEST_METHOD'] == 'POST') && $this->validate()) {
-			$this->model_setting_setting->editSetting('module_divido_calculator', $this->request->post);
-			$this->session->data['success'] = $this->language->get('text_success');
-			$this->response->redirect($this->url->link('marketplace/extension', 'user_token=' . $this->session->data['user_token'] . '&type=module', true));
-		}
-
-		if (isset($this->error['warning'])) {
-			$data['error_warning'] = $this->error['warning'];
-		} else {
-			$data['error_warning'] = '';
-		}
-
-		$data['breadcrumbs'] = array();
-
-		$data['breadcrumbs'][] = array(
-			'text' => $this->language->get('text_home'),
-			'href' => $this->url->link('common/dashboard', 'user_token=' . $this->session->data['user_token'], true)
-		);
-
-		$data['breadcrumbs'][] = array(
-			'text' => $this->language->get('text_extension'),
-			'href' => $this->url->link('marketplace/extension', 'user_token=' . $this->session->data['user_token'] . '&type=module', true)
-		);
-
-		$data['breadcrumbs'][] = array(
-			'text' => $this->language->get('heading_title'),
-			'href' => $this->url->link('extension/module/divido_calculator', 'user_token=' . $this->session->data['user_token'], true)
-		);
-
-		$data['action'] = $this->url->link('extension/module/divido_calculator', 'user_token=' . $this->session->data['user_token'], true);
-
-		$data['cancel'] = $this->url->link('marketplace/extension', 'user_token=' . $this->session->data['user_token'] . '&type=module', true);
-
-		if (isset($this->request->post['module_divido_calculator_status'])) {
-			$data['module_divido_calculator_status'] = $this->request->post['module_divido_calculator_status'];
-		} else {
-			$data['module_divido_calculator_status'] = $this->config->get('module_divido_calculator_status');
-		}
-
-		$data['header'] = $this->load->controller('common/header');
-		$data['column_left'] = $this->load->controller('common/column_left');
-		$data['footer'] = $this->load->controller('common/footer');
-
-		$this->response->setOutput($this->load->view('extension/module/divido_calculator', $data));
-	}
-
-	protected function validate() {
-		if (!$this->user->hasPermission('modify', 'extension/module/divido_calculator')) {
-			$this->error['warning'] = $this->language->get('error_permission');
-		}
-
-		return !$this->error;
-	}
-}
diff --git a/upload/admin/controller/extension/payment/divido.php b/upload/admin/controller/extension/payment/divido.php
deleted file mode 100644
index d358764b494..00000000000
--- a/upload/admin/controller/extension/payment/divido.php
+++ /dev/null
@@ -1,215 +0,0 @@
-<?php
-class ControllerExtensionPaymentDivido extends Controller {
-	private $error = array();
-
-	public function index() {
-		$this->load->language('extension/payment/divido');
-
-		$this->document->setTitle($this->language->get('heading_title'));
-
-		$this->load->model('setting/setting');
-		$this->load->model('extension/payment/divido');
-
-		if ($this->request->server['REQUEST_METHOD'] == 'POST' && $this->validate()) {
-			$this->model_setting_setting->editSetting('payment_divido', $this->request->post);
-			
-			$this->session->data['success'] = $this->language->get('text_success');
-			
-			$this->response->redirect($this->url->link('marketplace/extension', 'user_token=' . $this->session->data['user_token'] . '&type=payment', true));
-		}
-
-		$data['entry_plans_options'] = array(
-			'all'		=> $this->language->get('entry_plans_options_all'),
-			'selected'	=> $this->language->get('entry_plans_options_selected'),
-		);
-
-		$data['entry_products_options']= array(
-			'all'		=> $this->language->get('entry_products_options_all'),
-			'selected'	=> $this->language->get('entry_products_options_selected'),
-			'threshold'	=> $this->language->get('entry_products_options_threshold'),
-		);
-
-		$data['button_save'] = $this->language->get('button_save');
-		$data['button_cancel'] = $this->language->get('button_cancel');
-
-		$this->load->model('localisation/order_status');
-
-		$data['order_statuses'] = $this->model_localisation_order_status->getOrderStatuses();
-
-		if (isset($this->error['warning'])) {
-			$data['error_warning'] = $this->error['warning'];
-		} else {
-			$data['error_warning'] = '';
-		}
-
-		$data['breadcrumbs'] = array();
-
-		$data['breadcrumbs'][] = array(
-			'text' => $this->language->get('text_home'),
-			'href' => $this->url->link('common/dashboard', 'user_token=' . $this->session->data['user_token'], true)
-		);
-
-		$data['breadcrumbs'][] = array(
-			'text' => $this->language->get('text_extension'),
-			'href' => $this->url->link('marketplace/extension', 'user_token=' . $this->session->data['user_token'] . '&type=payment', true)
-		);
-
-		$data['breadcrumbs'][] = array(
-			'text' => $this->language->get('heading_title'),
-			'href' => $this->url->link('extension/payment/divido', 'user_token=' . $this->session->data['user_token'], true)
-		);
-
-		$data['action'] = $this->url->link('extension/payment/divido', 'user_token=' . $this->session->data['user_token'], 'SSL');
-		
-		$data['cancel'] = $this->url->link('marketplace/extension', 'user_token=' . $this->session->data['user_token'] . '&type=payment', 'SSL');
-
-		if (isset($this->request->post['payment_divido_api_key'])) {
-			$data['payment_divido_api_key'] = $this->request->post['payment_divido_api_key'];
-		} else {
-			$data['payment_divido_api_key'] = $this->config->get('payment_divido_api_key');
-		}
-
-		if (isset($this->request->post['payment_divido_order_status_id'])) {
-			$data['payment_divido_order_status_id'] = $this->request->post['payment_divido_order_status_id'];
-		} elseif ($this->config->get('payment_divido_order_status_id')) {
-			$data['payment_divido_order_status_id'] = $this->config->get('payment_divido_order_status_id');
-		} else {
-			$data['payment_divido_order_status_id'] = 2;
-		}
-
-		if (isset($this->request->post['payment_divido_status'])) {
-			$data['payment_divido_status'] = $this->request->post['payment_divido_status'];
-		} else {
-			$data['payment_divido_status'] = $this->config->get('payment_divido_status');
-		}
-
-		if (isset($this->request->post['payment_divido_sort_order'])) {
-			$data['payment_divido_sort_order'] = $this->request->post['payment_divido_sort_order'];
-		} else {
-			$data['payment_divido_sort_order'] = $this->config->get('payment_divido_sort_order');
-		}
-
-		if (isset($this->request->post['payment_divido_title'])) {
-			$data['payment_divido_title'] = $this->request->post['payment_divido_title'];
-		} else {
-			$data['payment_divido_title'] = $this->config->get('payment_divido_title');
-		}
-
-		if (isset($this->request->post['payment_divido_productselection'])) {
-			$data['payment_divido_productselection'] = $this->request->post['payment_divido_productselection'];
-		} else {
-			$data['payment_divido_productselection'] = $this->config->get('payment_divido_productselection');
-		}
-
-		if (isset($this->request->post['payment_divido_price_threshold'])) {
-			$data['payment_divido_price_threshold'] = $this->request->post['payment_divido_price_threshold'];
-		} else {
-			$data['payment_divido_price_threshold'] = $this->config->get('payment_divido_price_threshold');
-		}
-
-		if (isset($this->request->post['payment_divido_cart_threshold'])) {
-			$data['payment_divido_cart_threshold'] = $this->request->post['payment_divido_cart_threshold'];
-		} else {
-			$data['payment_divido_cart_threshold'] = $this->config->get('payment_divido_cart_threshold');
-		}
-
-		if (isset($this->request->post['payment_divido_planselection'])) {
-			$data['payment_divido_planselection'] = $this->request->post['payment_divido_planselection'];
-		} else {
-			$data['payment_divido_planselection'] = $this->config->get('payment_divido_planselection');
-		}
-
-		if (isset($this->request->post['payment_divido_plans_selected'])) {
-			$data['payment_divido_plans_selected'] = $this->request->post['payment_divido_plans_selected'];
-		} elseif ($this->config->get('payment_divido_plans_selected')) {
-			$data['payment_divido_plans_selected'] = $this->config->get('payment_divido_plans_selected');
-		} else {
-			$data['payment_divido_plans_selected'] = array();
-		}
-
-		if (isset($this->request->post['payment_divido_categories'])) {
-			$data['payment_divido_categories'] = $this->request->post['payment_divido_categories'];
-		} elseif ($this->config->get('payment_divido_categories')) {
-			$data['payment_divido_categories'] = $this->config->get('payment_divido_categories');
-		} else {
-			$data['payment_divido_categories'] = array();
-		}
-
-		$data['categories'] = array();
-
-		$this->load->model('catalog/category');
-
-		foreach ($data['payment_divido_categories'] as $category_id) {
-			$category_info = $this->model_catalog_category->getCategory($category_id);
-
-			if ($category_info) {
-				$data['categories'][] = array(
-					'category_id' 	=> $category_info['category_id'],
-					'name' 			=> ($category_info['path']) ? $category_info['path'] . ' &gt; ' . $category_info['name'] : $category_info['name']
-				);
-			}
-		}
-
-		try {
-			$data['divido_plans'] = $this->model_extension_payment_divido->getAllPlans();
-		} catch (Exception $e) {
-			$this->log->write($e->getMessage());
-			$data['divido_plans'] = array();
-		}
-
-		$data['user_token'] = $this->session->data['user_token'];
-
-		$data['header'] = $this->load->controller('common/header');
-		$data['column_left'] = $this->load->controller('common/column_left');
-		$data['footer'] = $this->load->controller('common/footer');
-
-		$this->response->setOutput($this->load->view('extension/payment/divido', $data));
-	}
-
-
-	public function order() {
-		if (!$this->config->get('payment_divido_status')) {
-			return null;
-		}
-
-		$this->load->model('extension/payment/divido');
-		$this->load->language('extension/payment/divido');
-
-		$order_id = $this->request->get['order_id'];
-
-		$lookup = $this->model_extension_payment_divido->getLookupByOrderId($order_id);
-		$proposal_id = null;
-		$application_id = null;
-		$deposit_amount = null;
-		if ($lookup->num_rows == 1) {
-			$lookup_data = $lookup->row;
-			$proposal_id = $lookup_data['proposal_id'];
-			$application_id = $lookup_data['application_id'];
-			$deposit_amount = $lookup_data['deposit_amount'];
-		}
-
-		$data['proposal_id'] = $proposal_id;
-		$data['application_id'] = $application_id;
-		$data['deposit_amount'] = $deposit_amount;
-
-		return $this->load->view('extension/payment/divido_order', $data);
-	}
-
-	public function install() {
-		$this->load->model('extension/payment/divido');
-		$this->model_extension_payment_divido->install();
-	}
-
-	public function uninstall() {
-		$this->load->model('extension/payment/divido');
-		$this->model_extension_payment_divido->uninstall();
-	}
-
-	protected function validate() {
-		if (!$this->user->hasPermission('modify', 'extension/payment/divido')) {
-			$this->error['warning'] = $this->language->get('error_permission');
-		}
-
-		return !$this->error;
-	}
-}
diff --git a/upload/admin/language/en-gb/extension/module/divido_calculator.php b/upload/admin/language/en-gb/extension/module/divido_calculator.php
deleted file mode 100644
index 1b43aaf3f79..00000000000
--- a/upload/admin/language/en-gb/extension/module/divido_calculator.php
+++ /dev/null
@@ -1,14 +0,0 @@
-<?php
-// Heading
-$_['heading_title']    = 'Divido Product Page Calculator';
-
-// Text
-$_['text_extension']   = 'Extensions';
-$_['text_success']     = 'Success: You have modified Divido Product Page Calculator!';
-$_['text_edit']        = 'Edit Divido Product Page Calculator';
-
-// Entry
-$_['entry_status']     = 'Status';
-
-// Error
-$_['error_permission'] = 'Warning: You do not have permission to modify module Divido Product Page Calculator!';
\ No newline at end of file
diff --git a/upload/admin/language/en-gb/extension/payment/divido.php b/upload/admin/language/en-gb/extension/payment/divido.php
deleted file mode 100644
index 269e1c1c0b3..00000000000
--- a/upload/admin/language/en-gb/extension/payment/divido.php
+++ /dev/null
@@ -1,42 +0,0 @@
-<?php
-// Heading
-$_['heading_title']                    = 'Divido';
-
-// Text
-$_['text_divido']                      = '<a href="http://divido.com" target="_blank"><img src="view/image/payment/divido.png"></a>';
-$_['text_edit']                        = 'Edit Divido';
-$_['text_extension']                   = 'Extensions';
-$_['text_order_info']                  = 'Divido info';
-$_['text_success']                     = 'Success: You have modified the Divido module';
-$_['text_proposal_id']                 = 'Proposal ID';
-$_['text_application_id']              = 'Application ID';
-$_['text_deposit_amount']              = 'Deposit amount';
-
-// Entry
-$_['entry_order_status']               = 'Order status when approved';
-$_['entry_sort_order']                 = 'Sort order';
-$_['entry_status']                     = 'Status';
-$_['entry_api_key']                    = 'API-key';
-$_['entry_title']                      = 'Title';
-$_['entry_productselection']           = 'Product selection';
-$_['entry_planselection']              = 'Show default plan';
-$_['entry_planlist']                   = 'Plans';
-$_['entry_plans_options_all']          = 'Show all plans';
-$_['entry_plans_options_selected']     = 'Select default plans';
-$_['entry_products_options_all']       = 'All products';
-$_['entry_products_options_selected']  = 'Only selected products';
-$_['entry_products_options_threshold'] = 'All products above a defined price';
-$_['entry_price_threshold']            = 'Product price threshold';
-$_['entry_cart_threshold']             = 'Cart total threshold';
-$_['entry_threshold_list']             = 'Plan thresholds';
-$_['entry_category']                   = 'Categories';
-
-// Help
-$_['help_api_key']                     = 'Key that identifies you with Divido (obtained from Divido)';
-$_['help_status']                      = 'Status of the payment method';
-$_['help_order_status']                = 'Status of the order when lender has approved';
-$_['help_title']                       = 'Title of the payment option, shown in checkout';
-$_['help_planselection']               = 'Choose whether to manually select plans or show the default set';
-$_['help_productselection']            = 'Select what products are available on finance';
-$_['help_category']                    = 'Limit what categories where financing is available';
-$_['help_cart_threshold']              = 'Hard lower limit on cart amount for Divido to be available';
\ No newline at end of file
diff --git a/upload/admin/model/extension/payment/divido.php b/upload/admin/model/extension/payment/divido.php
deleted file mode 100644
index 6380691f394..00000000000
--- a/upload/admin/model/extension/payment/divido.php
+++ /dev/null
@@ -1,79 +0,0 @@
-<?php
-class ModelExtensionPaymentDivido extends Model {
-	const CACHE_KEY_PLANS = 'divido_plans';
-
-	public function getAllPlans() {
-		if ($plans = $this->cache->get(self::CACHE_KEY_PLANS)) {
-			// OpenCart 2.1 decodes json objects to associative arrays so we
-			// need to make sure we're getting a list of simple objects back.
-			$plans = array_map(function ($plan) {
-				return (object)$plan;
-			}, $plans);
-
-			return $plans;
-		}
-
-		$api_key = $this->config->get('payment_divido_api_key');
-		if (!$api_key) {
-			throw new Exception("No Divido api-key defined");
-		}
-
-		$response = Divido_Finances::all();
-		if ($response->status != 'ok') {
-			throw new Exception("Can't get list of finance plans from Divido!");
-		}
-
-		$plans = $response->finances;
-
-		// OpenCart 2.1 switched to json for their file storage cache, so
-		// we need to convert to a simple object.
-		$plans_plain = array();
-		foreach ($plans as $plan) {
-			$plan_copy = new stdClass();
-			$plan_copy->id                 = $plan->id;
-			$plan_copy->text               = $plan->text;
-			$plan_copy->country            = $plan->country;
-			$plan_copy->min_amount         = $plan->min_amount;
-			$plan_copy->min_deposit        = $plan->min_deposit;
-			$plan_copy->max_deposit        = $plan->max_deposit;
-			$plan_copy->interest_rate      = $plan->interest_rate;
-			$plan_copy->deferral_period    = $plan->deferral_period;
-			$plan_copy->agreement_duration = $plan->agreement_duration;
-
-			$plans_plain[] = $plan_copy;
-		}
-
-		$this->cache->set(self::CACHE_KEY_PLANS, $plans_plain);
-
-		return $plans_plain;
-	}
-
-	public function getLookupByOrderId($order_id) {
-		return $this->db->query("SELECT * FROM `" . DB_PREFIX . "divido_lookup` WHERE `order_id` = " . (int)$order_id);
-	}
-
-	public function install() {
-		$this->db->query("
-			CREATE TABLE IF NOT EXISTS `" . DB_PREFIX . "divido_product` (
-				`product_id` INT(11) NOT NULL,
-				`display` CHAR(7) NOT NULL,
-				`plans` text,
-				PRIMARY KEY (`product_id`)
-			) ENGINE=MyISAM DEFAULT COLLATE=utf8_general_ci;");
-
-		$this->db->query("
-			CREATE TABLE IF NOT EXISTS `" . DB_PREFIX . "divido_lookup` (
-				`order_id` INT(11) NOT NULL,
-				`salt` CHAR(64) NOT NULL,
-				`proposal_id` CHAR(40),
-				`application_id` CHAR(40),
-				`deposit_amount` NUMERIC(6,2),
-			  PRIMARY KEY (`order_id`)
-			) ENGINE=MyISAM DEFAULT COLLATE=utf8_general_ci;");
-	}
-
-	public function uninstall() {
-		$this->db->query("DROP TABLE IF EXISTS `" . DB_PREFIX . "divido_product`;");
-		$this->db->query("DROP TABLE IF EXISTS `" . DB_PREFIX . "divido_lookup`;");
-	}
-}
diff --git a/upload/admin/view/template/extension/module/divido_calculator.twig b/upload/admin/view/template/extension/module/divido_calculator.twig
deleted file mode 100644
index 37f3516719e..00000000000
--- a/upload/admin/view/template/extension/module/divido_calculator.twig
+++ /dev/null
@@ -1,47 +0,0 @@
-{{ header }}{{ column_left }}
-<div id="content">
-  <div class="page-header">
-    <div class="container-fluid">
-      <div class="pull-right">
-        <button type="submit" form="form-module" data-toggle="tooltip" title="{{ button_save }}" class="btn btn-primary"><i class="fa fa-save"></i></button>
-        <a href="{{ cancel }}" data-toggle="tooltip" title="{{ button_cancel }}" class="btn btn-default"><i class="fa fa-reply"></i></a></div>
-      <h1>{{ heading_title }}</h1>
-      <ul class="breadcrumb">
-        {% for breadcrumb in breadcrumbs %}
-        <li><a href="{{ breadcrumb.href }}">{{ breadcrumb.text }}</a></li>
-        {% endfor %}
-      </ul>
-    </div>
-  </div>
-  <div class="container-fluid">
-    {% if error_warning %}
-    <div class="alert alert-danger alert-dismissible"><i class="fa fa-exclamation-circle"></i> {{ error_warning }}
-      <button type="button" class="close" data-dismiss="alert">&times;</button>
-    </div>
-    {% endif %}
-    <div class="panel panel-default">
-      <div class="panel-heading">
-        <h3 class="panel-title"><i class="fa fa-pencil"></i> {{ text_edit }}</h3>
-      </div>
-      <div class="panel-body">
-        <form action="{{ action }}" method="post" enctype="multipart/form-data" id="form-module" class="form-horizontal">
-          <div class="form-group">
-            <label class="col-sm-2 control-label" for="input-status">{{ entry_status }}</label>
-            <div class="col-sm-10">
-              <select name="module_divido_calculator_status" id="input-status" class="form-control">
-                {% if module_divido_calculator_status %}
-                <option value="1" selected="selected">{{ text_enabled }}</option>
-                <option value="0">{{ text_disabled }}</option>
-                {% else %}
-                <option value="1">{{ text_enabled }}</option>
-                <option value="0" selected="selected">{{ text_disabled }}</option>
-               {% endif %}
-              </select>
-            </div>
-          </div>
-        </form>
-      </div>
-    </div>
-  </div>
-</div>
-{{ footer }}
diff --git a/upload/admin/view/template/extension/payment/divido.twig b/upload/admin/view/template/extension/payment/divido.twig
deleted file mode 100644
index c569d862f27..00000000000
--- a/upload/admin/view/template/extension/payment/divido.twig
+++ /dev/null
@@ -1,232 +0,0 @@
-{{ header }} {{ column_left }}
-<div id="content">
-    <div class="page-header">
-        <div class="container-fluid">
-            <div class="pull-right">
-                <button type="submit" form="form-payment" data-toggle="tooltip" title="{{ button_save }}" class="btn btn-primary"><i class="fa fa-save"></i></button>
-                <a href="{{ cancel }}" data-toggle="tooltip" title="{{ button_cancel }}" class="btn btn-default"><i class="fa fa-reply"></i></a></div>
-            <h1>{{ heading_title }}</h1>      <ul class="breadcrumb">
-        {% for breadcrumb in breadcrumbs %}
-        <li><a href="{{ breadcrumb.href }}">{{ breadcrumb.text }}</a></li>
-        {% endfor %}
-      </ul>
-        </div>
-    </div>
-    <div class="container-fluid">
-	{% if error_warning %}
-		<div class="alert alert-danger alert-dismissible"><i class="fa fa-exclamation-circle"></i> {{ error_warning }}
-		  <button type="button" class="close" data-dismiss="alert">&times;</button>
-		</div>
-	{% endif %}
-        <div class="panel panel-default">
-            <div class="panel-heading">
-                <h3 class="panel-title"><i class="fa fa-pencil"></i> {{ text_edit }}</h3>
-            </div>
-            <div class="panel-body">
-                <form action="{{ action }}" method="post" enctype="multipart/form-data" id="form-payment" class="form-horizontal">
-
-                    <div class="form-group">
-                        <label class="col-sm-2 control-label" for="api_key"><span data-toggle="tooltip" title="{{ help_api_key }}">{{ entry_api_key }}</span></label>
-                        <div class="col-sm-10">
-                            <input id="api_key" class="form-control" type="text" name="payment_divido_api_key" value="{{ payment_divido_api_key }}" size="60">
-                        </div>
-                    </div>
-
-                    <div class="form-group">
-                        <label class="col-sm-2 control-label" for="divido_status"><span data-toggle="tooltip" title="{{ help_status }}">{{ entry_status }}</span></label>
-                        <div class="col-sm-10">
-                            <select name="payment_divido_status" id="divido_status" class="form-control">
-                                {% if payment_divido_status %}
-                                <option value="1" selected="selected">{{ text_enabled }}</option>
-                                <option value="0">{{ text_disabled }}</option>
-                                {% else %}
-                                <option value="1">{{ text_enabled }}</option>
-                                <option value="0" selected="selected">{{ text_disabled }}</option>
-                                {% endif %}
-                            </select>
-                        </div>
-                    </div>
-
-                    <div class="form-group">
-                        <label class="col-sm-2 control-label" for="divido_order_status_id"><span data-toggle="tooltip" title="{{ help_order_status }}">{{ entry_order_status }}</span></label>
-                        <div class="col-sm-10">
-                            <select name="payment_divido_order_status_id" id="divido_order_status_id" class="form-control">
-                                {% for order_status in order_statuses %}
-                                {% if order_status.order_status_id == payment_divido_order_status_id %}
-                                <option value="{{ order_status.order_status_id }}" selected="selected">{{ order_status.name }}</option>
-                                {% else %}
-                                <option value="{{ order_status.order_status_id }}">{{ order_status.name }}</option>
-                                {% endif %}
-                                {% endfor %}
-                            </select>
-                        </div>
-                    </div>
-
-                    <div class="form-group">
-                        <label class="col-sm-2 control-label" for="divido_title"><span data-toggle="tooltip" title="{{ help_title }}">{{ entry_title }}</span></label>
-                        <div class="col-sm-10">
-                            <input type="text" id="divido_title" name="payment_divido_title" value="{{ payment_divido_title }}" class="form-control">
-                        </div>
-                    </div>
-
-                    <div class="form-group">
-                        <label class="col-sm-2 control-label" for="divido_planselection"><span data-toggle="tooltip" title="{{ help_planselection }}">{{ entry_planselection }}</span></label>
-                        <div class="col-sm-10">
-                            <select name="payment_divido_planselection" id="divido_planselection" class="form-control">
-                                {% for option, text in entry_plans_options %}
-                                {% if option == payment_divido_planselection %}
-                                <option value="{{ option }}" selected="selected">{{ text }}</option>
-                                {% else %}
-                                <option value="{{ option }}">{{ text }}</option>
-                                {% endif %}
-                                {% endfor %}
-                            </select>
-                        </div>
-                    </div>
-
-                    <div id="plan-list" class="form-group">
-                        <label class="col-sm-2 control-label">{{ entry_planlist }}</label>
-                        <div class="col-sm-10">
-                            {% for plan in divido_plans %}
-                            {% if plan.id in payment_divido_plans_selected %}
-                            <label>
-                                <input type="checkbox" name="payment_divido_plans_selected[]" value="{{ plan.id }}" checked="checked">
-                                {{ plan.text }} {{ plan.interest_rate }}% APR
-                            </label><br>
-                            {% else %}
-                            <label>
-                                <input type="checkbox" name="payment_divido_plans_selected[]" value="{{ plan.id }}">
-                                {{ plan.text }} {{ plan.interest_rate }}% APR
-                            </label><br>
-                            {% endif %}
-                            {% endfor %}
-                        </div>
-                    </div>
-
-                    <div class="form-group">
-                        <label class="col-sm-2 control-label" for="payment_divido_productselection"><span data-toggle="tooltip" title="{{ help_productselection }}">{{ entry_productselection }}</span></label>
-                        <div class="col-sm-10">
-                            <select name="payment_divido_productselection" id="divido_productselection" class="form-control">
-                                {% for option, text in entry_products_options %}
-                                {% if option == payment_divido_productselection %}
-                                <option value="{{ option }}" selected="selected">{{ text }}</option>
-                                {% else %}
-                                <option value="{{ option }}">{{ text }}</option>
-                                {% endif %}
-                                {% endfor %}
-                            </select>
-                        </div>
-                    </div>
-
-                    <div id="threshold" class="form-group">
-                        <label class="col-sm-2 control-label" for="divido_price_threshold">{{ entry_price_threshold }}</label>
-                        <div class="col-sm-10">
-                            <input type="text" name="payment_divido_price_threshold" value="{{ payment_divido_price_threshold }}" class="form-control" id="divido_price_threshold">
-                        </div>
-                    </div>
-
-                    <div id="cart-threshold" class="form-group">
-                        <label class="col-sm-2 control-label" for="divido_cart_threshold"><span data-toggle="tooltip" title="{{ help_cart_threshold }}">{{ entry_cart_threshold }}</span></label>
-                        <div class="col-sm-10">
-                            <input type="text" name="payment_divido_cart_threshold" value="{{ payment_divido_cart_threshold }}" class="form-control" id="divido_cart_threshold">
-                        </div>
-                    </div>
-
-                    <div class="form-group">
-                        <label class="col-sm-2 control-label" for="sort_order">{{ entry_sort_order }}</label>
-                        <div class="col-sm-10">
-                            <input type="text" id="payment_divido_sort_order" class="form-control" name="payment_divido_sort_order" value="{{ payment_divido_sort_order }}" size="1">
-                        </div>
-                    </div>
-
-                    <div class="form-group">
-                        <label class="col-sm-2 control-label" for="category"><span data-toggle="tooltip" title="{{ help_category }}">{{ entry_category }}</span></label>
-                        <div class="col-sm-10">
-                            <input type="text" name="category" value="" placeholder="{{ entry_category }}" id="category" class="form-control" />
-                            <div id="divido-category" class="well well-sm" style="height: 150px; overflow: auto;">
-                            {% for category in categories %}
-                                <div id="category{{ category.category_id }}"><i class="fa fa-minus-circle"></i> {{ category.name }}
-                                    <input type="hidden" name="payment_divido_categories[]" value="{{ category.category_id }}" />
-                                </div>
-                            {% endfor %}
-                            </div>
-                        </div>
-                    </div>
-
-                </form>
-            </div>
-        </div>
-    </div>
-</div>
-<script>
-(function($) {
-    var divido = {
-        initialize: function () {
-            this.bindEvents();
-            this.toggleFields();
-        },
-
-        bindEvents: function () {
-            $('#divido_productselection').on('change', this.toggleFields);
-            $('#divido_planselection').on('change', this.toggleFields);
-
-        },
-
-        toggleFields: function () {
-            var $apiKeyField = $('#api_key');
-
-            if ($apiKeyField.val().length < 1) {
-                $apiKeyField.closest('.form-group').siblings().hide();
-            }
-
-            var productSelection = $('#divido_productselection').val();
-            var $threshold       = $('#threshold');
-            if (productSelection == 'threshold') {
-                $threshold.show();
-            } else {
-                $threshold.hide();
-            }
-
-            var planSelection = $('#divido_planselection').val();
-            var $planList     = $('#plan-list');
-            if (planSelection == 'selected') {
-                $planList.show();
-            } else {
-                $planList.hide();
-            }
-        }
-    };
-
-    $(function () {
-        divido.initialize();
-    });
-
-	$('input[name="category"]').autocomplete({
-		source: function(request, response) {
-			$.ajax({
-				url: 'index.php?route=catalog/category/autocomplete&user_token={{ user_token }}&filter_name=' +  encodeURIComponent(request),
-				dataType: 'json',
-				success: function(json) {
-					response($.map(json, function(item) {
-						return {
-							label: item['name'],
-							value: item['category_id']
-						}
-					}));
-				}
-			});
-		},
-		select: function(item) {
-			$('input[name=\'category\']').val('');
-			$('#divido-category' + item['value']).remove();
-			$('#divido-category').append('<div id="divido-category' + item['value'] + '"><i class="fa fa-minus-circle"></i> ' + item['label'] + '<input type="hidden" name="payment_divido_categories[]" value="' + item['value'] + '" /></div>');
-		}
-	});
-
-	$('#divido-category').delegate('.fa-minus-circle', 'click', function() {
-		$(this).parent().remove();
-	});
-
-})(jQuery);
-</script>
-{{ footer }}
diff --git a/upload/admin/view/template/extension/payment/divido_order.twig b/upload/admin/view/template/extension/payment/divido_order.twig
deleted file mode 100644
index 955158c7ae8..00000000000
--- a/upload/admin/view/template/extension/payment/divido_order.twig
+++ /dev/null
@@ -1,21 +0,0 @@
-<table class="table table-bordered">
-    <thead>
-        <tr>
-            <th colspan="2">{{ text_order_info }}</th>
-        </tr>
-    </thead>
-    <tbody>
-        <tr>
-            <td>{{ text_proposal_id }}</td>
-            <td>{{ proposal_id }}</td>
-        </tr>
-        <tr>
-            <td>{{ text_application_id }}</td>
-            <td>{{ application_id }}</td>
-        </tr>
-        <tr>
-            <td>{{ text_deposit_amount }}</td>
-            <td>{{ deposit_amount }}</td>
-        </tr>
-    </tbody>
-</table>
diff --git a/upload/catalog/controller/extension/module/divido_calculator.php b/upload/catalog/controller/extension/module/divido_calculator.php
deleted file mode 100644
index 40a7b3e200b..00000000000
--- a/upload/catalog/controller/extension/module/divido_calculator.php
+++ /dev/null
@@ -1,53 +0,0 @@
-<?php
-class ControllerExtensionModuleDividoCalculator extends Controller {
-	public function index() {
-		$this->load->language('extension/module/divido_calculator');
-		$this->load->model('extension/payment/divido');
-		$this->load->model('catalog/product');
-
-		$product_selection = $this->config->get('payment_divido_productselection');
-		$product_threshold = $this->config->get('payment_divido_price_threshold');
-
-		if (!isset($this->request->get['product_id']) || !$this->config->get('payment_divido_status') || !$this->config->get('module_divido_calculator_status')) {
-			return false;
-		}
-
-		$product_info = $this->model_catalog_product->getProduct($this->request->get['product_id']);
-
-		$price = 0;
-		if (($this->config->get('config_customer_price') && $this->customer->isLogged()) || !$this->config->get('config_customer_price')) {
-			$base_price = !empty($product_info['special']) ? $product_info['special'] : $product_info['price'];
-			$price = $this->tax->calculate($base_price, $product_info['tax_class_id'], $this->config->get('config_tax'));
-		}
-
-		if ($product_selection == 'threshold' && $product_threshold > $price) {
-			return false;
-		}
-
-		$api_key = $this->config->get('payment_divido_api_key');
-		$key_parts = explode('.', $api_key);
-		$js_key = strtolower(array_shift($key_parts));
-
-		$this->model_extension_payment_divido->setMerchant($api_key);
-		$plans = $this->model_extension_payment_divido->getProductPlans($this->request->get['product_id']);
-
-		if (!$plans) {
-			return false;
-		}
-
-		$plans_ids = array_map(function ($plan) {
-			return $plan->id;
-		}, $plans);
-		$plans_ids = array_unique($plans_ids);
-		$plans_list = implode(',', $plans_ids);
-
-		$data = array(
-			'merchant_script'			=> "//cdn.divido.com/calculator/{$js_key}.js",
-			'product_price'				=> $price,
-			'plan_list'					=> $plans_list,
-			'generic_credit_req_error'	=> 'Credit request could not be initiated',
-		);
-
-		return $this->load->view('extension/module/divido_calculator', $data);
-	}
-}
diff --git a/upload/catalog/controller/extension/payment/divido.php b/upload/catalog/controller/extension/payment/divido.php
deleted file mode 100644
index ad69ae015bc..00000000000
--- a/upload/catalog/controller/extension/payment/divido.php
+++ /dev/null
@@ -1,301 +0,0 @@
-<?php
-class ControllerExtensionPaymentDivido extends Controller {
-	const
-		STATUS_ACCEPTED = 'ACCEPTED',
-		STATUS_ACTION_LENDER = 'ACTION-LENDER',
-		STATUS_CANCELED = 'CANCELED',
-		STATUS_COMPLETED = 'COMPLETED',
-		STATUS_DEPOSIT_PAID = 'DEPOSIT-PAID',
-		STATUS_DECLINED = 'DECLINED',
-		STATUS_DEFERRED = 'DEFERRED',
-		STATUS_REFERRED = 'REFERRED',
-		STATUS_FULFILLED = 'FULFILLED',
-		STATUS_SIGNED = 'SIGNED';
-
-	private $status_id = array(
-		self::STATUS_ACCEPTED => 1,
-		self::STATUS_ACTION_LENDER => 2,
-		self::STATUS_CANCELED => 0,
-		self::STATUS_COMPLETED => 2,
-		self::STATUS_DECLINED => 8,
-		self::STATUS_DEFERRED => 1,
-		self::STATUS_REFERRED => 1,
-		self::STATUS_DEPOSIT_PAID => 1,
-		self::STATUS_FULFILLED => 1,
-		self::STATUS_SIGNED => 2,
-	);
-
-	private $history_messages = array(
-		self::STATUS_ACCEPTED => 'Credit request accepted',
-		self::STATUS_ACTION_LENDER => 'Lender notified',
-		self::STATUS_CANCELED => 'Credit request canceled',
-		self::STATUS_COMPLETED => 'Credit application completed',
-		self::STATUS_DECLINED => 'Credit request declined',
-		self::STATUS_DEFERRED => 'Credit request deferred',
-		self::STATUS_REFERRED => 'Credit request referred',
-		self::STATUS_DEPOSIT_PAID => 'Deposit paid',
-		self::STATUS_FULFILLED => 'Credit request fulfilled',
-		self::STATUS_SIGNED => 'Contract signed',
-	);
-
-	public function index() {
-		$this->load->language('extension/payment/divido');
-		$this->load->model('extension/payment/divido');
-		$this->load->model('checkout/order');
-
-		$api_key   = $this->config->get('payment_divido_api_key');
-		$key_parts = explode('.', $api_key);
-		$js_key    = strtolower(array_shift($key_parts));
-
-		list($total, $totals) = $this->model_extension_payment_divido->getOrderTotals();
-
-		$this->model_extension_payment_divido->setMerchant($this->config->get('payment_divido_api_key'));
-
-		$plans = $this->model_extension_payment_divido->getCartPlans($this->cart);
-		foreach ($plans as $key => $plan) {
-			$planMinTotal = $total - ($total * ($plan->min_deposit / 100));
-			if ($plan->min_amount > $planMinTotal) {
-				unset($plans[$key]);
-			}
-		}
-
-		$plans_ids  = array_map(function ($plan) {
-			return $plan->id;
-		}, $plans);
-		$plans_ids  = array_unique($plans_ids);
-		$plans_list = implode(',', $plans_ids);
-
-		$data = array(
-			'button_confirm'           => $this->language->get('divido_checkout'),
-			'merchant_script'          => "//cdn.divido.com/calculator/{$js_key}.js",
-			'grand_total'              => $total,
-			'plan_list'                => $plans_list,
-			'generic_credit_req_error' => 'Credit request could not be initiated',
-		);
-
-		return $this->load->view('extension/payment/divido', $data);
-	}
-
-	public function update() {
-		$this->load->language('extension/payment/divido');
-		$this->load->model('extension/payment/divido');
-		$this->load->model('checkout/order');
-
-		$data = json_decode(file_get_contents('php://input'));
-
-		if (!isset($data->status)) {
-			$this->response->setOutput('');
-			return;
-		}
-
-		$lookup = $this->model_extension_payment_divido->getLookupByOrderId($data->metadata->order_id);
-		if ($lookup->num_rows != 1) {
-			$this->response->setOutput('');
-			return;
-		}
-
-		$hash = $this->model_extension_payment_divido->hashOrderId($data->metadata->order_id, $lookup->row['salt']);
-		if ($hash !== $data->metadata->order_hash) {
-			$this->response->setOutput('');
-			return;
-		}
-
-		$order_id = $data->metadata->order_id;
-		$order_info = $this->model_checkout_order->getOrder($order_id);
-		$status_id = $order_info['order_status_id'];
-		$message = "Status: {$data->status}";
-		if (isset($this->history_messages[$data->status])) {
-			$message = $this->history_messages[$data->status];
-		}
-
-		if ($data->status == self::STATUS_SIGNED) {
-			$status_override = $this->config->get('payment_divido_order_status_id');
-			if (!empty($status_override)) {
-				$this->status_id[self::STATUS_SIGNED] = $status_override;
-			}
-		}
-
-		if (isset($this->status_id[$data->status]) && $this->status_id[$data->status] > $status_id) {
-			$status_id = $this->status_id[$data->status];
-		}
-
-		if ($data->status == self::STATUS_DECLINED && $order_info['order_status_id'] == 0) {
-			$status_id = 0;
-		}
-
-		$this->model_extension_payment_divido->saveLookup($data->metadata->order_id, $lookup->row['salt'], null, $data->application);
-		$this->model_checkout_order->addOrderHistory($order_id, $status_id, $message, false);
-		$this->response->setOutput('ok');
-	}
-
-	public function confirm() {
-		$this->load->language('extension/payment/divido');
-
-		$this->load->model('extension/payment/divido');
-
-		ini_set('html_errors', 0);
-		if (!$this->session->data['payment_method']['code'] == 'divido') {
-			return false;
-		}
-
-		$this->model_extension_payment_divido->setMerchant($this->config->get('payment_divido_api_key'));
-
-		$api_key   = $this->config->get('payment_divido_api_key');
-
-		$deposit = $this->request->post['deposit'];
-		$finance = $this->request->post['finance'];
-
-		$address = $this->session->data['payment_address'];
-		if (isset($this->session->data['shipping_address'])) {
-			$address = $this->session->data['shipping_address'];
-		}
-
-		$country  = $address['iso_code_2'];
-		$language = strtoupper($this->language->get('code'));
-		$currency = strtoupper($this->session->data['currency']);
-		$order_id = $this->session->data['order_id'];
-
-		if ($this->customer->isLogged()) {
-			$this->load->model('account/customer');
-			$customer_info = $this->model_account_customer->getCustomer($this->customer->getId());
-
-			$firstname = $customer_info['firstname'];
-			$lastname  = $customer_info['lastname'];
-			$email     = $customer_info['email'];
-			$telephone = $customer_info['telephone'];
-		} elseif (isset($this->session->data['guest'])) {
-			$firstname = $this->session->data['guest']['firstname'];
-			$lastname  = $this->session->data['guest']['lastname'];
-			$email     = $this->session->data['guest']['email'];
-			$telephone = $this->session->data['guest']['telephone'];
-		}
-
-		$postcode  = $address['postcode'];
-
-		$products  = array();
-		foreach ($this->cart->getProducts() as $product) {
-			$products[] = array(
-				'type' => 'product',
-				'text' => $product['name'],
-				'quantity' => $product['quantity'],
-				'value' => $product['price'],
-			);
-		}
-
-		list($total, $totals) = $this->model_extension_payment_divido->getOrderTotals();
-
-		$sub_total  = $total;
-		$cart_total = $this->cart->getSubTotal();
-		$shiphandle = $sub_total - $cart_total;
-
-		$products[] = array(
-			'type'     => 'product',
-			'text'     => 'Shipping & Handling',
-			'quantity' => 1,
-			'value'    => $shiphandle,
-		);
-
-		$deposit_amount = round(($deposit / 100) * $total, 2, PHP_ROUND_HALF_UP);
-
-		$shop_url = $this->config->get('config_url');
-		if (isset($this->request->server['HTTPS']) && (($this->request->server['HTTPS'] == 'on') || ($this->request->server['HTTPS'] == '1'))) {
-			$shop_url = $this->config->get('config_ssl');
-		}
-
-		$callback_url = $this->url->link('extension/payment/divido/update', '', true);
-		$return_url = $this->url->link('checkout/success', '', true);
-		$checkout_url = $this->url->link('checkout/checkout', '', true);
-
-		$salt = uniqid('', true);
-		$hash = $this->model_extension_payment_divido->hashOrderId($order_id, $salt);
-
-		$request_data = array(
-			'merchant' => $api_key,
-			'deposit'  => $deposit_amount,
-			'finance'  => $finance,
-			'country'  => $country,
-			'language' => $language,
-			'currency' => $currency,
-			'metadata' => array(
-				'order_id'   => $order_id,
-				'order_hash' => $hash,
-			),
-			'customer' => array(
-				'title'         => '',
-				'first_name'    => $firstname,
-				'middle_name'   => '',
-				'last_name'     => $lastname,
-				'country'       => $country,
-				'postcode'      => $postcode,
-				'email'         => $email,
-				'mobile_number' => '',
-				'phone_number'  => $telephone,
-			),
-			'products'     => $products,
-			'response_url' => $callback_url,
-			'redirect_url' => $return_url,
-			'checkout_url' => $checkout_url,
-		);
-
-		$response = Divido_CreditRequest::create($request_data);
-
-		if ($response->status == 'ok') {
-
-			$this->model_extension_payment_divido->saveLookup($order_id, $salt, $response->id, null, $deposit_amount);
-
-			$data = array(
-				'status' => 'ok',
-				'url'    => $response->url,
-			);
-		} else {
-			$data = array(
-				'status'  => 'error',
-				'message' => $this->language->get($response->error),
-			);
-		}
-
-		$this->response->setOutput(json_encode($data));
-	}
-
-	public function calculator($args) {
-		$this->load->language('extension/payment/divido');
-
-		$this->load->model('extension/payment/divido');
-
-		if (!$this->model_extension_payment_divido->isEnabled()) {
-			return null;
-		}
-
-		$this->model_extension_payment_divido->setMerchant($this->config->get('payment_divido_api_key'));
-
-		$product_selection = $this->config->get('payment_divido_productselection');
-		$price_threshold   = $this->config->get('payment_divido_price_threshold');
-		$product_id        = $args['product_id'];
-		$product_price     = $args['price'];
-		$type              = $args['type'];
-
-		if ($product_selection == 'threshold' && $product_price < $price_threshold) {
-			return null;
-		}
-
-		$plans = $this->model_extension_payment_divido->getProductPlans($product_id);
-		if (empty($plans)) {
-			return null;
-		}
-
-		$plans_ids = array_map(function ($plan) {
-			return $plan->id;
-		}, $plans);
-
-		$plan_list = implode(',', $plans_ids);
-
-		$data = array(
-			'planList'     => $plan_list,
-			'productPrice' => $product_price
-		);
-
-		$filename = ($type == 'full') ? 'extension/payment/divido_calculator' : 'extension/payment/divido_widget';
-
-		return $this->load->view($filename, $data);
-	}
-}
diff --git a/upload/catalog/language/en-gb/extension/module/divido_calculator.php b/upload/catalog/language/en-gb/extension/module/divido_calculator.php
deleted file mode 100644
index 9912472d5f2..00000000000
--- a/upload/catalog/language/en-gb/extension/module/divido_calculator.php
+++ /dev/null
@@ -1,15 +0,0 @@
-<?php
-// Calculator
-$_['text_checkout_title']      = 'Pay in instalments';
-$_['text_choose_plan']         = 'Choose your plan';
-$_['text_choose_deposit']      = 'Choose your deposit';
-$_['text_monthly_payments']    = 'monthly payments of';
-$_['text_months']              = 'months';
-$_['text_term']                = 'Term';
-$_['text_deposit']             = 'Deposit';
-$_['text_credit_amount']       = 'Cost of credit';
-$_['text_amount_payable']      = 'Total payable';
-$_['text_total_interest']      = 'Total interest APR';
-$_['text_monthly_installment'] = 'Monthly installment';
-$_['text_redirection']         = 'You will be redirected to Divido to complete this finance application when you confirm your order';
-$_['text_divido']              = 'Divido';
\ No newline at end of file
diff --git a/upload/catalog/language/en-gb/extension/payment/divido.php b/upload/catalog/language/en-gb/extension/payment/divido.php
deleted file mode 100644
index 578e90699d0..00000000000
--- a/upload/catalog/language/en-gb/extension/payment/divido.php
+++ /dev/null
@@ -1,18 +0,0 @@
-<?php
-$_['text_checkout_title']      = 'Pay in instalments';
-$_['text_choose_plan']         = 'Choose your plan';
-$_['text_choose_deposit']      = 'Choose your deposit';
-$_['text_monthly_payments']    = 'monthly payments of';
-$_['text_months']              = 'months';
-$_['text_term']                = 'Term';
-$_['text_deposit']             = 'Deposit';
-$_['text_credit_amount']       = 'Cost of credit';
-$_['text_amount_payable']      = 'Total payable';
-$_['text_total_interest']      = 'Total interest APR';
-$_['text_monthly_installment'] = 'Monthly installment';
-$_['text_redirection']         = 'You will be redirected to Divido to complete this finance application when you confirm your order';
-$_['divido_checkout']          = 'Confirm and checkout with Divido';
-$_['deposit_to_low']           = 'Deposit to low';
-$_['credit_amount_to_low']     = 'Credit amount to low';
-$_['no_country']               = 'Country not accepted';
-$_['text_divido']              = 'Divido';
diff --git a/upload/catalog/model/extension/payment/divido.php b/upload/catalog/model/extension/payment/divido.php
deleted file mode 100644
index ba89f5acea4..00000000000
--- a/upload/catalog/model/extension/payment/divido.php
+++ /dev/null
@@ -1,316 +0,0 @@
-<?php
-class ModelExtensionPaymentDivido extends Model {
-	const CACHE_KEY_PLANS = 'divido_plans';
-
-	public function setMerchant($api_key) {}
-
-	public function getMethod($payment_address, $total) {
-		$this->load->language('extension/payment/divido');
-		$this->load->model('localisation/currency');
-
-		if (!$this->isEnabled()) {
-			return array();
-		}
-
-		if ($this->session->data['currency'] != 'GBP') {
-			return array();
-		}
-
-		if ($payment_address['iso_code_2'] != 'GB') {
-			return array();
-		}
-
-		$cart_threshold = $this->config->get('payment_divido_cart_threshold');
-		if ($cart_threshold > $total) {
-			return array();
-		}
-
-		$plans = $this->getCartPlans($this->cart);
-		$has_plan = false;
-
-		foreach ($plans as $plan) {
-			$planMinTotal = $total - ($total * ($plan->min_deposit / 100));
-			if ($plan->min_amount <= $planMinTotal) {
-				$has_plan = true;
-				break;
-			}
-		}
-
-		if (!$has_plan) {
-			return array();
-		}
-
-		$title = $this->language->get('text_checkout_title');
-		if ($title_override = $this->config->get('payment_divido_title')) {
-			$title = $title_override;
-		}
-
-		$method_data = array(
-			'code' => 'divido',
-			'title' => $title,
-			'terms' => '',
-			'sort_order' => $this->config->get('payment_divido_sort_order')
-		);
-
-		return $method_data;
-	}
-
-	public function getProductSettings($product_id) {
-		return $this->db->query("SELECT `display`, `plans` FROM `" . DB_PREFIX . "divido_product` WHERE `product_id` = '" . (int)$product_id . "'")->row;
-	}
-
-	public function isEnabled() {
-		$api_key = $this->config->get('payment_divido_api_key');
-		$enabled = $this->config->get('payment_divido_status');
-
-		return !empty($api_key) && $enabled == 1;
-	}
-
-	public function hashOrderId($order_id, $salt) {
-		return hash('sha256', $order_id . $salt);
-	}
-
-	public function saveLookup($order_id, $salt, $proposal_id = null, $application_id = null, $deposit_amount = null) {
-		$order_id = (int)$order_id;
-		$salt = $this->db->escape($salt);
-		$proposal_id = $this->db->escape($proposal_id);
-		$application_id = $this->db->escape($application_id);
-		$deposit_amount = $this->db->escape($deposit_amount);
-
-		$query_get_lookup = "SELECT `application_id` from `" . DB_PREFIX . "divido_lookup` WHERE order_id = " . $order_id;
-		$result_get_lookup = $this->db->query($query_get_lookup);
-
-		if ($result_get_lookup->num_rows == 0) {
-			$proposal_id = ($proposal_id) ? "'" . $proposal_id . "'" : 'NULL';
-			$application_id = ($application_id) ? "'" . $application_id . "'" : 'NULL';
-			$deposit_amount = ($deposit_amount) ? $deposit_amount : 'NULL';
-
-			$query_upsert = "INSERT INTO `" . DB_PREFIX . "divido_lookup` (`order_id`, `salt`, `proposal_id`, `application_id`, `deposit_amount`) VALUES (" . $order_id . ", '" . $salt . "', " . $proposal_id . ", " . $application_id . ", " . $deposit_amount . ")";
-		} else {
-			$query_upsert = "UPDATE `" . DB_PREFIX . "divido_lookup` SET `salt` = '" . $salt . "'";
-
-			if ($proposal_id) {
-				$query_upsert .= ", `proposal_id` = '" . $proposal_id . "'";
-			}
-
-			if ($application_id) {
-				$query_upsert .= ", `application_id` = '" . $application_id . "'";
-			}
-
-			if ($deposit_amount) {
-				$query_upsert .= ", `deposit_amount` = " . $deposit_amount;
-			}
-
-			$query_upsert .= " WHERE `order_id` = " . $order_id;
-		}
-
-		$this->db->query($query_upsert);
-	}
-
-	public function getLookupByOrderId($order_id) {
-		return $this->db->query("SELECT * FROM `" . DB_PREFIX . "divido_lookup` WHERE `order_id` = " . $order_id);
-	}
-	public function getGlobalSelectedPlans() {
-		$all_plans     = $this->getAllPlans();
-		$display_plans = $this->config->get('payment_divido_planselection');
-
-		if ($display_plans == 'all' || empty($display_plans)) {
-			return $all_plans;
-		}
-
-		$selected_plans = $this->config->get('payment_divido_plans_selected');
-		if (!$selected_plans) {
-			return array();
-		}
-
-		$plans = array();
-		foreach ($all_plans as $plan) {
-			if (in_array($plan->id, $selected_plans)) {
-				$plans[] = $plan;
-			}
-		}
-
-		return $plans;
-	}
-
-	public function getAllPlans() {
-		if ($plans = $this->cache->get(self::CACHE_KEY_PLANS)) {
-			// OpenCart 2.1 decodes json objects to associative arrays so we
-			// need to make sure we're getting a list of simple objects back.
-			$plans = array_map(function ($plan) {
-				return (object)$plan;
-			}, $plans);
-
-			return $plans;
-		}
-
-		$api_key = $this->config->get('payment_divido_api_key');
-		if (!$api_key) {
-			throw new Exception("No Divido api-key defined");
-		}
-
-		$response = Divido_Finances::all();
-		if ($response->status != 'ok') {
-			throw new Exception("Can't get list of finance plans from Divido!");
-		}
-
-		$plans = $response->finances;
-
-		// OpenCart 2.1 switched to json for their file storage cache, so
-		// we need to convert to a simple object.
-		$plans_plain = array();
-		foreach ($plans as $plan) {
-			$plan_copy = new stdClass();
-			$plan_copy->id                 = $plan->id;
-			$plan_copy->text               = $plan->text;
-			$plan_copy->country            = $plan->country;
-			$plan_copy->min_amount         = $plan->min_amount;
-			$plan_copy->min_deposit        = $plan->min_deposit;
-			$plan_copy->max_deposit        = $plan->max_deposit;
-			$plan_copy->interest_rate      = $plan->interest_rate;
-			$plan_copy->deferral_period    = $plan->deferral_period;
-			$plan_copy->agreement_duration = $plan->agreement_duration;
-
-			$plans_plain[] = $plan_copy;
-		}
-
-		$this->cache->set(self::CACHE_KEY_PLANS, $plans_plain);
-
-		return $plans_plain;
-	}
-
-	public function getCartPlans($cart)	{
-		$plans = array();
-		$products = $cart->getProducts();
-		foreach ($products as $product) {
-			$product_plans = $this->getProductPlans($product['product_id']);
-			if ($product_plans) {
-				$plans = array_merge($plans, $product_plans);
-			}
-		}
-
-		return $plans;
-	}
-
-	public function getPlans($default_plans) {
-		if ($default_plans) {
-			$plans = $this->getGlobalSelectedPlans();
-		} else {
-			$plans = $this->getAllPlans();
-		}
-
-		return $plans;
-	}
-
-	public function getOrderTotals() {
-		$totals = array();
-		$taxes = $this->cart->getTaxes();
-		$total = 0;
-
-		// Because __call can not keep var references so we put them into an array.
-		$total_data = array(
-			'totals' => &$totals,
-			'taxes'  => &$taxes,
-			'total'  => &$total
-		);
-
-		$this->load->model('setting/extension');
-
-		$sort_order = array();
-
-		$results = $this->model_setting_extension->getExtensions('total');
-
-		foreach ($results as $key => $value) {
-			$sort_order[$key] = $this->config->get('total_' . $value['code'] . '_sort_order');
-		}
-
-		array_multisort($sort_order, SORT_ASC, $results);
-
-		foreach ($results as $result) {
-			if ($this->config->get('total_' . $result['code'] . '_status')) {
-				$this->load->model('extension/total/' . $result['code']);
-
-				// We have to put the totals in an array so that they pass by reference.
-				$this->{'model_extension_total_' . $result['code']}->getTotal($total_data);
-			}
-		}
-
-		$sort_order = array();
-
-		foreach ($totals as $key => $value) {
-			$sort_order[$key] = $value['sort_order'];
-		}
-
-		array_multisort($sort_order, SORT_ASC, $totals);
-
-		return array($total, $totals);
-	}
-
-	public function getProductPlans($product_id) {
-		$this->load->model('catalog/product');
-
-		$product_info       = $this->model_catalog_product->getProduct($product_id);
-		$settings           = $this->getProductSettings($product_id);
-		$product_selection  = $this->config->get('payment_divido_productselection');
-		$divido_categories  = $this->config->get('payment_divido_categories');
-		$price_threshold    = $this->config->get('payment_divido_price_threshold');
-
-		if ($divido_categories) {
-			$product_categories = $this->model_catalog_product->getCategories($product_id);
-
-			$all_categories = array();
-			foreach ($product_categories as $product_category) {
-				$all_categories[] = $product_category['category_id'];
-			}
-			$category_matches = array_intersect($all_categories, $divido_categories);
-
-			if (!$category_matches) {
-				return null;
-			}
-		}
-
-		if (empty($settings)) {
-			$settings = array(
-				'display' => 'default',
-				'plans'   => '',
-			);
-		}
-
-		if ($product_selection == 'selected' && $settings['display'] == 'custom' && empty($settings['plans'])) {
-			return null;
-		}
-
-		$price = 0;
-		if (($this->config->get('config_customer_price') && $this->customer->isLogged()) || !$this->config->get('config_customer_price')) {
-			$base_price = !empty($product_info['special']) ? $product_info['special'] : $product_info['price'];
-			$price = $this->tax->calculate($base_price, $product_info['tax_class_id'], $this->config->get('config_tax'));
-		}
-
-		if ($product_selection == 'threshold' && !empty($price_threshold) && $price < $price_threshold) {
-			return null;
-		}
-
-		if ($settings['display'] == 'default') {
-			$plans = $this->getPlans(true);
-			return $plans;
-		}
-
-		// If the product has non-default plans, fetch all of them.
-		$available_plans = $this->getPlans(false);
-		$selected_plans  = explode(',', $settings['plans']);
-
-		$plans = array();
-		foreach ($available_plans as $plan) {
-			if (in_array($plan->id, $selected_plans)) {
-				$plans[] = $plan;
-			}
-		}
-
-		if (empty($plans)) {
-			return null;
-		}
-
-		return $plans;
-	}
-
-}
diff --git a/upload/catalog/view/theme/default/template/extension/payment/divido.twig b/upload/catalog/view/theme/default/template/extension/payment/divido.twig
deleted file mode 100644
index bca1884c17c..00000000000
--- a/upload/catalog/view/theme/default/template/extension/payment/divido.twig
+++ /dev/null
@@ -1,408 +0,0 @@
-<style>
-.divido-calculator {
-	padding:10px 20px 20px 20px;
-	text-shadow:none;
-	-webkit-box-shadow: rgba(0, 0, 0, 0.2) 0 1px 2px 0, rgba(0, 0, 0, 0.05) 0 0 0 5px;
-	-moz-box-shadow: rgba(0, 0, 0, 0.2) 0 1px 2px 0, rgba(0, 0, 0, 0.05) 0 0 0 5px;
-	-ms-box-shadow: rgba(0, 0, 0, 0.2) 0 1px 2px 0, rgba(0, 0, 0, 0.05) 0 0 0 5px;
-	-o-box-shadow: rgba(0, 0, 0, 0.2) 0 1px 2px 0, rgba(0, 0, 0, 0.05) 0 0 0 5px;
-	box-shadow: rgba(0, 0, 0, 0.2) 0 1px 2px 0, rgba(0, 0, 0, 0.05) 0 0 0 5px;
-	-webkit-border-radius: 5px;
-	-moz-border-radius: 5px;
-	-ms-border-radius: 5px;
-	-o-border-radius: 5px;
-	border-radius: 5px;
-	border: 1px solid #555;
-	border-color: #d9d7ce #c8c6c1 #B0AEA6;
-	margin:20px;
-}
-
-#divido-checkout {
-	margin:0px;
-}
-
-.divido-calculator h1 {
-    color: white;
-    font-size: 24px;
-}
-
-@media screen and (min-width: 550px) {
-    .divido-calculator h1 {
-        font-size: 33px;
-    }
-}
-
-.divido-calculator dl {
-	width: 100%;
-	overflow: hidden;
-	padding: 0;
-	margin: 0
-}
-
-.divido-calculator dt,.divido-calculator dd {
-	float: left;
-	padding: 2px 0px;
-	margin: 0
-}
-
-
-.divido-calculator > dl > dt, .divido-calculator > dl > dd {
-    min-width: 150px;
-}
-
-.divido-calculator > dl > dt, .divido-calculator > dl > dd {
-    width: 100%;
-}
-
-.divido-calculator > dl > dt {
-    margin-bottom: 20px;
-}
-
-@media screen and (min-width: 960px) {
-    .divido-calculator > dl > dt, .divido-calculator > dl > dd {
-        width: 50%;
-    }
-
-    .divido-calculator > dl > dt {
-        margin-bottom: auto;
-    }
-}
-
-.divido-calculator div.divido-info dl dt, .divido-calculator div.divido-info dl dd {
-    width: 100%;
-}
-.divido-calculator div.divido-info dl dd {
-    padding-left: 5px;
-}
-@media screen and (min-width: 350px) {
-    .divido-calculator div.divido-info dl dt {
-        width: 70%;
-    }
-    .divido-calculator div.divido-info dl dd {
-        width: 30%;
-    }
-}
-@media screen and (min-width: 450px) {
-    .divido-calculator div.divido-info dl dt, .divido-calculator div.divido-info dl dd {
-        width: 50%;
-    }
-}
-@media screen and (min-width: 550px) {
-    .divido-calculator div.divido-info dl dt {
-        width: 40%;
-    }
-    .divido-calculator div.divido-info dl dd {
-        width: 60%;
-    }
-}
-
-@media screen and (min-width: 1080px) {
-	.divido-calculator div.divido-info dl dt {
-		width: 30%;
-	}
-	.divido-calculator div.divido-info dl dd {
-		width: 70%;
-	}
-}
-
-.divido-calculator input[type=range]{
-	-webkit-appearance: none;
-	display:inline-block;
-	width:80%;
-	border:0px;
-	padding:0px;
-}
-
-@media screen and (min-width: 450px) {
-    .divido-calculator input[type=range]{
-	    width:85%;
-    }
-}
-
-@media screen and (min-width: 550px) {
-    .divido-calculator input[type=range]{
-	    width:90%;
-    }
-}
-
-.divido-calculator select {
-	text-transform: none;
-	width: 100%;
-}
-
-@media screen and (min-width: 960px) {
-    .divido-calculator select {
-        width: 80%;
-    }
-}
-
-.divido-calculator div.description {
-	font-size:13px;
-	margin-top:15px;
-	margin-bottom:20px;
-}
-
-.divido-calculator .divido-info {
-	-webkit-border-radius: 5px;
-	-moz-border-radius: 5px;
-	-ms-border-radius: 5px;
-	-o-border-radius: 5px;
-	border-radius: 5px;
-}
-
-.divido-calculator .divido-deposit span {
-	display:inline-block;
-	margin-left:4px;
-	line-height:15px;
-	vertical-align:top;
-}
-
-.divido-calculator input[type=range]::-webkit-slider-runnable-track {
-	height: 5px;
-	border: none;
-	border-radius: 3px;
-}
-
-.divido-calculator label {
-	display:block;
-	clear:both;
-	font-weight:bold;
-}
-
-.divido-calculator input[type=range]::-webkit-slider-thumb {
-	-webkit-appearance: none;
-	border: none;
-	height: 16px;
-	width: 16px;
-	border-radius: 50%;
-	margin-top: -4px;
-}
-
-.divido-calculator input[type=range]:focus {
-	outline: none !important;
-	border:0px !important;
-}
-
-.divido-calculator .divido-logo {
-	width: 140px;
-	height: 42px;
-	display: block;
-	font-size: 20px;
-	line-height: 1;
-	text-indent: -9999px;
-	background-image:url('//content.divido.com.s3-eu-west-1.amazonaws.com/images/logo-black-140x42.png');
-	background-repeat: no-repeat;
-	background-size: cover;
-}
-
-.divido-calculator .divido-logo-sm {
-	width: 75px;
-	height: 23px;
-	background-image:url('//content.divido.com.s3-eu-west-1.amazonaws.com/images/logo-black-75x23.png');
-}
-
-.divido-calculator .divido-info {
-	padding:20px;
-}
-
-
-/* 			*/
-
-.divido-them-light .divido-info {
-	background:#f9f9f9;
-}
-
-.divido-theme-light a.divido-logo {
-	background-image:url('//content.divido.com.s3-eu-west-1.amazonaws.com/images/logo-blue-140x42.png');
-}
-.divido-theme-light a.divido-logo-sm {
-	background-image:url('//content.divido.com.s3-eu-west-1.amazonaws.com/images/logo-blue-75x23.png');
-}
-
-.divido-theme-light {
-	background-color:#fff;
-	color:#3E4F8B;
-}
-
-.divido-theme-light p {
-	color:#3E4F8B !important;
-}
-
-.divido-theme-light input[type=range]:focus::-webkit-slider-runnable-track {
-	background: #ccc;
-}
-
-.divido-theme-light input[type=range] {
-	background-color:transparent;
-}
-
-.divido-theme-light input[type=range]::-webkit-slider-runnable-track {
-	background: #999;
-}
-
-.divido-theme-light input[type=range]::-webkit-slider-thumb {
-	background: #3E4F8B;
-}
-
-
-/* 			*/
-
-.divido-theme-blue .divido-info {
-	background:#f9f9f9;
-	color:#000;
-}
-
-.divido-theme-blue a.divido-logo {
-	background-image:url('//content.divido.com.s3-eu-west-1.amazonaws.com/images/logo-white-140x42.png');
-}
-
-.divido-theme-blue a.divido-logo-sm {
-	background-image:url('//content.divido.com.s3-eu-west-1.amazonaws.com/images/logo-white-75x23.png');
-}
-
-.divido-theme-blue {
-	background-color:#3E4F8B;
-	color:#fff;
-}
-
-.divido-theme-blue p {
-	color:#fff !important;
-}
-
-.divido-theme-blue input[type=range]:focus::-webkit-slider-runnable-track {
-	background: #ccc;
-}
-
-.divido-theme-blue input[type=range] {
-	background-color:transparent;
-}
-
-.divido-theme-blue input[type=range]::-webkit-slider-runnable-track {
-	background: #999;
-}
-
-.divido-theme-blue input[type=range]::-webkit-slider-thumb {
-	background: #fff;
-}
-
-
-.divido-btn {
-	-webkit-border-radius: 4	;
-    -moz-border-radius: 4;
-    border-radius: 4px;
-    font-family: Arial;
-    color: #ffffff;
-    font-size: 11px;
-    background: #3E4F8B;
-    padding: 3px 7px 5px 7px !important;
-    text-decoration: none;
-    border:1px solid #296AB3;
-}
-
-.divido-btn :hover {
-    background: #3cb0fd;
-    background-image: -webkit-linear-gradient(top, #3cb0fd, #3498db);
-    background-image: -moz-linear-gradient(top, #3cb0fd, #3498db);
-    background-image: -ms-linear-gradient(top, #3cb0fd, #3498db);
-    background-image: -o-linear-gradient(top, #3cb0fd, #3498db);
-    background-image: linear-gradient(to bottom, #3cb0fd, #3498db);
-    text-decoration: none;
-}
-
-.divido-widget img {
-    display: inline-block;
-}
-
-.divido-calculator select {
-        color: #000;
-}
-</style>
-<div id="divido-checkout" data-divido-calculator class="divido-calculator divido-theme-blue" data-divido-amount="{{ grand_total }}" data-divido-plans="{{ plan_list }}">
-    <h1>
-        <a href="https://www.divido.com" target="_blank" class="divido-logo divido-logo-sm" style="float:right;">{{ text_divido }}</a>
-        {{ text_checkout_title }}
-    </h1>
-    <div style="clear:both;"></div>
-    <dl>
-        <dt><span data-divido-choose-finance data-divido-label="{{ text_choose_plan }}" data-divido-form="divido_finance"></span></dt>
-        <dd><span class="divido-deposit" data-divido-choose-deposit data-divido-label="{{ text_choose_deposit }}" data-divido-form="divido_deposit"></span></dd>
-    </dl>
-    <div class="description">
-        <strong>
-        <span data-divido-agreement-duration></span> {{ text_monthly_payments }} <span data-divido-monthly-instalment></span>
-        </strong>
-    </div>
-    <div class="divido-info">
-        <dl>
-            <dt>{{ text_term }}</dt>
-            <dd><span data-divido-agreement-duration></span> {{ text_months }}</dd>
-            <dt>{{ text_monthly_installment }}</dt>
-            <dd><span data-divido-monthly-instalment></span></dd>
-            <dt>{{ text_deposit }}</dt>
-            <dd><span data-divido-deposit></span></dd>
-            <dt>{{ text_credit_amount }}</dt>
-            <dd><span data-divido-credit-amount-rounded></span></dd>
-            <dt>{{ text_amount_payable }}</dt>
-            <dd><span data-divido-total-payable-rounded></span></dd>
-            <dt>{{ text_total_interest }}</dt>
-            <dd><span data-divido-interest-rate></span></dd>
-        </dl>
-    </div>
-    <div class="clear"></div>
-    <p>{{ text_redirection }}</p>
-</div>
-
-<div class="buttons">
-    <div class="pull-right">
-        <input type="button" value="{{ button_confirm }}" id="button-confirm" class="btn btn-primary" data-loading-text="{{ text_loading }}" />
-    </div>
-</div>
-
-<script>
-(function($) {
-    $(function () {
-        $.getScript('{{ merchant_script }}', function () {
-            divido_calculator($('#divido-checkout'));
-        });
-
-        $('#button-confirm').on('click', function() {
-            var finance_elem = $('select[name="divido_finance"]');
-            var deposit      = $('[name="divido_deposit"]').val();
-
-            var finance;
-            if (finance_elem.length > 0) {
-                finance = finance_elem.val();
-            } else {
-                finance = $('[data-divido-calculator]').data('divido-plans');
-            }
-
-            var data = {
-                finance: finance,
-                deposit: deposit
-            };
-
-            $.ajax({
-                type     : 'post',
-                url      : 'index.php?route=extension/payment/divido/confirm',
-                data     : data,
-                dataType : 'json',
-                cache    : false,
-                beforeSend: function() {
-                    $('#button-confirm').button('loading');
-                },
-                complete: function() {
-                    $('#button-confirm').button('reset');
-                },
-                success: function(data) {
-                    if (data.status == 'ok') {
-                        location = data.url;
-                    } else {
-                        message = data.message || '{{ generic_credit_req_error }}';
-                        $('#divido-checkout').prepend('<div class="alert alert-warning alert-dismissible"><i class="fa fa-exclamation-circle"></i> ' + message + ' <button type="button" class="close" data-dismiss="alert">&times;</button></div>');
-                    }
-                }
-            });
-        });
-    });
-})(jQuery);
-</script>
diff --git a/upload/catalog/view/theme/default/template/extension/payment/divido_calculator.twig b/upload/catalog/view/theme/default/template/extension/payment/divido_calculator.twig
deleted file mode 100644
index 3e17a16e919..00000000000
--- a/upload/catalog/view/theme/default/template/extension/payment/divido_calculator.twig
+++ /dev/null
@@ -1,29 +0,0 @@
-<div class="divido-calculator divido-theme-blue" data-divido-calculator data-divido-plans="{{ planList }}" data-divido-amount="{{ productPrice }}">
-    <h1>
-        <a href="https://www.divido.com" target="_blank" class="divido-logo divido-logo-sm" style="float:right;">{{ text_divido }}</a>
-        {{ text_checkout_title }} 
-    </h1>
-
-    <dl>
-        <dt><span data-divido-choose-finance data-divido-label="{{ text_choose_plan }}" data-divido-form="finance"></span></dt>
-        <dd><span class="divido-deposit" data-divido-choose-deposit data-divido-label="{{ text_choose_deposit }}" data-divido-form="deposit"></span></dd>
-    </dl>
-    <div class="description"><strong><span data-divido-agreement-duration></span> {{ text_monthly_payments }} <span data-divido-monthly-instalment></span></strong></div>
-    <div class="divido-info">
-        <dl>
-            <dt>{{ text_term }}</dt>
-            <dd><span data-divido-agreement-duration></span> {{ text_months }}</dd>
-            <dt>{{ text_monthly_installment }}</dt>
-            <dd><span data-divido-monthly-instalment></span></dd>
-            <dt>{{ text_deposit }}</dt>
-            <dd><span data-divido-deposit></span></dd>
-            <dt>{{ text_credit_amount }}</dt>
-            <dd><span data-divido-credit-amount-rounded></span></dd>
-            <dt>{{ text_amount_payable }}</dt>
-            <dd><span data-divido-total-payable-rounded></span></dd>
-            <dt>{{ text_total_interest }}</dt>
-            <dd><span data-divido-interest-rate></span></dd>
-        </dl>
-    </div>
-    <div class="clear"></div>
-</div>
diff --git a/upload/catalog/view/theme/default/template/extension/payment/divido_widget.twig b/upload/catalog/view/theme/default/template/extension/payment/divido_widget.twig
deleted file mode 100644
index c036eed13ea..00000000000
--- a/upload/catalog/view/theme/default/template/extension/payment/divido_widget.twig
+++ /dev/null
@@ -1,3 +0,0 @@
-<div class="divido-widget">
-    <div data-divido-widget data-divido-plans="{{ planList }}" data-divido-amount="{{ productPrice }}"></div>
-</div>
