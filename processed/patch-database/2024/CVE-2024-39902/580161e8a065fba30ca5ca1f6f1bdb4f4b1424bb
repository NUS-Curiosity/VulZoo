diff --git a/plugins/document/scripts/document/components/Folder/Permissions/PermissionsUpdateFolderSubItems.test.ts b/plugins/document/scripts/document/components/Folder/Permissions/PermissionsUpdateFolderSubItems.test.ts
index c3a23261876..d7ed80885e8 100644
--- a/plugins/document/scripts/document/components/Folder/Permissions/PermissionsUpdateFolderSubItems.test.ts
+++ b/plugins/document/scripts/document/components/Folder/Permissions/PermissionsUpdateFolderSubItems.test.ts
@@ -23,6 +23,7 @@ import { shallowMount } from "@vue/test-utils";
 import PermissionsUpdateFolderSubItems from "./PermissionsUpdateFolderSubItems.vue";
 import { TYPE_FOLDER, TYPE_EMPTY } from "../../../constants";
 import { getGlobalTestOptions } from "../../../helpers/global-options-for-test";
+import emitter from "../../../helpers/emitter";
 import type { Empty, Folder, Item } from "../../../type";
 
 describe("PermissionsUpdateFolderSubItems", () => {
@@ -50,4 +51,24 @@ describe("PermissionsUpdateFolderSubItems", () => {
 
         expect(wrapper.html()).toMatchInlineSnapshot(`<!--v-if-->`);
     });
+
+    it.each([
+        ["checked", true],
+        ["unchecked", false],
+    ])(
+        'When the checkbox is %s, then it should emit a "update-apply-permissions-on-children" event containing the checkbox state.',
+        (state, is_checked) => {
+            const emit = jest.spyOn(emitter, "emit");
+            const wrapper = getWrapper({ type: TYPE_FOLDER } as Folder);
+            const checkbox = wrapper.find<HTMLInputElement>(
+                "[data-test=checkbox-apply-permissions-on-children]",
+            );
+
+            checkbox.setValue(is_checked);
+            checkbox.trigger("input");
+            expect(emit).toHaveBeenCalledWith("update-apply-permissions-on-children", {
+                do_permissions_apply_on_children: is_checked,
+            });
+        },
+    );
 });
diff --git a/plugins/document/scripts/document/components/Folder/Permissions/PermissionsUpdateFolderSubItems.vue b/plugins/document/scripts/document/components/Folder/Permissions/PermissionsUpdateFolderSubItems.vue
index fc42449690d..c450f17de89 100644
--- a/plugins/document/scripts/document/components/Folder/Permissions/PermissionsUpdateFolderSubItems.vue
+++ b/plugins/document/scripts/document/components/Folder/Permissions/PermissionsUpdateFolderSubItems.vue
@@ -20,7 +20,11 @@
 <template>
     <div class="tlp-form-element" v-if="is_item_a_folder">
         <label class="tlp-label tlp-checkbox">
-            <input type="checkbox" v-bind:value="props.value" v-on:input="onInput" />
+            <input
+                type="checkbox"
+                v-on:input="onInput"
+                data-test="checkbox-apply-permissions-on-children"
+            />
             {{ $gettext("Apply same permissions to all sub-items of this folder") }}
         </label>
     </div>
@@ -29,18 +33,17 @@
 import { isFolder } from "../../../helpers/type-check-helper";
 import type { Folder } from "../../../type";
 import { computed } from "vue";
+import emitter from "../../../helpers/emitter";
 
 const props = defineProps<{ item: Folder }>();
 
-const emit = defineEmits<{
-    (e: "input", value: string): void;
-}>();
-
 function onInput($event: Event): void {
     const event_target = $event.target;
 
     if (event_target instanceof HTMLInputElement) {
-        emit("input", event_target.value);
+        emitter.emit("update-apply-permissions-on-children", {
+            do_permissions_apply_on_children: event_target.checked,
+        });
     }
 }
 
diff --git a/plugins/document/scripts/document/components/Folder/Permissions/PermissionsUpdateModal.test.js b/plugins/document/scripts/document/components/Folder/Permissions/PermissionsUpdateModal.test.js
index 61b49e39077..a904089e44b 100644
--- a/plugins/document/scripts/document/components/Folder/Permissions/PermissionsUpdateModal.test.js
+++ b/plugins/document/scripts/document/components/Folder/Permissions/PermissionsUpdateModal.test.js
@@ -243,4 +243,34 @@ describe("PermissionsUpdateModal", () => {
         };
         expect(wrapper.vm.updated_permissions).toEqual(expected_permissions_to_update_state);
     });
+
+    it('When an event "update-apply-permissions-on-children" is received, then it should update do_permissions_apply_on_children', () => {
+        const item = {
+            id: 104,
+            title: "My item",
+            permissions_for_groups: {
+                can_read: [],
+                can_write: [],
+                can_manage: [],
+            },
+        };
+
+        const wrapper = factory({ item });
+
+        wrapper.setData({
+            updated_permissions: {
+                ...item.permissions_for_groups,
+                apply_permissions_on_children: false,
+            },
+        });
+
+        emitter.emit("update-apply-permissions-on-children", {
+            do_permissions_apply_on_children: true,
+        });
+
+        expect(wrapper.vm.updated_permissions).toStrictEqual({
+            ...item.permissions_for_groups,
+            apply_permissions_on_children: true,
+        });
+    });
 });
diff --git a/plugins/document/scripts/document/components/Folder/Permissions/PermissionsUpdateModal.vue b/plugins/document/scripts/document/components/Folder/Permissions/PermissionsUpdateModal.vue
index 28573cdd695..cd24ae9b24a 100644
--- a/plugins/document/scripts/document/components/Folder/Permissions/PermissionsUpdateModal.vue
+++ b/plugins/document/scripts/document/components/Folder/Permissions/PermissionsUpdateModal.vue
@@ -40,10 +40,7 @@
                     v-model="updated_permissions"
                     v-bind:value="updated_permissions"
                 />
-                <permissions-update-folder-sub-items
-                    v-bind:item="item"
-                    v-model="updated_permissions.apply_permissions_on_children"
-                />
+                <permissions-update-folder-sub-items v-bind:item="item" />
             </div>
         </div>
         <modal-footer
@@ -119,6 +116,7 @@ export default {
         this.modal = createModal(this.$el);
         emitter.on("show-update-permissions-modal", this.show);
         emitter.on("update-permissions", this.updateUGroup);
+        emitter.on("update-apply-permissions-on-children", this.setApplyPermissionsOnChildren);
         this.modal.addEventListener("tlp-modal-hidden", this.reset);
         this.show();
     },
@@ -182,6 +180,13 @@ export default {
                 default:
             }
         },
+
+        setApplyPermissionsOnChildren(event) {
+            this.updated_permissions = {
+                ...this.updated_permissions,
+                apply_permissions_on_children: event.do_permissions_apply_on_children,
+            };
+        },
     },
 };
 </script>
diff --git a/plugins/document/scripts/document/helpers/emitter.ts b/plugins/document/scripts/document/helpers/emitter.ts
index 03720b5c7a9..87a18dfe543 100644
--- a/plugins/document/scripts/document/helpers/emitter.ts
+++ b/plugins/document/scripts/document/helpers/emitter.ts
@@ -88,6 +88,10 @@ export interface UpdateCriteriaDateEvent {
     value: SearchDate;
 }
 
+export type UpdateApplyPermissionsOnChildren = {
+    do_permissions_apply_on_children: boolean;
+};
+
 export type Events = {
     "update-status-property": string;
     "update-status-recursion": boolean;
@@ -129,6 +133,7 @@ export type Events = {
     "properties-recursion-list": UpdatePropertyListEvent;
 
     "update-permissions": string;
+    "update-apply-permissions-on-children": UpdateApplyPermissionsOnChildren;
     "update-global-criteria": string;
 
     "update-criteria": UpdateCriteriaEvent;
