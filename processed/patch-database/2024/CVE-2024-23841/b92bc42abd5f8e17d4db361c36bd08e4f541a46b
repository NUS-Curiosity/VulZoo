diff --git a/package/package.json b/package/package.json
index 720de42f..9e942737 100644
--- a/package/package.json
+++ b/package/package.json
@@ -1,6 +1,6 @@
 {
   "name": "@apollo/experimental-nextjs-app-support",
-  "version": "0.6.0",
+  "version": "0.7.0",
   "repository": {
     "url": "git+https://github.com/apollographql/apollo-client-nextjs"
   },
diff --git a/package/src/ssr/dataTransport.ts b/package/src/ssr/dataTransport.ts
index 12525b05..ba7c704b 100644
--- a/package/src/ssr/dataTransport.ts
+++ b/package/src/ssr/dataTransport.ts
@@ -9,6 +9,7 @@ import type { RehydrationCache } from "./types";
 import { registerLateInitializingQueue } from "./lateInitializingQueue";
 import type { Cache, WatchQueryOptions } from "@apollo/client";
 import invariant from "ts-invariant";
+import { htmlEscapeJsonString } from "../util/htmlescape";
 
 export type DataTransport<T> = Array<T> | { push(...args: T[]): void };
 
@@ -23,8 +24,8 @@ type DataToTransport = {
  */
 export function transportDataToJS(data: DataToTransport) {
   const key = Symbol.keyFor(ApolloSSRDataTransport);
-  return `(window[Symbol.for("${key}")] ??= []).push(${SuperJSON.stringify(
-    data
+  return `(window[Symbol.for("${key}")] ??= []).push(${htmlEscapeJsonString(
+    SuperJSON.stringify(data)
   )})`;
 }
 
diff --git a/package/src/util/htmlescape.ts b/package/src/util/htmlescape.ts
new file mode 100644
index 00000000..be7acf73
--- /dev/null
+++ b/package/src/util/htmlescape.ts
@@ -0,0 +1,24 @@
+// --------------------------------------------------------------------------------
+//
+// copied from
+// https://github.com/vercel/next.js/blob/6bc07792a4462a4bf921a72ab30dc4ab2c4e1bda/packages/next/src/server/htmlescape.ts
+// License: https://github.com/vercel/next.js/blob/6bc07792a4462a4bf921a72ab30dc4ab2c4e1bda/packages/next/license.md
+//
+// --------------------------------------------------------------------------------
+
+// This utility is based on https://github.com/zertosh/htmlescape
+// License: https://github.com/zertosh/htmlescape/blob/0527ca7156a524d256101bb310a9f970f63078ad/LICENSE
+
+const ESCAPE_LOOKUP: { [match: string]: string } = {
+  "&": "\\u0026",
+  ">": "\\u003e",
+  "<": "\\u003c",
+  "\u2028": "\\u2028",
+  "\u2029": "\\u2029",
+};
+
+export const ESCAPE_REGEX = /[&><\u2028\u2029]/g;
+
+export function htmlEscapeJsonString(str: string): string {
+  return str.replace(ESCAPE_REGEX, (match) => ESCAPE_LOOKUP[match]);
+}
