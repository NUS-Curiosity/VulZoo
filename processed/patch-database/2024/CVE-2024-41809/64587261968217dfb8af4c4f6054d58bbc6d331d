diff --git a/web/src/components/ingestion/recommended/FrontendRumConfig.vue b/web/src/components/ingestion/recommended/FrontendRumConfig.vue
index 61c6ed7175d..06a52373fd3 100644
--- a/web/src/components/ingestion/recommended/FrontendRumConfig.vue
+++ b/web/src/components/ingestion/recommended/FrontendRumConfig.vue
@@ -22,13 +22,14 @@ along with this program.  If not, see <http://www.gnu.org/licenses/>.
       </div>
       <q-separator class="q-my-sm"></q-separator>
 
-      <div class="text-subtitle1 q-mt-xs" v-html="npmStep1"></div>
+      <HTMLRenderer class="text-subtitle1 q-mt-xs" :htmlContent="npmStep1" />
+
       <copy-content
         content="npm i @openobserve/browser-rum @openobserve/browser-logs"
       ></copy-content>
 
       <br />
-      <div class="text-subtitle1 q-mt-xs" v-html="npmStep2"></div>
+      <HTMLRenderer class="text-subtitle1 q-mt-xs" :htmlContent="npmStep2" />
       <CopyContent
         :key="displayConfiguration"
         :content="initConfiguration"
@@ -47,11 +48,13 @@ import { useStore } from "vuex";
 import { useI18n } from "vue-i18n";
 import { getImageURL, maskText } from "../../../utils/zincutils";
 import CopyContent from "../../CopyContent.vue";
+import HTMLRenderer from "@/components/dashboards/panels/HTMLRenderer.vue";
 
 export default defineComponent({
   name: "rum-web-page",
   components: {
     CopyContent,
+    HTMLRenderer,
   },
   props: {
     currOrgIdentifier: {
diff --git a/web/src/composables/useLogs.ts b/web/src/composables/useLogs.ts
index 074de82367e..85db0c7605a 100644
--- a/web/src/composables/useLogs.ts
+++ b/web/src/composables/useLogs.ts
@@ -558,6 +558,7 @@ const useLogs = () => {
         searchObj.data.query = query;
         const parsedSQL: any = fnParsedSQL();
 
+        console.log(parsedSQL);
         if (!parsedSQL?.columns?.length) {
           notificationMsg.value = "Invalid SQL Syntax";
           return false;
@@ -718,6 +719,7 @@ const useLogs = () => {
       return req;
     } catch (e: any) {
       // showErrorNotification("Invalid SQL Syntax");
+      console.log(e);
       notificationMsg.value = "Invalid SQL Syntax";
     }
   }
@@ -1136,11 +1138,13 @@ const useLogs = () => {
     for (const column of columns) {
       if (
         column.expr &&
-        (column.expr.column === "_timestamp" ||
+        (column.expr.column === store.state.zoConfig.timestamp_column ||
           column.expr.column === "*" ||
           (column.expr.hasOwnProperty("args") &&
-            column.expr.args.expr.column === "_timestamp") ||
-          (column.hasOwnProperty("as") && column.as === "_timestamp"))
+            column.expr?.args?.expr?.column ===
+              store.state.zoConfig.timestamp_column) ||
+          (column.hasOwnProperty("as") &&
+            column.as === store.state.zoConfig.timestamp_column))
       ) {
         return true; // Found _timestamp column
       }
@@ -2244,19 +2248,21 @@ const useLogs = () => {
     }
 
     // Convert the AST back to a SQL string, replacing backtics with empty strings and table name with double quotes
-    return quoteTableNameDirectly(parser.sqlify(parsedQuery).replace(/`/g, ""), streamName);
+    return quoteTableNameDirectly(
+      parser.sqlify(parsedQuery).replace(/`/g, ""),
+      streamName
+    );
   };
 
   function quoteTableNameDirectly(sql: string, streamName: string) {
     // This regular expression looks for the FROM keyword followed by
     // an optional schema name, a table name, and handles optional spaces.
     // It captures the table name to be replaced with double quotes.
-    const regex = new RegExp(`FROM\\s+${streamName}`, 'gi')
+    const regex = new RegExp(`FROM\\s+${streamName}`, "gi");
 
     // Replace the captured table name with the same name enclosed in double quotes
     const modifiedSql = sql.replace(regex, `FROM "${streamName}"`);
 
-
     return modifiedSql;
   }
 
diff --git a/web/src/plugins/logs/Index.vue b/web/src/plugins/logs/Index.vue
index 479f463d66d..933e350dd8d 100644
--- a/web/src/plugins/logs/Index.vue
+++ b/web/src/plugins/logs/Index.vue
@@ -99,10 +99,10 @@ along with this program.  If not, see <http://www.gnu.org/licenses/>.
                     >
                       Result not found.
                     </div>
-                    <div
+                    <HTMLRenderer
                       data-test="logs-search-error-message"
-                      v-html="searchObj.data.errorMsg"
-                    ></div>
+                      :htmlContent="searchObj.data.errorMsg"
+                    />
                     <div
                       data-test="logs-search-error-20003"
                       v-if="parseInt(searchObj.data.errorCode) == 20003"
@@ -233,6 +233,7 @@ import segment from "@/services/segment_analytics";
 import config from "@/aws-exports";
 import { verifyOrganizationStatus } from "@/utils/zincutils";
 import MainLayoutCloudMixin from "@/enterprise/mixins/mainLayout.mixin";
+import HTMLRenderer from "@/components/dashboards/panels/HTMLRenderer.vue";
 
 export default defineComponent({
   name: "PageSearch",
@@ -240,6 +241,7 @@ export default defineComponent({
     SearchBar,
     IndexList,
     SearchResult,
+    HTMLRenderer,
   },
   mixins: [MainLayoutCloudMixin],
   methods: {
diff --git a/web/src/plugins/metrics/Index.vue b/web/src/plugins/metrics/Index.vue
index d8cf671a12d..43e1939cbb0 100644
--- a/web/src/plugins/metrics/Index.vue
+++ b/web/src/plugins/metrics/Index.vue
@@ -174,10 +174,11 @@ along with this program.  If not, see <http://www.gnu.org/licenses/>.
             "
           >
             <h5 class="text-center">
-              <div
+              <HTMLRenderer
                 data-test="logs-search-error-message"
-                v-html="searchObj.data.errorMsg"
-              ></div>
+                :htmlContent="searchObj.data.errorMsg"
+              />
+
               <br />
               <q-item-label>{{
                 searchObj.data.additionalErrorMsg
@@ -278,6 +279,7 @@ import SyntaxGuideMetrics from "./SyntaxGuideMetrics.vue";
 import { getConsumableRelativeTime } from "@/utils/date";
 import PanelSchemaRenderer from "@/components/dashboards/PanelSchemaRenderer.vue";
 import useStreams from "@/composables/useStreams";
+import HTMLRenderer from "@/components/dashboards/panels/HTMLRenderer.vue";
 
 export default defineComponent({
   name: "AppMetrics",
@@ -289,6 +291,7 @@ export default defineComponent({
     AddToDashboard,
     SyntaxGuideMetrics,
     PanelSchemaRenderer,
+    HTMLRenderer,
   },
   methods: {
     searchData() {
diff --git a/web/src/plugins/traces/Index.vue b/web/src/plugins/traces/Index.vue
index b150f513363..ff280a5efa0 100644
--- a/web/src/plugins/traces/Index.vue
+++ b/web/src/plugins/traces/Index.vue
@@ -86,10 +86,11 @@ along with this program.  If not, see <http://www.gnu.org/licenses/>.
                 >
                   Result not found.
                 </div>
-                <div
+                <HTMLRenderer
                   data-test="logs-search-error-message"
-                  v-html="searchObj.data.errorMsg"
-                ></div>
+                  :html-content="searchObj.data.errorMsg"
+                />
+
                 <div
                   data-test="logs-search-error-20003"
                   v-if="parseInt(searchObj.data.errorCode) == 20003"
@@ -192,6 +193,7 @@ import { getConsumableRelativeTime } from "@/utils/date";
 import { cloneDeep } from "lodash-es";
 import { computed } from "vue";
 import useStreams from "@/composables/useStreams";
+import HTMLRenderer from "@/components/dashboards/panels/HTMLRenderer.vue";
 
 export default defineComponent({
   name: "PageSearch",
@@ -199,6 +201,7 @@ export default defineComponent({
     SearchBar,
     IndexList,
     SearchResult,
+    HTMLRenderer,
   },
   methods: {
     async setHistogramDate(date: any) {
diff --git a/web/src/views/MemberSubscription.vue b/web/src/views/MemberSubscription.vue
index fc5954b5367..af45af769ef 100644
--- a/web/src/views/MemberSubscription.vue
+++ b/web/src/views/MemberSubscription.vue
@@ -28,11 +28,13 @@ along with this program.  If not, see <http://www.gnu.org/licenses/>.
     >
       Error while processing member subscription request.<br /><br />
     </div>
-    <div
+
+    <HTMLRenderer
       v-else-if="status == 'error' && error !== ''"
-      v-html="error"
+      :htmlContent="error"
       class="subscription_message"
-    ></div>
+    />
+
     <div v-else>Thank you for your subscription.</div>
 
     <!-- <div
@@ -57,9 +59,13 @@ import {
 } from "../utils/zincutils";
 
 import organizationsService from "../services/organizations";
+import HTMLRenderer from "@/components/dashboards/panels/HTMLRenderer.vue";
 
 export default defineComponent({
   name: "PageUser",
+  components: {
+    HTMLRenderer,
+  },
   data() {
     return {
       status: "processing",
