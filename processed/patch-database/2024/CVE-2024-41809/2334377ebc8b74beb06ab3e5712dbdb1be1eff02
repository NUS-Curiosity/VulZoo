diff --git a/web/src/aws-exports.ts b/web/src/aws-exports.ts
index da77c4dd83f..f3781dc765a 100644
--- a/web/src/aws-exports.ts
+++ b/web/src/aws-exports.ts
@@ -37,6 +37,8 @@ const config = {
   isZincObserveCloud: import.meta.env.VITE_ZINCOBSERVE_CLOUD
     ? import.meta.env.VITE_ZINCOBSERVE_CLOUD
     : "false",
+  freePlan: "Free-Plan-USD-Monthly",
+  paidPlan: "professional-USD-Monthly",
 };
 
 export default config;
diff --git a/web/src/components/PendingSubscriptionWarning.vue b/web/src/components/PendingSubscriptionWarning.vue
new file mode 100644
index 00000000000..f202b3f99a1
--- /dev/null
+++ b/web/src/components/PendingSubscriptionWarning.vue
@@ -0,0 +1,53 @@
+<!-- Copyright 2022 Zinc Labs Inc. and Contributors
+
+ Licensed under the Apache License, Version 2.0 (the "License");
+ you may not use this file except in compliance with the License.
+ You may obtain a copy of the License at
+
+     http:www.apache.org/licenses/LICENSE-2.0
+
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License. 
+-->
+
+<template>
+  <div class="row col-11 justify-center q-mt-xl">
+    <q-icon
+      name="warning"
+      size="80px"
+      color="warning row col-8 justify-center q-mt-lg"
+    /><br />
+    <h5>
+      <b
+        ><u><span class="text-red">Warning:</span></u></b
+      >
+      The content of this page cannot be viewed because the selected
+      organization's is on pending subscription state. <br /><br /><q-btn color="primary" @click="routerPush">Click here to proceed with subscription</q-btn>
+    </h5>
+  </div>
+</template>
+
+<script lang="ts">
+import { useRouter } from "vue-router";
+// @ts-nocheck
+import { defineComponent } from "vue";
+
+export default defineComponent({
+  name: "PendingSubscriptionWarning",
+  setup() {
+    const router = useRouter();
+
+    const routerPush = () => {
+      router.push({ name: "plans" });
+    };
+
+    return {
+      router,
+      routerPush,
+    };
+  },
+});
+</script>
diff --git a/web/src/composables/shared/router.ts b/web/src/composables/shared/router.ts
index 7820ba3a322..b38348532ff 100644
--- a/web/src/composables/shared/router.ts
+++ b/web/src/composables/shared/router.ts
@@ -51,6 +51,7 @@ import {
 } from "@/components/alerts/index";
 import ImportDashboard from "@/views/Dashboards/ImportDashboard.vue";
 import Functions from "../../views/Functions.vue";
+import { routeGuardPendingSubscriptions } from "@/utils/zincutils";
 
 const useRoutes = () => {
   const parentRoutes: never[] = [];
@@ -71,6 +72,9 @@ const useRoutes = () => {
       meta: {
         keepAlive: true,
       },
+      beforeEnter(to: any, from: any, next: any) {
+        routeGuardPendingSubscriptions(to, from, next);
+      },
     },
     {
       path: "metrics",
@@ -79,6 +83,9 @@ const useRoutes = () => {
       meta: {
         keepAlive: true,
       },
+      beforeEnter(to: any, from: any, next: any) {
+        routeGuardPendingSubscriptions(to, from, next);
+      },
     },
     {
       path: "traces",
@@ -87,6 +94,9 @@ const useRoutes = () => {
       meta: {
         keepAlive: true,
       },
+      beforeEnter(to: any, from: any, next: any) {
+        routeGuardPendingSubscriptions(to, from, next);
+      },
     },
     {
       path: "logstreams",
@@ -95,6 +105,9 @@ const useRoutes = () => {
       meta: {
         keepAlive: true,
       },
+      beforeEnter(to: any, from: any, next: any) {
+        routeGuardPendingSubscriptions(to, from, next);
+      },
     },
     {
       path: "tickets",
@@ -103,6 +116,9 @@ const useRoutes = () => {
       meta: {
         keepAlive: true,
       },
+      beforeEnter(to: any, from: any, next: any) {
+        routeGuardPendingSubscriptions(to, from, next);
+      },
     },
     {
       path: "about",
@@ -119,6 +135,9 @@ const useRoutes = () => {
       meta: {
         keepAlive: true,
       },
+      beforeEnter(to: any, from: any, next: any) {
+        routeGuardPendingSubscriptions(to, from, next);
+      },
     },
     {
       path: "/dashboards/view",
@@ -128,6 +147,9 @@ const useRoutes = () => {
       meta: {
         keepAlive: true,
       },
+      beforeEnter(to: any, from: any, next: any) {
+        routeGuardPendingSubscriptions(to, from, next);
+      },
     },
     {
       path: "/dashboards/import",
@@ -137,6 +159,9 @@ const useRoutes = () => {
       meta: {
         keepAlive: true,
       },
+      beforeEnter(to: any, from: any, next: any) {
+        routeGuardPendingSubscriptions(to, from, next);
+      },
     },
     {
       path: "/dashboards/add_panel",
@@ -146,6 +171,9 @@ const useRoutes = () => {
       meta: {
         keepAlive: true,
       },
+      beforeEnter(to: any, from: any, next: any) {
+        routeGuardPendingSubscriptions(to, from, next);
+      },
     },
     {
       path: "users",
@@ -154,6 +182,9 @@ const useRoutes = () => {
       meta: {
         keepAlive: true,
       },
+      beforeEnter(to: any, from: any, next: any) {
+        routeGuardPendingSubscriptions(to, from, next);
+      },
     },
     {
       path: "member_subscription",
@@ -162,11 +193,17 @@ const useRoutes = () => {
       meta: {
         keepAlive: true,
       },
+      beforeEnter(to: any, from: any, next: any) {
+        routeGuardPendingSubscriptions(to, from, next);
+      },
     },
     {
       path: "functions",
       name: "functions",
       component: Functions,
+      beforeEnter(to: any, from: any, next: any) {
+        routeGuardPendingSubscriptions(to, from, next);
+      },
       children: [
         {
           path: "functions",
@@ -184,6 +221,9 @@ const useRoutes = () => {
       path: "ingestion",
       name: "ingestion",
       component: Ingestion,
+      beforeEnter(to: any, from: any, next: any) {
+        routeGuardPendingSubscriptions(to, from, next);
+      },
       children: [
         {
           path: "logs",
@@ -262,6 +302,9 @@ const useRoutes = () => {
       path: "alerts",
       name: "alerts",
       component: Alerts,
+      beforeEnter(to: any, from: any, next: any) {
+        routeGuardPendingSubscriptions(to, from, next);
+      },
       children: [
         {
           path: "alerts",
diff --git a/web/src/enterprise/components/billings/plans.vue b/web/src/enterprise/components/billings/plans.vue
index d582d277214..bdd3b527638 100644
--- a/web/src/enterprise/components/billings/plans.vue
+++ b/web/src/enterprise/components/billings/plans.vue
@@ -38,13 +38,7 @@
       </div>
     </div>
     <div
-      class="
-        row
-        justify-start
-        text-h6 text-weight-bold
-        q-pl-xl q-pb-lg
-        subtitle
-      "
+      class="row justify-start text-h6 text-weight-bold q-pl-xl q-pb-lg subtitle"
     >
       {{ t("billing.subtitle") }}
     </div>
@@ -63,7 +57,7 @@
         :hasProPlan="isProPlan"
         :freeLoading="freeLoading"
         :proLoading="proLoading"
-        @update:freeSubscription="onUnsubscribe"
+        @update:freeSubscription="confirm_downgrade_subscription = true"
         @update:proSubscription="onLoadSubscription"
       ></plan-card>
     </div>
@@ -76,7 +70,8 @@
             {{ t("billing.manageCards") }}
           </div>
           <q-space />
-          <q-btn icon="close" flat round dense v-close-popup />
+          <q-btn icon="close" flat round dense
+v-close-popup />
         </q-card-section>
         <q-card-section>
           <iframe
@@ -101,7 +96,8 @@
             {{ t("billing.subscriptionCheckout") }}
           </div>
           <q-space />
-          <q-btn icon="close" flat round dense v-close-popup />
+          <q-btn icon="close" flat round dense
+v-close-popup />
         </q-card-section>
 
         <q-card-section>
@@ -118,12 +114,44 @@
         </q-card-section>
       </q-card>
     </q-dialog>
+
+    <q-dialog v-model="confirm_downgrade_subscription" persistent>
+      <q-card>
+        <q-card-section class="row items-center">
+          <span class="q-ml-sm"
+            ><q-avatar
+              icon="warning"
+              size="sm"
+              color="primary"
+              text-color="white"
+              class="q-mr-sm"
+            />Since you are downgrading the subscription plan, please note that
+            if you are currently part of an organization that is subscribed to
+            the free/developer plan, the current organization members, their
+            tokens and the organization status will be changed to 'Pending
+            Subscription' state. Are you sure you want to proceed with this
+            action?</span
+          >
+        </q-card-section>
+
+        <q-card-actions align="right">
+          <q-btn label="Cancel" color="secondary"
+v-close-popup />
+          <q-btn
+            label="Confirm"
+            color="primary"
+            v-close-popup
+            @click="onUnsubscribe"
+          />
+        </q-card-actions>
+      </q-card>
+    </q-dialog>
     <!-- </div> -->
   </q-page>
 </template>
 
 <script lang="ts">
-import { defineComponent, ref } from "@vue/runtime-core";
+import { defineComponent, ref } from "vue";
 import { useI18n } from "vue-i18n";
 import PlanCard from "./planCard.vue";
 import Plan from "@/constants/plans";
@@ -279,6 +307,10 @@ export default defineComponent({
           this.loading = false;
           this.freeLoading = false;
           this.proLoading = false;
+          this.$router.push({
+            name: "plans",
+            query: { update_org: Date.now() },
+          });
           // if (
           //   fromPro &&
           //   !this.isActiveSubscription &&
@@ -352,12 +384,13 @@ export default defineComponent({
     const hostedResponse: any = ref();
     const updatePaymentResponse: any = ref();
     const subscriptionref = ref();
-    const listSubscriptionResponse: any = ref();
+    const listSubscriptionResponse: any = ref({});
     const Plans = Plan;
     const changePayment: any = ref(false);
     const subScribePlan: any = ref(false);
     const freeLoading: any = ref(false);
     const proLoading: any = ref(false);
+    const confirm_downgrade_subscription: any = ref(false);
 
     const retriveHostedPage = () => {
       BillingService.retrive_hosted_page(
@@ -392,6 +425,7 @@ export default defineComponent({
       subScribePlan,
       freeLoading,
       proLoading,
+      confirm_downgrade_subscription,
     };
   },
   computed: {
diff --git a/web/src/enterprise/components/organizations/AddUpdateOrganization.vue b/web/src/enterprise/components/organizations/AddUpdateOrganization.vue
index d4d0971a5ac..4391a75706d 100644
--- a/web/src/enterprise/components/organizations/AddUpdateOrganization.vue
+++ b/web/src/enterprise/components/organizations/AddUpdateOrganization.vue
@@ -82,7 +82,7 @@
             @click="router.replace({ name: 'organizations' })"
           />
           <q-btn
-            :disable="organizationData.name === ''"
+            :disable="organizationData.name === '' && !proPlanRequired"
             :label="t('organization.save')"
             class="q-mb-md text-bold no-border q-ml-md"
             color="secondary"
@@ -92,7 +92,20 @@
             data-test="add-org"
           />
         </div>
+
+        <div class="flex justify-center q-mt-lg" v-if="proPlanRequired">
+          <q-btn
+            class="q-mb-md text-bold no-border q-ml-md"
+            :label="t('organization.proceed_subscription')"
+            text-color="light-text"
+            padding="sm xl"
+            color="secondary"
+            no-caps
+            @click="completeSubscriptionProcess"
+          />
+        </div>
       </q-form>
+      asd{{ proPlanRequired }}
     </q-card-section>
   </q-card>
 </template>
@@ -103,6 +116,7 @@ import organizationService from "@/services/organizations";
 import { useI18n } from "vue-i18n";
 import { useStore } from "vuex";
 import { useRouter } from "vue-router";
+import config from "@/aws-exports";
 
 const defaultValue = () => {
   return {
@@ -121,6 +135,13 @@ export default defineComponent({
       default: () => defaultValue(),
     },
   },
+  data() {
+    return {
+      proPlanRequired: false,
+      proPlanMsg: "",
+      newOrgIdentifier: "",
+    };
+  },
   emits: ["update:modelValue", "updated", "finish"],
   setup() {
     const store: any = useStore();
@@ -153,6 +174,17 @@ export default defineComponent({
         name: this.modelValue.name,
       };
     }
+
+    // this.store.state.organizations.forEach((organization: any) => {
+    //   if (
+    //     (organization.hasOwnProperty("CustomerBillingObj") &&
+    //       organization.CustomerBillingObj.subscription_type ==
+    //         config.freePlan) ||
+    //     !organization.hasOwnProperty("CustomerBillingObj")
+    //   ) {
+    //     this.proPlanRequired = true;
+    //   }
+    // });
   },
   methods: {
     onRejected(rejectedEntries: string | any[]) {
@@ -161,6 +193,13 @@ export default defineComponent({
         message: `${rejectedEntries.length} file(s) did not pass validation constraints`,
       });
     },
+    completeSubscriptionProcess() {
+      console.log(this.store.state);
+      // this.store.state.dispatch("setSelectedOrganization",)
+      this.router.push(
+        `/billings/plans?org_identifier=${this.newOrgIdentifier}`
+      );
+    },
     onSubmit() {
       const dismiss = this.$q.notify({
         spinner: true,
@@ -188,15 +227,40 @@ export default defineComponent({
         callOrganization
           .then((res: { data: any }) => {
             const data = res.data;
-            this.organizationData = {
-              id: "",
-              name: "",
-            };
-
-            this.$emit("update:modelValue", data);
-            this.$emit("updated");
-            this.addOrganizationForm.resetValidation();
-            dismiss();
+            if (res.data.data.status == "active") {
+              this.organizationData = {
+                id: "",
+                name: "",
+              };
+
+              this.$emit("update:modelValue", data);
+              this.$emit("updated");
+              this.addOrganizationForm.resetValidation();
+              dismiss();
+            } else {
+              this.proPlanRequired = true;
+              this.proPlanMsg = res.data.message;
+              this.newOrgIdentifier = res.data.identifier;
+              // this.store.state.dispatch("setSelectedOrganization", {
+              //   identifier: data.identifier,
+              //   name: data.name,
+              //   id: data.id,
+              //   ingest_threshold: data.ingest_threshold,
+              //   search_threshold: data.search_threshold,
+              //   label: data.name,
+              //   user_email: this.store.state.userInfo.email,
+              //   subscription_type: "Free-Plan-USD-Monthly",
+              // });
+              // window.location.href = `/organizations?org_identifier=${data.data.identifier}&action=subscribe`;
+              this.router.push({
+                name: "organizations",
+                query: {
+                  org_identifier: data.data.identifier,
+                  action: "subscribe",
+                  update_org: Date.now(),
+                },
+              })
+            }
           })
           .catch((err: any) => {
             this.$q.notify({
diff --git a/web/src/enterprise/components/organizations/Organization.vue b/web/src/enterprise/components/organizations/Organization.vue
index c894acae9ba..37931f0802a 100644
--- a/web/src/enterprise/components/organizations/Organization.vue
+++ b/web/src/enterprise/components/organizations/Organization.vue
@@ -154,6 +154,7 @@ import JoinOrganization from "./JoinOrganization.vue";
 import QTablePagination from "@/components/shared/grid/Pagination.vue";
 import NoData from "@/components/shared/grid/NoData.vue";
 import segment from "@/services/segment_analytics";
+import { convertToTitleCase } from "@/utils/zincutils";
 
 export default defineComponent({
   name: "PageOrganization",
@@ -217,6 +218,20 @@ export default defineComponent({
         align: "left",
         sortable: true,
       },
+      {
+        name: "plan_type",
+        field: "plan_type",
+        label: t("organization.subscription_type"),
+        align: "left",
+        sortable: true,
+      },
+      {
+        name: "status",
+        field: "status",
+        label: t("organization.status"),
+        align: "left",
+        sortable: true,
+      },
       {
         name: "created",
         field: "created",
@@ -334,14 +349,21 @@ export default defineComponent({
             id: data.id,
             name: data.name,
             identifier: data.identifier,
-            type: data.type,
+            type: convertToTitleCase(data.type),
             owner:
               data.UserObj.first_name != ""
                 ? data.UserObj.first_name
                 : data.UserObj.email,
             created: date.formatDate(data.created_at, "YYYY-MM-DDTHH:mm:ssZ"),
-            role: role,
+            role: convertToTitleCase(role),
             actions: "true",
+            status: convertToTitleCase(data.status),
+            plan_type:
+              data.CustomerBillingObj.subscription_type ==
+                "Free-Plan-USD-Monthly" ||
+              data.CustomerBillingObj.subscription_type == ""
+                ? "Developer"
+                : "Pro",
           };
         });
 
diff --git a/web/src/enterprise/composables/router.ts b/web/src/enterprise/composables/router.ts
index 1914e3bc433..8297dc9a1af 100644
--- a/web/src/enterprise/composables/router.ts
+++ b/web/src/enterprise/composables/router.ts
@@ -28,6 +28,7 @@ import Billing from "@/enterprise/components/billings/Billing.vue";
 import Plans from "@/enterprise/components/billings/plans.vue";
 import InvoiceHistory from "@/enterprise/components/billings/invoiceHistory.vue";
 import Usage from "@/enterprise/components/billings/usage.vue";
+import { routeGuardPendingSubscriptions } from "@/utils/zincutils";
 
 const useEnvRoutes = () => {
   const parentRoutes = [
@@ -63,6 +64,9 @@ const useEnvRoutes = () => {
       meta: {
         keepAlive: true,
       },
+      beforeEnter(to: any, from: any, next: any) {
+        routeGuardPendingSubscriptions(to, from, next);
+      },
     },
     {
       path: "billings",
diff --git a/web/src/layouts/MainLayout.vue b/web/src/layouts/MainLayout.vue
index 5c1bd1c76f4..0da9f20bb5f 100644
--- a/web/src/layouts/MainLayout.vue
+++ b/web/src/layouts/MainLayout.vue
@@ -37,20 +37,6 @@
         />
 
         <q-toolbar-title></q-toolbar-title>
-        <q-btn
-          class="q-ml-xs no-border"
-          size="13px"
-          no-caps
-          :label="t(`menu.openapi`)"
-          @click="navigateToOpenAPI(zoBackendUrl)"
-        />
-        <q-btn
-          class="q-ml-xs no-border"
-          size="13px"
-          no-caps
-          :label="t(`menu.docs`)"
-          @click="navigateToDocs()"
-        />
         <div class="headerMenu float-left" v-if="store.state.quotaThresholdMsg">
           <div
             type="warning"
@@ -58,7 +44,8 @@
             class="warning-msg"
             style="display: inline"
           >
-            <q-icon name="warning" size="xs" class="warning" />{{
+            <q-icon name="warning" size="xs"
+class="warning" />{{
               store.state.quotaThresholdMsg
             }}
           </div>
@@ -74,6 +61,20 @@
             >Upgrade to PRO Plan</q-btn
           >
         </div>
+        <q-btn
+          class="q-ml-xs no-border"
+          size="13px"
+          no-caps
+          :label="t(`menu.openapi`)"
+          @click="navigateToOpenAPI(zoBackendUrl)"
+        />
+        <q-btn
+          class="q-ml-xs no-border"
+          size="13px"
+          no-caps
+          :label="t(`menu.docs`)"
+          @click="navigateToDocs()"
+        />
         <div class="languageWrapper">
           <q-btn-dropdown
             unelevated
@@ -135,7 +136,8 @@
           >
             <template #label>
               <div class="row items-center no-wrap">
-                <q-avatar size="md" color="grey" text-color="white">
+                <q-avatar size="md" color="grey"
+text-color="white">
                   <img
                     :src="
                       user.picture
@@ -158,7 +160,9 @@
             <q-list>
               <q-item-label header>{{ t("menu.account") }}</q-item-label>
 
-              <q-item v-ripple v-close-popup clickable @click="signout">
+              <q-item v-ripple
+v-close-popup clickable
+@click="signout">
                 <q-item-section avatar>
                   <q-avatar
                     size="md"
@@ -314,7 +318,7 @@ export default defineComponent({
     const { t } = useI18n();
     const miniMode = ref(false);
     const zoBackendUrl = store.state.API_ENDPOINT;
-    const customOrganization = router.currentRoute.value.query.hasOwnProperty(
+    let customOrganization = router.currentRoute.value.query.hasOwnProperty(
       "org_identifier"
     )
       ? router.currentRoute.value.query.org_identifier
@@ -505,6 +509,9 @@ export default defineComponent({
     };
 
     const setSelectedOrganization = () => {
+      customOrganization = router.currentRoute.value.query.hasOwnProperty("org_identifier")
+        ? router.currentRoute.value.query.org_identifier
+        : "";
       if (store.state.organizations.length > 0) {
         const localOrg: any = useLocalOrganization();
         orgOptions.value = store.state.organizations.map(
@@ -517,6 +524,7 @@ export default defineComponent({
             ingest_threshold: number;
             search_threshold: number;
             CustomerBillingObj: { subscription_type: string };
+            status: string;
           }) => {
             const optiondata: any = {
               label: data.name,
@@ -528,6 +536,7 @@ export default defineComponent({
               subscription_type: data.hasOwnProperty("CustomerBillingObj")
                 ? data.CustomerBillingObj.subscription_type
                 : "",
+              status: data.status,
             };
 
             if (
@@ -535,9 +544,10 @@ export default defineComponent({
               localOrg.value.identifier == data.identifier &&
               (customOrganization == "" || customOrganization == undefined)
             ) {
-              localOrg.value.subscription_type =
-                data.CustomerBillingObj.subscription_type;
-              useLocalOrganization(localOrg.value);
+              // localOrg.value.subscription_type =
+              //   data.CustomerBillingObj.subscription_type;
+              // useLocalOrganization(localOrg.value);
+              useLocalOrganization(optiondata);
             }
 
             if (
@@ -550,18 +560,24 @@ export default defineComponent({
                 (customOrganization == "" || customOrganization == undefined))
             ) {
               selectedOrg.value = localOrg.value ? localOrg.value : optiondata;
-              useLocalOrganization(selectedOrg.value);
-              store.dispatch("setSelectedOrganization", selectedOrg.value);
+              useLocalOrganization(optiondata);
+              store.dispatch("setSelectedOrganization", optiondata);
             } else if (data.identifier == customOrganization) {
               selectedOrg.value = optiondata;
-              useLocalOrganization(selectedOrg.value);
-              store.dispatch("setSelectedOrganization", selectedOrg.value);
+              useLocalOrganization(optiondata);
+              store.dispatch("setSelectedOrganization", optiondata);
             }
             return optiondata;
           }
         );
       }
 
+      if (router.currentRoute.value.query.action == "subscribe") {
+        router.push({
+          name: "plans",
+        });
+      }
+
       if (
         selectedOrg.value.identifier != "" &&
         config.isZincObserveCloud == "true"
@@ -636,8 +652,14 @@ export default defineComponent({
     changeOrganization() {
       return this.store.state.organizations;
     },
+    forceFetchOrganization() {
+      return this.router.currentRoute.value.query.update_org;
+    },
   },
   watch: {
+    forceFetchOrganization() {
+      mainLayoutMixin.setup().getDefaultOrganization(this.store);
+    },
     changeOrganization() {
       setTimeout(() => {
         this.setSelectedOrganization();
diff --git a/web/src/locales/languages/en.json b/web/src/locales/languages/en.json
index a5c1db9da2d..a2226afb738 100644
--- a/web/src/locales/languages/en.json
+++ b/web/src/locales/languages/en.json
@@ -161,7 +161,9 @@
     "copyapikey": "Copy API Key",
     "getapikey": "Get API Key",
     "role": "Role",
-    "nameRequired": "Name is required"
+    "nameRequired": "Name is required",
+    "subscription_type": "Plan Type",
+    "proceed_subscription": "Proceed to Subscription"
   },
   "template": {
     "header": "Templates",
diff --git a/web/src/services/organizations.ts b/web/src/services/organizations.ts
index edf6efc98bc..372aa7bae53 100644
--- a/web/src/services/organizations.ts
+++ b/web/src/services/organizations.ts
@@ -52,8 +52,10 @@ const organizations = {
   add_members: (data: any, orgIdentifier: string) => {
     return http().post(`api/${orgIdentifier}/organizations/members`, data);
   },
-  process_subscription: (s: string) => {
-    return http().get(`api/organizations/member_subscription/${s}`);
+  process_subscription: (s: string, action: string) => {
+    return http().get(
+      `api/organizations/member_subscription/${s}?action=${action}`
+    );
   },
   get_associated_members: (orgIdentifier: string) => {
     return http().get(`api/${orgIdentifier}/organizations/associated_members`);
diff --git a/web/src/utils/zincutils.ts b/web/src/utils/zincutils.ts
index 4f8841e6f89..328d01cec71 100644
--- a/web/src/utils/zincutils.ts
+++ b/web/src/utils/zincutils.ts
@@ -14,6 +14,7 @@
 
 import config from "../aws-exports";
 import { ref, onMounted, onUnmounted } from "vue";
+import { Dialog } from "quasar";
 
 const useLocalStorage = (
   key: string,
@@ -262,3 +263,43 @@ export const getPath = () => {
   const cloudPath = import.meta.env.BASE_URL;
   return config.isZincObserveCloud == "true" ? cloudPath : path;
 };
+
+export const routeGuardPendingSubscriptions = (
+  to: any,
+  from: any,
+  next: any
+) => {
+  const local_organization = ref();
+  local_organization.value = useLocalOrganization();
+  if (
+    local_organization.value.value == null ||
+    config.isZincObserveCloud == "false"
+  ) {
+    next();
+  }
+
+  if (local_organization.value.value.status == "pending-subscription") {
+    Dialog.create({
+      title: "Confirmation",
+      message: "Please subscribe to a paid plan to continue.",
+      cancel: true,
+      persistent: true,
+    })
+      .onOk(() => {
+        const nextURL = getPath() + "billings/plans";
+        next(nextURL);
+      })
+      .onCancel(() => {
+        return false;
+      });
+  } else {
+    next();
+  }
+};
+
+export const convertToTitleCase = (str: string) => {
+  return str
+    .split("-")
+    .map((word) => word.charAt(0).toUpperCase() + word.slice(1))
+    .join(" ");
+};
diff --git a/web/src/views/AppAlerts.vue b/web/src/views/AppAlerts.vue
index 1cd76bf002c..184390475df 100644
--- a/web/src/views/AppAlerts.vue
+++ b/web/src/views/AppAlerts.vue
@@ -11,7 +11,8 @@
 -->
 
 <template>
-  <q-page data-test="alerts-page" class="q-pa-none" style="min-height: inherit">
+  <q-page data-test="alerts-page"
+class="q-pa-none" style="min-height: inherit">
     <q-splitter
       v-model="splitterModel"
       unit="px"
@@ -80,51 +81,79 @@
   </q-page>
 </template>
 
-<script lang="ts" setup>
-import { ref, onActivated, onBeforeMount } from "vue";
+<script lang="ts">
+import { defineComponent, ref, onActivated, onBeforeMount } from "vue";
 import { useStore } from "vuex";
 import { useRouter } from "vue-router";
 import { useQuasar } from "quasar";
 import { useI18n } from "vue-i18n";
 import templateService from "@/services/alert_templates";
 import destinationService from "@/services/alert_destination";
-const store = useStore();
-const { t } = useI18n();
-const router = useRouter();
-const activeTab: any = ref("destinations");
-const templates = ref([]);
-const destinations = ref([]);
-const splitterModel = ref(220);
-onActivated(() => {
-  redirectRoute();
-});
-onBeforeMount(() => {
-  redirectRoute();
-});
-const redirectRoute = () => {
-  if (router.currentRoute.value.name === "alerts") {
-    router.push({
-      name: "alertList",
-      query: {
-        org_identifier: store.state.selectedOrganization.identifier,
-      },
+
+export default defineComponent({
+  name: "AppAlerts",
+  setup() {
+    const store = useStore();
+    const { t } = useI18n();
+    const router = useRouter();
+    const activeTab: any = ref("destinations");
+    const templates = ref([]);
+    const destinations = ref([]);
+    const splitterModel = ref(220);
+
+    onActivated(() => {
+      redirectRoute();
     });
-  }
-};
-const getTemplates = () => {
-  templateService
-    .list({
-      org_identifier: store.state.selectedOrganization.identifier,
-    })
-    .then((res) => (templates.value = res.data));
-};
-const getDestinations = () => {
-  destinationService
-    .list({
-      org_identifier: store.state.selectedOrganization.identifier,
-    })
-    .then((res) => (destinations.value = res.data));
-};
+
+    onBeforeMount(() => {
+      redirectRoute();
+    });
+
+    const redirectRoute = () => {
+      if (
+        router.currentRoute.value.name === "alerts" &&
+        store.state.selectedOrganization.status == "active"
+      ) {
+        router.push({
+          name: "alertList",
+          query: {
+            org_identifier: store.state.selectedOrganization.identifier,
+          },
+        });
+      }
+    };
+    const getTemplates = () => {
+      if (store.state.selectedOrganization.status == "active") {
+        templateService
+          .list({
+            org_identifier: store.state.selectedOrganization.identifier,
+          })
+          .then((res) => (templates.value = res.data));
+      }
+    };
+    const getDestinations = () => {
+      if (store.state.selectedOrganization.status == "active") {
+        destinationService
+          .list({
+            org_identifier: store.state.selectedOrganization.identifier,
+          })
+          .then((res) => (destinations.value = res.data));
+      }
+    };
+
+    return {
+      activeTab,
+      templates,
+      destinations,
+      splitterModel,
+      getTemplates,
+      getDestinations,
+      redirectRoute,
+      t,
+      store,
+    };
+  },
+});
 </script>
 
 <style scoped lang="scss">
diff --git a/web/src/views/Functions.vue b/web/src/views/Functions.vue
index 7089d689946..fdc5ce9ef7b 100644
--- a/web/src/views/Functions.vue
+++ b/web/src/views/Functions.vue
@@ -65,51 +65,51 @@
   </q-page>
 </template>
 
-<script lang="ts" setup>
-import { ref, onActivated, onBeforeMount } from "vue";
+<script lang="ts">
+import { defineComponent, ref, onActivated, onBeforeMount } from "vue";
 import { useStore } from "vuex";
 import { useRouter } from "vue-router";
-import { useQuasar } from "quasar";
 import { useI18n } from "vue-i18n";
-import templateService from "@/services/alert_templates";
-import destinationService from "@/services/alert_destination";
-const store = useStore();
-const { t } = useI18n();
-const router = useRouter();
-const activeTab: any = ref("functionAssociatedStreams");
-const templates = ref([]);
-const functionAssociatedStreams = ref([]);
-const splitterModel = ref(220);
-onActivated(() => {
-  redirectRoute();
-});
-onBeforeMount(() => {
-  redirectRoute();
-});
-const redirectRoute = () => {
-  if (router.currentRoute.value.name === "functions") {
-    router.push({
-      name: "functionList",
-      query: {
-        org_identifier: store.state.selectedOrganization.identifier,
-      },
+
+export default defineComponent({
+  name: "AppFunctions",
+  setup() {
+    const store = useStore();
+    const { t } = useI18n();
+    const router = useRouter();
+    const activeTab: any = ref("functionAssociatedStreams");
+    const templates = ref([]);
+    const functionAssociatedStreams = ref([]);
+    const splitterModel = ref(220);
+    onActivated(() => {
+      redirectRoute();
     });
-  }
-};
-const getTemplates = () => {
-  templateService
-    .list({
-      org_identifier: store.state.selectedOrganization.identifier,
-    })
-    .then((res) => (templates.value = res.data));
-};
-const getDestinations = () => {
-  destinationService
-    .list({
-      org_identifier: store.state.selectedOrganization.identifier,
-    })
-    .then((res) => (functionAssociatedStreams.value = res.data));
-};
+    onBeforeMount(() => {
+      redirectRoute();
+    });
+    const redirectRoute = () => {
+      if (router.currentRoute.value.name === "functions") {
+        router.push({
+          name: "functionList",
+          query: {
+            org_identifier: store.state.selectedOrganization.identifier,
+          },
+        });
+      }
+    };
+
+    return {
+      t,
+      store,
+      router,
+      redirectRoute,
+      splitterModel,
+      functionAssociatedStreams,
+      activeTab,
+      templates,
+    };
+  },
+});
 </script>
 
 <style scoped lang="scss">
diff --git a/web/src/views/Ingestion.vue b/web/src/views/Ingestion.vue
index e0b71178972..2010f4772d7 100644
--- a/web/src/views/Ingestion.vue
+++ b/web/src/views/Ingestion.vue
@@ -173,7 +173,9 @@ export default defineComponent({
           },
         });
       } else {
-        getOrganizationPasscode();
+        if (store.state.selectedOrganization.status == "active") {
+          getOrganizationPasscode();
+        }
       }
     });
 
diff --git a/web/src/views/LogStream.vue b/web/src/views/LogStream.vue
index 9a311c6c6ba..5b724e8c2ea 100644
--- a/web/src/views/LogStream.vue
+++ b/web/src/views/LogStream.vue
@@ -17,24 +17,53 @@
 <!-- eslint-disable vue/attribute-hyphenation -->
 <template>
   <q-page class="q-pa-none" style="min-height: inherit">
-    <q-table data-test="log-stream-table" ref="qTable" v-model:selected="selected" :rows="logStream" :columns="columns"
-      row-key="id" :pagination="pagination" :filter="filterQuery" :filter-method="filterData" style="width: 100%">
+    <q-table
+      data-test="log-stream-table"
+      ref="qTable"
+      v-model:selected="selected"
+      :rows="logStream"
+      :columns="columns"
+      row-key="id"
+      :pagination="pagination"
+      :filter="filterQuery"
+      :filter-method="filterData"
+      style="width: 100%"
+    >
       <template #no-data>
         <NoData />
       </template>
       <template #header-selection="scope">
-        <q-checkbox v-model="scope.selected" size="sm" color="secondary" />
+        <q-checkbox v-model="scope.selected"
+size="sm" color="secondary" />
       </template>
       <template #body-selection="scope">
-        <q-checkbox v-model="scope.selected" size="sm" color="secondary" />
+        <q-checkbox v-model="scope.selected"
+size="sm" color="secondary" />
       </template>
       <template #body-cell-actions="props">
         <q-td :props="props">
-          <q-btn :icon="'img:' + getImageURL('images/common/delete_icon.svg')" :title="t('logStream.delete')"
-            class="q-ml-xs iconHoverBtn" padding="sm" unelevated size="sm" round flat
-            @click="confirmDeleteAction(props)" />
-          <q-btn :icon="'img:' + getImageURL('images/common/list_icon.svg')" :title="t('logStream.schemaHeader')"
-            class="q-ml-xs iconHoverBtn" padding="sm" unelevated size="sm" round flat @click="listSchema(props)" />
+          <q-btn
+            :icon="'img:' + getImageURL('images/common/delete_icon.svg')"
+            :title="t('logStream.delete')"
+            class="q-ml-xs iconHoverBtn"
+            padding="sm"
+            unelevated
+            size="sm"
+            round
+            flat
+            @click="confirmDeleteAction(props)"
+          />
+          <q-btn
+            :icon="'img:' + getImageURL('images/common/list_icon.svg')"
+            :title="t('logStream.schemaHeader')"
+            class="q-ml-xs iconHoverBtn"
+            padding="sm"
+            unelevated
+            size="sm"
+            round
+            flat
+            @click="listSchema(props)"
+          />
         </q-td>
       </template>
 
@@ -42,26 +71,57 @@
         <div class="q-table__title" data-test="log-stream-title-text">
           {{ t("logStream.header") }}
         </div>
-        <q-input v-model="filterQuery" borderless filled dense class="q-ml-auto q-mb-xs no-border"
-          :placeholder="t('logStream.search')">
+        <q-input
+          v-model="filterQuery"
+          borderless
+          filled
+          dense
+          class="q-ml-auto q-mb-xs no-border"
+          :placeholder="t('logStream.search')"
+        >
           <template #prepend>
             <q-icon name="search" />
           </template>
         </q-input>
-        <q-btn data-test="log-stream-refresh-stats-btn" class="q-ml-md q-mb-xs text-bold no-border" padding="sm lg"
-          color="secondary" no-caps icon="refresh" :label="t(`logStream.refreshStats`)" @click="getLogStream" />
-
-        <QTablePagination data-test="log-stream-table-pagination" :scope="scope" :pageTitle="t('logStream.header')"
-          :resultTotal="resultTotal" :perPageOptions="perPageOptions" position="top"
-          @update:changeRecordPerPage="changePagination" />
+        <q-btn
+          data-test="log-stream-refresh-stats-btn"
+          class="q-ml-md q-mb-xs text-bold no-border"
+          padding="sm lg"
+          color="secondary"
+          no-caps
+          icon="refresh"
+          :label="t(`logStream.refreshStats`)"
+          @click="getLogStream"
+        />
+
+        <QTablePagination
+          data-test="log-stream-table-pagination"
+          :scope="scope"
+          :pageTitle="t('logStream.header')"
+          :resultTotal="resultTotal"
+          :perPageOptions="perPageOptions"
+          position="top"
+          @update:changeRecordPerPage="changePagination"
+        />
       </template>
 
       <template #bottom="scope">
-        <QTablePagination data-test="log-stream-table-pagination" :scope="scope" :resultTotal="resultTotal"
-          :perPageOptions="perPageOptions" position="bottom" @update:changeRecordPerPage="changePagination" />
+        <QTablePagination
+          data-test="log-stream-table-pagination"
+          :scope="scope"
+          :resultTotal="resultTotal"
+          :perPageOptions="perPageOptions"
+          position="bottom"
+          @update:changeRecordPerPage="changePagination"
+        />
       </template>
     </q-table>
-    <q-dialog v-model="showIndexSchemaDialog" position="right" full-height maximized>
+    <q-dialog
+      v-model="showIndexSchemaDialog"
+      position="right"
+      full-height
+      maximized
+    >
       <SchemaIndex v-model="schemaData" />
     </q-dialog>
 
@@ -73,10 +133,18 @@
         </q-card-section>
 
         <q-card-actions class="confirmActions">
-          <q-btn v-close-popup unelevated no-caps class="q-mr-sm">
+          <q-btn v-close-popup unelevated
+no-caps class="q-mr-sm">
             {{ t("logStream.cancel") }}
           </q-btn>
-          <q-btn v-close-popup unelevated no-caps class="no-border" color="primary" @click="deleteStream">
+          <q-btn
+            v-close-popup
+            unelevated
+            no-caps
+            class="no-border"
+            color="primary"
+            @click="deleteStream"
+          >
             {{ t("logStream.ok") }}
           </q-btn>
         </q-card-actions>
@@ -280,7 +348,11 @@ export default defineComponent({
 
     const deleteStream = () => {
       streamService
-        .delete(store.state.selectedOrganization.identifier, deleteStreamName, deleteStreamType)
+        .delete(
+          store.state.selectedOrganization.identifier,
+          deleteStreamName,
+          deleteStreamType
+        )
         .then((res: any) => {
           if (res.data.code == 200) {
             $q.notify({
diff --git a/web/src/views/MemberSubscription.vue b/web/src/views/MemberSubscription.vue
index 7434dcba081..a8cabd84ebc 100644
--- a/web/src/views/MemberSubscription.vue
+++ b/web/src/views/MemberSubscription.vue
@@ -14,12 +14,33 @@
 -->
 
 <template>
-  <q-page class="row justify-center items-center">
-    <h6 v-if="status == 'processing'">{{ message }}</h6>
-    <h6 v-else-if="status == 'error'">
-      Error while processing member subscription request.
-    </h6>
-    <h2 v-else>Thank you for your subscription.</h2>
+  <q-page>
+    <div
+      style="text-align: center; width: 100%; font-size: 30px; margin: 40px 0px"
+    >
+      Member Subscription
+    </div>
+    <div v-if="status == 'processing'">{{ message }}</div>
+    <div
+      v-else-if="status == 'error' && error == ''"
+      style="text-align: center"
+    >
+      Error while processing member subscription request.<br /><br />
+    </div>
+    <div
+      v-else-if="status == 'error' && error !== ''"
+      v-html="error"
+      class="subscription_message"
+    ></div>
+    <div v-else>Thank you for your subscription.</div>
+
+    <div
+      v-if="status == 'error' && error !== ''"
+      class="subscription_message q-btn-primary"
+    >
+      <b>Please click the button below to proceed with your subscription after taking above mentioned action.</b><br />
+      <q-btn @click="ProcessSubscription(queryString, 'confirm')" class="q-mt-md">Confirm Member Subscription</q-btn>
+    </div>
   </q-page>
 </template>
 
@@ -28,7 +49,7 @@ import { defineComponent } from "vue";
 import { useQuasar } from "quasar";
 import { useRouter } from "vue-router";
 import { useStore } from "vuex";
-import { getSessionStorageVal, useLocalOrganization } from "../utils/zincutils";
+import { getSessionStorageVal, useLocalOrganization, getPath } from "../utils/zincutils";
 
 import organizationsService from "../services/organizations";
 
@@ -38,16 +59,20 @@ export default defineComponent({
     return {
       status: "processing",
       message: "Please wait while we process your request...",
+      error: "",
+      queryString: this.$route.hash.split("=")[1],
     };
   },
   created() {
     const propArr = this.$route.hash.split("=");
-    this.ProcessSubscription(propArr[1]);
+    this.ProcessSubscription(propArr[1], "normal");
   },
   methods: {
-    async ProcessSubscription(s: any) {
+    async ProcessSubscription(s: any, action: string) {
+      const baseURL = getPath();
+      alert(baseURL)
       await organizationsService
-        .process_subscription(s)
+        .process_subscription(s, action)
         .then((res) => {
           this.status = "completed";
           const dismiss = this.$q.notify({
@@ -67,6 +92,7 @@ export default defineComponent({
         })
         .catch((e) => {
           this.status = "error";
+          this.error = e.response.data.error.replaceAll("[BASE_URL]", baseURL);
         });
     },
   },
@@ -76,8 +102,19 @@ export default defineComponent({
     const $router = useRouter();
 
     return {
+      $router,
       $store,
     };
   },
 });
 </script>
+
+<style lang="scss" scoped>
+.subscription_message {
+  font-size: 16px;
+  line-height: 30px;
+  width: 70%;
+  margin: auto;
+  text-align: left;
+}
+</style>
diff --git a/web/src/views/User.vue b/web/src/views/User.vue
index e5830312e2f..998c3042275 100644
--- a/web/src/views/User.vue
+++ b/web/src/views/User.vue
@@ -6,6 +6,8 @@
 
 <script lang="ts">
 import { defineComponent } from "vue";
+import { useStore } from "vuex";
+import { useI18n } from "vue-i18n";
 import UsersCloud from "@/enterprise/components/users/User.vue";
 import UsersOpenSource from "@/components/users/User.vue";
 import config from "@/aws-exports";
@@ -31,5 +33,11 @@ export default defineComponent({
     UsersCloud,
     UsersOpenSource,
   },
+  setup() {
+    const store = useStore();
+    const { t } = useI18n();
+
+    return {store, t,};
+  },
 });
 </script>
