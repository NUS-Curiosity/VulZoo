diff --git a/app/controllers/discourse_post_event/invitees_controller.rb b/app/controllers/discourse_post_event/invitees_controller.rb
index 92958a06a..39b636bf3 100644
--- a/app/controllers/discourse_post_event/invitees_controller.rb
+++ b/app/controllers/discourse_post_event/invitees_controller.rb
@@ -35,6 +35,8 @@ def create
       event = Event.find(params[:post_id])
       guardian.ensure_can_see!(event.post)
 
+      raise Discourse::InvalidAccess if !event.can_user_update_attendance(current_user)
+
       invitee =
         Invitee.create_attendance!(current_user.id, params[:post_id], invitee_params[:status])
       render json: InviteeSerializer.new(invitee)
diff --git a/spec/requests/invitees_controller_spec.rb b/spec/requests/invitees_controller_spec.rb
index 07ebf4407..d805b82f3 100644
--- a/spec/requests/invitees_controller_spec.rb
+++ b/spec/requests/invitees_controller_spec.rb
@@ -173,7 +173,6 @@ module DiscoursePostEvent
           post "/discourse-post-event/events/#{post_event_2.id}/invitees.json",
                params: {
                  invitee: {
-                   user_id: user.id,
                    status: "not_going",
                  },
                }
@@ -185,7 +184,6 @@ module DiscoursePostEvent
           post "/discourse-post-event/events/#{post_event_2.id}/invitees.json",
                params: {
                  invitee: {
-                   user_id: user.id,
                    status: "going",
                  },
                }
@@ -196,6 +194,24 @@ module DiscoursePostEvent
           expect(tu.notification_level).to eq(TopicUser.notification_levels[:watching])
         end
 
+        context "when someone is trying to invite themselves to a private event (creepy)" do
+          let(:post_event_2) { Fabricate(:event, post: post_1, status: "private") }
+          let(:other_user) { Fabricate(:user, username: "creep") }
+
+          before { sign_in(other_user) }
+
+          it "does not create an invitee" do
+            expect do
+              post "/discourse-post-event/events/#{post_event_2.id}/invitees.json",
+                   params: {
+                     invitee: {
+                       status: "going",
+                     },
+                   }
+            end.not_to change { post_event_2.invitees.count }
+          end
+        end
+
         context "when the invitee is the event owner" do
           let(:post_event_2) { Fabricate(:event, post: post_1) }
 
