diff --git a/packages/Webkul/Installer/src/Console/Commands/DefaultUser.php b/packages/Webkul/Installer/src/Console/Commands/DefaultUser.php
index fc14625..3204d41 100644
--- a/packages/Webkul/Installer/src/Console/Commands/DefaultUser.php
+++ b/packages/Webkul/Installer/src/Console/Commands/DefaultUser.php
@@ -2,8 +2,10 @@
 
 namespace Webkul\Installer\Console\Commands;
 
+use Carbon\Carbon;
 use Illuminate\Console\Command;
 use Illuminate\Support\Facades\DB;
+use Illuminate\Support\Facades\Log;
 use Illuminate\Support\Str;
 
 use function Laravel\Prompts\select;
@@ -49,25 +51,269 @@ class DefaultUser extends Command
         'zh_CN' => 'Chinese',
     ];
 
+    /**
+     * Local codes.
+     */
+    protected $localCodes = [
+        'af_ZA',
+        'am_ET',
+        'ar_AE',
+        'ar_BH',
+        'ar_DZ',
+        'ar_EG',
+        'ar_IQ',
+        'ar_JO',
+        'ar_KW',
+        'ar_LB',
+        'ar_LY',
+        'ar_MA',
+        'arn_CL',
+        'ar_OM',
+        'ar_QA',
+        'ar_SA',
+        'ar_SY',
+        'ar_TN',
+        'ar_YE',
+        'as_IN',
+        'az_Cyrl_AZ',
+        'az_Latn_AZ',
+        'ba_RU',
+        'be_BY',
+        'bg_BG',
+        'bn_BD',
+        'bn_IN',
+        'bo_CN',
+        'br_FR',
+        'bs_Cyrl_BA',
+        'bs_Latn_BA',
+        'ca_ES',
+        'co_FR',
+        'cs_CZ',
+        'cy_GB',
+        'da_DK',
+        'de_AT',
+        'de_CH',
+        'de_DE',
+        'de_LI',
+        'de_LU',
+        'dsb_DE',
+        'dv_MV',
+        'el_GR',
+        'en_029',
+        'en_AU',
+        'en_BZ',
+        'en_CA',
+        'en_GB',
+        'en_IE',
+        'en_IN',
+        'en_JM',
+        'en_MY',
+        'en_NZ',
+        'en_PH',
+        'en_SG',
+        'en_TT',
+        'en_US',
+        'en_ZA',
+        'en_ZW',
+        'es_AR',
+        'es_BO',
+        'es_CL',
+        'es_CO',
+        'es_CR',
+        'es_DO',
+        'es_EC',
+        'es_ES',
+        'es_GT',
+        'es_HN',
+        'es_MX',
+        'es_NI',
+        'es_PA',
+        'es_PE',
+        'es_PR',
+        'es_PY',
+        'es_SV',
+        'es_US',
+        'es_UY',
+        'es_VE',
+        'et_EE',
+        'eu_ES',
+        'fa_IR',
+        'fi_FI',
+        'fil_PH',
+        'fo_FO',
+        'fr_BE',
+        'fr_CA',
+        'fr_CH',
+        'fr_FR',
+        'fr_LU',
+        'fr_MC',
+        'fy_NL',
+        'ga_IE',
+        'gd_GB',
+        'gl_ES',
+        'gsw_FR',
+        'gu_IN',
+        'ha_Latn_NG',
+        'he_IL',
+        'hi_IN',
+        'hr_BA',
+        'hr_HR',
+        'hsb_DE',
+        'hu_HU',
+        'hy_AM',
+        'id_ID',
+        'ig_NG',
+        'ii_CN',
+        'is_IS',
+        'it_CH',
+        'it_IT',
+        'iu_Cans_CA',
+        'iu_Latn_CA',
+        'ja_JP',
+        'ka_GE',
+        'kk_KZ',
+        'kl_GL',
+        'km_KH',
+        'kn_IN',
+        'kok_IN',
+        'ko_KR',
+        'ky_KG',
+        'lb_LU',
+        'lo_LA',
+        'lt_LT',
+        'lv_LV',
+        'mi_NZ',
+        'mk_MK',
+        'ml_IN',
+        'mn_MN',
+        'mn_Mong_CN',
+        'moh_CA',
+        'mr_IN',
+        'ms_BN',
+        'ms_MY',
+        'mt_MT',
+        'nb_NO',
+        'ne_NP',
+        'nl_BE',
+        'nl_NL',
+        'nn_NO',
+        'nso_ZA',
+        'oc_FR',
+        'or_IN',
+        'pa_IN',
+        'pl_PL',
+        'prs_AF',
+        'ps_AF',
+        'pt_BR',
+        'pt_PT',
+        'qut_GT',
+        'quz_BO',
+        'quz_EC',
+        'quz_PE',
+        'rm_CH',
+        'ro_RO',
+        'ru_RU',
+        'rw_RW',
+        'sah_RU',
+        'sa_IN',
+        'se_FI',
+        'se_NO',
+        'se_SE',
+        'si_LK',
+        'sk_SK',
+        'sl_SI',
+        'sma_NO',
+        'sma_SE',
+        'smj_NO',
+        'smj_SE',
+        'smn_FI',
+        'sms_FI',
+        'sq_AL',
+        'sr_Cyrl_BA',
+        'sr_Cyrl_CS',
+        'sr_Cyrl_ME',
+        'sr_Cyrl_RS',
+        'sr_Latn_BA',
+        'sr_Latn_CS',
+        'sr_Latn_ME',
+        'sr_Latn_RS',
+        'sv_FI',
+        'sv_SE',
+        'sw_KE',
+        'syr_SY',
+        'ta_IN',
+        'te_IN',
+        'tg_Cyrl_TJ',
+        'th_TH',
+        'tk_TM',
+        'tn_ZA',
+        'tr_TR',
+        'tt_RU',
+        'tzm_Latn_DZ',
+        'ug_CN',
+        'uk_UA',
+        'ur_PK',
+        'uz_Cyrl_UZ',
+        'uz_Latn_UZ',
+        'vi_VN',
+        'wo_SN',
+        'xh_ZA',
+        'yo_NG',
+        'zh_CN',
+        'zh_HK',
+        'zh_MO',
+        'zh_SG',
+        'zh_TW',
+        'zu_ZA',
+    ];
+
     /**
      * Create UnoPim user.
      */
     public function handle()
     {
-        $userName = $this->option('name') ?: text(
+        Log::info('User create command has started');
+
+        $userName = $this->option('name');
+        $isAdmin = $this->option('admin');
+
+        if ($userName && ! preg_match('/^[a-zA-Z0-9\s]+$/', $userName)) {
+            $this->warn('The name can only accept alphanumeric characters and spaces.');
+            Log::warning('The name can only accept alphanumeric characters and spaces.');
+            $userName = null;
+        }
+
+        $userName = $userName ?: text(
             label: 'Set the Name for User',
-            default: 'Admin',
-            required: true
+            default: $isAdmin ? 'Admin' : 'User',
+            required: true,
+            validate: fn (string $value) => match (true) {
+                ! preg_match('/^[a-zA-Z0-9\s]+$/', $value) => 'The name can only accept alphanumeric characters and spaces.',
+                default                                    => null
+            }
         );
 
         $userEmail = $this->option('email');
+        $existingUserEmails = DB::table('admins')->pluck('email')->toArray();
+
+        if ($userEmail && ! filter_var($userEmail, FILTER_VALIDATE_EMAIL)) {
+            $this->warn('The provided email is invalid, kindly enter a valid email address.');
+            Log::warning('The provided email is invalid, kindly enter a valid email address.');
+        }
+
+        if ($userEmail && in_array($userEmail, $existingUserEmails)) {
+            $this->warn('User with email '.$userEmail.' already exists.');
+            Log::warning('User with email '.$userEmail.' already exists.');
+            $userEmail = null;
+        }
 
         if (! $userEmail || ! filter_var($userEmail, FILTER_VALIDATE_EMAIL)) {
             $userEmail = text(
                 label: 'Provide Email of User',
-                default: 'admin@example.com',
+                default: $isAdmin ? 'admin@example.com' : 'user@example.com',
                 validate: fn (string $value) => match (true) {
                     ! filter_var($value, FILTER_VALIDATE_EMAIL) => 'The provided email is invalid, kindly enter a valid email address.',
+                    in_array($value, $existingUserEmails)       => 'User with email '.$value.' already exists.',
                     default                                     => null
                 }
             );
@@ -75,33 +321,52 @@ public function handle()
 
         $userPassword = $this->option('password') ?: text(
             label: 'Input a Secure Password for User',
-            default: 'admin@123',
+            default: $isAdmin ? 'admin@123' : 'user@123',
             required: true
         );
 
         while (strlen($userPassword) < 6) {
-            $this->error('Password must be at least 6 characters.');
+            $this->warn('Password must be at least 6 characters.');
+            Log::warning('Password must be at least 6 characters.');
 
             $userPassword = text(
                 label: 'Input a Secure Password for User',
-                default: 'admin@123',
+                default: $isAdmin ? 'admin@123' : 'user@123',
                 required: true
             );
         }
 
         $password = password_hash($userPassword, PASSWORD_BCRYPT, ['cost' => 10]);
 
-        $timezone = $this->option('timezone') ?? date_default_timezone_get();
+        $timezone = $this->option('timezone');
+
+        if ($timezone && ! array_key_exists($timezone, $this->getTimeZones())) {
+            $this->warn("The specified timezone '$timezone' is not valid. Please select a valid timezone.");
+            Log::warning("The specified timezone '$timezone' is not valid. Please select a valid timezone.");
+            $timezone = null;
+        }
+
+        $timezone = $timezone ?: $this->askForDefaultValues(
+            'APP_LOCALE',
+            'Please select the default timezone',
+            $this->getTimeZones()
+        );
+
+        $uiLocale = $this->option('ui_locale');
 
-        $this->info('Your Default Timezone is '.$timezone);
+        if ($uiLocale && ! in_array($uiLocale, $this->localCodes)) {
+            $this->warn("The specified locale code '$uiLocale' is not valid. Please select a valid locale.");
+            Log::warning("The specified locale code '$uiLocale' is not valid. Please select a valid locale.");
+
+            $uiLocale = null;
+        }
 
-        $defaultLocale = $this->option('ui_locale') ?: $this->askForDefaultLocale(
+        $defaultLocale = $uiLocale ?: $this->askForDefaultValues(
             'APP_LOCALE',
             'Please select the default application locale',
             $this->locales
         );
 
-        $isAdmin = $this->option('admin');
         $localeId = DB::table('locales')->where('code', $defaultLocale)->where('status', 1)->first()?->id ?? 58;
         $role = $isAdmin ? DB::table('roles')->where('permission_type', 'all')->first()?->id : DB::table('roles')->where('permission_type', 'custom')->first()?->id;
 
@@ -140,11 +405,14 @@ public function handle()
             $this->info('Email: '.$userEmail);
             $this->info('Password: '.$userPassword);
             $this->info('Cheers!');
+            Log::info('Congratulations! The User has been created successfully');
         } catch (\Exception $e) {
             if (strpos($e->getMessage(), 'Duplicate entry')) {
                 $this->error('User with email '.$userEmail.' already exists.');
+                Log::error('User with email '.$userEmail.' already exists.');
             } else {
                 $this->error($e->getMessage());
+                Log::error($e->getMessage());
             }
         }
     }
@@ -152,7 +420,7 @@ public function handle()
     /**
      * Method for asking default locale choice based on the list of options.
      */
-    protected function askForDefaultLocale(string $key, string $question, array $choices): string
+    protected function askForDefaultValues(string $key, string $question, array $choices): string
     {
         $choice = select(
             label: $question,
@@ -162,4 +430,26 @@ protected function askForDefaultLocale(string $key, string $question, array $cho
 
         return $choice;
     }
+
+    /**
+     * Get All timezones list with offset in name
+     */
+    public function getTimeZones(): array
+    {
+        $timezones = \DateTimeZone::listIdentifiers();
+
+        $formattedTimezones = [];
+
+        foreach ($timezones as $index => $timezone) {
+            $now = Carbon::now($timezone);
+
+            $offset = $now->offset / 60;
+
+            $formattedName = sprintf('%s (%+03d:%02d)', $timezone, $offset / 60, abs($offset % 60));
+
+            $formattedTimezones[$timezone] = $formattedName;
+        }
+
+        return $formattedTimezones;
+    }
 }
