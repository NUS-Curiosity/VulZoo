diff --git a/.changes/unreleased/Features-20231218-195854.yaml b/.changes/unreleased/Features-20231218-195854.yaml
new file mode 100644
index 00000000000..2a78826aff0
--- /dev/null
+++ b/.changes/unreleased/Features-20231218-195854.yaml
@@ -0,0 +1,6 @@
+kind: Features
+body: Move flags from UserConfig in profiles.yml to flags in dbt_project.yml
+time: 2023-12-18T19:58:54.075811-05:00
+custom:
+  Author: gshank
+  Issue: "9183"
diff --git a/.changes/unreleased/Features-20240422-173703.yaml b/.changes/unreleased/Features-20240422-173703.yaml
new file mode 100644
index 00000000000..3c957af40c1
--- /dev/null
+++ b/.changes/unreleased/Features-20240422-173703.yaml
@@ -0,0 +1,6 @@
+kind: Features
+body: Add require_explicit_package_overrides_for_builtin_materializations to dbt_project.yml flags, which can be used to opt-out of overriding built-in materializations from packages
+time: 2024-04-22T17:37:03.892268-04:00
+custom:
+  Author: michelleark
+  Issue: "10007"
diff --git a/.changes/unreleased/Under the Hood-20240418-172528.yaml b/.changes/unreleased/Under the Hood-20240418-172528.yaml
new file mode 100644
index 00000000000..50743d8a755
--- /dev/null
+++ b/.changes/unreleased/Under the Hood-20240418-172528.yaml	
@@ -0,0 +1,6 @@
+kind: Under the Hood
+body: Raise deprecation warning if installed package overrides built-in materialization
+time: 2024-04-18T17:25:28.37886-04:00
+custom:
+  Author: michelleark
+  Issue: "9971"
diff --git a/core/dbt/cli/flags.py b/core/dbt/cli/flags.py
index 5b1769346ba..b92703beb37 100644
--- a/core/dbt/cli/flags.py
+++ b/core/dbt/cli/flags.py
@@ -3,6 +3,7 @@
 from dataclasses import dataclass
 from importlib import import_module
 from multiprocessing import get_context
+from pathlib import Path
 from pprint import pformat as pf
 from typing import Any, Callable, Dict, List, Optional, Set, Union
 
@@ -11,8 +12,8 @@
 from dbt.cli.exceptions import DbtUsageException
 from dbt.cli.resolvers import default_log_path, default_project_dir
 from dbt.cli.types import Command as CliCommand
-from dbt.config.profile import read_user_config
-from dbt.contracts.project import UserConfig
+from dbt.config.project import read_project_flags
+from dbt.contracts.project import ProjectFlags
 from dbt.exceptions import DbtInternalError
 from dbt.deprecations import renamed_env_var
 from dbt.helper_types import WarnErrorOptions
@@ -25,7 +26,7 @@
     "INDIRECT_SELECTION": "eager",
     "TARGET_PATH": None,
     "WARN_ERROR": None,
-    # Cli args without user_config or env var option.
+    # Cli args without project_flags or env var option.
     "FULL_REFRESH": False,
     "STRICT_MODE": False,
     "STORE_FAILURES": False,
@@ -77,7 +78,7 @@ class Flags:
     """Primary configuration artifact for running dbt"""
 
     def __init__(
-        self, ctx: Optional[Context] = None, user_config: Optional[UserConfig] = None
+        self, ctx: Optional[Context] = None, project_flags: Optional[ProjectFlags] = None
     ) -> None:
         # Set the default flags.
         for key, value in FLAGS_DEFAULTS.items():
@@ -200,27 +201,40 @@ def _assign_params(
                 invoked_subcommand_ctx, params_assigned_from_default, deprecated_env_vars
             )
 
-        if not user_config:
+        if not project_flags:
+            project_dir = getattr(self, "PROJECT_DIR", str(default_project_dir()))
             profiles_dir = getattr(self, "PROFILES_DIR", None)
-            user_config = read_user_config(profiles_dir) if profiles_dir else None
+            if profiles_dir and project_dir:
+                project_flags = read_project_flags(project_dir, profiles_dir)
+            else:
+                project_flags = None
 
         # Add entire invocation command to flags
         object.__setattr__(self, "INVOCATION_COMMAND", "dbt " + " ".join(sys.argv[1:]))
 
-        # Overwrite default assignments with user config if available.
-        if user_config:
+        if project_flags:
+            # Overwrite default assignments with project flags if available.
             param_assigned_from_default_copy = params_assigned_from_default.copy()
             for param_assigned_from_default in params_assigned_from_default:
-                user_config_param_value = getattr(user_config, param_assigned_from_default, None)
-                if user_config_param_value is not None:
+                project_flags_param_value = getattr(
+                    project_flags, param_assigned_from_default, None
+                )
+                if project_flags_param_value is not None:
                     object.__setattr__(
                         self,
                         param_assigned_from_default.upper(),
-                        convert_config(param_assigned_from_default, user_config_param_value),
+                        convert_config(param_assigned_from_default, project_flags_param_value),
                     )
                     param_assigned_from_default_copy.remove(param_assigned_from_default)
             params_assigned_from_default = param_assigned_from_default_copy
 
+            # Add project-level flags that are not available as CLI options / env vars
+            for (
+                project_level_flag_name,
+                project_level_flag_value,
+            ) in project_flags.project_only_flags.items():
+                object.__setattr__(self, project_level_flag_name.upper(), project_level_flag_value)
+
         # Set hard coded flags.
         object.__setattr__(self, "WHICH", invoked_subcommand_name or ctx.info_name)
         object.__setattr__(self, "MP_CONTEXT", get_context("spawn"))
@@ -234,9 +248,11 @@ def _assign_params(
         # Starting in v1.5, if `log-path` is set in `dbt_project.yml`, it will raise a deprecation warning,
         # with the possibility of removing it in a future release.
         if getattr(self, "LOG_PATH", None) is None:
-            project_dir = getattr(self, "PROJECT_DIR", default_project_dir())
+            project_dir = getattr(self, "PROJECT_DIR", str(default_project_dir()))
             version_check = getattr(self, "VERSION_CHECK", True)
-            object.__setattr__(self, "LOG_PATH", default_log_path(project_dir, version_check))
+            object.__setattr__(
+                self, "LOG_PATH", default_log_path(Path(project_dir), version_check)
+            )
 
         # Support console DO NOT TRACK initiative.
         if os.getenv("DO_NOT_TRACK", "").lower() in ("1", "t", "true", "y", "yes"):
diff --git a/core/dbt/config/__init__.py b/core/dbt/config/__init__.py
index 1fa43bed3a5..767901c84eb 100644
--- a/core/dbt/config/__init__.py
+++ b/core/dbt/config/__init__.py
@@ -1,4 +1,4 @@
 # all these are just exports, they need "noqa" so flake8 will not complain.
-from .profile import Profile, read_user_config  # noqa
+from .profile import Profile  # noqa
 from .project import Project, IsFQNResource, PartialProject  # noqa
 from .runtime import RuntimeConfig  # noqa
diff --git a/core/dbt/config/profile.py b/core/dbt/config/profile.py
index acd06e6a8a7..740c0bfe5e9 100644
--- a/core/dbt/config/profile.py
+++ b/core/dbt/config/profile.py
@@ -8,7 +8,7 @@
 from dbt.clients.system import load_file_contents
 from dbt.clients.yaml_helper import load_yaml_text
 from dbt.contracts.connection import Credentials, HasCredentials
-from dbt.contracts.project import ProfileConfig, UserConfig
+from dbt.contracts.project import ProfileConfig
 from dbt.exceptions import (
     CompilationError,
     DbtProfileError,
@@ -19,7 +19,6 @@
 )
 from dbt.events.types import MissingProfileTarget
 from dbt.events.functions import fire_event
-from dbt.utils import coerce_dict_str
 
 from .renderer import ProfileRenderer
 
@@ -51,19 +50,6 @@ def read_profile(profiles_dir: str) -> Dict[str, Any]:
     return {}
 
 
-def read_user_config(directory: str) -> UserConfig:
-    try:
-        profile = read_profile(directory)
-        if profile:
-            user_config = coerce_dict_str(profile.get("config", {}))
-            if user_config is not None:
-                UserConfig.validate(user_config)
-                return UserConfig.from_dict(user_config)
-    except (DbtRuntimeError, ValidationError):
-        pass
-    return UserConfig()
-
-
 # The Profile class is included in RuntimeConfig, so any attribute
 # additions must also be set where the RuntimeConfig class is created
 # `init=False` is a workaround for https://bugs.python.org/issue45081
@@ -71,7 +57,6 @@ def read_user_config(directory: str) -> UserConfig:
 class Profile(HasCredentials):
     profile_name: str
     target_name: str
-    user_config: UserConfig
     threads: int
     credentials: Credentials
     profile_env_vars: Dict[str, Any]
@@ -80,7 +65,6 @@ def __init__(
         self,
         profile_name: str,
         target_name: str,
-        user_config: UserConfig,
         threads: int,
         credentials: Credentials,
     ) -> None:
@@ -89,7 +73,6 @@ def __init__(
         """
         self.profile_name = profile_name
         self.target_name = target_name
-        self.user_config = user_config
         self.threads = threads
         self.credentials = credentials
         self.profile_env_vars = {}  # never available on init
@@ -106,12 +89,10 @@ def to_profile_info(self, serialize_credentials: bool = False) -> Dict[str, Any]
         result = {
             "profile_name": self.profile_name,
             "target_name": self.target_name,
-            "user_config": self.user_config,
             "threads": self.threads,
             "credentials": self.credentials,
         }
         if serialize_credentials:
-            result["user_config"] = self.user_config.to_dict(omit_none=True)
             result["credentials"] = self.credentials.to_dict(omit_none=True)
         return result
 
@@ -124,7 +105,6 @@ def to_target_dict(self) -> Dict[str, Any]:
                 "name": self.target_name,
                 "target_name": self.target_name,
                 "profile_name": self.profile_name,
-                "config": self.user_config.to_dict(omit_none=True),
             }
         )
         return target
@@ -246,7 +226,6 @@ def from_credentials(
         threads: int,
         profile_name: str,
         target_name: str,
-        user_config: Optional[Dict[str, Any]] = None,
     ) -> "Profile":
         """Create a profile from an existing set of Credentials and the
         remaining information.
@@ -255,20 +234,13 @@ def from_credentials(
         :param threads: The number of threads to use for connections.
         :param profile_name: The profile name used for this profile.
         :param target_name: The target name used for this profile.
-        :param user_config: The user-level config block from the
-            raw profiles, if specified.
         :raises DbtProfileError: If the profile is invalid.
         :returns: The new Profile object.
         """
-        if user_config is None:
-            user_config = {}
-        UserConfig.validate(user_config)
-        user_config_obj: UserConfig = UserConfig.from_dict(user_config)
 
         profile = cls(
             profile_name=profile_name,
             target_name=target_name,
-            user_config=user_config_obj,
             threads=threads,
             credentials=credentials,
         )
@@ -316,7 +288,6 @@ def from_raw_profile_info(
         raw_profile: Dict[str, Any],
         profile_name: str,
         renderer: ProfileRenderer,
-        user_config: Optional[Dict[str, Any]] = None,
         target_override: Optional[str] = None,
         threads_override: Optional[int] = None,
     ) -> "Profile":
@@ -328,8 +299,6 @@ def from_raw_profile_info(
             disk as yaml and its values rendered with jinja.
         :param profile_name: The profile name used.
         :param renderer: The config renderer.
-        :param user_config: The global config for the user, if it
-            was present.
         :param target_override: The target to use, if provided on
             the command line.
         :param threads_override: The thread count to use, if
@@ -338,9 +307,6 @@ def from_raw_profile_info(
             target could not be found
         :returns: The new Profile object.
         """
-        # user_config is not rendered.
-        if user_config is None:
-            user_config = raw_profile.get("config")
         # TODO: should it be, and the values coerced to bool?
         target_name, profile_data = cls.render_profile(
             raw_profile, profile_name, target_override, renderer
@@ -361,7 +327,6 @@ def from_raw_profile_info(
             profile_name=profile_name,
             target_name=target_name,
             threads=threads,
-            user_config=user_config,
         )
 
     @classmethod
@@ -396,13 +361,11 @@ def from_raw_profiles(
         if not raw_profile:
             msg = f"Profile {profile_name} in profiles.yml is empty"
             raise DbtProfileError(INVALID_PROFILE_MESSAGE.format(error_string=msg))
-        user_config = raw_profiles.get("config")
 
         return cls.from_raw_profile_info(
             raw_profile=raw_profile,
             profile_name=profile_name,
             renderer=renderer,
-            user_config=user_config,
             target_override=target_override,
             threads_override=threads_override,
         )
diff --git a/core/dbt/config/project.py b/core/dbt/config/project.py
index 696e2668762..3d7426c6f8f 100644
--- a/core/dbt/config/project.py
+++ b/core/dbt/config/project.py
@@ -20,6 +20,7 @@
     DEPENDENCIES_FILE_NAME,
     PACKAGES_FILE_NAME,
     PACKAGE_LOCK_HASH_KEY,
+    DBT_PROJECT_FILE_NAME,
 )
 from dbt.clients.system import path_exists, load_file_contents
 from dbt.clients.yaml_helper import load_yaml_text
@@ -35,12 +36,13 @@
 from dbt.helper_types import NoValue
 from dbt.semver import VersionSpecifier, versions_compatible
 from dbt.version import get_installed_version
-from dbt.utils import MultiDict, md5
+from dbt.utils import MultiDict, md5, coerce_dict_str
 from dbt.node_types import NodeType
 from dbt.config.selectors import SelectorDict
 from dbt.contracts.project import (
     Project as ProjectContract,
     SemverString,
+    ProjectFlags,
 )
 from dbt.contracts.project import PackageConfig, ProjectPackageMetadata
 from dbt.dataclass_schema import ValidationError
@@ -81,8 +83,8 @@
 """
 
 MISSING_DBT_PROJECT_ERROR = """\
-No dbt_project.yml found at expected path {path}
-Verify that each entry within packages.yml (and their transitive dependencies) contains a file named dbt_project.yml
+No {DBT_PROJECT_FILE_NAME} found at expected path {path}
+Verify that each entry within packages.yml (and their transitive dependencies) contains a file named {DBT_PROJECT_FILE_NAME}
 """
 
 
@@ -199,16 +201,20 @@ def value_or(value: Optional[T], default: T) -> T:
 def load_raw_project(project_root: str) -> Dict[str, Any]:
 
     project_root = os.path.normpath(project_root)
-    project_yaml_filepath = os.path.join(project_root, "dbt_project.yml")
+    project_yaml_filepath = os.path.join(project_root, DBT_PROJECT_FILE_NAME)
 
     # get the project.yml contents
     if not path_exists(project_yaml_filepath):
-        raise DbtProjectError(MISSING_DBT_PROJECT_ERROR.format(path=project_yaml_filepath))
+        raise DbtProjectError(
+            MISSING_DBT_PROJECT_ERROR.format(
+                path=project_yaml_filepath, DBT_PROJECT_FILE_NAME=DBT_PROJECT_FILE_NAME
+            )
+        )
 
     project_dict = _load_yaml(project_yaml_filepath)
 
     if not isinstance(project_dict, dict):
-        raise DbtProjectError("dbt_project.yml does not parse to a dictionary")
+        raise DbtProjectError(f"{DBT_PROJECT_FILE_NAME} does not parse to a dictionary")
 
     return project_dict
 
@@ -323,21 +329,21 @@ def get_rendered(
             selectors_dict=rendered_selectors,
         )
 
-    # Called by Project.from_project_root (not PartialProject.from_project_root!)
+    # Called by Project.from_project_root which first calls PartialProject.from_project_root
     def render(self, renderer: DbtProjectYamlRenderer) -> "Project":
         try:
             rendered = self.get_rendered(renderer)
             return self.create_project(rendered)
         except DbtProjectError as exc:
             if exc.path is None:
-                exc.path = os.path.join(self.project_root, "dbt_project.yml")
+                exc.path = os.path.join(self.project_root, DBT_PROJECT_FILE_NAME)
             raise
 
     def render_package_metadata(self, renderer: PackageRenderer) -> ProjectPackageMetadata:
         packages_data = renderer.render_data(self.packages_dict)
         packages_config = package_config_from_data(packages_data, self.packages_dict)
         if not self.project_name:
-            raise DbtProjectError("Package dbt_project.yml must have a name!")
+            raise DbtProjectError(f"Package defined in {DBT_PROJECT_FILE_NAME} must have a name!")
         return ProjectPackageMetadata(self.project_name, packages_config.packages)
 
     def check_config_path(
@@ -348,7 +354,7 @@ def check_config_path(
                 msg = (
                     "{deprecated_path} and {expected_path} cannot both be defined. The "
                     "`{deprecated_path}` config has been deprecated in favor of `{expected_path}`. "
-                    "Please update your `dbt_project.yml` configuration to reflect this "
+                    f"Please update your `{DBT_PROJECT_FILE_NAME}` configuration to reflect this "
                     "change."
                 )
                 raise DbtProjectError(
@@ -420,11 +426,11 @@ def create_project(self, rendered: RenderComponents) -> "Project":
 
         docs_paths: List[str] = value_or(cfg.docs_paths, all_source_paths)
         asset_paths: List[str] = value_or(cfg.asset_paths, [])
-        flags = get_flags()
+        global_flags = get_flags()
 
-        flag_target_path = str(flags.TARGET_PATH) if flags.TARGET_PATH else None
+        flag_target_path = str(global_flags.TARGET_PATH) if global_flags.TARGET_PATH else None
         target_path: str = flag_or(flag_target_path, cfg.target_path, "target")
-        log_path: str = str(flags.LOG_PATH)
+        log_path: str = str(global_flags.LOG_PATH)
 
         clean_targets: List[str] = value_or(cfg.clean_targets, [target_path])
         packages_install_path: str = value_or(cfg.packages_install_path, "dbt_packages")
@@ -569,6 +575,11 @@ def from_project_root(
         ) = package_and_project_data_from_root(project_root)
         selectors_dict = selector_data_from_root(project_root)
 
+        if "flags" in project_dict:
+            # We don't want to include "flags" in the Project,
+            # it goes in ProjectFlags
+            project_dict.pop("flags")
+
         return cls.from_dicts(
             project_root=project_root,
             project_dict=project_dict,
@@ -709,7 +720,6 @@ def to_project_config(self, with_packages=False):
                 "exposures": self.exposures,
                 "vars": self.vars.to_dict(),
                 "require-dbt-version": [v.to_version_string() for v in self.dbt_version],
-                "config-version": self.config_version,
                 "restrict-access": self.restrict_access,
                 "dbt-cloud": self.dbt_cloud,
             }
@@ -773,3 +783,52 @@ def get_macro_search_order(self, macro_namespace: str):
     def project_target_path(self):
         # If target_path is absolute, project_root will not be included
         return os.path.join(self.project_root, self.target_path)
+
+
+def read_project_flags(project_dir: str, profiles_dir: str) -> ProjectFlags:
+    try:
+        project_flags: Dict[str, Any] = {}
+        # Read project_flags from dbt_project.yml first
+        # Flags are instantiated before the project, so we don't
+        # want to throw an error for non-existence of dbt_project.yml here
+        # because it breaks things.
+        project_root = os.path.normpath(project_dir)
+        project_yaml_filepath = os.path.join(project_root, DBT_PROJECT_FILE_NAME)
+        if path_exists(project_yaml_filepath):
+            try:
+                project_dict = load_raw_project(project_root)
+                if "flags" in project_dict:
+                    project_flags = project_dict.pop("flags")
+            except Exception:
+                # This is probably a yaml load error.The error will be reported
+                # later, when the project loads.
+                pass
+
+        from dbt.config.profile import read_profile
+
+        profile = read_profile(profiles_dir)
+        profile_project_flags: Optional[Dict[str, Any]] = {}
+        if profile:
+            profile_project_flags = coerce_dict_str(profile.get("config", {}))
+
+        if project_flags and profile_project_flags:
+            raise DbtProjectError(
+                f"Do not specify both 'config' in profiles.yml and 'flags' in {DBT_PROJECT_FILE_NAME}. "
+                "Using 'config' in profiles.yml is deprecated."
+            )
+
+        if profile_project_flags:
+            # This can't use WARN_ERROR or WARN_ERROR_OPTIONS because they're in
+            # the config that we're loading. Uses special "warn" method.
+            deprecations.warn("project-flags-moved")
+            project_flags = profile_project_flags
+
+        if project_flags is not None:
+            ProjectFlags.validate(project_flags)
+            return ProjectFlags.from_dict(project_flags)
+    except (DbtProjectError) as exc:
+        # We don't want to eat the DbtProjectError for UserConfig to ProjectFlags
+        raise exc
+    except (DbtRuntimeError, ValidationError):
+        pass
+    return ProjectFlags()
diff --git a/core/dbt/config/runtime.py b/core/dbt/config/runtime.py
index ab92be2f128..913fed53cd8 100644
--- a/core/dbt/config/runtime.py
+++ b/core/dbt/config/runtime.py
@@ -20,7 +20,7 @@
 from dbt.config.project import load_raw_project
 from dbt.contracts.connection import AdapterRequiredConfig, Credentials, HasCredentials
 from dbt.contracts.graph.manifest import ManifestMetadata
-from dbt.contracts.project import Configuration, UserConfig
+from dbt.contracts.project import Configuration
 from dbt.contracts.relation import ComponentName
 from dbt.dataclass_schema import ValidationError
 from dbt.events.functions import warn_or_error
@@ -178,7 +178,6 @@ def from_parts(
             profile_env_vars=profile.profile_env_vars,
             profile_name=profile.profile_name,
             target_name=profile.target_name,
-            user_config=profile.user_config,
             threads=profile.threads,
             credentials=profile.credentials,
             args=args,
@@ -432,7 +431,6 @@ def _connection_keys(self):
 class UnsetProfile(Profile):
     def __init__(self):
         self.credentials = UnsetCredentials()
-        self.user_config = UserConfig()  # This will be read in _get_rendered_profile
         self.profile_name = ""
         self.target_name = ""
         self.threads = -1
diff --git a/core/dbt/contracts/connection.py b/core/dbt/contracts/connection.py
index 692f40f71b7..b4e4b086612 100644
--- a/core/dbt/contracts/connection.py
+++ b/core/dbt/contracts/connection.py
@@ -178,17 +178,9 @@ def __post_serialize__(self, dct):
         return dct
 
 
-class UserConfigContract(Protocol):
-    send_anonymous_usage_stats: bool
-    use_colors: Optional[bool] = None
-    partial_parse: Optional[bool] = None
-    printer_width: Optional[int] = None
-
-
 class HasCredentials(Protocol):
     credentials: Credentials
     profile_name: str
-    user_config: UserConfigContract
     target_name: str
     threads: int
 
diff --git a/core/dbt/contracts/graph/manifest.py b/core/dbt/contracts/graph/manifest.py
index 37ddf73cb0e..cb7d4e3025f 100644
--- a/core/dbt/contracts/graph/manifest.py
+++ b/core/dbt/contracts/graph/manifest.py
@@ -25,6 +25,7 @@
 from typing_extensions import Protocol
 from uuid import UUID
 
+
 from dbt.contracts.graph.nodes import (
     BaseNode,
     Documentation,
@@ -67,7 +68,7 @@
 from dbt.events.contextvars import get_node_info
 from dbt.node_types import NodeType, AccessType
 from dbt.flags import get_flags, MP_CONTEXT
-from dbt import tracking
+from dbt import tracking, deprecations
 import dbt.utils
 
 
@@ -616,11 +617,29 @@ def __lt__(self, other: object) -> bool:
 
 
 class CandidateList(List[M]):
-    def last(self) -> Optional[Macro]:
+    def last_candidate(
+        self, valid_localities: Optional[List[Locality]] = None
+    ) -> Optional[MacroCandidate]:
+        """
+        Obtain the last (highest precedence) MacroCandidate from the CandidateList of any locality in valid_localities.
+        If valid_localities is not specified, return the last MacroCandidate of any locality.
+        """
         if not self:
             return None
         self.sort()
-        return self[-1].macro
+
+        if valid_localities is None:
+            return self[-1]
+
+        for candidate in reversed(self):
+            if candidate.locality in valid_localities:
+                return candidate
+
+        return None
+
+    def last(self) -> Optional[Macro]:
+        last_candidate = self.last_candidate()
+        return last_candidate.macro if last_candidate is not None else None
 
 
 def _get_locality(macro: Macro, root_project_name: str, internal_packages: Set[str]) -> Locality:
@@ -914,7 +933,33 @@ def find_materialization_macro_by_name(
                 for specificity, atype in enumerate(self._get_parent_adapter_types(adapter_type))
             )
         )
-        return candidates.last()
+        core_candidates = [
+            candidate for candidate in candidates if candidate.locality == Locality.Core
+        ]
+
+        materialization_candidate = candidates.last_candidate()
+        # If an imported materialization macro was found that also had a core candidate, fire a deprecation
+        if (
+            materialization_candidate is not None
+            and materialization_candidate.locality == Locality.Imported
+            and core_candidates
+        ):
+            # preserve legacy behaviour - allow materialization override
+            if (
+                get_flags().require_explicit_package_overrides_for_builtin_materializations
+                is False
+            ):
+                deprecations.warn(
+                    "package-materialization-override",
+                    package_name=materialization_candidate.macro.package_name,
+                    materialization_name=materialization_name,
+                )
+            else:
+                materialization_candidate = candidates.last_candidate(
+                    valid_localities=[Locality.Core, Locality.Root]
+                )
+
+        return materialization_candidate.macro if materialization_candidate else None
 
     def get_resource_fqns(self) -> Mapping[str, PathSet]:
         resource_fqns: Dict[str, Set[Tuple[str, ...]]] = {}
diff --git a/core/dbt/contracts/project.py b/core/dbt/contracts/project.py
index a19cba4263e..79e7f36334f 100644
--- a/core/dbt/contracts/project.py
+++ b/core/dbt/contracts/project.py
@@ -1,5 +1,5 @@
 from dbt.contracts.util import Replaceable, Mergeable, list_str, Identifier
-from dbt.contracts.connection import QueryComment, UserConfigContract
+from dbt.contracts.connection import QueryComment
 from dbt.helper_types import NoValue
 from dbt.dataclass_schema import (
     dbtClassMixin,
@@ -283,7 +283,7 @@ def validate(cls, data):
 
 
 @dataclass
-class UserConfig(ExtensibleDbtClassMixin, Replaceable, UserConfigContract):
+class ProjectFlags(ExtensibleDbtClassMixin, Replaceable):
     cache_selected_only: Optional[bool] = None
     debug: Optional[bool] = None
     fail_fast: Optional[bool] = None
@@ -295,6 +295,7 @@ class UserConfig(ExtensibleDbtClassMixin, Replaceable, UserConfigContract):
     partial_parse: Optional[bool] = None
     populate_cache: Optional[bool] = None
     printer_width: Optional[int] = None
+    require_explicit_package_overrides_for_builtin_materializations: bool = False
     send_anonymous_usage_stats: bool = DEFAULT_SEND_ANONYMOUS_USAGE_STATS
     static_parser: Optional[bool] = None
     use_colors: Optional[bool] = None
@@ -305,12 +306,17 @@ class UserConfig(ExtensibleDbtClassMixin, Replaceable, UserConfigContract):
     warn_error_options: Optional[Dict[str, Union[str, List[str]]]] = None
     write_json: Optional[bool] = None
 
+    @property
+    def project_only_flags(self) -> Dict[str, Any]:
+        return {
+            "require_explicit_package_overrides_for_builtin_materializations": self.require_explicit_package_overrides_for_builtin_materializations,
+        }
+
 
 @dataclass
 class ProfileConfig(dbtClassMixin, Replaceable):
     profile_name: str
     target_name: str
-    user_config: UserConfig
     threads: int
     # TODO: make this a dynamic union of some kind?
     credentials: Optional[Dict[str, Any]]
diff --git a/core/dbt/deprecations.py b/core/dbt/deprecations.py
index d69b166043d..83e0dacadae 100644
--- a/core/dbt/deprecations.py
+++ b/core/dbt/deprecations.py
@@ -96,6 +96,25 @@ class CollectFreshnessReturnSignature(DBTDeprecation):
     _event = "CollectFreshnessReturnSignature"
 
 
+class ProjectFlagsMovedDeprecation(DBTDeprecation):
+    _name = "project-flags-moved"
+    _event = "ProjectFlagsMovedDeprecation"
+
+    def show(self, *args, **kwargs) -> None:
+        if self.name not in active_deprecations:
+            event = self.event(**kwargs)
+            # We can't do warn_or_error because the ProjectFlags
+            # is where that is set up and we're just reading it.
+            dbt.events.functions.fire_event(event)
+            self.track_deprecation_warn()
+            active_deprecations.add(self.name)
+
+
+class PackageMaterializationOverrideDeprecation(DBTDeprecation):
+    _name = "package-materialization-override"
+    _event = "PackageMaterializationOverrideDeprecation"
+
+
 def renamed_env_var(old_name: str, new_name: str):
     class EnvironmentVariableRenamed(DBTDeprecation):
         _name = f"environment-variable-renamed:{old_name}"
@@ -134,6 +153,8 @@ def warn(name, *args, **kwargs):
     ConfigLogPathDeprecation(),
     ConfigTargetPathDeprecation(),
     CollectFreshnessReturnSignature(),
+    ProjectFlagsMovedDeprecation(),
+    PackageMaterializationOverrideDeprecation(),
 ]
 
 deprecations: Dict[str, DBTDeprecation] = {d.name: d for d in deprecations_list}
diff --git a/core/dbt/events/types.proto b/core/dbt/events/types.proto
index 49c422c8a69..0f8b28b5fd3 100644
--- a/core/dbt/events/types.proto
+++ b/core/dbt/events/types.proto
@@ -415,6 +415,26 @@ message CollectFreshnessReturnSignatureMsg {
     CollectFreshnessReturnSignature data = 2;
 }
 
+// D013
+message ProjectFlagsMovedDeprecation {
+}
+
+message ProjectFlagsMovedDeprecationMsg {
+    EventInfo info = 1;
+    ProjectFlagsMovedDeprecation data = 2;
+}
+
+// D016
+message PackageMaterializationOverrideDeprecation {
+    string package_name = 1;
+    string materialization_name = 2;
+}
+
+message PackageMaterializationOverrideDeprecationMsg {
+    EventInfo info = 1;
+    PackageMaterializationOverrideDeprecation data = 2;
+}
+
 // E - DB Adapter
 
 // E001
diff --git a/core/dbt/events/types.py b/core/dbt/events/types.py
index 32ab0c3429f..f7623696840 100644
--- a/core/dbt/events/types.py
+++ b/core/dbt/events/types.py
@@ -796,6 +796,29 @@ def message(self) -> str:
         return line_wrap_message(warning_tag(msg))
 
 
+class ProjectFlagsMovedDeprecation(WarnLevel):
+    def code(self) -> str:
+        return "D013"
+
+    def message(self) -> str:
+        description = (
+            "User config should be moved from the 'config' key in profiles.yml to the 'flags' "
+            "key in dbt_project.yml."
+        )
+        # Can't use line_wrap_message here because flags.printer_width isn't available yet
+        return warning_tag(f"Deprecated functionality\n\n{description}")
+
+
+class PackageMaterializationOverrideDeprecation(WarnLevel):
+    def code(self) -> str:
+        return "D016"
+
+    def message(self) -> str:
+        description = f"Installed package '{self.package_name}' is overriding the built-in materialization '{self.materialization_name}'. Overrides of built-in materializations from installed packages will be deprecated in future versions of dbt. Please refer to https://docs.getdbt.com/reference/global-configs/legacy-behaviors#require_explicit_package_overrides_for_builtin_materializations for detailed documentation and suggested workarounds."
+
+        return line_wrap_message(warning_tag(description))
+
+
 # =======================================================
 # I - Project parsing
 # =======================================================
diff --git a/core/dbt/events/types_pb2.py b/core/dbt/events/types_pb2.py
index 1a1f0b31ef6..7aa822c8cbf 100644
--- a/core/dbt/events/types_pb2.py
+++ b/core/dbt/events/types_pb2.py
@@ -1,11 +1,12 @@
 # -*- coding: utf-8 -*-
 # Generated by the protocol buffer compiler.  DO NOT EDIT!
 # source: types.proto
+# Protobuf Python Version: 4.25.3
 """Generated protocol buffer code."""
-from google.protobuf.internal import builder as _builder
 from google.protobuf import descriptor as _descriptor
 from google.protobuf import descriptor_pool as _descriptor_pool
 from google.protobuf import symbol_database as _symbol_database
+from google.protobuf.internal import builder as _builder
 # @@protoc_insertion_point(imports)
 
 _sym_db = _symbol_database.Default()
@@ -15,927 +16,935 @@
 from google.protobuf import struct_pb2 as google_dot_protobuf_dot_struct__pb2
 
 
-DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0btypes.proto\x12\x0bproto_types\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1cgoogle/protobuf/struct.proto\"\x91\x02\n\tEventInfo\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0c\n\x04\x63ode\x18\x02 \x01(\t\x12\x0b\n\x03msg\x18\x03 \x01(\t\x12\r\n\x05level\x18\x04 \x01(\t\x12\x15\n\rinvocation_id\x18\x05 \x01(\t\x12\x0b\n\x03pid\x18\x06 \x01(\x05\x12\x0e\n\x06thread\x18\x07 \x01(\t\x12&\n\x02ts\x18\x08 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x30\n\x05\x65xtra\x18\t \x03(\x0b\x32!.proto_types.EventInfo.ExtraEntry\x12\x10\n\x08\x63\x61tegory\x18\n \x01(\t\x1a,\n\nExtraEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\x7f\n\rTimingInfoMsg\x12\x0c\n\x04name\x18\x01 \x01(\t\x12.\n\nstarted_at\x18\x02 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x30\n\x0c\x63ompleted_at\x18\x03 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\"V\n\x0cNodeRelation\x12\x10\n\x08\x64\x61tabase\x18\n \x01(\t\x12\x0e\n\x06schema\x18\x0b \x01(\t\x12\r\n\x05\x61lias\x18\x0c \x01(\t\x12\x15\n\rrelation_name\x18\r \x01(\t\"\x91\x02\n\x08NodeInfo\x12\x11\n\tnode_path\x18\x01 \x01(\t\x12\x11\n\tnode_name\x18\x02 \x01(\t\x12\x11\n\tunique_id\x18\x03 \x01(\t\x12\x15\n\rresource_type\x18\x04 \x01(\t\x12\x14\n\x0cmaterialized\x18\x05 \x01(\t\x12\x13\n\x0bnode_status\x18\x06 \x01(\t\x12\x17\n\x0fnode_started_at\x18\x07 \x01(\t\x12\x18\n\x10node_finished_at\x18\x08 \x01(\t\x12%\n\x04meta\x18\t \x01(\x0b\x32\x17.google.protobuf.Struct\x12\x30\n\rnode_relation\x18\n \x01(\x0b\x32\x19.proto_types.NodeRelation\"\xd1\x01\n\x0cRunResultMsg\x12\x0e\n\x06status\x18\x01 \x01(\t\x12\x0f\n\x07message\x18\x02 \x01(\t\x12/\n\x0btiming_info\x18\x03 \x03(\x0b\x32\x1a.proto_types.TimingInfoMsg\x12\x0e\n\x06thread\x18\x04 \x01(\t\x12\x16\n\x0e\x65xecution_time\x18\x05 \x01(\x02\x12\x31\n\x10\x61\x64\x61pter_response\x18\x06 \x01(\x0b\x32\x17.google.protobuf.Struct\x12\x14\n\x0cnum_failures\x18\x07 \x01(\x05\"G\n\x0fReferenceKeyMsg\x12\x10\n\x08\x64\x61tabase\x18\x01 \x01(\t\x12\x0e\n\x06schema\x18\x02 \x01(\t\x12\x12\n\nidentifier\x18\x03 \x01(\t\"\\\n\nColumnType\x12\x13\n\x0b\x63olumn_name\x18\x01 \x01(\t\x12\x1c\n\x14previous_column_type\x18\x02 \x01(\t\x12\x1b\n\x13\x63urrent_column_type\x18\x03 \x01(\t\"Y\n\x10\x43olumnConstraint\x12\x13\n\x0b\x63olumn_name\x18\x01 \x01(\t\x12\x17\n\x0f\x63onstraint_name\x18\x02 \x01(\t\x12\x17\n\x0f\x63onstraint_type\x18\x03 \x01(\t\"T\n\x0fModelConstraint\x12\x17\n\x0f\x63onstraint_name\x18\x01 \x01(\t\x12\x17\n\x0f\x63onstraint_type\x18\x02 \x01(\t\x12\x0f\n\x07\x63olumns\x18\x03 \x03(\t\"6\n\x0eGenericMessage\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\"9\n\x11MainReportVersion\x12\x0f\n\x07version\x18\x01 \x01(\t\x12\x13\n\x0blog_version\x18\x02 \x01(\x05\"j\n\x14MainReportVersionMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12,\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1e.proto_types.MainReportVersion\"r\n\x0eMainReportArgs\x12\x33\n\x04\x61rgs\x18\x01 \x03(\x0b\x32%.proto_types.MainReportArgs.ArgsEntry\x1a+\n\tArgsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"d\n\x11MainReportArgsMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12)\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1b.proto_types.MainReportArgs\"+\n\x15MainTrackingUserState\x12\x12\n\nuser_state\x18\x01 \x01(\t\"r\n\x18MainTrackingUserStateMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x30\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\".proto_types.MainTrackingUserState\"5\n\x0fMergedFromState\x12\x12\n\nnum_merged\x18\x01 \x01(\x05\x12\x0e\n\x06sample\x18\x02 \x03(\t\"f\n\x12MergedFromStateMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12*\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1c.proto_types.MergedFromState\"A\n\x14MissingProfileTarget\x12\x14\n\x0cprofile_name\x18\x01 \x01(\t\x12\x13\n\x0btarget_name\x18\x02 \x01(\t\"p\n\x17MissingProfileTargetMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12/\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32!.proto_types.MissingProfileTarget\"(\n\x11InvalidOptionYAML\x12\x13\n\x0boption_name\x18\x01 \x01(\t\"j\n\x14InvalidOptionYAMLMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12,\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1e.proto_types.InvalidOptionYAML\"!\n\x12LogDbtProjectError\x12\x0b\n\x03\x65xc\x18\x01 \x01(\t\"l\n\x15LogDbtProjectErrorMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12-\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1f.proto_types.LogDbtProjectError\"3\n\x12LogDbtProfileError\x12\x0b\n\x03\x65xc\x18\x01 \x01(\t\x12\x10\n\x08profiles\x18\x02 \x03(\t\"l\n\x15LogDbtProfileErrorMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12-\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1f.proto_types.LogDbtProfileError\"!\n\x12StarterProjectPath\x12\x0b\n\x03\x64ir\x18\x01 \x01(\t\"l\n\x15StarterProjectPathMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12-\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1f.proto_types.StarterProjectPath\"$\n\x15\x43onfigFolderDirectory\x12\x0b\n\x03\x64ir\x18\x01 \x01(\t\"r\n\x18\x43onfigFolderDirectoryMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x30\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\".proto_types.ConfigFolderDirectory\"\'\n\x14NoSampleProfileFound\x12\x0f\n\x07\x61\x64\x61pter\x18\x01 \x01(\t\"p\n\x17NoSampleProfileFoundMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12/\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32!.proto_types.NoSampleProfileFound\"6\n\x18ProfileWrittenWithSample\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0c\n\x04path\x18\x02 \x01(\t\"x\n\x1bProfileWrittenWithSampleMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x33\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32%.proto_types.ProfileWrittenWithSample\"B\n$ProfileWrittenWithTargetTemplateYAML\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0c\n\x04path\x18\x02 \x01(\t\"\x90\x01\n\'ProfileWrittenWithTargetTemplateYAMLMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12?\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x31.proto_types.ProfileWrittenWithTargetTemplateYAML\"C\n%ProfileWrittenWithProjectTemplateYAML\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0c\n\x04path\x18\x02 \x01(\t\"\x92\x01\n(ProfileWrittenWithProjectTemplateYAMLMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12@\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x32.proto_types.ProfileWrittenWithProjectTemplateYAML\"\x12\n\x10SettingUpProfile\"h\n\x13SettingUpProfileMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12+\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1d.proto_types.SettingUpProfile\"\x1c\n\x1aInvalidProfileTemplateYAML\"|\n\x1dInvalidProfileTemplateYAMLMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x35\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\'.proto_types.InvalidProfileTemplateYAML\"(\n\x18ProjectNameAlreadyExists\x12\x0c\n\x04name\x18\x01 \x01(\t\"x\n\x1bProjectNameAlreadyExistsMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x33\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32%.proto_types.ProjectNameAlreadyExists\"K\n\x0eProjectCreated\x12\x14\n\x0cproject_name\x18\x01 \x01(\t\x12\x10\n\x08\x64ocs_url\x18\x02 \x01(\t\x12\x11\n\tslack_url\x18\x03 \x01(\t\"d\n\x11ProjectCreatedMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12)\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1b.proto_types.ProjectCreated\"@\n\x1aPackageRedirectDeprecation\x12\x10\n\x08old_name\x18\x01 \x01(\t\x12\x10\n\x08new_name\x18\x02 \x01(\t\"|\n\x1dPackageRedirectDeprecationMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x35\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\'.proto_types.PackageRedirectDeprecation\"\x1f\n\x1dPackageInstallPathDeprecation\"\x82\x01\n PackageInstallPathDeprecationMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x38\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32*.proto_types.PackageInstallPathDeprecation\"H\n\x1b\x43onfigSourcePathDeprecation\x12\x17\n\x0f\x64\x65precated_path\x18\x01 \x01(\t\x12\x10\n\x08\x65xp_path\x18\x02 \x01(\t\"~\n\x1e\x43onfigSourcePathDeprecationMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x36\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32(.proto_types.ConfigSourcePathDeprecation\"F\n\x19\x43onfigDataPathDeprecation\x12\x17\n\x0f\x64\x65precated_path\x18\x01 \x01(\t\x12\x10\n\x08\x65xp_path\x18\x02 \x01(\t\"z\n\x1c\x43onfigDataPathDeprecationMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x34\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32&.proto_types.ConfigDataPathDeprecation\"?\n\x19\x41\x64\x61pterDeprecationWarning\x12\x10\n\x08old_name\x18\x01 \x01(\t\x12\x10\n\x08new_name\x18\x02 \x01(\t\"z\n\x1c\x41\x64\x61pterDeprecationWarningMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x34\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32&.proto_types.AdapterDeprecationWarning\".\n\x17MetricAttributesRenamed\x12\x13\n\x0bmetric_name\x18\x01 \x01(\t\"v\n\x1aMetricAttributesRenamedMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x32\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32$.proto_types.MetricAttributesRenamed\"+\n\x17\x45xposureNameDeprecation\x12\x10\n\x08\x65xposure\x18\x01 \x01(\t\"v\n\x1a\x45xposureNameDeprecationMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x32\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32$.proto_types.ExposureNameDeprecation\"^\n\x13InternalDeprecation\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0e\n\x06reason\x18\x02 \x01(\t\x12\x18\n\x10suggested_action\x18\x03 \x01(\t\x12\x0f\n\x07version\x18\x04 \x01(\t\"n\n\x16InternalDeprecationMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12.\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32 .proto_types.InternalDeprecation\"@\n\x1a\x45nvironmentVariableRenamed\x12\x10\n\x08old_name\x18\x01 \x01(\t\x12\x10\n\x08new_name\x18\x02 \x01(\t\"|\n\x1d\x45nvironmentVariableRenamedMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x35\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\'.proto_types.EnvironmentVariableRenamed\"3\n\x18\x43onfigLogPathDeprecation\x12\x17\n\x0f\x64\x65precated_path\x18\x01 \x01(\t\"x\n\x1b\x43onfigLogPathDeprecationMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x33\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32%.proto_types.ConfigLogPathDeprecation\"6\n\x1b\x43onfigTargetPathDeprecation\x12\x17\n\x0f\x64\x65precated_path\x18\x01 \x01(\t\"~\n\x1e\x43onfigTargetPathDeprecationMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x36\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32(.proto_types.ConfigTargetPathDeprecation\"!\n\x1f\x43ollectFreshnessReturnSignature\"\x86\x01\n\"CollectFreshnessReturnSignatureMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12:\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32,.proto_types.CollectFreshnessReturnSignature\"\x87\x01\n\x11\x41\x64\x61pterEventDebug\x12(\n\tnode_info\x18\x01 \x01(\x0b\x32\x15.proto_types.NodeInfo\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x10\n\x08\x62\x61se_msg\x18\x03 \x01(\t\x12(\n\x04\x61rgs\x18\x04 \x01(\x0b\x32\x1a.google.protobuf.ListValue\"j\n\x14\x41\x64\x61pterEventDebugMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12,\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1e.proto_types.AdapterEventDebug\"\x86\x01\n\x10\x41\x64\x61pterEventInfo\x12(\n\tnode_info\x18\x01 \x01(\x0b\x32\x15.proto_types.NodeInfo\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x10\n\x08\x62\x61se_msg\x18\x03 \x01(\t\x12(\n\x04\x61rgs\x18\x04 \x01(\x0b\x32\x1a.google.protobuf.ListValue\"h\n\x13\x41\x64\x61pterEventInfoMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12+\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1d.proto_types.AdapterEventInfo\"\x89\x01\n\x13\x41\x64\x61pterEventWarning\x12(\n\tnode_info\x18\x01 \x01(\x0b\x32\x15.proto_types.NodeInfo\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x10\n\x08\x62\x61se_msg\x18\x03 \x01(\t\x12(\n\x04\x61rgs\x18\x04 \x01(\x0b\x32\x1a.google.protobuf.ListValue\"n\n\x16\x41\x64\x61pterEventWarningMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12.\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32 .proto_types.AdapterEventWarning\"\x99\x01\n\x11\x41\x64\x61pterEventError\x12(\n\tnode_info\x18\x01 \x01(\x0b\x32\x15.proto_types.NodeInfo\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x10\n\x08\x62\x61se_msg\x18\x03 \x01(\t\x12(\n\x04\x61rgs\x18\x04 \x01(\x0b\x32\x1a.google.protobuf.ListValue\x12\x10\n\x08\x65xc_info\x18\x05 \x01(\t\"j\n\x14\x41\x64\x61pterEventErrorMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12,\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1e.proto_types.AdapterEventError\"_\n\rNewConnection\x12(\n\tnode_info\x18\x01 \x01(\x0b\x32\x15.proto_types.NodeInfo\x12\x11\n\tconn_type\x18\x02 \x01(\t\x12\x11\n\tconn_name\x18\x03 \x01(\t\"b\n\x10NewConnectionMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12(\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1a.proto_types.NewConnection\"=\n\x10\x43onnectionReused\x12\x11\n\tconn_name\x18\x01 \x01(\t\x12\x16\n\x0eorig_conn_name\x18\x02 \x01(\t\"h\n\x13\x43onnectionReusedMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12+\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1d.proto_types.ConnectionReused\"0\n\x1b\x43onnectionLeftOpenInCleanup\x12\x11\n\tconn_name\x18\x01 \x01(\t\"~\n\x1e\x43onnectionLeftOpenInCleanupMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x36\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32(.proto_types.ConnectionLeftOpenInCleanup\".\n\x19\x43onnectionClosedInCleanup\x12\x11\n\tconn_name\x18\x01 \x01(\t\"z\n\x1c\x43onnectionClosedInCleanupMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x34\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32&.proto_types.ConnectionClosedInCleanup\"_\n\x0eRollbackFailed\x12(\n\tnode_info\x18\x01 \x01(\x0b\x32\x15.proto_types.NodeInfo\x12\x11\n\tconn_name\x18\x02 \x01(\t\x12\x10\n\x08\x65xc_info\x18\x03 \x01(\t\"d\n\x11RollbackFailedMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12)\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1b.proto_types.RollbackFailed\"O\n\x10\x43onnectionClosed\x12(\n\tnode_info\x18\x01 \x01(\x0b\x32\x15.proto_types.NodeInfo\x12\x11\n\tconn_name\x18\x02 \x01(\t\"h\n\x13\x43onnectionClosedMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12+\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1d.proto_types.ConnectionClosed\"Q\n\x12\x43onnectionLeftOpen\x12(\n\tnode_info\x18\x01 \x01(\x0b\x32\x15.proto_types.NodeInfo\x12\x11\n\tconn_name\x18\x02 \x01(\t\"l\n\x15\x43onnectionLeftOpenMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12-\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1f.proto_types.ConnectionLeftOpen\"G\n\x08Rollback\x12(\n\tnode_info\x18\x01 \x01(\x0b\x32\x15.proto_types.NodeInfo\x12\x11\n\tconn_name\x18\x02 \x01(\t\"X\n\x0bRollbackMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12#\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x15.proto_types.Rollback\"@\n\tCacheMiss\x12\x11\n\tconn_name\x18\x01 \x01(\t\x12\x10\n\x08\x64\x61tabase\x18\x02 \x01(\t\x12\x0e\n\x06schema\x18\x03 \x01(\t\"Z\n\x0c\x43\x61\x63heMissMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12$\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x16.proto_types.CacheMiss\"b\n\rListRelations\x12\x10\n\x08\x64\x61tabase\x18\x01 \x01(\t\x12\x0e\n\x06schema\x18\x02 \x01(\t\x12/\n\trelations\x18\x03 \x03(\x0b\x32\x1c.proto_types.ReferenceKeyMsg\"b\n\x10ListRelationsMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12(\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1a.proto_types.ListRelations\"`\n\x0e\x43onnectionUsed\x12(\n\tnode_info\x18\x01 \x01(\x0b\x32\x15.proto_types.NodeInfo\x12\x11\n\tconn_type\x18\x02 \x01(\t\x12\x11\n\tconn_name\x18\x03 \x01(\t\"d\n\x11\x43onnectionUsedMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12)\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1b.proto_types.ConnectionUsed\"T\n\x08SQLQuery\x12(\n\tnode_info\x18\x01 \x01(\x0b\x32\x15.proto_types.NodeInfo\x12\x11\n\tconn_name\x18\x02 \x01(\t\x12\x0b\n\x03sql\x18\x03 \x01(\t\"X\n\x0bSQLQueryMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12#\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x15.proto_types.SQLQuery\"[\n\x0eSQLQueryStatus\x12(\n\tnode_info\x18\x01 \x01(\x0b\x32\x15.proto_types.NodeInfo\x12\x0e\n\x06status\x18\x02 \x01(\t\x12\x0f\n\x07\x65lapsed\x18\x03 \x01(\x02\"d\n\x11SQLQueryStatusMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12)\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1b.proto_types.SQLQueryStatus\"H\n\tSQLCommit\x12(\n\tnode_info\x18\x01 \x01(\x0b\x32\x15.proto_types.NodeInfo\x12\x11\n\tconn_name\x18\x02 \x01(\t\"Z\n\x0cSQLCommitMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12$\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x16.proto_types.SQLCommit\"a\n\rColTypeChange\x12\x11\n\torig_type\x18\x01 \x01(\t\x12\x10\n\x08new_type\x18\x02 \x01(\t\x12+\n\x05table\x18\x03 \x01(\x0b\x32\x1c.proto_types.ReferenceKeyMsg\"b\n\x10\x43olTypeChangeMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12(\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1a.proto_types.ColTypeChange\"@\n\x0eSchemaCreation\x12.\n\x08relation\x18\x01 \x01(\x0b\x32\x1c.proto_types.ReferenceKeyMsg\"d\n\x11SchemaCreationMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12)\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1b.proto_types.SchemaCreation\"<\n\nSchemaDrop\x12.\n\x08relation\x18\x01 \x01(\x0b\x32\x1c.proto_types.ReferenceKeyMsg\"\\\n\rSchemaDropMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12%\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x17.proto_types.SchemaDrop\"\xde\x01\n\x0b\x43\x61\x63heAction\x12\x0e\n\x06\x61\x63tion\x18\x01 \x01(\t\x12-\n\x07ref_key\x18\x02 \x01(\x0b\x32\x1c.proto_types.ReferenceKeyMsg\x12/\n\tref_key_2\x18\x03 \x01(\x0b\x32\x1c.proto_types.ReferenceKeyMsg\x12/\n\tref_key_3\x18\x04 \x01(\x0b\x32\x1c.proto_types.ReferenceKeyMsg\x12.\n\x08ref_list\x18\x05 \x03(\x0b\x32\x1c.proto_types.ReferenceKeyMsg\"^\n\x0e\x43\x61\x63heActionMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12&\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x18.proto_types.CacheAction\"\x98\x01\n\x0e\x43\x61\x63heDumpGraph\x12\x33\n\x04\x64ump\x18\x01 \x03(\x0b\x32%.proto_types.CacheDumpGraph.DumpEntry\x12\x14\n\x0c\x62\x65\x66ore_after\x18\x02 \x01(\t\x12\x0e\n\x06\x61\x63tion\x18\x03 \x01(\t\x1a+\n\tDumpEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"d\n\x11\x43\x61\x63heDumpGraphMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12)\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1b.proto_types.CacheDumpGraph\"B\n\x11\x41\x64\x61pterRegistered\x12\x14\n\x0c\x61\x64\x61pter_name\x18\x01 \x01(\t\x12\x17\n\x0f\x61\x64\x61pter_version\x18\x02 \x01(\t\"j\n\x14\x41\x64\x61pterRegisteredMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12,\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1e.proto_types.AdapterRegistered\"!\n\x12\x41\x64\x61pterImportError\x12\x0b\n\x03\x65xc\x18\x01 \x01(\t\"l\n\x15\x41\x64\x61pterImportErrorMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12-\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1f.proto_types.AdapterImportError\"#\n\x0fPluginLoadError\x12\x10\n\x08\x65xc_info\x18\x01 \x01(\t\"f\n\x12PluginLoadErrorMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12*\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1c.proto_types.PluginLoadError\"Z\n\x14NewConnectionOpening\x12(\n\tnode_info\x18\x01 \x01(\x0b\x32\x15.proto_types.NodeInfo\x12\x18\n\x10\x63onnection_state\x18\x02 \x01(\t\"p\n\x17NewConnectionOpeningMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12/\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32!.proto_types.NewConnectionOpening\"8\n\rCodeExecution\x12\x11\n\tconn_name\x18\x01 \x01(\t\x12\x14\n\x0c\x63ode_content\x18\x02 \x01(\t\"b\n\x10\x43odeExecutionMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12(\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1a.proto_types.CodeExecution\"6\n\x13\x43odeExecutionStatus\x12\x0e\n\x06status\x18\x01 \x01(\t\x12\x0f\n\x07\x65lapsed\x18\x02 \x01(\x02\"n\n\x16\x43odeExecutionStatusMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12.\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32 .proto_types.CodeExecutionStatus\"%\n\x16\x43\x61talogGenerationError\x12\x0b\n\x03\x65xc\x18\x01 \x01(\t\"t\n\x19\x43\x61talogGenerationErrorMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x31\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32#.proto_types.CatalogGenerationError\"-\n\x13WriteCatalogFailure\x12\x16\n\x0enum_exceptions\x18\x01 \x01(\x05\"n\n\x16WriteCatalogFailureMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12.\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32 .proto_types.WriteCatalogFailure\"\x1e\n\x0e\x43\x61talogWritten\x12\x0c\n\x04path\x18\x01 \x01(\t\"d\n\x11\x43\x61talogWrittenMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12)\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1b.proto_types.CatalogWritten\"\x14\n\x12\x43\x61nnotGenerateDocs\"l\n\x15\x43\x61nnotGenerateDocsMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12-\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1f.proto_types.CannotGenerateDocs\"\x11\n\x0f\x42uildingCatalog\"f\n\x12\x42uildingCatalogMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12*\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1c.proto_types.BuildingCatalog\"-\n\x18\x44\x61tabaseErrorRunningHook\x12\x11\n\thook_type\x18\x01 \x01(\t\"x\n\x1b\x44\x61tabaseErrorRunningHookMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x33\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32%.proto_types.DatabaseErrorRunningHook\"4\n\x0cHooksRunning\x12\x11\n\tnum_hooks\x18\x01 \x01(\x05\x12\x11\n\thook_type\x18\x02 \x01(\t\"`\n\x0fHooksRunningMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\'\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x19.proto_types.HooksRunning\"T\n\x14\x46inishedRunningStats\x12\x11\n\tstat_line\x18\x01 \x01(\t\x12\x11\n\texecution\x18\x02 \x01(\t\x12\x16\n\x0e\x65xecution_time\x18\x03 \x01(\x02\"p\n\x17\x46inishedRunningStatsMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12/\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32!.proto_types.FinishedRunningStats\"<\n\x15\x43onstraintNotEnforced\x12\x12\n\nconstraint\x18\x01 \x01(\t\x12\x0f\n\x07\x61\x64\x61pter\x18\x02 \x01(\t\"r\n\x18\x43onstraintNotEnforcedMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x30\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\".proto_types.ConstraintNotEnforced\"=\n\x16\x43onstraintNotSupported\x12\x12\n\nconstraint\x18\x01 \x01(\t\x12\x0f\n\x07\x61\x64\x61pter\x18\x02 \x01(\t\"t\n\x19\x43onstraintNotSupportedMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x31\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32#.proto_types.ConstraintNotSupported\"7\n\x12InputFileDiffError\x12\x10\n\x08\x63\x61tegory\x18\x01 \x01(\t\x12\x0f\n\x07\x66ile_id\x18\x02 \x01(\t\"l\n\x15InputFileDiffErrorMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12-\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1f.proto_types.InputFileDiffError\"?\n\x14InvalidValueForField\x12\x12\n\nfield_name\x18\x01 \x01(\t\x12\x13\n\x0b\x66ield_value\x18\x02 \x01(\t\"p\n\x17InvalidValueForFieldMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12/\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32!.proto_types.InvalidValueForField\"Q\n\x11ValidationWarning\x12\x15\n\rresource_type\x18\x01 \x01(\t\x12\x12\n\nfield_name\x18\x02 \x01(\t\x12\x11\n\tnode_name\x18\x03 \x01(\t\"j\n\x14ValidationWarningMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12,\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1e.proto_types.ValidationWarning\"!\n\x11ParsePerfInfoPath\x12\x0c\n\x04path\x18\x01 \x01(\t\"j\n\x14ParsePerfInfoPathMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12,\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1e.proto_types.ParsePerfInfoPath\"1\n!PartialParsingErrorProcessingFile\x12\x0c\n\x04\x66ile\x18\x01 \x01(\t\"\x8a\x01\n$PartialParsingErrorProcessingFileMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12<\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32..proto_types.PartialParsingErrorProcessingFile\"\x86\x01\n\x13PartialParsingError\x12?\n\x08\x65xc_info\x18\x01 \x03(\x0b\x32-.proto_types.PartialParsingError.ExcInfoEntry\x1a.\n\x0c\x45xcInfoEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"n\n\x16PartialParsingErrorMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12.\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32 .proto_types.PartialParsingError\"\x1b\n\x19PartialParsingSkipParsing\"z\n\x1cPartialParsingSkipParsingMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x34\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32&.proto_types.PartialParsingSkipParsing\"&\n\x14UnableToPartialParse\x12\x0e\n\x06reason\x18\x01 \x01(\t\"p\n\x17UnableToPartialParseMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12/\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32!.proto_types.UnableToPartialParse\"f\n\x12StateCheckVarsHash\x12\x10\n\x08\x63hecksum\x18\x01 \x01(\t\x12\x0c\n\x04vars\x18\x02 \x01(\t\x12\x0f\n\x07profile\x18\x03 \x01(\t\x12\x0e\n\x06target\x18\x04 \x01(\t\x12\x0f\n\x07version\x18\x05 \x01(\t\"l\n\x15StateCheckVarsHashMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12-\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1f.proto_types.StateCheckVarsHash\"\x1a\n\x18PartialParsingNotEnabled\"x\n\x1bPartialParsingNotEnabledMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x33\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32%.proto_types.PartialParsingNotEnabled\"C\n\x14ParsedFileLoadFailed\x12\x0c\n\x04path\x18\x01 \x01(\t\x12\x0b\n\x03\x65xc\x18\x02 \x01(\t\x12\x10\n\x08\x65xc_info\x18\x03 \x01(\t\"p\n\x17ParsedFileLoadFailedMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12/\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32!.proto_types.ParsedFileLoadFailed\"H\n\x15PartialParsingEnabled\x12\x0f\n\x07\x64\x65leted\x18\x01 \x01(\x05\x12\r\n\x05\x61\x64\x64\x65\x64\x18\x02 \x01(\x05\x12\x0f\n\x07\x63hanged\x18\x03 \x01(\x05\"r\n\x18PartialParsingEnabledMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x30\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\".proto_types.PartialParsingEnabled\"8\n\x12PartialParsingFile\x12\x0f\n\x07\x66ile_id\x18\x01 \x01(\t\x12\x11\n\toperation\x18\x02 \x01(\t\"l\n\x15PartialParsingFileMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12-\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1f.proto_types.PartialParsingFile\"\xaf\x01\n\x1fInvalidDisabledTargetInTestNode\x12\x1b\n\x13resource_type_title\x18\x01 \x01(\t\x12\x11\n\tunique_id\x18\x02 \x01(\t\x12\x1a\n\x12original_file_path\x18\x03 \x01(\t\x12\x13\n\x0btarget_kind\x18\x04 \x01(\t\x12\x13\n\x0btarget_name\x18\x05 \x01(\t\x12\x16\n\x0etarget_package\x18\x06 \x01(\t\"\x86\x01\n\"InvalidDisabledTargetInTestNodeMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12:\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32,.proto_types.InvalidDisabledTargetInTestNode\"7\n\x18UnusedResourceConfigPath\x12\x1b\n\x13unused_config_paths\x18\x01 \x03(\t\"x\n\x1bUnusedResourceConfigPathMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x33\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32%.proto_types.UnusedResourceConfigPath\"3\n\rSeedIncreased\x12\x14\n\x0cpackage_name\x18\x01 \x01(\t\x12\x0c\n\x04name\x18\x02 \x01(\t\"b\n\x10SeedIncreasedMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12(\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1a.proto_types.SeedIncreased\">\n\x18SeedExceedsLimitSamePath\x12\x14\n\x0cpackage_name\x18\x01 \x01(\t\x12\x0c\n\x04name\x18\x02 \x01(\t\"x\n\x1bSeedExceedsLimitSamePathMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x33\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32%.proto_types.SeedExceedsLimitSamePath\"D\n\x1eSeedExceedsLimitAndPathChanged\x12\x14\n\x0cpackage_name\x18\x01 \x01(\t\x12\x0c\n\x04name\x18\x02 \x01(\t\"\x84\x01\n!SeedExceedsLimitAndPathChangedMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x39\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32+.proto_types.SeedExceedsLimitAndPathChanged\"\\\n\x1fSeedExceedsLimitChecksumChanged\x12\x14\n\x0cpackage_name\x18\x01 \x01(\t\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x15\n\rchecksum_name\x18\x03 \x01(\t\"\x86\x01\n\"SeedExceedsLimitChecksumChangedMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12:\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32,.proto_types.SeedExceedsLimitChecksumChanged\"%\n\x0cUnusedTables\x12\x15\n\runused_tables\x18\x01 \x03(\t\"`\n\x0fUnusedTablesMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\'\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x19.proto_types.UnusedTables\"\x87\x01\n\x17WrongResourceSchemaFile\x12\x12\n\npatch_name\x18\x01 \x01(\t\x12\x15\n\rresource_type\x18\x02 \x01(\t\x12\x1c\n\x14plural_resource_type\x18\x03 \x01(\t\x12\x10\n\x08yaml_key\x18\x04 \x01(\t\x12\x11\n\tfile_path\x18\x05 \x01(\t\"v\n\x1aWrongResourceSchemaFileMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x32\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32$.proto_types.WrongResourceSchemaFile\"K\n\x10NoNodeForYamlKey\x12\x12\n\npatch_name\x18\x01 \x01(\t\x12\x10\n\x08yaml_key\x18\x02 \x01(\t\x12\x11\n\tfile_path\x18\x03 \x01(\t\"h\n\x13NoNodeForYamlKeyMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12+\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1d.proto_types.NoNodeForYamlKey\"+\n\x15MacroNotFoundForPatch\x12\x12\n\npatch_name\x18\x01 \x01(\t\"r\n\x18MacroNotFoundForPatchMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x30\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\".proto_types.MacroNotFoundForPatch\"\xb8\x01\n\x16NodeNotFoundOrDisabled\x12\x1a\n\x12original_file_path\x18\x01 \x01(\t\x12\x11\n\tunique_id\x18\x02 \x01(\t\x12\x1b\n\x13resource_type_title\x18\x03 \x01(\t\x12\x13\n\x0btarget_name\x18\x04 \x01(\t\x12\x13\n\x0btarget_kind\x18\x05 \x01(\t\x12\x16\n\x0etarget_package\x18\x06 \x01(\t\x12\x10\n\x08\x64isabled\x18\x07 \x01(\t\"t\n\x19NodeNotFoundOrDisabledMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x31\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32#.proto_types.NodeNotFoundOrDisabled\"H\n\x0fJinjaLogWarning\x12(\n\tnode_info\x18\x01 \x01(\x0b\x32\x15.proto_types.NodeInfo\x12\x0b\n\x03msg\x18\x02 \x01(\t\"f\n\x12JinjaLogWarningMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12*\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1c.proto_types.JinjaLogWarning\"E\n\x0cJinjaLogInfo\x12(\n\tnode_info\x18\x01 \x01(\x0b\x32\x15.proto_types.NodeInfo\x12\x0b\n\x03msg\x18\x02 \x01(\t\"`\n\x0fJinjaLogInfoMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\'\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x19.proto_types.JinjaLogInfo\"F\n\rJinjaLogDebug\x12(\n\tnode_info\x18\x01 \x01(\x0b\x32\x15.proto_types.NodeInfo\x12\x0b\n\x03msg\x18\x02 \x01(\t\"b\n\x10JinjaLogDebugMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12(\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1a.proto_types.JinjaLogDebug\"\xae\x01\n\x1eUnpinnedRefNewVersionAvailable\x12(\n\tnode_info\x18\x01 \x01(\x0b\x32\x15.proto_types.NodeInfo\x12\x15\n\rref_node_name\x18\x02 \x01(\t\x12\x18\n\x10ref_node_package\x18\x03 \x01(\t\x12\x18\n\x10ref_node_version\x18\x04 \x01(\t\x12\x17\n\x0fref_max_version\x18\x05 \x01(\t\"\x84\x01\n!UnpinnedRefNewVersionAvailableMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x39\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32+.proto_types.UnpinnedRefNewVersionAvailable\"V\n\x0f\x44\x65precatedModel\x12\x12\n\nmodel_name\x18\x01 \x01(\t\x12\x15\n\rmodel_version\x18\x02 \x01(\t\x12\x18\n\x10\x64\x65precation_date\x18\x03 \x01(\t\"f\n\x12\x44\x65precatedModelMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12*\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1c.proto_types.DeprecatedModel\"\xc6\x01\n\x1cUpcomingReferenceDeprecation\x12\x12\n\nmodel_name\x18\x01 \x01(\t\x12\x19\n\x11ref_model_package\x18\x02 \x01(\t\x12\x16\n\x0eref_model_name\x18\x03 \x01(\t\x12\x19\n\x11ref_model_version\x18\x04 \x01(\t\x12 \n\x18ref_model_latest_version\x18\x05 \x01(\t\x12\"\n\x1aref_model_deprecation_date\x18\x06 \x01(\t\"\x80\x01\n\x1fUpcomingReferenceDeprecationMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x37\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32).proto_types.UpcomingReferenceDeprecation\"\xbd\x01\n\x13\x44\x65precatedReference\x12\x12\n\nmodel_name\x18\x01 \x01(\t\x12\x19\n\x11ref_model_package\x18\x02 \x01(\t\x12\x16\n\x0eref_model_name\x18\x03 \x01(\t\x12\x19\n\x11ref_model_version\x18\x04 \x01(\t\x12 \n\x18ref_model_latest_version\x18\x05 \x01(\t\x12\"\n\x1aref_model_deprecation_date\x18\x06 \x01(\t\"n\n\x16\x44\x65precatedReferenceMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12.\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32 .proto_types.DeprecatedReference\"<\n$UnsupportedConstraintMaterialization\x12\x14\n\x0cmaterialized\x18\x01 \x01(\t\"\x90\x01\n\'UnsupportedConstraintMaterializationMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12?\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x31.proto_types.UnsupportedConstraintMaterialization\"M\n\x14ParseInlineNodeError\x12(\n\tnode_info\x18\x01 \x01(\x0b\x32\x15.proto_types.NodeInfo\x12\x0b\n\x03\x65xc\x18\x02 \x01(\t\"p\n\x17ParseInlineNodeErrorMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12/\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32!.proto_types.ParseInlineNodeError\"(\n\x19SemanticValidationFailure\x12\x0b\n\x03msg\x18\x02 \x01(\t\"z\n\x1cSemanticValidationFailureMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x34\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32&.proto_types.SemanticValidationFailure\"\x8a\x03\n\x19UnversionedBreakingChange\x12\x18\n\x10\x62reaking_changes\x18\x01 \x03(\t\x12\x12\n\nmodel_name\x18\x02 \x01(\t\x12\x17\n\x0fmodel_file_path\x18\x03 \x01(\t\x12\"\n\x1a\x63ontract_enforced_disabled\x18\x04 \x01(\x08\x12\x17\n\x0f\x63olumns_removed\x18\x05 \x03(\t\x12\x34\n\x13\x63olumn_type_changes\x18\x06 \x03(\x0b\x32\x17.proto_types.ColumnType\x12I\n\"enforced_column_constraint_removed\x18\x07 \x03(\x0b\x32\x1d.proto_types.ColumnConstraint\x12G\n!enforced_model_constraint_removed\x18\x08 \x03(\x0b\x32\x1c.proto_types.ModelConstraint\x12\x1f\n\x17materialization_changed\x18\t \x03(\t\"z\n\x1cUnversionedBreakingChangeMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x34\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32&.proto_types.UnversionedBreakingChange\"*\n\x14WarnStateTargetEqual\x12\x12\n\nstate_path\x18\x01 \x01(\t\"p\n\x17WarnStateTargetEqualMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12/\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32!.proto_types.WarnStateTargetEqual\"%\n\x16\x46reshnessConfigProblem\x12\x0b\n\x03msg\x18\x01 \x01(\t\"t\n\x19\x46reshnessConfigProblemMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x31\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32#.proto_types.FreshnessConfigProblem\"/\n\x1dGitSparseCheckoutSubdirectory\x12\x0e\n\x06subdir\x18\x01 \x01(\t\"\x82\x01\n GitSparseCheckoutSubdirectoryMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x38\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32*.proto_types.GitSparseCheckoutSubdirectory\"/\n\x1bGitProgressCheckoutRevision\x12\x10\n\x08revision\x18\x01 \x01(\t\"~\n\x1eGitProgressCheckoutRevisionMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x36\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32(.proto_types.GitProgressCheckoutRevision\"4\n%GitProgressUpdatingExistingDependency\x12\x0b\n\x03\x64ir\x18\x01 \x01(\t\"\x92\x01\n(GitProgressUpdatingExistingDependencyMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12@\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x32.proto_types.GitProgressUpdatingExistingDependency\".\n\x1fGitProgressPullingNewDependency\x12\x0b\n\x03\x64ir\x18\x01 \x01(\t\"\x86\x01\n\"GitProgressPullingNewDependencyMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12:\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32,.proto_types.GitProgressPullingNewDependency\"\x1d\n\x0eGitNothingToDo\x12\x0b\n\x03sha\x18\x01 \x01(\t\"d\n\x11GitNothingToDoMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12)\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1b.proto_types.GitNothingToDo\"E\n\x1fGitProgressUpdatedCheckoutRange\x12\x11\n\tstart_sha\x18\x01 \x01(\t\x12\x0f\n\x07\x65nd_sha\x18\x02 \x01(\t\"\x86\x01\n\"GitProgressUpdatedCheckoutRangeMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12:\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32,.proto_types.GitProgressUpdatedCheckoutRange\"*\n\x17GitProgressCheckedOutAt\x12\x0f\n\x07\x65nd_sha\x18\x01 \x01(\t\"v\n\x1aGitProgressCheckedOutAtMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x32\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32$.proto_types.GitProgressCheckedOutAt\")\n\x1aRegistryProgressGETRequest\x12\x0b\n\x03url\x18\x01 \x01(\t\"|\n\x1dRegistryProgressGETRequestMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x35\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\'.proto_types.RegistryProgressGETRequest\"=\n\x1bRegistryProgressGETResponse\x12\x0b\n\x03url\x18\x01 \x01(\t\x12\x11\n\tresp_code\x18\x02 \x01(\x05\"~\n\x1eRegistryProgressGETResponseMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x36\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32(.proto_types.RegistryProgressGETResponse\"_\n\x1dSelectorReportInvalidSelector\x12\x17\n\x0fvalid_selectors\x18\x01 \x01(\t\x12\x13\n\x0bspec_method\x18\x02 \x01(\t\x12\x10\n\x08raw_spec\x18\x03 \x01(\t\"\x82\x01\n SelectorReportInvalidSelectorMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x38\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32*.proto_types.SelectorReportInvalidSelector\"\x15\n\x13\x44\x65psNoPackagesFound\"n\n\x16\x44\x65psNoPackagesFoundMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12.\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32 .proto_types.DepsNoPackagesFound\"/\n\x17\x44\x65psStartPackageInstall\x12\x14\n\x0cpackage_name\x18\x01 \x01(\t\"v\n\x1a\x44\x65psStartPackageInstallMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x32\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32$.proto_types.DepsStartPackageInstall\"\'\n\x0f\x44\x65psInstallInfo\x12\x14\n\x0cversion_name\x18\x01 \x01(\t\"f\n\x12\x44\x65psInstallInfoMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12*\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1c.proto_types.DepsInstallInfo\"-\n\x13\x44\x65psUpdateAvailable\x12\x16\n\x0eversion_latest\x18\x01 \x01(\t\"n\n\x16\x44\x65psUpdateAvailableMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12.\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32 .proto_types.DepsUpdateAvailable\"\x0e\n\x0c\x44\x65psUpToDate\"`\n\x0f\x44\x65psUpToDateMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\'\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x19.proto_types.DepsUpToDate\",\n\x14\x44\x65psListSubdirectory\x12\x14\n\x0csubdirectory\x18\x01 \x01(\t\"p\n\x17\x44\x65psListSubdirectoryMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12/\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32!.proto_types.DepsListSubdirectory\".\n\x1a\x44\x65psNotifyUpdatesAvailable\x12\x10\n\x08packages\x18\x01 \x03(\t\"|\n\x1d\x44\x65psNotifyUpdatesAvailableMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x35\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\'.proto_types.DepsNotifyUpdatesAvailable\"1\n\x11RetryExternalCall\x12\x0f\n\x07\x61ttempt\x18\x01 \x01(\x05\x12\x0b\n\x03max\x18\x02 \x01(\x05\"j\n\x14RetryExternalCallMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12,\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1e.proto_types.RetryExternalCall\"#\n\x14RecordRetryException\x12\x0b\n\x03\x65xc\x18\x01 \x01(\t\"p\n\x17RecordRetryExceptionMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12/\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32!.proto_types.RecordRetryException\".\n\x1fRegistryIndexProgressGETRequest\x12\x0b\n\x03url\x18\x01 \x01(\t\"\x86\x01\n\"RegistryIndexProgressGETRequestMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12:\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32,.proto_types.RegistryIndexProgressGETRequest\"B\n RegistryIndexProgressGETResponse\x12\x0b\n\x03url\x18\x01 \x01(\t\x12\x11\n\tresp_code\x18\x02 \x01(\x05\"\x88\x01\n#RegistryIndexProgressGETResponseMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12;\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32-.proto_types.RegistryIndexProgressGETResponse\"2\n\x1eRegistryResponseUnexpectedType\x12\x10\n\x08response\x18\x01 \x01(\t\"\x84\x01\n!RegistryResponseUnexpectedTypeMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x39\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32+.proto_types.RegistryResponseUnexpectedType\"2\n\x1eRegistryResponseMissingTopKeys\x12\x10\n\x08response\x18\x01 \x01(\t\"\x84\x01\n!RegistryResponseMissingTopKeysMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x39\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32+.proto_types.RegistryResponseMissingTopKeys\"5\n!RegistryResponseMissingNestedKeys\x12\x10\n\x08response\x18\x01 \x01(\t\"\x8a\x01\n$RegistryResponseMissingNestedKeysMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12<\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32..proto_types.RegistryResponseMissingNestedKeys\"3\n\x1fRegistryResponseExtraNestedKeys\x12\x10\n\x08response\x18\x01 \x01(\t\"\x86\x01\n\"RegistryResponseExtraNestedKeysMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12:\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32,.proto_types.RegistryResponseExtraNestedKeys\"(\n\x18\x44\x65psSetDownloadDirectory\x12\x0c\n\x04path\x18\x01 \x01(\t\"x\n\x1b\x44\x65psSetDownloadDirectoryMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x33\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32%.proto_types.DepsSetDownloadDirectory\"-\n\x0c\x44\x65psUnpinned\x12\x10\n\x08revision\x18\x01 \x01(\t\x12\x0b\n\x03git\x18\x02 \x01(\t\"`\n\x0f\x44\x65psUnpinnedMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\'\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x19.proto_types.DepsUnpinned\"/\n\x1bNoNodesForSelectionCriteria\x12\x10\n\x08spec_raw\x18\x01 \x01(\t\"~\n\x1eNoNodesForSelectionCriteriaMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x36\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32(.proto_types.NoNodesForSelectionCriteria\")\n\x10\x44\x65psLockUpdating\x12\x15\n\rlock_filepath\x18\x01 \x01(\t\"h\n\x13\x44\x65psLockUpdatingMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12+\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1d.proto_types.DepsLockUpdating\"R\n\x0e\x44\x65psAddPackage\x12\x14\n\x0cpackage_name\x18\x01 \x01(\t\x12\x0f\n\x07version\x18\x02 \x01(\t\x12\x19\n\x11packages_filepath\x18\x03 \x01(\t\"d\n\x11\x44\x65psAddPackageMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12)\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1b.proto_types.DepsAddPackage\"\xa7\x01\n\x19\x44\x65psFoundDuplicatePackage\x12S\n\x0fremoved_package\x18\x01 \x03(\x0b\x32:.proto_types.DepsFoundDuplicatePackage.RemovedPackageEntry\x1a\x35\n\x13RemovedPackageEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"z\n\x1c\x44\x65psFoundDuplicatePackageMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x34\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32&.proto_types.DepsFoundDuplicatePackage\"$\n\x12\x44\x65psVersionMissing\x12\x0e\n\x06source\x18\x01 \x01(\t\"l\n\x15\x44\x65psVersionMissingMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12-\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1f.proto_types.DepsVersionMissing\"/\n\x17\x44\x65psScrubbedPackageName\x12\x14\n\x0cpackage_name\x18\x01 \x01(\t\"v\n\x1a\x44\x65psScrubbedPackageNameMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x32\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32$.proto_types.DepsScrubbedPackageName\"*\n\x1bRunningOperationCaughtError\x12\x0b\n\x03\x65xc\x18\x01 \x01(\t\"~\n\x1eRunningOperationCaughtErrorMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x36\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32(.proto_types.RunningOperationCaughtError\"\x11\n\x0f\x43ompileComplete\"f\n\x12\x43ompileCompleteMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12*\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1c.proto_types.CompileComplete\"\x18\n\x16\x46reshnessCheckComplete\"t\n\x19\x46reshnessCheckCompleteMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x31\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32#.proto_types.FreshnessCheckComplete\"\x1c\n\nSeedHeader\x12\x0e\n\x06header\x18\x01 \x01(\t\"\\\n\rSeedHeaderMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12%\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x17.proto_types.SeedHeader\"]\n\x12SQLRunnerException\x12\x0b\n\x03\x65xc\x18\x01 \x01(\t\x12\x10\n\x08\x65xc_info\x18\x02 \x01(\t\x12(\n\tnode_info\x18\x03 \x01(\x0b\x32\x15.proto_types.NodeInfo\"l\n\x15SQLRunnerExceptionMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12-\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1f.proto_types.SQLRunnerException\"\xa8\x01\n\rLogTestResult\x12(\n\tnode_info\x18\x01 \x01(\x0b\x32\x15.proto_types.NodeInfo\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x0e\n\x06status\x18\x03 \x01(\t\x12\r\n\x05index\x18\x04 \x01(\x05\x12\x12\n\nnum_models\x18\x05 \x01(\x05\x12\x16\n\x0e\x65xecution_time\x18\x06 \x01(\x02\x12\x14\n\x0cnum_failures\x18\x07 \x01(\x05\"b\n\x10LogTestResultMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12(\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1a.proto_types.LogTestResult\"k\n\x0cLogStartLine\x12(\n\tnode_info\x18\x01 \x01(\x0b\x32\x15.proto_types.NodeInfo\x12\x13\n\x0b\x64\x65scription\x18\x02 \x01(\t\x12\r\n\x05index\x18\x03 \x01(\x05\x12\r\n\x05total\x18\x04 \x01(\x05\"`\n\x0fLogStartLineMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\'\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x19.proto_types.LogStartLine\"\x95\x01\n\x0eLogModelResult\x12(\n\tnode_info\x18\x01 \x01(\x0b\x32\x15.proto_types.NodeInfo\x12\x13\n\x0b\x64\x65scription\x18\x02 \x01(\t\x12\x0e\n\x06status\x18\x03 \x01(\t\x12\r\n\x05index\x18\x04 \x01(\x05\x12\r\n\x05total\x18\x05 \x01(\x05\x12\x16\n\x0e\x65xecution_time\x18\x06 \x01(\x02\"d\n\x11LogModelResultMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12)\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1b.proto_types.LogModelResult\"\x92\x02\n\x11LogSnapshotResult\x12(\n\tnode_info\x18\x01 \x01(\x0b\x32\x15.proto_types.NodeInfo\x12\x13\n\x0b\x64\x65scription\x18\x02 \x01(\t\x12\x0e\n\x06status\x18\x03 \x01(\t\x12\r\n\x05index\x18\x04 \x01(\x05\x12\r\n\x05total\x18\x05 \x01(\x05\x12\x16\n\x0e\x65xecution_time\x18\x06 \x01(\x02\x12\x34\n\x03\x63\x66g\x18\x07 \x03(\x0b\x32\'.proto_types.LogSnapshotResult.CfgEntry\x12\x16\n\x0eresult_message\x18\x08 \x01(\t\x1a*\n\x08\x43\x66gEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"j\n\x14LogSnapshotResultMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12,\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1e.proto_types.LogSnapshotResult\"\xb9\x01\n\rLogSeedResult\x12(\n\tnode_info\x18\x01 \x01(\x0b\x32\x15.proto_types.NodeInfo\x12\x0e\n\x06status\x18\x02 \x01(\t\x12\x16\n\x0eresult_message\x18\x03 \x01(\t\x12\r\n\x05index\x18\x04 \x01(\x05\x12\r\n\x05total\x18\x05 \x01(\x05\x12\x16\n\x0e\x65xecution_time\x18\x06 \x01(\x02\x12\x0e\n\x06schema\x18\x07 \x01(\t\x12\x10\n\x08relation\x18\x08 \x01(\t\"b\n\x10LogSeedResultMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12(\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1a.proto_types.LogSeedResult\"\xad\x01\n\x12LogFreshnessResult\x12\x0e\n\x06status\x18\x01 \x01(\t\x12(\n\tnode_info\x18\x02 \x01(\x0b\x32\x15.proto_types.NodeInfo\x12\r\n\x05index\x18\x03 \x01(\x05\x12\r\n\x05total\x18\x04 \x01(\x05\x12\x16\n\x0e\x65xecution_time\x18\x05 \x01(\x02\x12\x13\n\x0bsource_name\x18\x06 \x01(\t\x12\x12\n\ntable_name\x18\x07 \x01(\t\"l\n\x15LogFreshnessResultMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12-\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1f.proto_types.LogFreshnessResult\"\"\n\rLogCancelLine\x12\x11\n\tconn_name\x18\x01 \x01(\t\"b\n\x10LogCancelLineMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12(\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1a.proto_types.LogCancelLine\"\x1f\n\x0f\x44\x65\x66\x61ultSelector\x12\x0c\n\x04name\x18\x01 \x01(\t\"f\n\x12\x44\x65\x66\x61ultSelectorMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12*\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1c.proto_types.DefaultSelector\"5\n\tNodeStart\x12(\n\tnode_info\x18\x01 \x01(\x0b\x32\x15.proto_types.NodeInfo\"Z\n\x0cNodeStartMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12$\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x16.proto_types.NodeStart\"g\n\x0cNodeFinished\x12(\n\tnode_info\x18\x01 \x01(\x0b\x32\x15.proto_types.NodeInfo\x12-\n\nrun_result\x18\x02 \x01(\x0b\x32\x19.proto_types.RunResultMsg\"`\n\x0fNodeFinishedMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\'\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x19.proto_types.NodeFinished\"+\n\x1bQueryCancelationUnsupported\x12\x0c\n\x04type\x18\x01 \x01(\t\"~\n\x1eQueryCancelationUnsupportedMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x36\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32(.proto_types.QueryCancelationUnsupported\"O\n\x0f\x43oncurrencyLine\x12\x13\n\x0bnum_threads\x18\x01 \x01(\x05\x12\x13\n\x0btarget_name\x18\x02 \x01(\t\x12\x12\n\nnode_count\x18\x03 \x01(\x05\"f\n\x12\x43oncurrencyLineMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12*\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1c.proto_types.ConcurrencyLine\"E\n\x19WritingInjectedSQLForNode\x12(\n\tnode_info\x18\x01 \x01(\x0b\x32\x15.proto_types.NodeInfo\"z\n\x1cWritingInjectedSQLForNodeMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x34\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32&.proto_types.WritingInjectedSQLForNode\"9\n\rNodeCompiling\x12(\n\tnode_info\x18\x01 \x01(\x0b\x32\x15.proto_types.NodeInfo\"b\n\x10NodeCompilingMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12(\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1a.proto_types.NodeCompiling\"9\n\rNodeExecuting\x12(\n\tnode_info\x18\x01 \x01(\x0b\x32\x15.proto_types.NodeInfo\"b\n\x10NodeExecutingMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12(\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1a.proto_types.NodeExecuting\"m\n\x10LogHookStartLine\x12(\n\tnode_info\x18\x01 \x01(\x0b\x32\x15.proto_types.NodeInfo\x12\x11\n\tstatement\x18\x02 \x01(\t\x12\r\n\x05index\x18\x03 \x01(\x05\x12\r\n\x05total\x18\x04 \x01(\x05\"h\n\x13LogHookStartLineMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12+\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1d.proto_types.LogHookStartLine\"\x93\x01\n\x0eLogHookEndLine\x12(\n\tnode_info\x18\x01 \x01(\x0b\x32\x15.proto_types.NodeInfo\x12\x11\n\tstatement\x18\x02 \x01(\t\x12\x0e\n\x06status\x18\x03 \x01(\t\x12\r\n\x05index\x18\x04 \x01(\x05\x12\r\n\x05total\x18\x05 \x01(\x05\x12\x16\n\x0e\x65xecution_time\x18\x06 \x01(\x02\"d\n\x11LogHookEndLineMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12)\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1b.proto_types.LogHookEndLine\"\x93\x01\n\x0fSkippingDetails\x12(\n\tnode_info\x18\x01 \x01(\x0b\x32\x15.proto_types.NodeInfo\x12\x15\n\rresource_type\x18\x02 \x01(\t\x12\x0e\n\x06schema\x18\x03 \x01(\t\x12\x11\n\tnode_name\x18\x04 \x01(\t\x12\r\n\x05index\x18\x05 \x01(\x05\x12\r\n\x05total\x18\x06 \x01(\x05\"f\n\x12SkippingDetailsMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12*\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1c.proto_types.SkippingDetails\"\r\n\x0bNothingToDo\"^\n\x0eNothingToDoMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12&\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x18.proto_types.NothingToDo\",\n\x1dRunningOperationUncaughtError\x12\x0b\n\x03\x65xc\x18\x01 \x01(\t\"\x82\x01\n RunningOperationUncaughtErrorMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x38\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32*.proto_types.RunningOperationUncaughtError\"\x93\x01\n\x0c\x45ndRunResult\x12*\n\x07results\x18\x01 \x03(\x0b\x32\x19.proto_types.RunResultMsg\x12\x14\n\x0c\x65lapsed_time\x18\x02 \x01(\x02\x12\x30\n\x0cgenerated_at\x18\x03 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x0f\n\x07success\x18\x04 \x01(\x08\"`\n\x0f\x45ndRunResultMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\'\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x19.proto_types.EndRunResult\"\x11\n\x0fNoNodesSelected\"f\n\x12NoNodesSelectedMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12*\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1c.proto_types.NoNodesSelected\"w\n\x10\x43ommandCompleted\x12\x0f\n\x07\x63ommand\x18\x01 \x01(\t\x12\x0f\n\x07success\x18\x02 \x01(\x08\x12\x30\n\x0c\x63ompleted_at\x18\x03 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x0f\n\x07\x65lapsed\x18\x04 \x01(\x02\"h\n\x13\x43ommandCompletedMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12+\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1d.proto_types.CommandCompleted\"k\n\x08ShowNode\x12\x11\n\tnode_name\x18\x01 \x01(\t\x12\x0f\n\x07preview\x18\x02 \x01(\t\x12\x11\n\tis_inline\x18\x03 \x01(\x08\x12\x15\n\routput_format\x18\x04 \x01(\t\x12\x11\n\tunique_id\x18\x05 \x01(\t\"X\n\x0bShowNodeMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12#\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x15.proto_types.ShowNode\"p\n\x0c\x43ompiledNode\x12\x11\n\tnode_name\x18\x01 \x01(\t\x12\x10\n\x08\x63ompiled\x18\x02 \x01(\t\x12\x11\n\tis_inline\x18\x03 \x01(\x08\x12\x15\n\routput_format\x18\x04 \x01(\t\x12\x11\n\tunique_id\x18\x05 \x01(\t\"`\n\x0f\x43ompiledNodeMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\'\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x19.proto_types.CompiledNode\"b\n\x17\x43\x61tchableExceptionOnRun\x12(\n\tnode_info\x18\x01 \x01(\x0b\x32\x15.proto_types.NodeInfo\x12\x0b\n\x03\x65xc\x18\x02 \x01(\t\x12\x10\n\x08\x65xc_info\x18\x03 \x01(\t\"v\n\x1a\x43\x61tchableExceptionOnRunMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x32\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32$.proto_types.CatchableExceptionOnRun\"_\n\x12InternalErrorOnRun\x12\x12\n\nbuild_path\x18\x01 \x01(\t\x12\x0b\n\x03\x65xc\x18\x02 \x01(\t\x12(\n\tnode_info\x18\x03 \x01(\x0b\x32\x15.proto_types.NodeInfo\"l\n\x15InternalErrorOnRunMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12-\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1f.proto_types.InternalErrorOnRun\"u\n\x15GenericExceptionOnRun\x12\x12\n\nbuild_path\x18\x01 \x01(\t\x12\x11\n\tunique_id\x18\x02 \x01(\t\x12\x0b\n\x03\x65xc\x18\x03 \x01(\t\x12(\n\tnode_info\x18\x04 \x01(\x0b\x32\x15.proto_types.NodeInfo\"r\n\x18GenericExceptionOnRunMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x30\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\".proto_types.GenericExceptionOnRun\"N\n\x1aNodeConnectionReleaseError\x12\x11\n\tnode_name\x18\x01 \x01(\t\x12\x0b\n\x03\x65xc\x18\x02 \x01(\t\x12\x10\n\x08\x65xc_info\x18\x03 \x01(\t\"|\n\x1dNodeConnectionReleaseErrorMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x35\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\'.proto_types.NodeConnectionReleaseError\"\x1f\n\nFoundStats\x12\x11\n\tstat_line\x18\x01 \x01(\t\"\\\n\rFoundStatsMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12%\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x17.proto_types.FoundStats\"\x17\n\x15MainKeyboardInterrupt\"r\n\x18MainKeyboardInterruptMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x30\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\".proto_types.MainKeyboardInterrupt\"#\n\x14MainEncounteredError\x12\x0b\n\x03\x65xc\x18\x01 \x01(\t\"p\n\x17MainEncounteredErrorMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12/\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32!.proto_types.MainEncounteredError\"%\n\x0eMainStackTrace\x12\x13\n\x0bstack_trace\x18\x01 \x01(\t\"d\n\x11MainStackTraceMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12)\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1b.proto_types.MainStackTrace\"@\n\x13SystemCouldNotWrite\x12\x0c\n\x04path\x18\x01 \x01(\t\x12\x0e\n\x06reason\x18\x02 \x01(\t\x12\x0b\n\x03\x65xc\x18\x03 \x01(\t\"n\n\x16SystemCouldNotWriteMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12.\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32 .proto_types.SystemCouldNotWrite\"!\n\x12SystemExecutingCmd\x12\x0b\n\x03\x63md\x18\x01 \x03(\t\"l\n\x15SystemExecutingCmdMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12-\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1f.proto_types.SystemExecutingCmd\"\x1c\n\x0cSystemStdOut\x12\x0c\n\x04\x62msg\x18\x01 \x01(\t\"`\n\x0fSystemStdOutMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\'\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x19.proto_types.SystemStdOut\"\x1c\n\x0cSystemStdErr\x12\x0c\n\x04\x62msg\x18\x01 \x01(\t\"`\n\x0fSystemStdErrMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\'\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x19.proto_types.SystemStdErr\",\n\x16SystemReportReturnCode\x12\x12\n\nreturncode\x18\x01 \x01(\x05\"t\n\x19SystemReportReturnCodeMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x31\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32#.proto_types.SystemReportReturnCode\"p\n\x13TimingInfoCollected\x12(\n\tnode_info\x18\x01 \x01(\x0b\x32\x15.proto_types.NodeInfo\x12/\n\x0btiming_info\x18\x02 \x01(\x0b\x32\x1a.proto_types.TimingInfoMsg\"n\n\x16TimingInfoCollectedMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12.\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32 .proto_types.TimingInfoCollected\"&\n\x12LogDebugStackTrace\x12\x10\n\x08\x65xc_info\x18\x01 \x01(\t\"l\n\x15LogDebugStackTraceMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12-\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1f.proto_types.LogDebugStackTrace\"\x1e\n\x0e\x43heckCleanPath\x12\x0c\n\x04path\x18\x01 \x01(\t\"d\n\x11\x43heckCleanPathMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12)\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1b.proto_types.CheckCleanPath\" \n\x10\x43onfirmCleanPath\x12\x0c\n\x04path\x18\x01 \x01(\t\"h\n\x13\x43onfirmCleanPathMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12+\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1d.proto_types.ConfirmCleanPath\"\"\n\x12ProtectedCleanPath\x12\x0c\n\x04path\x18\x01 \x01(\t\"l\n\x15ProtectedCleanPathMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12-\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1f.proto_types.ProtectedCleanPath\"\x14\n\x12\x46inishedCleanPaths\"l\n\x15\x46inishedCleanPathsMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12-\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1f.proto_types.FinishedCleanPaths\"5\n\x0bOpenCommand\x12\x10\n\x08open_cmd\x18\x01 \x01(\t\x12\x14\n\x0cprofiles_dir\x18\x02 \x01(\t\"^\n\x0eOpenCommandMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12&\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x18.proto_types.OpenCommand\"\x19\n\nFormatting\x12\x0b\n\x03msg\x18\x01 \x01(\t\"\\\n\rFormattingMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12%\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x17.proto_types.Formatting\"0\n\x0fServingDocsPort\x12\x0f\n\x07\x61\x64\x64ress\x18\x01 \x01(\t\x12\x0c\n\x04port\x18\x02 \x01(\x05\"f\n\x12ServingDocsPortMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12*\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1c.proto_types.ServingDocsPort\"%\n\x15ServingDocsAccessInfo\x12\x0c\n\x04port\x18\x01 \x01(\t\"r\n\x18ServingDocsAccessInfoMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x30\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\".proto_types.ServingDocsAccessInfo\"\x15\n\x13ServingDocsExitInfo\"n\n\x16ServingDocsExitInfoMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12.\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32 .proto_types.ServingDocsExitInfo\"J\n\x10RunResultWarning\x12\x15\n\rresource_type\x18\x01 \x01(\t\x12\x11\n\tnode_name\x18\x02 \x01(\t\x12\x0c\n\x04path\x18\x03 \x01(\t\"h\n\x13RunResultWarningMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12+\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1d.proto_types.RunResultWarning\"J\n\x10RunResultFailure\x12\x15\n\rresource_type\x18\x01 \x01(\t\x12\x11\n\tnode_name\x18\x02 \x01(\t\x12\x0c\n\x04path\x18\x03 \x01(\t\"h\n\x13RunResultFailureMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12+\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1d.proto_types.RunResultFailure\"k\n\tStatsLine\x12\x30\n\x05stats\x18\x01 \x03(\x0b\x32!.proto_types.StatsLine.StatsEntry\x1a,\n\nStatsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x05:\x02\x38\x01\"Z\n\x0cStatsLineMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12$\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x16.proto_types.StatsLine\"\x1d\n\x0eRunResultError\x12\x0b\n\x03msg\x18\x01 \x01(\t\"d\n\x11RunResultErrorMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12)\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1b.proto_types.RunResultError\")\n\x17RunResultErrorNoMessage\x12\x0e\n\x06status\x18\x01 \x01(\t\"v\n\x1aRunResultErrorNoMessageMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x32\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32$.proto_types.RunResultErrorNoMessage\"\x1f\n\x0fSQLCompiledPath\x12\x0c\n\x04path\x18\x01 \x01(\t\"f\n\x12SQLCompiledPathMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12*\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1c.proto_types.SQLCompiledPath\"-\n\x14\x43heckNodeTestFailure\x12\x15\n\rrelation_name\x18\x01 \x01(\t\"p\n\x17\x43heckNodeTestFailureMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12/\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32!.proto_types.CheckNodeTestFailure\"W\n\x0f\x45ndOfRunSummary\x12\x12\n\nnum_errors\x18\x01 \x01(\x05\x12\x14\n\x0cnum_warnings\x18\x02 \x01(\x05\x12\x1a\n\x12keyboard_interrupt\x18\x03 \x01(\x08\"f\n\x12\x45ndOfRunSummaryMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12*\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1c.proto_types.EndOfRunSummary\"U\n\x13LogSkipBecauseError\x12\x0e\n\x06schema\x18\x01 \x01(\t\x12\x10\n\x08relation\x18\x02 \x01(\t\x12\r\n\x05index\x18\x03 \x01(\x05\x12\r\n\x05total\x18\x04 \x01(\x05\"n\n\x16LogSkipBecauseErrorMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12.\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32 .proto_types.LogSkipBecauseError\"\x14\n\x12\x45nsureGitInstalled\"l\n\x15\x45nsureGitInstalledMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12-\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1f.proto_types.EnsureGitInstalled\"\x1a\n\x18\x44\x65psCreatingLocalSymlink\"x\n\x1b\x44\x65psCreatingLocalSymlinkMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x33\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32%.proto_types.DepsCreatingLocalSymlink\"\x19\n\x17\x44\x65psSymlinkNotAvailable\"v\n\x1a\x44\x65psSymlinkNotAvailableMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x32\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32$.proto_types.DepsSymlinkNotAvailable\"\x11\n\x0f\x44isableTracking\"f\n\x12\x44isableTrackingMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12*\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1c.proto_types.DisableTracking\"\x1e\n\x0cSendingEvent\x12\x0e\n\x06kwargs\x18\x01 \x01(\t\"`\n\x0fSendingEventMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\'\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x19.proto_types.SendingEvent\"\x12\n\x10SendEventFailure\"h\n\x13SendEventFailureMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12+\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1d.proto_types.SendEventFailure\"\r\n\x0b\x46lushEvents\"^\n\x0e\x46lushEventsMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12&\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x18.proto_types.FlushEvents\"\x14\n\x12\x46lushEventsFailure\"l\n\x15\x46lushEventsFailureMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12-\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1f.proto_types.FlushEventsFailure\"-\n\x19TrackingInitializeFailure\x12\x10\n\x08\x65xc_info\x18\x01 \x01(\t\"z\n\x1cTrackingInitializeFailureMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x34\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32&.proto_types.TrackingInitializeFailure\"&\n\x17RunResultWarningMessage\x12\x0b\n\x03msg\x18\x01 \x01(\t\"v\n\x1aRunResultWarningMessageMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x32\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32$.proto_types.RunResultWarningMessage\"\x1a\n\x0b\x44\x65\x62ugCmdOut\x12\x0b\n\x03msg\x18\x01 \x01(\t\"^\n\x0e\x44\x65\x62ugCmdOutMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12&\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x18.proto_types.DebugCmdOut\"\x1d\n\x0e\x44\x65\x62ugCmdResult\x12\x0b\n\x03msg\x18\x01 \x01(\t\"d\n\x11\x44\x65\x62ugCmdResultMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12)\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1b.proto_types.DebugCmdResult\"\x19\n\nListCmdOut\x12\x0b\n\x03msg\x18\x01 \x01(\t\"\\\n\rListCmdOutMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12%\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x17.proto_types.ListCmdOut\"\x13\n\x04Note\x12\x0b\n\x03msg\x18\x01 \x01(\t\"P\n\x07NoteMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x1f\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x11.proto_types.Note\"\xec\x01\n\x0eResourceReport\x12\x14\n\x0c\x63ommand_name\x18\x02 \x01(\t\x12\x17\n\x0f\x63ommand_success\x18\x03 \x01(\x08\x12\x1f\n\x17\x63ommand_wall_clock_time\x18\x04 \x01(\x02\x12\x19\n\x11process_user_time\x18\x05 \x01(\x02\x12\x1b\n\x13process_kernel_time\x18\x06 \x01(\x02\x12\x1b\n\x13process_mem_max_rss\x18\x07 \x01(\x03\x12\x19\n\x11process_in_blocks\x18\x08 \x01(\x03\x12\x1a\n\x12process_out_blocks\x18\t \x01(\x03\"d\n\x11ResourceReportMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12)\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1b.proto_types.ResourceReportb\x06proto3')
+DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0btypes.proto\x12\x0bproto_types\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1cgoogle/protobuf/struct.proto\"\x91\x02\n\tEventInfo\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0c\n\x04\x63ode\x18\x02 \x01(\t\x12\x0b\n\x03msg\x18\x03 \x01(\t\x12\r\n\x05level\x18\x04 \x01(\t\x12\x15\n\rinvocation_id\x18\x05 \x01(\t\x12\x0b\n\x03pid\x18\x06 \x01(\x05\x12\x0e\n\x06thread\x18\x07 \x01(\t\x12&\n\x02ts\x18\x08 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x30\n\x05\x65xtra\x18\t \x03(\x0b\x32!.proto_types.EventInfo.ExtraEntry\x12\x10\n\x08\x63\x61tegory\x18\n \x01(\t\x1a,\n\nExtraEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\x7f\n\rTimingInfoMsg\x12\x0c\n\x04name\x18\x01 \x01(\t\x12.\n\nstarted_at\x18\x02 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x30\n\x0c\x63ompleted_at\x18\x03 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\"V\n\x0cNodeRelation\x12\x10\n\x08\x64\x61tabase\x18\n \x01(\t\x12\x0e\n\x06schema\x18\x0b \x01(\t\x12\r\n\x05\x61lias\x18\x0c \x01(\t\x12\x15\n\rrelation_name\x18\r \x01(\t\"\x91\x02\n\x08NodeInfo\x12\x11\n\tnode_path\x18\x01 \x01(\t\x12\x11\n\tnode_name\x18\x02 \x01(\t\x12\x11\n\tunique_id\x18\x03 \x01(\t\x12\x15\n\rresource_type\x18\x04 \x01(\t\x12\x14\n\x0cmaterialized\x18\x05 \x01(\t\x12\x13\n\x0bnode_status\x18\x06 \x01(\t\x12\x17\n\x0fnode_started_at\x18\x07 \x01(\t\x12\x18\n\x10node_finished_at\x18\x08 \x01(\t\x12%\n\x04meta\x18\t \x01(\x0b\x32\x17.google.protobuf.Struct\x12\x30\n\rnode_relation\x18\n \x01(\x0b\x32\x19.proto_types.NodeRelation\"\xd1\x01\n\x0cRunResultMsg\x12\x0e\n\x06status\x18\x01 \x01(\t\x12\x0f\n\x07message\x18\x02 \x01(\t\x12/\n\x0btiming_info\x18\x03 \x03(\x0b\x32\x1a.proto_types.TimingInfoMsg\x12\x0e\n\x06thread\x18\x04 \x01(\t\x12\x16\n\x0e\x65xecution_time\x18\x05 \x01(\x02\x12\x31\n\x10\x61\x64\x61pter_response\x18\x06 \x01(\x0b\x32\x17.google.protobuf.Struct\x12\x14\n\x0cnum_failures\x18\x07 \x01(\x05\"G\n\x0fReferenceKeyMsg\x12\x10\n\x08\x64\x61tabase\x18\x01 \x01(\t\x12\x0e\n\x06schema\x18\x02 \x01(\t\x12\x12\n\nidentifier\x18\x03 \x01(\t\"\\\n\nColumnType\x12\x13\n\x0b\x63olumn_name\x18\x01 \x01(\t\x12\x1c\n\x14previous_column_type\x18\x02 \x01(\t\x12\x1b\n\x13\x63urrent_column_type\x18\x03 \x01(\t\"Y\n\x10\x43olumnConstraint\x12\x13\n\x0b\x63olumn_name\x18\x01 \x01(\t\x12\x17\n\x0f\x63onstraint_name\x18\x02 \x01(\t\x12\x17\n\x0f\x63onstraint_type\x18\x03 \x01(\t\"T\n\x0fModelConstraint\x12\x17\n\x0f\x63onstraint_name\x18\x01 \x01(\t\x12\x17\n\x0f\x63onstraint_type\x18\x02 \x01(\t\x12\x0f\n\x07\x63olumns\x18\x03 \x03(\t\"6\n\x0eGenericMessage\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\"9\n\x11MainReportVersion\x12\x0f\n\x07version\x18\x01 \x01(\t\x12\x13\n\x0blog_version\x18\x02 \x01(\x05\"j\n\x14MainReportVersionMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12,\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1e.proto_types.MainReportVersion\"r\n\x0eMainReportArgs\x12\x33\n\x04\x61rgs\x18\x01 \x03(\x0b\x32%.proto_types.MainReportArgs.ArgsEntry\x1a+\n\tArgsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"d\n\x11MainReportArgsMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12)\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1b.proto_types.MainReportArgs\"+\n\x15MainTrackingUserState\x12\x12\n\nuser_state\x18\x01 \x01(\t\"r\n\x18MainTrackingUserStateMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x30\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\".proto_types.MainTrackingUserState\"5\n\x0fMergedFromState\x12\x12\n\nnum_merged\x18\x01 \x01(\x05\x12\x0e\n\x06sample\x18\x02 \x03(\t\"f\n\x12MergedFromStateMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12*\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1c.proto_types.MergedFromState\"A\n\x14MissingProfileTarget\x12\x14\n\x0cprofile_name\x18\x01 \x01(\t\x12\x13\n\x0btarget_name\x18\x02 \x01(\t\"p\n\x17MissingProfileTargetMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12/\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32!.proto_types.MissingProfileTarget\"(\n\x11InvalidOptionYAML\x12\x13\n\x0boption_name\x18\x01 \x01(\t\"j\n\x14InvalidOptionYAMLMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12,\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1e.proto_types.InvalidOptionYAML\"!\n\x12LogDbtProjectError\x12\x0b\n\x03\x65xc\x18\x01 \x01(\t\"l\n\x15LogDbtProjectErrorMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12-\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1f.proto_types.LogDbtProjectError\"3\n\x12LogDbtProfileError\x12\x0b\n\x03\x65xc\x18\x01 \x01(\t\x12\x10\n\x08profiles\x18\x02 \x03(\t\"l\n\x15LogDbtProfileErrorMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12-\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1f.proto_types.LogDbtProfileError\"!\n\x12StarterProjectPath\x12\x0b\n\x03\x64ir\x18\x01 \x01(\t\"l\n\x15StarterProjectPathMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12-\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1f.proto_types.StarterProjectPath\"$\n\x15\x43onfigFolderDirectory\x12\x0b\n\x03\x64ir\x18\x01 \x01(\t\"r\n\x18\x43onfigFolderDirectoryMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x30\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\".proto_types.ConfigFolderDirectory\"\'\n\x14NoSampleProfileFound\x12\x0f\n\x07\x61\x64\x61pter\x18\x01 \x01(\t\"p\n\x17NoSampleProfileFoundMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12/\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32!.proto_types.NoSampleProfileFound\"6\n\x18ProfileWrittenWithSample\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0c\n\x04path\x18\x02 \x01(\t\"x\n\x1bProfileWrittenWithSampleMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x33\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32%.proto_types.ProfileWrittenWithSample\"B\n$ProfileWrittenWithTargetTemplateYAML\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0c\n\x04path\x18\x02 \x01(\t\"\x90\x01\n\'ProfileWrittenWithTargetTemplateYAMLMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12?\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x31.proto_types.ProfileWrittenWithTargetTemplateYAML\"C\n%ProfileWrittenWithProjectTemplateYAML\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0c\n\x04path\x18\x02 \x01(\t\"\x92\x01\n(ProfileWrittenWithProjectTemplateYAMLMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12@\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x32.proto_types.ProfileWrittenWithProjectTemplateYAML\"\x12\n\x10SettingUpProfile\"h\n\x13SettingUpProfileMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12+\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1d.proto_types.SettingUpProfile\"\x1c\n\x1aInvalidProfileTemplateYAML\"|\n\x1dInvalidProfileTemplateYAMLMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x35\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\'.proto_types.InvalidProfileTemplateYAML\"(\n\x18ProjectNameAlreadyExists\x12\x0c\n\x04name\x18\x01 \x01(\t\"x\n\x1bProjectNameAlreadyExistsMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x33\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32%.proto_types.ProjectNameAlreadyExists\"K\n\x0eProjectCreated\x12\x14\n\x0cproject_name\x18\x01 \x01(\t\x12\x10\n\x08\x64ocs_url\x18\x02 \x01(\t\x12\x11\n\tslack_url\x18\x03 \x01(\t\"d\n\x11ProjectCreatedMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12)\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1b.proto_types.ProjectCreated\"@\n\x1aPackageRedirectDeprecation\x12\x10\n\x08old_name\x18\x01 \x01(\t\x12\x10\n\x08new_name\x18\x02 \x01(\t\"|\n\x1dPackageRedirectDeprecationMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x35\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\'.proto_types.PackageRedirectDeprecation\"\x1f\n\x1dPackageInstallPathDeprecation\"\x82\x01\n PackageInstallPathDeprecationMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x38\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32*.proto_types.PackageInstallPathDeprecation\"H\n\x1b\x43onfigSourcePathDeprecation\x12\x17\n\x0f\x64\x65precated_path\x18\x01 \x01(\t\x12\x10\n\x08\x65xp_path\x18\x02 \x01(\t\"~\n\x1e\x43onfigSourcePathDeprecationMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x36\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32(.proto_types.ConfigSourcePathDeprecation\"F\n\x19\x43onfigDataPathDeprecation\x12\x17\n\x0f\x64\x65precated_path\x18\x01 \x01(\t\x12\x10\n\x08\x65xp_path\x18\x02 \x01(\t\"z\n\x1c\x43onfigDataPathDeprecationMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x34\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32&.proto_types.ConfigDataPathDeprecation\"?\n\x19\x41\x64\x61pterDeprecationWarning\x12\x10\n\x08old_name\x18\x01 \x01(\t\x12\x10\n\x08new_name\x18\x02 \x01(\t\"z\n\x1c\x41\x64\x61pterDeprecationWarningMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x34\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32&.proto_types.AdapterDeprecationWarning\".\n\x17MetricAttributesRenamed\x12\x13\n\x0bmetric_name\x18\x01 \x01(\t\"v\n\x1aMetricAttributesRenamedMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x32\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32$.proto_types.MetricAttributesRenamed\"+\n\x17\x45xposureNameDeprecation\x12\x10\n\x08\x65xposure\x18\x01 \x01(\t\"v\n\x1a\x45xposureNameDeprecationMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x32\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32$.proto_types.ExposureNameDeprecation\"^\n\x13InternalDeprecation\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0e\n\x06reason\x18\x02 \x01(\t\x12\x18\n\x10suggested_action\x18\x03 \x01(\t\x12\x0f\n\x07version\x18\x04 \x01(\t\"n\n\x16InternalDeprecationMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12.\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32 .proto_types.InternalDeprecation\"@\n\x1a\x45nvironmentVariableRenamed\x12\x10\n\x08old_name\x18\x01 \x01(\t\x12\x10\n\x08new_name\x18\x02 \x01(\t\"|\n\x1d\x45nvironmentVariableRenamedMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x35\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\'.proto_types.EnvironmentVariableRenamed\"3\n\x18\x43onfigLogPathDeprecation\x12\x17\n\x0f\x64\x65precated_path\x18\x01 \x01(\t\"x\n\x1b\x43onfigLogPathDeprecationMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x33\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32%.proto_types.ConfigLogPathDeprecation\"6\n\x1b\x43onfigTargetPathDeprecation\x12\x17\n\x0f\x64\x65precated_path\x18\x01 \x01(\t\"~\n\x1e\x43onfigTargetPathDeprecationMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x36\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32(.proto_types.ConfigTargetPathDeprecation\"!\n\x1f\x43ollectFreshnessReturnSignature\"\x86\x01\n\"CollectFreshnessReturnSignatureMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12:\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32,.proto_types.CollectFreshnessReturnSignature\"\x1e\n\x1cProjectFlagsMovedDeprecation\"\x80\x01\n\x1fProjectFlagsMovedDeprecationMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x37\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32).proto_types.ProjectFlagsMovedDeprecation\"_\n)PackageMaterializationOverrideDeprecation\x12\x14\n\x0cpackage_name\x18\x01 \x01(\t\x12\x1c\n\x14materialization_name\x18\x02 \x01(\t\"\x9a\x01\n,PackageMaterializationOverrideDeprecationMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x44\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x36.proto_types.PackageMaterializationOverrideDeprecation\"\x87\x01\n\x11\x41\x64\x61pterEventDebug\x12(\n\tnode_info\x18\x01 \x01(\x0b\x32\x15.proto_types.NodeInfo\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x10\n\x08\x62\x61se_msg\x18\x03 \x01(\t\x12(\n\x04\x61rgs\x18\x04 \x01(\x0b\x32\x1a.google.protobuf.ListValue\"j\n\x14\x41\x64\x61pterEventDebugMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12,\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1e.proto_types.AdapterEventDebug\"\x86\x01\n\x10\x41\x64\x61pterEventInfo\x12(\n\tnode_info\x18\x01 \x01(\x0b\x32\x15.proto_types.NodeInfo\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x10\n\x08\x62\x61se_msg\x18\x03 \x01(\t\x12(\n\x04\x61rgs\x18\x04 \x01(\x0b\x32\x1a.google.protobuf.ListValue\"h\n\x13\x41\x64\x61pterEventInfoMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12+\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1d.proto_types.AdapterEventInfo\"\x89\x01\n\x13\x41\x64\x61pterEventWarning\x12(\n\tnode_info\x18\x01 \x01(\x0b\x32\x15.proto_types.NodeInfo\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x10\n\x08\x62\x61se_msg\x18\x03 \x01(\t\x12(\n\x04\x61rgs\x18\x04 \x01(\x0b\x32\x1a.google.protobuf.ListValue\"n\n\x16\x41\x64\x61pterEventWarningMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12.\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32 .proto_types.AdapterEventWarning\"\x99\x01\n\x11\x41\x64\x61pterEventError\x12(\n\tnode_info\x18\x01 \x01(\x0b\x32\x15.proto_types.NodeInfo\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x10\n\x08\x62\x61se_msg\x18\x03 \x01(\t\x12(\n\x04\x61rgs\x18\x04 \x01(\x0b\x32\x1a.google.protobuf.ListValue\x12\x10\n\x08\x65xc_info\x18\x05 \x01(\t\"j\n\x14\x41\x64\x61pterEventErrorMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12,\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1e.proto_types.AdapterEventError\"_\n\rNewConnection\x12(\n\tnode_info\x18\x01 \x01(\x0b\x32\x15.proto_types.NodeInfo\x12\x11\n\tconn_type\x18\x02 \x01(\t\x12\x11\n\tconn_name\x18\x03 \x01(\t\"b\n\x10NewConnectionMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12(\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1a.proto_types.NewConnection\"=\n\x10\x43onnectionReused\x12\x11\n\tconn_name\x18\x01 \x01(\t\x12\x16\n\x0eorig_conn_name\x18\x02 \x01(\t\"h\n\x13\x43onnectionReusedMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12+\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1d.proto_types.ConnectionReused\"0\n\x1b\x43onnectionLeftOpenInCleanup\x12\x11\n\tconn_name\x18\x01 \x01(\t\"~\n\x1e\x43onnectionLeftOpenInCleanupMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x36\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32(.proto_types.ConnectionLeftOpenInCleanup\".\n\x19\x43onnectionClosedInCleanup\x12\x11\n\tconn_name\x18\x01 \x01(\t\"z\n\x1c\x43onnectionClosedInCleanupMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x34\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32&.proto_types.ConnectionClosedInCleanup\"_\n\x0eRollbackFailed\x12(\n\tnode_info\x18\x01 \x01(\x0b\x32\x15.proto_types.NodeInfo\x12\x11\n\tconn_name\x18\x02 \x01(\t\x12\x10\n\x08\x65xc_info\x18\x03 \x01(\t\"d\n\x11RollbackFailedMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12)\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1b.proto_types.RollbackFailed\"O\n\x10\x43onnectionClosed\x12(\n\tnode_info\x18\x01 \x01(\x0b\x32\x15.proto_types.NodeInfo\x12\x11\n\tconn_name\x18\x02 \x01(\t\"h\n\x13\x43onnectionClosedMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12+\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1d.proto_types.ConnectionClosed\"Q\n\x12\x43onnectionLeftOpen\x12(\n\tnode_info\x18\x01 \x01(\x0b\x32\x15.proto_types.NodeInfo\x12\x11\n\tconn_name\x18\x02 \x01(\t\"l\n\x15\x43onnectionLeftOpenMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12-\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1f.proto_types.ConnectionLeftOpen\"G\n\x08Rollback\x12(\n\tnode_info\x18\x01 \x01(\x0b\x32\x15.proto_types.NodeInfo\x12\x11\n\tconn_name\x18\x02 \x01(\t\"X\n\x0bRollbackMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12#\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x15.proto_types.Rollback\"@\n\tCacheMiss\x12\x11\n\tconn_name\x18\x01 \x01(\t\x12\x10\n\x08\x64\x61tabase\x18\x02 \x01(\t\x12\x0e\n\x06schema\x18\x03 \x01(\t\"Z\n\x0c\x43\x61\x63heMissMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12$\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x16.proto_types.CacheMiss\"b\n\rListRelations\x12\x10\n\x08\x64\x61tabase\x18\x01 \x01(\t\x12\x0e\n\x06schema\x18\x02 \x01(\t\x12/\n\trelations\x18\x03 \x03(\x0b\x32\x1c.proto_types.ReferenceKeyMsg\"b\n\x10ListRelationsMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12(\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1a.proto_types.ListRelations\"`\n\x0e\x43onnectionUsed\x12(\n\tnode_info\x18\x01 \x01(\x0b\x32\x15.proto_types.NodeInfo\x12\x11\n\tconn_type\x18\x02 \x01(\t\x12\x11\n\tconn_name\x18\x03 \x01(\t\"d\n\x11\x43onnectionUsedMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12)\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1b.proto_types.ConnectionUsed\"T\n\x08SQLQuery\x12(\n\tnode_info\x18\x01 \x01(\x0b\x32\x15.proto_types.NodeInfo\x12\x11\n\tconn_name\x18\x02 \x01(\t\x12\x0b\n\x03sql\x18\x03 \x01(\t\"X\n\x0bSQLQueryMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12#\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x15.proto_types.SQLQuery\"[\n\x0eSQLQueryStatus\x12(\n\tnode_info\x18\x01 \x01(\x0b\x32\x15.proto_types.NodeInfo\x12\x0e\n\x06status\x18\x02 \x01(\t\x12\x0f\n\x07\x65lapsed\x18\x03 \x01(\x02\"d\n\x11SQLQueryStatusMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12)\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1b.proto_types.SQLQueryStatus\"H\n\tSQLCommit\x12(\n\tnode_info\x18\x01 \x01(\x0b\x32\x15.proto_types.NodeInfo\x12\x11\n\tconn_name\x18\x02 \x01(\t\"Z\n\x0cSQLCommitMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12$\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x16.proto_types.SQLCommit\"a\n\rColTypeChange\x12\x11\n\torig_type\x18\x01 \x01(\t\x12\x10\n\x08new_type\x18\x02 \x01(\t\x12+\n\x05table\x18\x03 \x01(\x0b\x32\x1c.proto_types.ReferenceKeyMsg\"b\n\x10\x43olTypeChangeMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12(\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1a.proto_types.ColTypeChange\"@\n\x0eSchemaCreation\x12.\n\x08relation\x18\x01 \x01(\x0b\x32\x1c.proto_types.ReferenceKeyMsg\"d\n\x11SchemaCreationMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12)\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1b.proto_types.SchemaCreation\"<\n\nSchemaDrop\x12.\n\x08relation\x18\x01 \x01(\x0b\x32\x1c.proto_types.ReferenceKeyMsg\"\\\n\rSchemaDropMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12%\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x17.proto_types.SchemaDrop\"\xde\x01\n\x0b\x43\x61\x63heAction\x12\x0e\n\x06\x61\x63tion\x18\x01 \x01(\t\x12-\n\x07ref_key\x18\x02 \x01(\x0b\x32\x1c.proto_types.ReferenceKeyMsg\x12/\n\tref_key_2\x18\x03 \x01(\x0b\x32\x1c.proto_types.ReferenceKeyMsg\x12/\n\tref_key_3\x18\x04 \x01(\x0b\x32\x1c.proto_types.ReferenceKeyMsg\x12.\n\x08ref_list\x18\x05 \x03(\x0b\x32\x1c.proto_types.ReferenceKeyMsg\"^\n\x0e\x43\x61\x63heActionMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12&\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x18.proto_types.CacheAction\"\x98\x01\n\x0e\x43\x61\x63heDumpGraph\x12\x33\n\x04\x64ump\x18\x01 \x03(\x0b\x32%.proto_types.CacheDumpGraph.DumpEntry\x12\x14\n\x0c\x62\x65\x66ore_after\x18\x02 \x01(\t\x12\x0e\n\x06\x61\x63tion\x18\x03 \x01(\t\x1a+\n\tDumpEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"d\n\x11\x43\x61\x63heDumpGraphMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12)\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1b.proto_types.CacheDumpGraph\"B\n\x11\x41\x64\x61pterRegistered\x12\x14\n\x0c\x61\x64\x61pter_name\x18\x01 \x01(\t\x12\x17\n\x0f\x61\x64\x61pter_version\x18\x02 \x01(\t\"j\n\x14\x41\x64\x61pterRegisteredMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12,\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1e.proto_types.AdapterRegistered\"!\n\x12\x41\x64\x61pterImportError\x12\x0b\n\x03\x65xc\x18\x01 \x01(\t\"l\n\x15\x41\x64\x61pterImportErrorMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12-\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1f.proto_types.AdapterImportError\"#\n\x0fPluginLoadError\x12\x10\n\x08\x65xc_info\x18\x01 \x01(\t\"f\n\x12PluginLoadErrorMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12*\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1c.proto_types.PluginLoadError\"Z\n\x14NewConnectionOpening\x12(\n\tnode_info\x18\x01 \x01(\x0b\x32\x15.proto_types.NodeInfo\x12\x18\n\x10\x63onnection_state\x18\x02 \x01(\t\"p\n\x17NewConnectionOpeningMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12/\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32!.proto_types.NewConnectionOpening\"8\n\rCodeExecution\x12\x11\n\tconn_name\x18\x01 \x01(\t\x12\x14\n\x0c\x63ode_content\x18\x02 \x01(\t\"b\n\x10\x43odeExecutionMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12(\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1a.proto_types.CodeExecution\"6\n\x13\x43odeExecutionStatus\x12\x0e\n\x06status\x18\x01 \x01(\t\x12\x0f\n\x07\x65lapsed\x18\x02 \x01(\x02\"n\n\x16\x43odeExecutionStatusMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12.\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32 .proto_types.CodeExecutionStatus\"%\n\x16\x43\x61talogGenerationError\x12\x0b\n\x03\x65xc\x18\x01 \x01(\t\"t\n\x19\x43\x61talogGenerationErrorMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x31\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32#.proto_types.CatalogGenerationError\"-\n\x13WriteCatalogFailure\x12\x16\n\x0enum_exceptions\x18\x01 \x01(\x05\"n\n\x16WriteCatalogFailureMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12.\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32 .proto_types.WriteCatalogFailure\"\x1e\n\x0e\x43\x61talogWritten\x12\x0c\n\x04path\x18\x01 \x01(\t\"d\n\x11\x43\x61talogWrittenMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12)\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1b.proto_types.CatalogWritten\"\x14\n\x12\x43\x61nnotGenerateDocs\"l\n\x15\x43\x61nnotGenerateDocsMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12-\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1f.proto_types.CannotGenerateDocs\"\x11\n\x0f\x42uildingCatalog\"f\n\x12\x42uildingCatalogMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12*\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1c.proto_types.BuildingCatalog\"-\n\x18\x44\x61tabaseErrorRunningHook\x12\x11\n\thook_type\x18\x01 \x01(\t\"x\n\x1b\x44\x61tabaseErrorRunningHookMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x33\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32%.proto_types.DatabaseErrorRunningHook\"4\n\x0cHooksRunning\x12\x11\n\tnum_hooks\x18\x01 \x01(\x05\x12\x11\n\thook_type\x18\x02 \x01(\t\"`\n\x0fHooksRunningMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\'\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x19.proto_types.HooksRunning\"T\n\x14\x46inishedRunningStats\x12\x11\n\tstat_line\x18\x01 \x01(\t\x12\x11\n\texecution\x18\x02 \x01(\t\x12\x16\n\x0e\x65xecution_time\x18\x03 \x01(\x02\"p\n\x17\x46inishedRunningStatsMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12/\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32!.proto_types.FinishedRunningStats\"<\n\x15\x43onstraintNotEnforced\x12\x12\n\nconstraint\x18\x01 \x01(\t\x12\x0f\n\x07\x61\x64\x61pter\x18\x02 \x01(\t\"r\n\x18\x43onstraintNotEnforcedMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x30\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\".proto_types.ConstraintNotEnforced\"=\n\x16\x43onstraintNotSupported\x12\x12\n\nconstraint\x18\x01 \x01(\t\x12\x0f\n\x07\x61\x64\x61pter\x18\x02 \x01(\t\"t\n\x19\x43onstraintNotSupportedMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x31\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32#.proto_types.ConstraintNotSupported\"7\n\x12InputFileDiffError\x12\x10\n\x08\x63\x61tegory\x18\x01 \x01(\t\x12\x0f\n\x07\x66ile_id\x18\x02 \x01(\t\"l\n\x15InputFileDiffErrorMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12-\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1f.proto_types.InputFileDiffError\"?\n\x14InvalidValueForField\x12\x12\n\nfield_name\x18\x01 \x01(\t\x12\x13\n\x0b\x66ield_value\x18\x02 \x01(\t\"p\n\x17InvalidValueForFieldMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12/\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32!.proto_types.InvalidValueForField\"Q\n\x11ValidationWarning\x12\x15\n\rresource_type\x18\x01 \x01(\t\x12\x12\n\nfield_name\x18\x02 \x01(\t\x12\x11\n\tnode_name\x18\x03 \x01(\t\"j\n\x14ValidationWarningMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12,\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1e.proto_types.ValidationWarning\"!\n\x11ParsePerfInfoPath\x12\x0c\n\x04path\x18\x01 \x01(\t\"j\n\x14ParsePerfInfoPathMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12,\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1e.proto_types.ParsePerfInfoPath\"1\n!PartialParsingErrorProcessingFile\x12\x0c\n\x04\x66ile\x18\x01 \x01(\t\"\x8a\x01\n$PartialParsingErrorProcessingFileMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12<\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32..proto_types.PartialParsingErrorProcessingFile\"\x86\x01\n\x13PartialParsingError\x12?\n\x08\x65xc_info\x18\x01 \x03(\x0b\x32-.proto_types.PartialParsingError.ExcInfoEntry\x1a.\n\x0c\x45xcInfoEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"n\n\x16PartialParsingErrorMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12.\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32 .proto_types.PartialParsingError\"\x1b\n\x19PartialParsingSkipParsing\"z\n\x1cPartialParsingSkipParsingMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x34\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32&.proto_types.PartialParsingSkipParsing\"&\n\x14UnableToPartialParse\x12\x0e\n\x06reason\x18\x01 \x01(\t\"p\n\x17UnableToPartialParseMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12/\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32!.proto_types.UnableToPartialParse\"f\n\x12StateCheckVarsHash\x12\x10\n\x08\x63hecksum\x18\x01 \x01(\t\x12\x0c\n\x04vars\x18\x02 \x01(\t\x12\x0f\n\x07profile\x18\x03 \x01(\t\x12\x0e\n\x06target\x18\x04 \x01(\t\x12\x0f\n\x07version\x18\x05 \x01(\t\"l\n\x15StateCheckVarsHashMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12-\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1f.proto_types.StateCheckVarsHash\"\x1a\n\x18PartialParsingNotEnabled\"x\n\x1bPartialParsingNotEnabledMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x33\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32%.proto_types.PartialParsingNotEnabled\"C\n\x14ParsedFileLoadFailed\x12\x0c\n\x04path\x18\x01 \x01(\t\x12\x0b\n\x03\x65xc\x18\x02 \x01(\t\x12\x10\n\x08\x65xc_info\x18\x03 \x01(\t\"p\n\x17ParsedFileLoadFailedMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12/\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32!.proto_types.ParsedFileLoadFailed\"H\n\x15PartialParsingEnabled\x12\x0f\n\x07\x64\x65leted\x18\x01 \x01(\x05\x12\r\n\x05\x61\x64\x64\x65\x64\x18\x02 \x01(\x05\x12\x0f\n\x07\x63hanged\x18\x03 \x01(\x05\"r\n\x18PartialParsingEnabledMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x30\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\".proto_types.PartialParsingEnabled\"8\n\x12PartialParsingFile\x12\x0f\n\x07\x66ile_id\x18\x01 \x01(\t\x12\x11\n\toperation\x18\x02 \x01(\t\"l\n\x15PartialParsingFileMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12-\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1f.proto_types.PartialParsingFile\"\xaf\x01\n\x1fInvalidDisabledTargetInTestNode\x12\x1b\n\x13resource_type_title\x18\x01 \x01(\t\x12\x11\n\tunique_id\x18\x02 \x01(\t\x12\x1a\n\x12original_file_path\x18\x03 \x01(\t\x12\x13\n\x0btarget_kind\x18\x04 \x01(\t\x12\x13\n\x0btarget_name\x18\x05 \x01(\t\x12\x16\n\x0etarget_package\x18\x06 \x01(\t\"\x86\x01\n\"InvalidDisabledTargetInTestNodeMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12:\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32,.proto_types.InvalidDisabledTargetInTestNode\"7\n\x18UnusedResourceConfigPath\x12\x1b\n\x13unused_config_paths\x18\x01 \x03(\t\"x\n\x1bUnusedResourceConfigPathMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x33\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32%.proto_types.UnusedResourceConfigPath\"3\n\rSeedIncreased\x12\x14\n\x0cpackage_name\x18\x01 \x01(\t\x12\x0c\n\x04name\x18\x02 \x01(\t\"b\n\x10SeedIncreasedMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12(\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1a.proto_types.SeedIncreased\">\n\x18SeedExceedsLimitSamePath\x12\x14\n\x0cpackage_name\x18\x01 \x01(\t\x12\x0c\n\x04name\x18\x02 \x01(\t\"x\n\x1bSeedExceedsLimitSamePathMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x33\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32%.proto_types.SeedExceedsLimitSamePath\"D\n\x1eSeedExceedsLimitAndPathChanged\x12\x14\n\x0cpackage_name\x18\x01 \x01(\t\x12\x0c\n\x04name\x18\x02 \x01(\t\"\x84\x01\n!SeedExceedsLimitAndPathChangedMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x39\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32+.proto_types.SeedExceedsLimitAndPathChanged\"\\\n\x1fSeedExceedsLimitChecksumChanged\x12\x14\n\x0cpackage_name\x18\x01 \x01(\t\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x15\n\rchecksum_name\x18\x03 \x01(\t\"\x86\x01\n\"SeedExceedsLimitChecksumChangedMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12:\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32,.proto_types.SeedExceedsLimitChecksumChanged\"%\n\x0cUnusedTables\x12\x15\n\runused_tables\x18\x01 \x03(\t\"`\n\x0fUnusedTablesMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\'\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x19.proto_types.UnusedTables\"\x87\x01\n\x17WrongResourceSchemaFile\x12\x12\n\npatch_name\x18\x01 \x01(\t\x12\x15\n\rresource_type\x18\x02 \x01(\t\x12\x1c\n\x14plural_resource_type\x18\x03 \x01(\t\x12\x10\n\x08yaml_key\x18\x04 \x01(\t\x12\x11\n\tfile_path\x18\x05 \x01(\t\"v\n\x1aWrongResourceSchemaFileMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x32\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32$.proto_types.WrongResourceSchemaFile\"K\n\x10NoNodeForYamlKey\x12\x12\n\npatch_name\x18\x01 \x01(\t\x12\x10\n\x08yaml_key\x18\x02 \x01(\t\x12\x11\n\tfile_path\x18\x03 \x01(\t\"h\n\x13NoNodeForYamlKeyMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12+\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1d.proto_types.NoNodeForYamlKey\"+\n\x15MacroNotFoundForPatch\x12\x12\n\npatch_name\x18\x01 \x01(\t\"r\n\x18MacroNotFoundForPatchMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x30\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\".proto_types.MacroNotFoundForPatch\"\xb8\x01\n\x16NodeNotFoundOrDisabled\x12\x1a\n\x12original_file_path\x18\x01 \x01(\t\x12\x11\n\tunique_id\x18\x02 \x01(\t\x12\x1b\n\x13resource_type_title\x18\x03 \x01(\t\x12\x13\n\x0btarget_name\x18\x04 \x01(\t\x12\x13\n\x0btarget_kind\x18\x05 \x01(\t\x12\x16\n\x0etarget_package\x18\x06 \x01(\t\x12\x10\n\x08\x64isabled\x18\x07 \x01(\t\"t\n\x19NodeNotFoundOrDisabledMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x31\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32#.proto_types.NodeNotFoundOrDisabled\"H\n\x0fJinjaLogWarning\x12(\n\tnode_info\x18\x01 \x01(\x0b\x32\x15.proto_types.NodeInfo\x12\x0b\n\x03msg\x18\x02 \x01(\t\"f\n\x12JinjaLogWarningMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12*\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1c.proto_types.JinjaLogWarning\"E\n\x0cJinjaLogInfo\x12(\n\tnode_info\x18\x01 \x01(\x0b\x32\x15.proto_types.NodeInfo\x12\x0b\n\x03msg\x18\x02 \x01(\t\"`\n\x0fJinjaLogInfoMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\'\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x19.proto_types.JinjaLogInfo\"F\n\rJinjaLogDebug\x12(\n\tnode_info\x18\x01 \x01(\x0b\x32\x15.proto_types.NodeInfo\x12\x0b\n\x03msg\x18\x02 \x01(\t\"b\n\x10JinjaLogDebugMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12(\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1a.proto_types.JinjaLogDebug\"\xae\x01\n\x1eUnpinnedRefNewVersionAvailable\x12(\n\tnode_info\x18\x01 \x01(\x0b\x32\x15.proto_types.NodeInfo\x12\x15\n\rref_node_name\x18\x02 \x01(\t\x12\x18\n\x10ref_node_package\x18\x03 \x01(\t\x12\x18\n\x10ref_node_version\x18\x04 \x01(\t\x12\x17\n\x0fref_max_version\x18\x05 \x01(\t\"\x84\x01\n!UnpinnedRefNewVersionAvailableMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x39\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32+.proto_types.UnpinnedRefNewVersionAvailable\"V\n\x0f\x44\x65precatedModel\x12\x12\n\nmodel_name\x18\x01 \x01(\t\x12\x15\n\rmodel_version\x18\x02 \x01(\t\x12\x18\n\x10\x64\x65precation_date\x18\x03 \x01(\t\"f\n\x12\x44\x65precatedModelMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12*\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1c.proto_types.DeprecatedModel\"\xc6\x01\n\x1cUpcomingReferenceDeprecation\x12\x12\n\nmodel_name\x18\x01 \x01(\t\x12\x19\n\x11ref_model_package\x18\x02 \x01(\t\x12\x16\n\x0eref_model_name\x18\x03 \x01(\t\x12\x19\n\x11ref_model_version\x18\x04 \x01(\t\x12 \n\x18ref_model_latest_version\x18\x05 \x01(\t\x12\"\n\x1aref_model_deprecation_date\x18\x06 \x01(\t\"\x80\x01\n\x1fUpcomingReferenceDeprecationMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x37\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32).proto_types.UpcomingReferenceDeprecation\"\xbd\x01\n\x13\x44\x65precatedReference\x12\x12\n\nmodel_name\x18\x01 \x01(\t\x12\x19\n\x11ref_model_package\x18\x02 \x01(\t\x12\x16\n\x0eref_model_name\x18\x03 \x01(\t\x12\x19\n\x11ref_model_version\x18\x04 \x01(\t\x12 \n\x18ref_model_latest_version\x18\x05 \x01(\t\x12\"\n\x1aref_model_deprecation_date\x18\x06 \x01(\t\"n\n\x16\x44\x65precatedReferenceMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12.\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32 .proto_types.DeprecatedReference\"<\n$UnsupportedConstraintMaterialization\x12\x14\n\x0cmaterialized\x18\x01 \x01(\t\"\x90\x01\n\'UnsupportedConstraintMaterializationMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12?\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x31.proto_types.UnsupportedConstraintMaterialization\"M\n\x14ParseInlineNodeError\x12(\n\tnode_info\x18\x01 \x01(\x0b\x32\x15.proto_types.NodeInfo\x12\x0b\n\x03\x65xc\x18\x02 \x01(\t\"p\n\x17ParseInlineNodeErrorMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12/\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32!.proto_types.ParseInlineNodeError\"(\n\x19SemanticValidationFailure\x12\x0b\n\x03msg\x18\x02 \x01(\t\"z\n\x1cSemanticValidationFailureMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x34\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32&.proto_types.SemanticValidationFailure\"\x8a\x03\n\x19UnversionedBreakingChange\x12\x18\n\x10\x62reaking_changes\x18\x01 \x03(\t\x12\x12\n\nmodel_name\x18\x02 \x01(\t\x12\x17\n\x0fmodel_file_path\x18\x03 \x01(\t\x12\"\n\x1a\x63ontract_enforced_disabled\x18\x04 \x01(\x08\x12\x17\n\x0f\x63olumns_removed\x18\x05 \x03(\t\x12\x34\n\x13\x63olumn_type_changes\x18\x06 \x03(\x0b\x32\x17.proto_types.ColumnType\x12I\n\"enforced_column_constraint_removed\x18\x07 \x03(\x0b\x32\x1d.proto_types.ColumnConstraint\x12G\n!enforced_model_constraint_removed\x18\x08 \x03(\x0b\x32\x1c.proto_types.ModelConstraint\x12\x1f\n\x17materialization_changed\x18\t \x03(\t\"z\n\x1cUnversionedBreakingChangeMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x34\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32&.proto_types.UnversionedBreakingChange\"*\n\x14WarnStateTargetEqual\x12\x12\n\nstate_path\x18\x01 \x01(\t\"p\n\x17WarnStateTargetEqualMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12/\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32!.proto_types.WarnStateTargetEqual\"%\n\x16\x46reshnessConfigProblem\x12\x0b\n\x03msg\x18\x01 \x01(\t\"t\n\x19\x46reshnessConfigProblemMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x31\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32#.proto_types.FreshnessConfigProblem\"/\n\x1dGitSparseCheckoutSubdirectory\x12\x0e\n\x06subdir\x18\x01 \x01(\t\"\x82\x01\n GitSparseCheckoutSubdirectoryMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x38\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32*.proto_types.GitSparseCheckoutSubdirectory\"/\n\x1bGitProgressCheckoutRevision\x12\x10\n\x08revision\x18\x01 \x01(\t\"~\n\x1eGitProgressCheckoutRevisionMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x36\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32(.proto_types.GitProgressCheckoutRevision\"4\n%GitProgressUpdatingExistingDependency\x12\x0b\n\x03\x64ir\x18\x01 \x01(\t\"\x92\x01\n(GitProgressUpdatingExistingDependencyMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12@\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x32.proto_types.GitProgressUpdatingExistingDependency\".\n\x1fGitProgressPullingNewDependency\x12\x0b\n\x03\x64ir\x18\x01 \x01(\t\"\x86\x01\n\"GitProgressPullingNewDependencyMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12:\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32,.proto_types.GitProgressPullingNewDependency\"\x1d\n\x0eGitNothingToDo\x12\x0b\n\x03sha\x18\x01 \x01(\t\"d\n\x11GitNothingToDoMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12)\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1b.proto_types.GitNothingToDo\"E\n\x1fGitProgressUpdatedCheckoutRange\x12\x11\n\tstart_sha\x18\x01 \x01(\t\x12\x0f\n\x07\x65nd_sha\x18\x02 \x01(\t\"\x86\x01\n\"GitProgressUpdatedCheckoutRangeMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12:\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32,.proto_types.GitProgressUpdatedCheckoutRange\"*\n\x17GitProgressCheckedOutAt\x12\x0f\n\x07\x65nd_sha\x18\x01 \x01(\t\"v\n\x1aGitProgressCheckedOutAtMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x32\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32$.proto_types.GitProgressCheckedOutAt\")\n\x1aRegistryProgressGETRequest\x12\x0b\n\x03url\x18\x01 \x01(\t\"|\n\x1dRegistryProgressGETRequestMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x35\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\'.proto_types.RegistryProgressGETRequest\"=\n\x1bRegistryProgressGETResponse\x12\x0b\n\x03url\x18\x01 \x01(\t\x12\x11\n\tresp_code\x18\x02 \x01(\x05\"~\n\x1eRegistryProgressGETResponseMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x36\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32(.proto_types.RegistryProgressGETResponse\"_\n\x1dSelectorReportInvalidSelector\x12\x17\n\x0fvalid_selectors\x18\x01 \x01(\t\x12\x13\n\x0bspec_method\x18\x02 \x01(\t\x12\x10\n\x08raw_spec\x18\x03 \x01(\t\"\x82\x01\n SelectorReportInvalidSelectorMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x38\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32*.proto_types.SelectorReportInvalidSelector\"\x15\n\x13\x44\x65psNoPackagesFound\"n\n\x16\x44\x65psNoPackagesFoundMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12.\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32 .proto_types.DepsNoPackagesFound\"/\n\x17\x44\x65psStartPackageInstall\x12\x14\n\x0cpackage_name\x18\x01 \x01(\t\"v\n\x1a\x44\x65psStartPackageInstallMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x32\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32$.proto_types.DepsStartPackageInstall\"\'\n\x0f\x44\x65psInstallInfo\x12\x14\n\x0cversion_name\x18\x01 \x01(\t\"f\n\x12\x44\x65psInstallInfoMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12*\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1c.proto_types.DepsInstallInfo\"-\n\x13\x44\x65psUpdateAvailable\x12\x16\n\x0eversion_latest\x18\x01 \x01(\t\"n\n\x16\x44\x65psUpdateAvailableMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12.\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32 .proto_types.DepsUpdateAvailable\"\x0e\n\x0c\x44\x65psUpToDate\"`\n\x0f\x44\x65psUpToDateMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\'\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x19.proto_types.DepsUpToDate\",\n\x14\x44\x65psListSubdirectory\x12\x14\n\x0csubdirectory\x18\x01 \x01(\t\"p\n\x17\x44\x65psListSubdirectoryMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12/\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32!.proto_types.DepsListSubdirectory\".\n\x1a\x44\x65psNotifyUpdatesAvailable\x12\x10\n\x08packages\x18\x01 \x03(\t\"|\n\x1d\x44\x65psNotifyUpdatesAvailableMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x35\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\'.proto_types.DepsNotifyUpdatesAvailable\"1\n\x11RetryExternalCall\x12\x0f\n\x07\x61ttempt\x18\x01 \x01(\x05\x12\x0b\n\x03max\x18\x02 \x01(\x05\"j\n\x14RetryExternalCallMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12,\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1e.proto_types.RetryExternalCall\"#\n\x14RecordRetryException\x12\x0b\n\x03\x65xc\x18\x01 \x01(\t\"p\n\x17RecordRetryExceptionMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12/\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32!.proto_types.RecordRetryException\".\n\x1fRegistryIndexProgressGETRequest\x12\x0b\n\x03url\x18\x01 \x01(\t\"\x86\x01\n\"RegistryIndexProgressGETRequestMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12:\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32,.proto_types.RegistryIndexProgressGETRequest\"B\n RegistryIndexProgressGETResponse\x12\x0b\n\x03url\x18\x01 \x01(\t\x12\x11\n\tresp_code\x18\x02 \x01(\x05\"\x88\x01\n#RegistryIndexProgressGETResponseMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12;\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32-.proto_types.RegistryIndexProgressGETResponse\"2\n\x1eRegistryResponseUnexpectedType\x12\x10\n\x08response\x18\x01 \x01(\t\"\x84\x01\n!RegistryResponseUnexpectedTypeMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x39\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32+.proto_types.RegistryResponseUnexpectedType\"2\n\x1eRegistryResponseMissingTopKeys\x12\x10\n\x08response\x18\x01 \x01(\t\"\x84\x01\n!RegistryResponseMissingTopKeysMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x39\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32+.proto_types.RegistryResponseMissingTopKeys\"5\n!RegistryResponseMissingNestedKeys\x12\x10\n\x08response\x18\x01 \x01(\t\"\x8a\x01\n$RegistryResponseMissingNestedKeysMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12<\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32..proto_types.RegistryResponseMissingNestedKeys\"3\n\x1fRegistryResponseExtraNestedKeys\x12\x10\n\x08response\x18\x01 \x01(\t\"\x86\x01\n\"RegistryResponseExtraNestedKeysMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12:\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32,.proto_types.RegistryResponseExtraNestedKeys\"(\n\x18\x44\x65psSetDownloadDirectory\x12\x0c\n\x04path\x18\x01 \x01(\t\"x\n\x1b\x44\x65psSetDownloadDirectoryMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x33\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32%.proto_types.DepsSetDownloadDirectory\"-\n\x0c\x44\x65psUnpinned\x12\x10\n\x08revision\x18\x01 \x01(\t\x12\x0b\n\x03git\x18\x02 \x01(\t\"`\n\x0f\x44\x65psUnpinnedMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\'\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x19.proto_types.DepsUnpinned\"/\n\x1bNoNodesForSelectionCriteria\x12\x10\n\x08spec_raw\x18\x01 \x01(\t\"~\n\x1eNoNodesForSelectionCriteriaMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x36\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32(.proto_types.NoNodesForSelectionCriteria\")\n\x10\x44\x65psLockUpdating\x12\x15\n\rlock_filepath\x18\x01 \x01(\t\"h\n\x13\x44\x65psLockUpdatingMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12+\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1d.proto_types.DepsLockUpdating\"R\n\x0e\x44\x65psAddPackage\x12\x14\n\x0cpackage_name\x18\x01 \x01(\t\x12\x0f\n\x07version\x18\x02 \x01(\t\x12\x19\n\x11packages_filepath\x18\x03 \x01(\t\"d\n\x11\x44\x65psAddPackageMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12)\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1b.proto_types.DepsAddPackage\"\xa7\x01\n\x19\x44\x65psFoundDuplicatePackage\x12S\n\x0fremoved_package\x18\x01 \x03(\x0b\x32:.proto_types.DepsFoundDuplicatePackage.RemovedPackageEntry\x1a\x35\n\x13RemovedPackageEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"z\n\x1c\x44\x65psFoundDuplicatePackageMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x34\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32&.proto_types.DepsFoundDuplicatePackage\"$\n\x12\x44\x65psVersionMissing\x12\x0e\n\x06source\x18\x01 \x01(\t\"l\n\x15\x44\x65psVersionMissingMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12-\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1f.proto_types.DepsVersionMissing\"/\n\x17\x44\x65psScrubbedPackageName\x12\x14\n\x0cpackage_name\x18\x01 \x01(\t\"v\n\x1a\x44\x65psScrubbedPackageNameMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x32\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32$.proto_types.DepsScrubbedPackageName\"*\n\x1bRunningOperationCaughtError\x12\x0b\n\x03\x65xc\x18\x01 \x01(\t\"~\n\x1eRunningOperationCaughtErrorMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x36\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32(.proto_types.RunningOperationCaughtError\"\x11\n\x0f\x43ompileComplete\"f\n\x12\x43ompileCompleteMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12*\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1c.proto_types.CompileComplete\"\x18\n\x16\x46reshnessCheckComplete\"t\n\x19\x46reshnessCheckCompleteMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x31\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32#.proto_types.FreshnessCheckComplete\"\x1c\n\nSeedHeader\x12\x0e\n\x06header\x18\x01 \x01(\t\"\\\n\rSeedHeaderMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12%\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x17.proto_types.SeedHeader\"]\n\x12SQLRunnerException\x12\x0b\n\x03\x65xc\x18\x01 \x01(\t\x12\x10\n\x08\x65xc_info\x18\x02 \x01(\t\x12(\n\tnode_info\x18\x03 \x01(\x0b\x32\x15.proto_types.NodeInfo\"l\n\x15SQLRunnerExceptionMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12-\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1f.proto_types.SQLRunnerException\"\xa8\x01\n\rLogTestResult\x12(\n\tnode_info\x18\x01 \x01(\x0b\x32\x15.proto_types.NodeInfo\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x0e\n\x06status\x18\x03 \x01(\t\x12\r\n\x05index\x18\x04 \x01(\x05\x12\x12\n\nnum_models\x18\x05 \x01(\x05\x12\x16\n\x0e\x65xecution_time\x18\x06 \x01(\x02\x12\x14\n\x0cnum_failures\x18\x07 \x01(\x05\"b\n\x10LogTestResultMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12(\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1a.proto_types.LogTestResult\"k\n\x0cLogStartLine\x12(\n\tnode_info\x18\x01 \x01(\x0b\x32\x15.proto_types.NodeInfo\x12\x13\n\x0b\x64\x65scription\x18\x02 \x01(\t\x12\r\n\x05index\x18\x03 \x01(\x05\x12\r\n\x05total\x18\x04 \x01(\x05\"`\n\x0fLogStartLineMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\'\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x19.proto_types.LogStartLine\"\x95\x01\n\x0eLogModelResult\x12(\n\tnode_info\x18\x01 \x01(\x0b\x32\x15.proto_types.NodeInfo\x12\x13\n\x0b\x64\x65scription\x18\x02 \x01(\t\x12\x0e\n\x06status\x18\x03 \x01(\t\x12\r\n\x05index\x18\x04 \x01(\x05\x12\r\n\x05total\x18\x05 \x01(\x05\x12\x16\n\x0e\x65xecution_time\x18\x06 \x01(\x02\"d\n\x11LogModelResultMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12)\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1b.proto_types.LogModelResult\"\x92\x02\n\x11LogSnapshotResult\x12(\n\tnode_info\x18\x01 \x01(\x0b\x32\x15.proto_types.NodeInfo\x12\x13\n\x0b\x64\x65scription\x18\x02 \x01(\t\x12\x0e\n\x06status\x18\x03 \x01(\t\x12\r\n\x05index\x18\x04 \x01(\x05\x12\r\n\x05total\x18\x05 \x01(\x05\x12\x16\n\x0e\x65xecution_time\x18\x06 \x01(\x02\x12\x34\n\x03\x63\x66g\x18\x07 \x03(\x0b\x32\'.proto_types.LogSnapshotResult.CfgEntry\x12\x16\n\x0eresult_message\x18\x08 \x01(\t\x1a*\n\x08\x43\x66gEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"j\n\x14LogSnapshotResultMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12,\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1e.proto_types.LogSnapshotResult\"\xb9\x01\n\rLogSeedResult\x12(\n\tnode_info\x18\x01 \x01(\x0b\x32\x15.proto_types.NodeInfo\x12\x0e\n\x06status\x18\x02 \x01(\t\x12\x16\n\x0eresult_message\x18\x03 \x01(\t\x12\r\n\x05index\x18\x04 \x01(\x05\x12\r\n\x05total\x18\x05 \x01(\x05\x12\x16\n\x0e\x65xecution_time\x18\x06 \x01(\x02\x12\x0e\n\x06schema\x18\x07 \x01(\t\x12\x10\n\x08relation\x18\x08 \x01(\t\"b\n\x10LogSeedResultMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12(\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1a.proto_types.LogSeedResult\"\xad\x01\n\x12LogFreshnessResult\x12\x0e\n\x06status\x18\x01 \x01(\t\x12(\n\tnode_info\x18\x02 \x01(\x0b\x32\x15.proto_types.NodeInfo\x12\r\n\x05index\x18\x03 \x01(\x05\x12\r\n\x05total\x18\x04 \x01(\x05\x12\x16\n\x0e\x65xecution_time\x18\x05 \x01(\x02\x12\x13\n\x0bsource_name\x18\x06 \x01(\t\x12\x12\n\ntable_name\x18\x07 \x01(\t\"l\n\x15LogFreshnessResultMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12-\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1f.proto_types.LogFreshnessResult\"\"\n\rLogCancelLine\x12\x11\n\tconn_name\x18\x01 \x01(\t\"b\n\x10LogCancelLineMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12(\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1a.proto_types.LogCancelLine\"\x1f\n\x0f\x44\x65\x66\x61ultSelector\x12\x0c\n\x04name\x18\x01 \x01(\t\"f\n\x12\x44\x65\x66\x61ultSelectorMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12*\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1c.proto_types.DefaultSelector\"5\n\tNodeStart\x12(\n\tnode_info\x18\x01 \x01(\x0b\x32\x15.proto_types.NodeInfo\"Z\n\x0cNodeStartMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12$\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x16.proto_types.NodeStart\"g\n\x0cNodeFinished\x12(\n\tnode_info\x18\x01 \x01(\x0b\x32\x15.proto_types.NodeInfo\x12-\n\nrun_result\x18\x02 \x01(\x0b\x32\x19.proto_types.RunResultMsg\"`\n\x0fNodeFinishedMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\'\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x19.proto_types.NodeFinished\"+\n\x1bQueryCancelationUnsupported\x12\x0c\n\x04type\x18\x01 \x01(\t\"~\n\x1eQueryCancelationUnsupportedMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x36\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32(.proto_types.QueryCancelationUnsupported\"O\n\x0f\x43oncurrencyLine\x12\x13\n\x0bnum_threads\x18\x01 \x01(\x05\x12\x13\n\x0btarget_name\x18\x02 \x01(\t\x12\x12\n\nnode_count\x18\x03 \x01(\x05\"f\n\x12\x43oncurrencyLineMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12*\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1c.proto_types.ConcurrencyLine\"E\n\x19WritingInjectedSQLForNode\x12(\n\tnode_info\x18\x01 \x01(\x0b\x32\x15.proto_types.NodeInfo\"z\n\x1cWritingInjectedSQLForNodeMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x34\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32&.proto_types.WritingInjectedSQLForNode\"9\n\rNodeCompiling\x12(\n\tnode_info\x18\x01 \x01(\x0b\x32\x15.proto_types.NodeInfo\"b\n\x10NodeCompilingMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12(\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1a.proto_types.NodeCompiling\"9\n\rNodeExecuting\x12(\n\tnode_info\x18\x01 \x01(\x0b\x32\x15.proto_types.NodeInfo\"b\n\x10NodeExecutingMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12(\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1a.proto_types.NodeExecuting\"m\n\x10LogHookStartLine\x12(\n\tnode_info\x18\x01 \x01(\x0b\x32\x15.proto_types.NodeInfo\x12\x11\n\tstatement\x18\x02 \x01(\t\x12\r\n\x05index\x18\x03 \x01(\x05\x12\r\n\x05total\x18\x04 \x01(\x05\"h\n\x13LogHookStartLineMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12+\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1d.proto_types.LogHookStartLine\"\x93\x01\n\x0eLogHookEndLine\x12(\n\tnode_info\x18\x01 \x01(\x0b\x32\x15.proto_types.NodeInfo\x12\x11\n\tstatement\x18\x02 \x01(\t\x12\x0e\n\x06status\x18\x03 \x01(\t\x12\r\n\x05index\x18\x04 \x01(\x05\x12\r\n\x05total\x18\x05 \x01(\x05\x12\x16\n\x0e\x65xecution_time\x18\x06 \x01(\x02\"d\n\x11LogHookEndLineMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12)\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1b.proto_types.LogHookEndLine\"\x93\x01\n\x0fSkippingDetails\x12(\n\tnode_info\x18\x01 \x01(\x0b\x32\x15.proto_types.NodeInfo\x12\x15\n\rresource_type\x18\x02 \x01(\t\x12\x0e\n\x06schema\x18\x03 \x01(\t\x12\x11\n\tnode_name\x18\x04 \x01(\t\x12\r\n\x05index\x18\x05 \x01(\x05\x12\r\n\x05total\x18\x06 \x01(\x05\"f\n\x12SkippingDetailsMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12*\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1c.proto_types.SkippingDetails\"\r\n\x0bNothingToDo\"^\n\x0eNothingToDoMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12&\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x18.proto_types.NothingToDo\",\n\x1dRunningOperationUncaughtError\x12\x0b\n\x03\x65xc\x18\x01 \x01(\t\"\x82\x01\n RunningOperationUncaughtErrorMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x38\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32*.proto_types.RunningOperationUncaughtError\"\x93\x01\n\x0c\x45ndRunResult\x12*\n\x07results\x18\x01 \x03(\x0b\x32\x19.proto_types.RunResultMsg\x12\x14\n\x0c\x65lapsed_time\x18\x02 \x01(\x02\x12\x30\n\x0cgenerated_at\x18\x03 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x0f\n\x07success\x18\x04 \x01(\x08\"`\n\x0f\x45ndRunResultMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\'\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x19.proto_types.EndRunResult\"\x11\n\x0fNoNodesSelected\"f\n\x12NoNodesSelectedMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12*\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1c.proto_types.NoNodesSelected\"w\n\x10\x43ommandCompleted\x12\x0f\n\x07\x63ommand\x18\x01 \x01(\t\x12\x0f\n\x07success\x18\x02 \x01(\x08\x12\x30\n\x0c\x63ompleted_at\x18\x03 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x0f\n\x07\x65lapsed\x18\x04 \x01(\x02\"h\n\x13\x43ommandCompletedMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12+\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1d.proto_types.CommandCompleted\"k\n\x08ShowNode\x12\x11\n\tnode_name\x18\x01 \x01(\t\x12\x0f\n\x07preview\x18\x02 \x01(\t\x12\x11\n\tis_inline\x18\x03 \x01(\x08\x12\x15\n\routput_format\x18\x04 \x01(\t\x12\x11\n\tunique_id\x18\x05 \x01(\t\"X\n\x0bShowNodeMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12#\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x15.proto_types.ShowNode\"p\n\x0c\x43ompiledNode\x12\x11\n\tnode_name\x18\x01 \x01(\t\x12\x10\n\x08\x63ompiled\x18\x02 \x01(\t\x12\x11\n\tis_inline\x18\x03 \x01(\x08\x12\x15\n\routput_format\x18\x04 \x01(\t\x12\x11\n\tunique_id\x18\x05 \x01(\t\"`\n\x0f\x43ompiledNodeMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\'\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x19.proto_types.CompiledNode\"b\n\x17\x43\x61tchableExceptionOnRun\x12(\n\tnode_info\x18\x01 \x01(\x0b\x32\x15.proto_types.NodeInfo\x12\x0b\n\x03\x65xc\x18\x02 \x01(\t\x12\x10\n\x08\x65xc_info\x18\x03 \x01(\t\"v\n\x1a\x43\x61tchableExceptionOnRunMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x32\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32$.proto_types.CatchableExceptionOnRun\"_\n\x12InternalErrorOnRun\x12\x12\n\nbuild_path\x18\x01 \x01(\t\x12\x0b\n\x03\x65xc\x18\x02 \x01(\t\x12(\n\tnode_info\x18\x03 \x01(\x0b\x32\x15.proto_types.NodeInfo\"l\n\x15InternalErrorOnRunMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12-\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1f.proto_types.InternalErrorOnRun\"u\n\x15GenericExceptionOnRun\x12\x12\n\nbuild_path\x18\x01 \x01(\t\x12\x11\n\tunique_id\x18\x02 \x01(\t\x12\x0b\n\x03\x65xc\x18\x03 \x01(\t\x12(\n\tnode_info\x18\x04 \x01(\x0b\x32\x15.proto_types.NodeInfo\"r\n\x18GenericExceptionOnRunMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x30\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\".proto_types.GenericExceptionOnRun\"N\n\x1aNodeConnectionReleaseError\x12\x11\n\tnode_name\x18\x01 \x01(\t\x12\x0b\n\x03\x65xc\x18\x02 \x01(\t\x12\x10\n\x08\x65xc_info\x18\x03 \x01(\t\"|\n\x1dNodeConnectionReleaseErrorMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x35\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\'.proto_types.NodeConnectionReleaseError\"\x1f\n\nFoundStats\x12\x11\n\tstat_line\x18\x01 \x01(\t\"\\\n\rFoundStatsMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12%\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x17.proto_types.FoundStats\"\x17\n\x15MainKeyboardInterrupt\"r\n\x18MainKeyboardInterruptMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x30\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\".proto_types.MainKeyboardInterrupt\"#\n\x14MainEncounteredError\x12\x0b\n\x03\x65xc\x18\x01 \x01(\t\"p\n\x17MainEncounteredErrorMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12/\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32!.proto_types.MainEncounteredError\"%\n\x0eMainStackTrace\x12\x13\n\x0bstack_trace\x18\x01 \x01(\t\"d\n\x11MainStackTraceMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12)\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1b.proto_types.MainStackTrace\"@\n\x13SystemCouldNotWrite\x12\x0c\n\x04path\x18\x01 \x01(\t\x12\x0e\n\x06reason\x18\x02 \x01(\t\x12\x0b\n\x03\x65xc\x18\x03 \x01(\t\"n\n\x16SystemCouldNotWriteMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12.\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32 .proto_types.SystemCouldNotWrite\"!\n\x12SystemExecutingCmd\x12\x0b\n\x03\x63md\x18\x01 \x03(\t\"l\n\x15SystemExecutingCmdMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12-\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1f.proto_types.SystemExecutingCmd\"\x1c\n\x0cSystemStdOut\x12\x0c\n\x04\x62msg\x18\x01 \x01(\t\"`\n\x0fSystemStdOutMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\'\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x19.proto_types.SystemStdOut\"\x1c\n\x0cSystemStdErr\x12\x0c\n\x04\x62msg\x18\x01 \x01(\t\"`\n\x0fSystemStdErrMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\'\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x19.proto_types.SystemStdErr\",\n\x16SystemReportReturnCode\x12\x12\n\nreturncode\x18\x01 \x01(\x05\"t\n\x19SystemReportReturnCodeMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x31\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32#.proto_types.SystemReportReturnCode\"p\n\x13TimingInfoCollected\x12(\n\tnode_info\x18\x01 \x01(\x0b\x32\x15.proto_types.NodeInfo\x12/\n\x0btiming_info\x18\x02 \x01(\x0b\x32\x1a.proto_types.TimingInfoMsg\"n\n\x16TimingInfoCollectedMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12.\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32 .proto_types.TimingInfoCollected\"&\n\x12LogDebugStackTrace\x12\x10\n\x08\x65xc_info\x18\x01 \x01(\t\"l\n\x15LogDebugStackTraceMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12-\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1f.proto_types.LogDebugStackTrace\"\x1e\n\x0e\x43heckCleanPath\x12\x0c\n\x04path\x18\x01 \x01(\t\"d\n\x11\x43heckCleanPathMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12)\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1b.proto_types.CheckCleanPath\" \n\x10\x43onfirmCleanPath\x12\x0c\n\x04path\x18\x01 \x01(\t\"h\n\x13\x43onfirmCleanPathMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12+\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1d.proto_types.ConfirmCleanPath\"\"\n\x12ProtectedCleanPath\x12\x0c\n\x04path\x18\x01 \x01(\t\"l\n\x15ProtectedCleanPathMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12-\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1f.proto_types.ProtectedCleanPath\"\x14\n\x12\x46inishedCleanPaths\"l\n\x15\x46inishedCleanPathsMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12-\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1f.proto_types.FinishedCleanPaths\"5\n\x0bOpenCommand\x12\x10\n\x08open_cmd\x18\x01 \x01(\t\x12\x14\n\x0cprofiles_dir\x18\x02 \x01(\t\"^\n\x0eOpenCommandMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12&\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x18.proto_types.OpenCommand\"\x19\n\nFormatting\x12\x0b\n\x03msg\x18\x01 \x01(\t\"\\\n\rFormattingMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12%\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x17.proto_types.Formatting\"0\n\x0fServingDocsPort\x12\x0f\n\x07\x61\x64\x64ress\x18\x01 \x01(\t\x12\x0c\n\x04port\x18\x02 \x01(\x05\"f\n\x12ServingDocsPortMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12*\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1c.proto_types.ServingDocsPort\"%\n\x15ServingDocsAccessInfo\x12\x0c\n\x04port\x18\x01 \x01(\t\"r\n\x18ServingDocsAccessInfoMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x30\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\".proto_types.ServingDocsAccessInfo\"\x15\n\x13ServingDocsExitInfo\"n\n\x16ServingDocsExitInfoMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12.\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32 .proto_types.ServingDocsExitInfo\"J\n\x10RunResultWarning\x12\x15\n\rresource_type\x18\x01 \x01(\t\x12\x11\n\tnode_name\x18\x02 \x01(\t\x12\x0c\n\x04path\x18\x03 \x01(\t\"h\n\x13RunResultWarningMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12+\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1d.proto_types.RunResultWarning\"J\n\x10RunResultFailure\x12\x15\n\rresource_type\x18\x01 \x01(\t\x12\x11\n\tnode_name\x18\x02 \x01(\t\x12\x0c\n\x04path\x18\x03 \x01(\t\"h\n\x13RunResultFailureMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12+\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1d.proto_types.RunResultFailure\"k\n\tStatsLine\x12\x30\n\x05stats\x18\x01 \x03(\x0b\x32!.proto_types.StatsLine.StatsEntry\x1a,\n\nStatsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x05:\x02\x38\x01\"Z\n\x0cStatsLineMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12$\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x16.proto_types.StatsLine\"\x1d\n\x0eRunResultError\x12\x0b\n\x03msg\x18\x01 \x01(\t\"d\n\x11RunResultErrorMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12)\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1b.proto_types.RunResultError\")\n\x17RunResultErrorNoMessage\x12\x0e\n\x06status\x18\x01 \x01(\t\"v\n\x1aRunResultErrorNoMessageMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x32\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32$.proto_types.RunResultErrorNoMessage\"\x1f\n\x0fSQLCompiledPath\x12\x0c\n\x04path\x18\x01 \x01(\t\"f\n\x12SQLCompiledPathMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12*\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1c.proto_types.SQLCompiledPath\"-\n\x14\x43heckNodeTestFailure\x12\x15\n\rrelation_name\x18\x01 \x01(\t\"p\n\x17\x43heckNodeTestFailureMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12/\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32!.proto_types.CheckNodeTestFailure\"W\n\x0f\x45ndOfRunSummary\x12\x12\n\nnum_errors\x18\x01 \x01(\x05\x12\x14\n\x0cnum_warnings\x18\x02 \x01(\x05\x12\x1a\n\x12keyboard_interrupt\x18\x03 \x01(\x08\"f\n\x12\x45ndOfRunSummaryMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12*\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1c.proto_types.EndOfRunSummary\"U\n\x13LogSkipBecauseError\x12\x0e\n\x06schema\x18\x01 \x01(\t\x12\x10\n\x08relation\x18\x02 \x01(\t\x12\r\n\x05index\x18\x03 \x01(\x05\x12\r\n\x05total\x18\x04 \x01(\x05\"n\n\x16LogSkipBecauseErrorMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12.\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32 .proto_types.LogSkipBecauseError\"\x14\n\x12\x45nsureGitInstalled\"l\n\x15\x45nsureGitInstalledMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12-\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1f.proto_types.EnsureGitInstalled\"\x1a\n\x18\x44\x65psCreatingLocalSymlink\"x\n\x1b\x44\x65psCreatingLocalSymlinkMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x33\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32%.proto_types.DepsCreatingLocalSymlink\"\x19\n\x17\x44\x65psSymlinkNotAvailable\"v\n\x1a\x44\x65psSymlinkNotAvailableMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x32\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32$.proto_types.DepsSymlinkNotAvailable\"\x11\n\x0f\x44isableTracking\"f\n\x12\x44isableTrackingMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12*\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1c.proto_types.DisableTracking\"\x1e\n\x0cSendingEvent\x12\x0e\n\x06kwargs\x18\x01 \x01(\t\"`\n\x0fSendingEventMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\'\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x19.proto_types.SendingEvent\"\x12\n\x10SendEventFailure\"h\n\x13SendEventFailureMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12+\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1d.proto_types.SendEventFailure\"\r\n\x0b\x46lushEvents\"^\n\x0e\x46lushEventsMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12&\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x18.proto_types.FlushEvents\"\x14\n\x12\x46lushEventsFailure\"l\n\x15\x46lushEventsFailureMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12-\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1f.proto_types.FlushEventsFailure\"-\n\x19TrackingInitializeFailure\x12\x10\n\x08\x65xc_info\x18\x01 \x01(\t\"z\n\x1cTrackingInitializeFailureMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x34\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32&.proto_types.TrackingInitializeFailure\"&\n\x17RunResultWarningMessage\x12\x0b\n\x03msg\x18\x01 \x01(\t\"v\n\x1aRunResultWarningMessageMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x32\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32$.proto_types.RunResultWarningMessage\"\x1a\n\x0b\x44\x65\x62ugCmdOut\x12\x0b\n\x03msg\x18\x01 \x01(\t\"^\n\x0e\x44\x65\x62ugCmdOutMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12&\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x18.proto_types.DebugCmdOut\"\x1d\n\x0e\x44\x65\x62ugCmdResult\x12\x0b\n\x03msg\x18\x01 \x01(\t\"d\n\x11\x44\x65\x62ugCmdResultMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12)\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1b.proto_types.DebugCmdResult\"\x19\n\nListCmdOut\x12\x0b\n\x03msg\x18\x01 \x01(\t\"\\\n\rListCmdOutMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12%\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x17.proto_types.ListCmdOut\"\x13\n\x04Note\x12\x0b\n\x03msg\x18\x01 \x01(\t\"P\n\x07NoteMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12\x1f\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x11.proto_types.Note\"\xec\x01\n\x0eResourceReport\x12\x14\n\x0c\x63ommand_name\x18\x02 \x01(\t\x12\x17\n\x0f\x63ommand_success\x18\x03 \x01(\x08\x12\x1f\n\x17\x63ommand_wall_clock_time\x18\x04 \x01(\x02\x12\x19\n\x11process_user_time\x18\x05 \x01(\x02\x12\x1b\n\x13process_kernel_time\x18\x06 \x01(\x02\x12\x1b\n\x13process_mem_max_rss\x18\x07 \x01(\x03\x12\x19\n\x11process_in_blocks\x18\x08 \x01(\x03\x12\x1a\n\x12process_out_blocks\x18\t \x01(\x03\"d\n\x11ResourceReportMsg\x12$\n\x04info\x18\x01 \x01(\x0b\x32\x16.proto_types.EventInfo\x12)\n\x04\x64\x61ta\x18\x02 \x01(\x0b\x32\x1b.proto_types.ResourceReportb\x06proto3')
 
-_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
-_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'types_pb2', globals())
+_globals = globals()
+_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
+_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'types_pb2', _globals)
 if _descriptor._USE_C_DESCRIPTORS == False:
-
   DESCRIPTOR._options = None
-  _EVENTINFO_EXTRAENTRY._options = None
-  _EVENTINFO_EXTRAENTRY._serialized_options = b'8\001'
-  _MAINREPORTARGS_ARGSENTRY._options = None
-  _MAINREPORTARGS_ARGSENTRY._serialized_options = b'8\001'
-  _CACHEDUMPGRAPH_DUMPENTRY._options = None
-  _CACHEDUMPGRAPH_DUMPENTRY._serialized_options = b'8\001'
-  _PARTIALPARSINGERROR_EXCINFOENTRY._options = None
-  _PARTIALPARSINGERROR_EXCINFOENTRY._serialized_options = b'8\001'
-  _DEPSFOUNDDUPLICATEPACKAGE_REMOVEDPACKAGEENTRY._options = None
-  _DEPSFOUNDDUPLICATEPACKAGE_REMOVEDPACKAGEENTRY._serialized_options = b'8\001'
-  _LOGSNAPSHOTRESULT_CFGENTRY._options = None
-  _LOGSNAPSHOTRESULT_CFGENTRY._serialized_options = b'8\001'
-  _STATSLINE_STATSENTRY._options = None
-  _STATSLINE_STATSENTRY._serialized_options = b'8\001'
-  _EVENTINFO._serialized_start=92
-  _EVENTINFO._serialized_end=365
-  _EVENTINFO_EXTRAENTRY._serialized_start=321
-  _EVENTINFO_EXTRAENTRY._serialized_end=365
-  _TIMINGINFOMSG._serialized_start=367
-  _TIMINGINFOMSG._serialized_end=494
-  _NODERELATION._serialized_start=496
-  _NODERELATION._serialized_end=582
-  _NODEINFO._serialized_start=585
-  _NODEINFO._serialized_end=858
-  _RUNRESULTMSG._serialized_start=861
-  _RUNRESULTMSG._serialized_end=1070
-  _REFERENCEKEYMSG._serialized_start=1072
-  _REFERENCEKEYMSG._serialized_end=1143
-  _COLUMNTYPE._serialized_start=1145
-  _COLUMNTYPE._serialized_end=1237
-  _COLUMNCONSTRAINT._serialized_start=1239
-  _COLUMNCONSTRAINT._serialized_end=1328
-  _MODELCONSTRAINT._serialized_start=1330
-  _MODELCONSTRAINT._serialized_end=1414
-  _GENERICMESSAGE._serialized_start=1416
-  _GENERICMESSAGE._serialized_end=1470
-  _MAINREPORTVERSION._serialized_start=1472
-  _MAINREPORTVERSION._serialized_end=1529
-  _MAINREPORTVERSIONMSG._serialized_start=1531
-  _MAINREPORTVERSIONMSG._serialized_end=1637
-  _MAINREPORTARGS._serialized_start=1639
-  _MAINREPORTARGS._serialized_end=1753
-  _MAINREPORTARGS_ARGSENTRY._serialized_start=1710
-  _MAINREPORTARGS_ARGSENTRY._serialized_end=1753
-  _MAINREPORTARGSMSG._serialized_start=1755
-  _MAINREPORTARGSMSG._serialized_end=1855
-  _MAINTRACKINGUSERSTATE._serialized_start=1857
-  _MAINTRACKINGUSERSTATE._serialized_end=1900
-  _MAINTRACKINGUSERSTATEMSG._serialized_start=1902
-  _MAINTRACKINGUSERSTATEMSG._serialized_end=2016
-  _MERGEDFROMSTATE._serialized_start=2018
-  _MERGEDFROMSTATE._serialized_end=2071
-  _MERGEDFROMSTATEMSG._serialized_start=2073
-  _MERGEDFROMSTATEMSG._serialized_end=2175
-  _MISSINGPROFILETARGET._serialized_start=2177
-  _MISSINGPROFILETARGET._serialized_end=2242
-  _MISSINGPROFILETARGETMSG._serialized_start=2244
-  _MISSINGPROFILETARGETMSG._serialized_end=2356
-  _INVALIDOPTIONYAML._serialized_start=2358
-  _INVALIDOPTIONYAML._serialized_end=2398
-  _INVALIDOPTIONYAMLMSG._serialized_start=2400
-  _INVALIDOPTIONYAMLMSG._serialized_end=2506
-  _LOGDBTPROJECTERROR._serialized_start=2508
-  _LOGDBTPROJECTERROR._serialized_end=2541
-  _LOGDBTPROJECTERRORMSG._serialized_start=2543
-  _LOGDBTPROJECTERRORMSG._serialized_end=2651
-  _LOGDBTPROFILEERROR._serialized_start=2653
-  _LOGDBTPROFILEERROR._serialized_end=2704
-  _LOGDBTPROFILEERRORMSG._serialized_start=2706
-  _LOGDBTPROFILEERRORMSG._serialized_end=2814
-  _STARTERPROJECTPATH._serialized_start=2816
-  _STARTERPROJECTPATH._serialized_end=2849
-  _STARTERPROJECTPATHMSG._serialized_start=2851
-  _STARTERPROJECTPATHMSG._serialized_end=2959
-  _CONFIGFOLDERDIRECTORY._serialized_start=2961
-  _CONFIGFOLDERDIRECTORY._serialized_end=2997
-  _CONFIGFOLDERDIRECTORYMSG._serialized_start=2999
-  _CONFIGFOLDERDIRECTORYMSG._serialized_end=3113
-  _NOSAMPLEPROFILEFOUND._serialized_start=3115
-  _NOSAMPLEPROFILEFOUND._serialized_end=3154
-  _NOSAMPLEPROFILEFOUNDMSG._serialized_start=3156
-  _NOSAMPLEPROFILEFOUNDMSG._serialized_end=3268
-  _PROFILEWRITTENWITHSAMPLE._serialized_start=3270
-  _PROFILEWRITTENWITHSAMPLE._serialized_end=3324
-  _PROFILEWRITTENWITHSAMPLEMSG._serialized_start=3326
-  _PROFILEWRITTENWITHSAMPLEMSG._serialized_end=3446
-  _PROFILEWRITTENWITHTARGETTEMPLATEYAML._serialized_start=3448
-  _PROFILEWRITTENWITHTARGETTEMPLATEYAML._serialized_end=3514
-  _PROFILEWRITTENWITHTARGETTEMPLATEYAMLMSG._serialized_start=3517
-  _PROFILEWRITTENWITHTARGETTEMPLATEYAMLMSG._serialized_end=3661
-  _PROFILEWRITTENWITHPROJECTTEMPLATEYAML._serialized_start=3663
-  _PROFILEWRITTENWITHPROJECTTEMPLATEYAML._serialized_end=3730
-  _PROFILEWRITTENWITHPROJECTTEMPLATEYAMLMSG._serialized_start=3733
-  _PROFILEWRITTENWITHPROJECTTEMPLATEYAMLMSG._serialized_end=3879
-  _SETTINGUPPROFILE._serialized_start=3881
-  _SETTINGUPPROFILE._serialized_end=3899
-  _SETTINGUPPROFILEMSG._serialized_start=3901
-  _SETTINGUPPROFILEMSG._serialized_end=4005
-  _INVALIDPROFILETEMPLATEYAML._serialized_start=4007
-  _INVALIDPROFILETEMPLATEYAML._serialized_end=4035
-  _INVALIDPROFILETEMPLATEYAMLMSG._serialized_start=4037
-  _INVALIDPROFILETEMPLATEYAMLMSG._serialized_end=4161
-  _PROJECTNAMEALREADYEXISTS._serialized_start=4163
-  _PROJECTNAMEALREADYEXISTS._serialized_end=4203
-  _PROJECTNAMEALREADYEXISTSMSG._serialized_start=4205
-  _PROJECTNAMEALREADYEXISTSMSG._serialized_end=4325
-  _PROJECTCREATED._serialized_start=4327
-  _PROJECTCREATED._serialized_end=4402
-  _PROJECTCREATEDMSG._serialized_start=4404
-  _PROJECTCREATEDMSG._serialized_end=4504
-  _PACKAGEREDIRECTDEPRECATION._serialized_start=4506
-  _PACKAGEREDIRECTDEPRECATION._serialized_end=4570
-  _PACKAGEREDIRECTDEPRECATIONMSG._serialized_start=4572
-  _PACKAGEREDIRECTDEPRECATIONMSG._serialized_end=4696
-  _PACKAGEINSTALLPATHDEPRECATION._serialized_start=4698
-  _PACKAGEINSTALLPATHDEPRECATION._serialized_end=4729
-  _PACKAGEINSTALLPATHDEPRECATIONMSG._serialized_start=4732
-  _PACKAGEINSTALLPATHDEPRECATIONMSG._serialized_end=4862
-  _CONFIGSOURCEPATHDEPRECATION._serialized_start=4864
-  _CONFIGSOURCEPATHDEPRECATION._serialized_end=4936
-  _CONFIGSOURCEPATHDEPRECATIONMSG._serialized_start=4938
-  _CONFIGSOURCEPATHDEPRECATIONMSG._serialized_end=5064
-  _CONFIGDATAPATHDEPRECATION._serialized_start=5066
-  _CONFIGDATAPATHDEPRECATION._serialized_end=5136
-  _CONFIGDATAPATHDEPRECATIONMSG._serialized_start=5138
-  _CONFIGDATAPATHDEPRECATIONMSG._serialized_end=5260
-  _ADAPTERDEPRECATIONWARNING._serialized_start=5262
-  _ADAPTERDEPRECATIONWARNING._serialized_end=5325
-  _ADAPTERDEPRECATIONWARNINGMSG._serialized_start=5327
-  _ADAPTERDEPRECATIONWARNINGMSG._serialized_end=5449
-  _METRICATTRIBUTESRENAMED._serialized_start=5451
-  _METRICATTRIBUTESRENAMED._serialized_end=5497
-  _METRICATTRIBUTESRENAMEDMSG._serialized_start=5499
-  _METRICATTRIBUTESRENAMEDMSG._serialized_end=5617
-  _EXPOSURENAMEDEPRECATION._serialized_start=5619
-  _EXPOSURENAMEDEPRECATION._serialized_end=5662
-  _EXPOSURENAMEDEPRECATIONMSG._serialized_start=5664
-  _EXPOSURENAMEDEPRECATIONMSG._serialized_end=5782
-  _INTERNALDEPRECATION._serialized_start=5784
-  _INTERNALDEPRECATION._serialized_end=5878
-  _INTERNALDEPRECATIONMSG._serialized_start=5880
-  _INTERNALDEPRECATIONMSG._serialized_end=5990
-  _ENVIRONMENTVARIABLERENAMED._serialized_start=5992
-  _ENVIRONMENTVARIABLERENAMED._serialized_end=6056
-  _ENVIRONMENTVARIABLERENAMEDMSG._serialized_start=6058
-  _ENVIRONMENTVARIABLERENAMEDMSG._serialized_end=6182
-  _CONFIGLOGPATHDEPRECATION._serialized_start=6184
-  _CONFIGLOGPATHDEPRECATION._serialized_end=6235
-  _CONFIGLOGPATHDEPRECATIONMSG._serialized_start=6237
-  _CONFIGLOGPATHDEPRECATIONMSG._serialized_end=6357
-  _CONFIGTARGETPATHDEPRECATION._serialized_start=6359
-  _CONFIGTARGETPATHDEPRECATION._serialized_end=6413
-  _CONFIGTARGETPATHDEPRECATIONMSG._serialized_start=6415
-  _CONFIGTARGETPATHDEPRECATIONMSG._serialized_end=6541
-  _COLLECTFRESHNESSRETURNSIGNATURE._serialized_start=6543
-  _COLLECTFRESHNESSRETURNSIGNATURE._serialized_end=6576
-  _COLLECTFRESHNESSRETURNSIGNATUREMSG._serialized_start=6579
-  _COLLECTFRESHNESSRETURNSIGNATUREMSG._serialized_end=6713
-  _ADAPTEREVENTDEBUG._serialized_start=6716
-  _ADAPTEREVENTDEBUG._serialized_end=6851
-  _ADAPTEREVENTDEBUGMSG._serialized_start=6853
-  _ADAPTEREVENTDEBUGMSG._serialized_end=6959
-  _ADAPTEREVENTINFO._serialized_start=6962
-  _ADAPTEREVENTINFO._serialized_end=7096
-  _ADAPTEREVENTINFOMSG._serialized_start=7098
-  _ADAPTEREVENTINFOMSG._serialized_end=7202
-  _ADAPTEREVENTWARNING._serialized_start=7205
-  _ADAPTEREVENTWARNING._serialized_end=7342
-  _ADAPTEREVENTWARNINGMSG._serialized_start=7344
-  _ADAPTEREVENTWARNINGMSG._serialized_end=7454
-  _ADAPTEREVENTERROR._serialized_start=7457
-  _ADAPTEREVENTERROR._serialized_end=7610
-  _ADAPTEREVENTERRORMSG._serialized_start=7612
-  _ADAPTEREVENTERRORMSG._serialized_end=7718
-  _NEWCONNECTION._serialized_start=7720
-  _NEWCONNECTION._serialized_end=7815
-  _NEWCONNECTIONMSG._serialized_start=7817
-  _NEWCONNECTIONMSG._serialized_end=7915
-  _CONNECTIONREUSED._serialized_start=7917
-  _CONNECTIONREUSED._serialized_end=7978
-  _CONNECTIONREUSEDMSG._serialized_start=7980
-  _CONNECTIONREUSEDMSG._serialized_end=8084
-  _CONNECTIONLEFTOPENINCLEANUP._serialized_start=8086
-  _CONNECTIONLEFTOPENINCLEANUP._serialized_end=8134
-  _CONNECTIONLEFTOPENINCLEANUPMSG._serialized_start=8136
-  _CONNECTIONLEFTOPENINCLEANUPMSG._serialized_end=8262
-  _CONNECTIONCLOSEDINCLEANUP._serialized_start=8264
-  _CONNECTIONCLOSEDINCLEANUP._serialized_end=8310
-  _CONNECTIONCLOSEDINCLEANUPMSG._serialized_start=8312
-  _CONNECTIONCLOSEDINCLEANUPMSG._serialized_end=8434
-  _ROLLBACKFAILED._serialized_start=8436
-  _ROLLBACKFAILED._serialized_end=8531
-  _ROLLBACKFAILEDMSG._serialized_start=8533
-  _ROLLBACKFAILEDMSG._serialized_end=8633
-  _CONNECTIONCLOSED._serialized_start=8635
-  _CONNECTIONCLOSED._serialized_end=8714
-  _CONNECTIONCLOSEDMSG._serialized_start=8716
-  _CONNECTIONCLOSEDMSG._serialized_end=8820
-  _CONNECTIONLEFTOPEN._serialized_start=8822
-  _CONNECTIONLEFTOPEN._serialized_end=8903
-  _CONNECTIONLEFTOPENMSG._serialized_start=8905
-  _CONNECTIONLEFTOPENMSG._serialized_end=9013
-  _ROLLBACK._serialized_start=9015
-  _ROLLBACK._serialized_end=9086
-  _ROLLBACKMSG._serialized_start=9088
-  _ROLLBACKMSG._serialized_end=9176
-  _CACHEMISS._serialized_start=9178
-  _CACHEMISS._serialized_end=9242
-  _CACHEMISSMSG._serialized_start=9244
-  _CACHEMISSMSG._serialized_end=9334
-  _LISTRELATIONS._serialized_start=9336
-  _LISTRELATIONS._serialized_end=9434
-  _LISTRELATIONSMSG._serialized_start=9436
-  _LISTRELATIONSMSG._serialized_end=9534
-  _CONNECTIONUSED._serialized_start=9536
-  _CONNECTIONUSED._serialized_end=9632
-  _CONNECTIONUSEDMSG._serialized_start=9634
-  _CONNECTIONUSEDMSG._serialized_end=9734
-  _SQLQUERY._serialized_start=9736
-  _SQLQUERY._serialized_end=9820
-  _SQLQUERYMSG._serialized_start=9822
-  _SQLQUERYMSG._serialized_end=9910
-  _SQLQUERYSTATUS._serialized_start=9912
-  _SQLQUERYSTATUS._serialized_end=10003
-  _SQLQUERYSTATUSMSG._serialized_start=10005
-  _SQLQUERYSTATUSMSG._serialized_end=10105
-  _SQLCOMMIT._serialized_start=10107
-  _SQLCOMMIT._serialized_end=10179
-  _SQLCOMMITMSG._serialized_start=10181
-  _SQLCOMMITMSG._serialized_end=10271
-  _COLTYPECHANGE._serialized_start=10273
-  _COLTYPECHANGE._serialized_end=10370
-  _COLTYPECHANGEMSG._serialized_start=10372
-  _COLTYPECHANGEMSG._serialized_end=10470
-  _SCHEMACREATION._serialized_start=10472
-  _SCHEMACREATION._serialized_end=10536
-  _SCHEMACREATIONMSG._serialized_start=10538
-  _SCHEMACREATIONMSG._serialized_end=10638
-  _SCHEMADROP._serialized_start=10640
-  _SCHEMADROP._serialized_end=10700
-  _SCHEMADROPMSG._serialized_start=10702
-  _SCHEMADROPMSG._serialized_end=10794
-  _CACHEACTION._serialized_start=10797
-  _CACHEACTION._serialized_end=11019
-  _CACHEACTIONMSG._serialized_start=11021
-  _CACHEACTIONMSG._serialized_end=11115
-  _CACHEDUMPGRAPH._serialized_start=11118
-  _CACHEDUMPGRAPH._serialized_end=11270
-  _CACHEDUMPGRAPH_DUMPENTRY._serialized_start=11227
-  _CACHEDUMPGRAPH_DUMPENTRY._serialized_end=11270
-  _CACHEDUMPGRAPHMSG._serialized_start=11272
-  _CACHEDUMPGRAPHMSG._serialized_end=11372
-  _ADAPTERREGISTERED._serialized_start=11374
-  _ADAPTERREGISTERED._serialized_end=11440
-  _ADAPTERREGISTEREDMSG._serialized_start=11442
-  _ADAPTERREGISTEREDMSG._serialized_end=11548
-  _ADAPTERIMPORTERROR._serialized_start=11550
-  _ADAPTERIMPORTERROR._serialized_end=11583
-  _ADAPTERIMPORTERRORMSG._serialized_start=11585
-  _ADAPTERIMPORTERRORMSG._serialized_end=11693
-  _PLUGINLOADERROR._serialized_start=11695
-  _PLUGINLOADERROR._serialized_end=11730
-  _PLUGINLOADERRORMSG._serialized_start=11732
-  _PLUGINLOADERRORMSG._serialized_end=11834
-  _NEWCONNECTIONOPENING._serialized_start=11836
-  _NEWCONNECTIONOPENING._serialized_end=11926
-  _NEWCONNECTIONOPENINGMSG._serialized_start=11928
-  _NEWCONNECTIONOPENINGMSG._serialized_end=12040
-  _CODEEXECUTION._serialized_start=12042
-  _CODEEXECUTION._serialized_end=12098
-  _CODEEXECUTIONMSG._serialized_start=12100
-  _CODEEXECUTIONMSG._serialized_end=12198
-  _CODEEXECUTIONSTATUS._serialized_start=12200
-  _CODEEXECUTIONSTATUS._serialized_end=12254
-  _CODEEXECUTIONSTATUSMSG._serialized_start=12256
-  _CODEEXECUTIONSTATUSMSG._serialized_end=12366
-  _CATALOGGENERATIONERROR._serialized_start=12368
-  _CATALOGGENERATIONERROR._serialized_end=12405
-  _CATALOGGENERATIONERRORMSG._serialized_start=12407
-  _CATALOGGENERATIONERRORMSG._serialized_end=12523
-  _WRITECATALOGFAILURE._serialized_start=12525
-  _WRITECATALOGFAILURE._serialized_end=12570
-  _WRITECATALOGFAILUREMSG._serialized_start=12572
-  _WRITECATALOGFAILUREMSG._serialized_end=12682
-  _CATALOGWRITTEN._serialized_start=12684
-  _CATALOGWRITTEN._serialized_end=12714
-  _CATALOGWRITTENMSG._serialized_start=12716
-  _CATALOGWRITTENMSG._serialized_end=12816
-  _CANNOTGENERATEDOCS._serialized_start=12818
-  _CANNOTGENERATEDOCS._serialized_end=12838
-  _CANNOTGENERATEDOCSMSG._serialized_start=12840
-  _CANNOTGENERATEDOCSMSG._serialized_end=12948
-  _BUILDINGCATALOG._serialized_start=12950
-  _BUILDINGCATALOG._serialized_end=12967
-  _BUILDINGCATALOGMSG._serialized_start=12969
-  _BUILDINGCATALOGMSG._serialized_end=13071
-  _DATABASEERRORRUNNINGHOOK._serialized_start=13073
-  _DATABASEERRORRUNNINGHOOK._serialized_end=13118
-  _DATABASEERRORRUNNINGHOOKMSG._serialized_start=13120
-  _DATABASEERRORRUNNINGHOOKMSG._serialized_end=13240
-  _HOOKSRUNNING._serialized_start=13242
-  _HOOKSRUNNING._serialized_end=13294
-  _HOOKSRUNNINGMSG._serialized_start=13296
-  _HOOKSRUNNINGMSG._serialized_end=13392
-  _FINISHEDRUNNINGSTATS._serialized_start=13394
-  _FINISHEDRUNNINGSTATS._serialized_end=13478
-  _FINISHEDRUNNINGSTATSMSG._serialized_start=13480
-  _FINISHEDRUNNINGSTATSMSG._serialized_end=13592
-  _CONSTRAINTNOTENFORCED._serialized_start=13594
-  _CONSTRAINTNOTENFORCED._serialized_end=13654
-  _CONSTRAINTNOTENFORCEDMSG._serialized_start=13656
-  _CONSTRAINTNOTENFORCEDMSG._serialized_end=13770
-  _CONSTRAINTNOTSUPPORTED._serialized_start=13772
-  _CONSTRAINTNOTSUPPORTED._serialized_end=13833
-  _CONSTRAINTNOTSUPPORTEDMSG._serialized_start=13835
-  _CONSTRAINTNOTSUPPORTEDMSG._serialized_end=13951
-  _INPUTFILEDIFFERROR._serialized_start=13953
-  _INPUTFILEDIFFERROR._serialized_end=14008
-  _INPUTFILEDIFFERRORMSG._serialized_start=14010
-  _INPUTFILEDIFFERRORMSG._serialized_end=14118
-  _INVALIDVALUEFORFIELD._serialized_start=14120
-  _INVALIDVALUEFORFIELD._serialized_end=14183
-  _INVALIDVALUEFORFIELDMSG._serialized_start=14185
-  _INVALIDVALUEFORFIELDMSG._serialized_end=14297
-  _VALIDATIONWARNING._serialized_start=14299
-  _VALIDATIONWARNING._serialized_end=14380
-  _VALIDATIONWARNINGMSG._serialized_start=14382
-  _VALIDATIONWARNINGMSG._serialized_end=14488
-  _PARSEPERFINFOPATH._serialized_start=14490
-  _PARSEPERFINFOPATH._serialized_end=14523
-  _PARSEPERFINFOPATHMSG._serialized_start=14525
-  _PARSEPERFINFOPATHMSG._serialized_end=14631
-  _PARTIALPARSINGERRORPROCESSINGFILE._serialized_start=14633
-  _PARTIALPARSINGERRORPROCESSINGFILE._serialized_end=14682
-  _PARTIALPARSINGERRORPROCESSINGFILEMSG._serialized_start=14685
-  _PARTIALPARSINGERRORPROCESSINGFILEMSG._serialized_end=14823
-  _PARTIALPARSINGERROR._serialized_start=14826
-  _PARTIALPARSINGERROR._serialized_end=14960
-  _PARTIALPARSINGERROR_EXCINFOENTRY._serialized_start=14914
-  _PARTIALPARSINGERROR_EXCINFOENTRY._serialized_end=14960
-  _PARTIALPARSINGERRORMSG._serialized_start=14962
-  _PARTIALPARSINGERRORMSG._serialized_end=15072
-  _PARTIALPARSINGSKIPPARSING._serialized_start=15074
-  _PARTIALPARSINGSKIPPARSING._serialized_end=15101
-  _PARTIALPARSINGSKIPPARSINGMSG._serialized_start=15103
-  _PARTIALPARSINGSKIPPARSINGMSG._serialized_end=15225
-  _UNABLETOPARTIALPARSE._serialized_start=15227
-  _UNABLETOPARTIALPARSE._serialized_end=15265
-  _UNABLETOPARTIALPARSEMSG._serialized_start=15267
-  _UNABLETOPARTIALPARSEMSG._serialized_end=15379
-  _STATECHECKVARSHASH._serialized_start=15381
-  _STATECHECKVARSHASH._serialized_end=15483
-  _STATECHECKVARSHASHMSG._serialized_start=15485
-  _STATECHECKVARSHASHMSG._serialized_end=15593
-  _PARTIALPARSINGNOTENABLED._serialized_start=15595
-  _PARTIALPARSINGNOTENABLED._serialized_end=15621
-  _PARTIALPARSINGNOTENABLEDMSG._serialized_start=15623
-  _PARTIALPARSINGNOTENABLEDMSG._serialized_end=15743
-  _PARSEDFILELOADFAILED._serialized_start=15745
-  _PARSEDFILELOADFAILED._serialized_end=15812
-  _PARSEDFILELOADFAILEDMSG._serialized_start=15814
-  _PARSEDFILELOADFAILEDMSG._serialized_end=15926
-  _PARTIALPARSINGENABLED._serialized_start=15928
-  _PARTIALPARSINGENABLED._serialized_end=16000
-  _PARTIALPARSINGENABLEDMSG._serialized_start=16002
-  _PARTIALPARSINGENABLEDMSG._serialized_end=16116
-  _PARTIALPARSINGFILE._serialized_start=16118
-  _PARTIALPARSINGFILE._serialized_end=16174
-  _PARTIALPARSINGFILEMSG._serialized_start=16176
-  _PARTIALPARSINGFILEMSG._serialized_end=16284
-  _INVALIDDISABLEDTARGETINTESTNODE._serialized_start=16287
-  _INVALIDDISABLEDTARGETINTESTNODE._serialized_end=16462
-  _INVALIDDISABLEDTARGETINTESTNODEMSG._serialized_start=16465
-  _INVALIDDISABLEDTARGETINTESTNODEMSG._serialized_end=16599
-  _UNUSEDRESOURCECONFIGPATH._serialized_start=16601
-  _UNUSEDRESOURCECONFIGPATH._serialized_end=16656
-  _UNUSEDRESOURCECONFIGPATHMSG._serialized_start=16658
-  _UNUSEDRESOURCECONFIGPATHMSG._serialized_end=16778
-  _SEEDINCREASED._serialized_start=16780
-  _SEEDINCREASED._serialized_end=16831
-  _SEEDINCREASEDMSG._serialized_start=16833
-  _SEEDINCREASEDMSG._serialized_end=16931
-  _SEEDEXCEEDSLIMITSAMEPATH._serialized_start=16933
-  _SEEDEXCEEDSLIMITSAMEPATH._serialized_end=16995
-  _SEEDEXCEEDSLIMITSAMEPATHMSG._serialized_start=16997
-  _SEEDEXCEEDSLIMITSAMEPATHMSG._serialized_end=17117
-  _SEEDEXCEEDSLIMITANDPATHCHANGED._serialized_start=17119
-  _SEEDEXCEEDSLIMITANDPATHCHANGED._serialized_end=17187
-  _SEEDEXCEEDSLIMITANDPATHCHANGEDMSG._serialized_start=17190
-  _SEEDEXCEEDSLIMITANDPATHCHANGEDMSG._serialized_end=17322
-  _SEEDEXCEEDSLIMITCHECKSUMCHANGED._serialized_start=17324
-  _SEEDEXCEEDSLIMITCHECKSUMCHANGED._serialized_end=17416
-  _SEEDEXCEEDSLIMITCHECKSUMCHANGEDMSG._serialized_start=17419
-  _SEEDEXCEEDSLIMITCHECKSUMCHANGEDMSG._serialized_end=17553
-  _UNUSEDTABLES._serialized_start=17555
-  _UNUSEDTABLES._serialized_end=17592
-  _UNUSEDTABLESMSG._serialized_start=17594
-  _UNUSEDTABLESMSG._serialized_end=17690
-  _WRONGRESOURCESCHEMAFILE._serialized_start=17693
-  _WRONGRESOURCESCHEMAFILE._serialized_end=17828
-  _WRONGRESOURCESCHEMAFILEMSG._serialized_start=17830
-  _WRONGRESOURCESCHEMAFILEMSG._serialized_end=17948
-  _NONODEFORYAMLKEY._serialized_start=17950
-  _NONODEFORYAMLKEY._serialized_end=18025
-  _NONODEFORYAMLKEYMSG._serialized_start=18027
-  _NONODEFORYAMLKEYMSG._serialized_end=18131
-  _MACRONOTFOUNDFORPATCH._serialized_start=18133
-  _MACRONOTFOUNDFORPATCH._serialized_end=18176
-  _MACRONOTFOUNDFORPATCHMSG._serialized_start=18178
-  _MACRONOTFOUNDFORPATCHMSG._serialized_end=18292
-  _NODENOTFOUNDORDISABLED._serialized_start=18295
-  _NODENOTFOUNDORDISABLED._serialized_end=18479
-  _NODENOTFOUNDORDISABLEDMSG._serialized_start=18481
-  _NODENOTFOUNDORDISABLEDMSG._serialized_end=18597
-  _JINJALOGWARNING._serialized_start=18599
-  _JINJALOGWARNING._serialized_end=18671
-  _JINJALOGWARNINGMSG._serialized_start=18673
-  _JINJALOGWARNINGMSG._serialized_end=18775
-  _JINJALOGINFO._serialized_start=18777
-  _JINJALOGINFO._serialized_end=18846
-  _JINJALOGINFOMSG._serialized_start=18848
-  _JINJALOGINFOMSG._serialized_end=18944
-  _JINJALOGDEBUG._serialized_start=18946
-  _JINJALOGDEBUG._serialized_end=19016
-  _JINJALOGDEBUGMSG._serialized_start=19018
-  _JINJALOGDEBUGMSG._serialized_end=19116
-  _UNPINNEDREFNEWVERSIONAVAILABLE._serialized_start=19119
-  _UNPINNEDREFNEWVERSIONAVAILABLE._serialized_end=19293
-  _UNPINNEDREFNEWVERSIONAVAILABLEMSG._serialized_start=19296
-  _UNPINNEDREFNEWVERSIONAVAILABLEMSG._serialized_end=19428
-  _DEPRECATEDMODEL._serialized_start=19430
-  _DEPRECATEDMODEL._serialized_end=19516
-  _DEPRECATEDMODELMSG._serialized_start=19518
-  _DEPRECATEDMODELMSG._serialized_end=19620
-  _UPCOMINGREFERENCEDEPRECATION._serialized_start=19623
-  _UPCOMINGREFERENCEDEPRECATION._serialized_end=19821
-  _UPCOMINGREFERENCEDEPRECATIONMSG._serialized_start=19824
-  _UPCOMINGREFERENCEDEPRECATIONMSG._serialized_end=19952
-  _DEPRECATEDREFERENCE._serialized_start=19955
-  _DEPRECATEDREFERENCE._serialized_end=20144
-  _DEPRECATEDREFERENCEMSG._serialized_start=20146
-  _DEPRECATEDREFERENCEMSG._serialized_end=20256
-  _UNSUPPORTEDCONSTRAINTMATERIALIZATION._serialized_start=20258
-  _UNSUPPORTEDCONSTRAINTMATERIALIZATION._serialized_end=20318
-  _UNSUPPORTEDCONSTRAINTMATERIALIZATIONMSG._serialized_start=20321
-  _UNSUPPORTEDCONSTRAINTMATERIALIZATIONMSG._serialized_end=20465
-  _PARSEINLINENODEERROR._serialized_start=20467
-  _PARSEINLINENODEERROR._serialized_end=20544
-  _PARSEINLINENODEERRORMSG._serialized_start=20546
-  _PARSEINLINENODEERRORMSG._serialized_end=20658
-  _SEMANTICVALIDATIONFAILURE._serialized_start=20660
-  _SEMANTICVALIDATIONFAILURE._serialized_end=20700
-  _SEMANTICVALIDATIONFAILUREMSG._serialized_start=20702
-  _SEMANTICVALIDATIONFAILUREMSG._serialized_end=20824
-  _UNVERSIONEDBREAKINGCHANGE._serialized_start=20827
-  _UNVERSIONEDBREAKINGCHANGE._serialized_end=21221
-  _UNVERSIONEDBREAKINGCHANGEMSG._serialized_start=21223
-  _UNVERSIONEDBREAKINGCHANGEMSG._serialized_end=21345
-  _WARNSTATETARGETEQUAL._serialized_start=21347
-  _WARNSTATETARGETEQUAL._serialized_end=21389
-  _WARNSTATETARGETEQUALMSG._serialized_start=21391
-  _WARNSTATETARGETEQUALMSG._serialized_end=21503
-  _FRESHNESSCONFIGPROBLEM._serialized_start=21505
-  _FRESHNESSCONFIGPROBLEM._serialized_end=21542
-  _FRESHNESSCONFIGPROBLEMMSG._serialized_start=21544
-  _FRESHNESSCONFIGPROBLEMMSG._serialized_end=21660
-  _GITSPARSECHECKOUTSUBDIRECTORY._serialized_start=21662
-  _GITSPARSECHECKOUTSUBDIRECTORY._serialized_end=21709
-  _GITSPARSECHECKOUTSUBDIRECTORYMSG._serialized_start=21712
-  _GITSPARSECHECKOUTSUBDIRECTORYMSG._serialized_end=21842
-  _GITPROGRESSCHECKOUTREVISION._serialized_start=21844
-  _GITPROGRESSCHECKOUTREVISION._serialized_end=21891
-  _GITPROGRESSCHECKOUTREVISIONMSG._serialized_start=21893
-  _GITPROGRESSCHECKOUTREVISIONMSG._serialized_end=22019
-  _GITPROGRESSUPDATINGEXISTINGDEPENDENCY._serialized_start=22021
-  _GITPROGRESSUPDATINGEXISTINGDEPENDENCY._serialized_end=22073
-  _GITPROGRESSUPDATINGEXISTINGDEPENDENCYMSG._serialized_start=22076
-  _GITPROGRESSUPDATINGEXISTINGDEPENDENCYMSG._serialized_end=22222
-  _GITPROGRESSPULLINGNEWDEPENDENCY._serialized_start=22224
-  _GITPROGRESSPULLINGNEWDEPENDENCY._serialized_end=22270
-  _GITPROGRESSPULLINGNEWDEPENDENCYMSG._serialized_start=22273
-  _GITPROGRESSPULLINGNEWDEPENDENCYMSG._serialized_end=22407
-  _GITNOTHINGTODO._serialized_start=22409
-  _GITNOTHINGTODO._serialized_end=22438
-  _GITNOTHINGTODOMSG._serialized_start=22440
-  _GITNOTHINGTODOMSG._serialized_end=22540
-  _GITPROGRESSUPDATEDCHECKOUTRANGE._serialized_start=22542
-  _GITPROGRESSUPDATEDCHECKOUTRANGE._serialized_end=22611
-  _GITPROGRESSUPDATEDCHECKOUTRANGEMSG._serialized_start=22614
-  _GITPROGRESSUPDATEDCHECKOUTRANGEMSG._serialized_end=22748
-  _GITPROGRESSCHECKEDOUTAT._serialized_start=22750
-  _GITPROGRESSCHECKEDOUTAT._serialized_end=22792
-  _GITPROGRESSCHECKEDOUTATMSG._serialized_start=22794
-  _GITPROGRESSCHECKEDOUTATMSG._serialized_end=22912
-  _REGISTRYPROGRESSGETREQUEST._serialized_start=22914
-  _REGISTRYPROGRESSGETREQUEST._serialized_end=22955
-  _REGISTRYPROGRESSGETREQUESTMSG._serialized_start=22957
-  _REGISTRYPROGRESSGETREQUESTMSG._serialized_end=23081
-  _REGISTRYPROGRESSGETRESPONSE._serialized_start=23083
-  _REGISTRYPROGRESSGETRESPONSE._serialized_end=23144
-  _REGISTRYPROGRESSGETRESPONSEMSG._serialized_start=23146
-  _REGISTRYPROGRESSGETRESPONSEMSG._serialized_end=23272
-  _SELECTORREPORTINVALIDSELECTOR._serialized_start=23274
-  _SELECTORREPORTINVALIDSELECTOR._serialized_end=23369
-  _SELECTORREPORTINVALIDSELECTORMSG._serialized_start=23372
-  _SELECTORREPORTINVALIDSELECTORMSG._serialized_end=23502
-  _DEPSNOPACKAGESFOUND._serialized_start=23504
-  _DEPSNOPACKAGESFOUND._serialized_end=23525
-  _DEPSNOPACKAGESFOUNDMSG._serialized_start=23527
-  _DEPSNOPACKAGESFOUNDMSG._serialized_end=23637
-  _DEPSSTARTPACKAGEINSTALL._serialized_start=23639
-  _DEPSSTARTPACKAGEINSTALL._serialized_end=23686
-  _DEPSSTARTPACKAGEINSTALLMSG._serialized_start=23688
-  _DEPSSTARTPACKAGEINSTALLMSG._serialized_end=23806
-  _DEPSINSTALLINFO._serialized_start=23808
-  _DEPSINSTALLINFO._serialized_end=23847
-  _DEPSINSTALLINFOMSG._serialized_start=23849
-  _DEPSINSTALLINFOMSG._serialized_end=23951
-  _DEPSUPDATEAVAILABLE._serialized_start=23953
-  _DEPSUPDATEAVAILABLE._serialized_end=23998
-  _DEPSUPDATEAVAILABLEMSG._serialized_start=24000
-  _DEPSUPDATEAVAILABLEMSG._serialized_end=24110
-  _DEPSUPTODATE._serialized_start=24112
-  _DEPSUPTODATE._serialized_end=24126
-  _DEPSUPTODATEMSG._serialized_start=24128
-  _DEPSUPTODATEMSG._serialized_end=24224
-  _DEPSLISTSUBDIRECTORY._serialized_start=24226
-  _DEPSLISTSUBDIRECTORY._serialized_end=24270
-  _DEPSLISTSUBDIRECTORYMSG._serialized_start=24272
-  _DEPSLISTSUBDIRECTORYMSG._serialized_end=24384
-  _DEPSNOTIFYUPDATESAVAILABLE._serialized_start=24386
-  _DEPSNOTIFYUPDATESAVAILABLE._serialized_end=24432
-  _DEPSNOTIFYUPDATESAVAILABLEMSG._serialized_start=24434
-  _DEPSNOTIFYUPDATESAVAILABLEMSG._serialized_end=24558
-  _RETRYEXTERNALCALL._serialized_start=24560
-  _RETRYEXTERNALCALL._serialized_end=24609
-  _RETRYEXTERNALCALLMSG._serialized_start=24611
-  _RETRYEXTERNALCALLMSG._serialized_end=24717
-  _RECORDRETRYEXCEPTION._serialized_start=24719
-  _RECORDRETRYEXCEPTION._serialized_end=24754
-  _RECORDRETRYEXCEPTIONMSG._serialized_start=24756
-  _RECORDRETRYEXCEPTIONMSG._serialized_end=24868
-  _REGISTRYINDEXPROGRESSGETREQUEST._serialized_start=24870
-  _REGISTRYINDEXPROGRESSGETREQUEST._serialized_end=24916
-  _REGISTRYINDEXPROGRESSGETREQUESTMSG._serialized_start=24919
-  _REGISTRYINDEXPROGRESSGETREQUESTMSG._serialized_end=25053
-  _REGISTRYINDEXPROGRESSGETRESPONSE._serialized_start=25055
-  _REGISTRYINDEXPROGRESSGETRESPONSE._serialized_end=25121
-  _REGISTRYINDEXPROGRESSGETRESPONSEMSG._serialized_start=25124
-  _REGISTRYINDEXPROGRESSGETRESPONSEMSG._serialized_end=25260
-  _REGISTRYRESPONSEUNEXPECTEDTYPE._serialized_start=25262
-  _REGISTRYRESPONSEUNEXPECTEDTYPE._serialized_end=25312
-  _REGISTRYRESPONSEUNEXPECTEDTYPEMSG._serialized_start=25315
-  _REGISTRYRESPONSEUNEXPECTEDTYPEMSG._serialized_end=25447
-  _REGISTRYRESPONSEMISSINGTOPKEYS._serialized_start=25449
-  _REGISTRYRESPONSEMISSINGTOPKEYS._serialized_end=25499
-  _REGISTRYRESPONSEMISSINGTOPKEYSMSG._serialized_start=25502
-  _REGISTRYRESPONSEMISSINGTOPKEYSMSG._serialized_end=25634
-  _REGISTRYRESPONSEMISSINGNESTEDKEYS._serialized_start=25636
-  _REGISTRYRESPONSEMISSINGNESTEDKEYS._serialized_end=25689
-  _REGISTRYRESPONSEMISSINGNESTEDKEYSMSG._serialized_start=25692
-  _REGISTRYRESPONSEMISSINGNESTEDKEYSMSG._serialized_end=25830
-  _REGISTRYRESPONSEEXTRANESTEDKEYS._serialized_start=25832
-  _REGISTRYRESPONSEEXTRANESTEDKEYS._serialized_end=25883
-  _REGISTRYRESPONSEEXTRANESTEDKEYSMSG._serialized_start=25886
-  _REGISTRYRESPONSEEXTRANESTEDKEYSMSG._serialized_end=26020
-  _DEPSSETDOWNLOADDIRECTORY._serialized_start=26022
-  _DEPSSETDOWNLOADDIRECTORY._serialized_end=26062
-  _DEPSSETDOWNLOADDIRECTORYMSG._serialized_start=26064
-  _DEPSSETDOWNLOADDIRECTORYMSG._serialized_end=26184
-  _DEPSUNPINNED._serialized_start=26186
-  _DEPSUNPINNED._serialized_end=26231
-  _DEPSUNPINNEDMSG._serialized_start=26233
-  _DEPSUNPINNEDMSG._serialized_end=26329
-  _NONODESFORSELECTIONCRITERIA._serialized_start=26331
-  _NONODESFORSELECTIONCRITERIA._serialized_end=26378
-  _NONODESFORSELECTIONCRITERIAMSG._serialized_start=26380
-  _NONODESFORSELECTIONCRITERIAMSG._serialized_end=26506
-  _DEPSLOCKUPDATING._serialized_start=26508
-  _DEPSLOCKUPDATING._serialized_end=26549
-  _DEPSLOCKUPDATINGMSG._serialized_start=26551
-  _DEPSLOCKUPDATINGMSG._serialized_end=26655
-  _DEPSADDPACKAGE._serialized_start=26657
-  _DEPSADDPACKAGE._serialized_end=26739
-  _DEPSADDPACKAGEMSG._serialized_start=26741
-  _DEPSADDPACKAGEMSG._serialized_end=26841
-  _DEPSFOUNDDUPLICATEPACKAGE._serialized_start=26844
-  _DEPSFOUNDDUPLICATEPACKAGE._serialized_end=27011
-  _DEPSFOUNDDUPLICATEPACKAGE_REMOVEDPACKAGEENTRY._serialized_start=26958
-  _DEPSFOUNDDUPLICATEPACKAGE_REMOVEDPACKAGEENTRY._serialized_end=27011
-  _DEPSFOUNDDUPLICATEPACKAGEMSG._serialized_start=27013
-  _DEPSFOUNDDUPLICATEPACKAGEMSG._serialized_end=27135
-  _DEPSVERSIONMISSING._serialized_start=27137
-  _DEPSVERSIONMISSING._serialized_end=27173
-  _DEPSVERSIONMISSINGMSG._serialized_start=27175
-  _DEPSVERSIONMISSINGMSG._serialized_end=27283
-  _DEPSSCRUBBEDPACKAGENAME._serialized_start=27285
-  _DEPSSCRUBBEDPACKAGENAME._serialized_end=27332
-  _DEPSSCRUBBEDPACKAGENAMEMSG._serialized_start=27334
-  _DEPSSCRUBBEDPACKAGENAMEMSG._serialized_end=27452
-  _RUNNINGOPERATIONCAUGHTERROR._serialized_start=27454
-  _RUNNINGOPERATIONCAUGHTERROR._serialized_end=27496
-  _RUNNINGOPERATIONCAUGHTERRORMSG._serialized_start=27498
-  _RUNNINGOPERATIONCAUGHTERRORMSG._serialized_end=27624
-  _COMPILECOMPLETE._serialized_start=27626
-  _COMPILECOMPLETE._serialized_end=27643
-  _COMPILECOMPLETEMSG._serialized_start=27645
-  _COMPILECOMPLETEMSG._serialized_end=27747
-  _FRESHNESSCHECKCOMPLETE._serialized_start=27749
-  _FRESHNESSCHECKCOMPLETE._serialized_end=27773
-  _FRESHNESSCHECKCOMPLETEMSG._serialized_start=27775
-  _FRESHNESSCHECKCOMPLETEMSG._serialized_end=27891
-  _SEEDHEADER._serialized_start=27893
-  _SEEDHEADER._serialized_end=27921
-  _SEEDHEADERMSG._serialized_start=27923
-  _SEEDHEADERMSG._serialized_end=28015
-  _SQLRUNNEREXCEPTION._serialized_start=28017
-  _SQLRUNNEREXCEPTION._serialized_end=28110
-  _SQLRUNNEREXCEPTIONMSG._serialized_start=28112
-  _SQLRUNNEREXCEPTIONMSG._serialized_end=28220
-  _LOGTESTRESULT._serialized_start=28223
-  _LOGTESTRESULT._serialized_end=28391
-  _LOGTESTRESULTMSG._serialized_start=28393
-  _LOGTESTRESULTMSG._serialized_end=28491
-  _LOGSTARTLINE._serialized_start=28493
-  _LOGSTARTLINE._serialized_end=28600
-  _LOGSTARTLINEMSG._serialized_start=28602
-  _LOGSTARTLINEMSG._serialized_end=28698
-  _LOGMODELRESULT._serialized_start=28701
-  _LOGMODELRESULT._serialized_end=28850
-  _LOGMODELRESULTMSG._serialized_start=28852
-  _LOGMODELRESULTMSG._serialized_end=28952
-  _LOGSNAPSHOTRESULT._serialized_start=28955
-  _LOGSNAPSHOTRESULT._serialized_end=29229
-  _LOGSNAPSHOTRESULT_CFGENTRY._serialized_start=29187
-  _LOGSNAPSHOTRESULT_CFGENTRY._serialized_end=29229
-  _LOGSNAPSHOTRESULTMSG._serialized_start=29231
-  _LOGSNAPSHOTRESULTMSG._serialized_end=29337
-  _LOGSEEDRESULT._serialized_start=29340
-  _LOGSEEDRESULT._serialized_end=29525
-  _LOGSEEDRESULTMSG._serialized_start=29527
-  _LOGSEEDRESULTMSG._serialized_end=29625
-  _LOGFRESHNESSRESULT._serialized_start=29628
-  _LOGFRESHNESSRESULT._serialized_end=29801
-  _LOGFRESHNESSRESULTMSG._serialized_start=29803
-  _LOGFRESHNESSRESULTMSG._serialized_end=29911
-  _LOGCANCELLINE._serialized_start=29913
-  _LOGCANCELLINE._serialized_end=29947
-  _LOGCANCELLINEMSG._serialized_start=29949
-  _LOGCANCELLINEMSG._serialized_end=30047
-  _DEFAULTSELECTOR._serialized_start=30049
-  _DEFAULTSELECTOR._serialized_end=30080
-  _DEFAULTSELECTORMSG._serialized_start=30082
-  _DEFAULTSELECTORMSG._serialized_end=30184
-  _NODESTART._serialized_start=30186
-  _NODESTART._serialized_end=30239
-  _NODESTARTMSG._serialized_start=30241
-  _NODESTARTMSG._serialized_end=30331
-  _NODEFINISHED._serialized_start=30333
-  _NODEFINISHED._serialized_end=30436
-  _NODEFINISHEDMSG._serialized_start=30438
-  _NODEFINISHEDMSG._serialized_end=30534
-  _QUERYCANCELATIONUNSUPPORTED._serialized_start=30536
-  _QUERYCANCELATIONUNSUPPORTED._serialized_end=30579
-  _QUERYCANCELATIONUNSUPPORTEDMSG._serialized_start=30581
-  _QUERYCANCELATIONUNSUPPORTEDMSG._serialized_end=30707
-  _CONCURRENCYLINE._serialized_start=30709
-  _CONCURRENCYLINE._serialized_end=30788
-  _CONCURRENCYLINEMSG._serialized_start=30790
-  _CONCURRENCYLINEMSG._serialized_end=30892
-  _WRITINGINJECTEDSQLFORNODE._serialized_start=30894
-  _WRITINGINJECTEDSQLFORNODE._serialized_end=30963
-  _WRITINGINJECTEDSQLFORNODEMSG._serialized_start=30965
-  _WRITINGINJECTEDSQLFORNODEMSG._serialized_end=31087
-  _NODECOMPILING._serialized_start=31089
-  _NODECOMPILING._serialized_end=31146
-  _NODECOMPILINGMSG._serialized_start=31148
-  _NODECOMPILINGMSG._serialized_end=31246
-  _NODEEXECUTING._serialized_start=31248
-  _NODEEXECUTING._serialized_end=31305
-  _NODEEXECUTINGMSG._serialized_start=31307
-  _NODEEXECUTINGMSG._serialized_end=31405
-  _LOGHOOKSTARTLINE._serialized_start=31407
-  _LOGHOOKSTARTLINE._serialized_end=31516
-  _LOGHOOKSTARTLINEMSG._serialized_start=31518
-  _LOGHOOKSTARTLINEMSG._serialized_end=31622
-  _LOGHOOKENDLINE._serialized_start=31625
-  _LOGHOOKENDLINE._serialized_end=31772
-  _LOGHOOKENDLINEMSG._serialized_start=31774
-  _LOGHOOKENDLINEMSG._serialized_end=31874
-  _SKIPPINGDETAILS._serialized_start=31877
-  _SKIPPINGDETAILS._serialized_end=32024
-  _SKIPPINGDETAILSMSG._serialized_start=32026
-  _SKIPPINGDETAILSMSG._serialized_end=32128
-  _NOTHINGTODO._serialized_start=32130
-  _NOTHINGTODO._serialized_end=32143
-  _NOTHINGTODOMSG._serialized_start=32145
-  _NOTHINGTODOMSG._serialized_end=32239
-  _RUNNINGOPERATIONUNCAUGHTERROR._serialized_start=32241
-  _RUNNINGOPERATIONUNCAUGHTERROR._serialized_end=32285
-  _RUNNINGOPERATIONUNCAUGHTERRORMSG._serialized_start=32288
-  _RUNNINGOPERATIONUNCAUGHTERRORMSG._serialized_end=32418
-  _ENDRUNRESULT._serialized_start=32421
-  _ENDRUNRESULT._serialized_end=32568
-  _ENDRUNRESULTMSG._serialized_start=32570
-  _ENDRUNRESULTMSG._serialized_end=32666
-  _NONODESSELECTED._serialized_start=32668
-  _NONODESSELECTED._serialized_end=32685
-  _NONODESSELECTEDMSG._serialized_start=32687
-  _NONODESSELECTEDMSG._serialized_end=32789
-  _COMMANDCOMPLETED._serialized_start=32791
-  _COMMANDCOMPLETED._serialized_end=32910
-  _COMMANDCOMPLETEDMSG._serialized_start=32912
-  _COMMANDCOMPLETEDMSG._serialized_end=33016
-  _SHOWNODE._serialized_start=33018
-  _SHOWNODE._serialized_end=33125
-  _SHOWNODEMSG._serialized_start=33127
-  _SHOWNODEMSG._serialized_end=33215
-  _COMPILEDNODE._serialized_start=33217
-  _COMPILEDNODE._serialized_end=33329
-  _COMPILEDNODEMSG._serialized_start=33331
-  _COMPILEDNODEMSG._serialized_end=33427
-  _CATCHABLEEXCEPTIONONRUN._serialized_start=33429
-  _CATCHABLEEXCEPTIONONRUN._serialized_end=33527
-  _CATCHABLEEXCEPTIONONRUNMSG._serialized_start=33529
-  _CATCHABLEEXCEPTIONONRUNMSG._serialized_end=33647
-  _INTERNALERRORONRUN._serialized_start=33649
-  _INTERNALERRORONRUN._serialized_end=33744
-  _INTERNALERRORONRUNMSG._serialized_start=33746
-  _INTERNALERRORONRUNMSG._serialized_end=33854
-  _GENERICEXCEPTIONONRUN._serialized_start=33856
-  _GENERICEXCEPTIONONRUN._serialized_end=33973
-  _GENERICEXCEPTIONONRUNMSG._serialized_start=33975
-  _GENERICEXCEPTIONONRUNMSG._serialized_end=34089
-  _NODECONNECTIONRELEASEERROR._serialized_start=34091
-  _NODECONNECTIONRELEASEERROR._serialized_end=34169
-  _NODECONNECTIONRELEASEERRORMSG._serialized_start=34171
-  _NODECONNECTIONRELEASEERRORMSG._serialized_end=34295
-  _FOUNDSTATS._serialized_start=34297
-  _FOUNDSTATS._serialized_end=34328
-  _FOUNDSTATSMSG._serialized_start=34330
-  _FOUNDSTATSMSG._serialized_end=34422
-  _MAINKEYBOARDINTERRUPT._serialized_start=34424
-  _MAINKEYBOARDINTERRUPT._serialized_end=34447
-  _MAINKEYBOARDINTERRUPTMSG._serialized_start=34449
-  _MAINKEYBOARDINTERRUPTMSG._serialized_end=34563
-  _MAINENCOUNTEREDERROR._serialized_start=34565
-  _MAINENCOUNTEREDERROR._serialized_end=34600
-  _MAINENCOUNTEREDERRORMSG._serialized_start=34602
-  _MAINENCOUNTEREDERRORMSG._serialized_end=34714
-  _MAINSTACKTRACE._serialized_start=34716
-  _MAINSTACKTRACE._serialized_end=34753
-  _MAINSTACKTRACEMSG._serialized_start=34755
-  _MAINSTACKTRACEMSG._serialized_end=34855
-  _SYSTEMCOULDNOTWRITE._serialized_start=34857
-  _SYSTEMCOULDNOTWRITE._serialized_end=34921
-  _SYSTEMCOULDNOTWRITEMSG._serialized_start=34923
-  _SYSTEMCOULDNOTWRITEMSG._serialized_end=35033
-  _SYSTEMEXECUTINGCMD._serialized_start=35035
-  _SYSTEMEXECUTINGCMD._serialized_end=35068
-  _SYSTEMEXECUTINGCMDMSG._serialized_start=35070
-  _SYSTEMEXECUTINGCMDMSG._serialized_end=35178
-  _SYSTEMSTDOUT._serialized_start=35180
-  _SYSTEMSTDOUT._serialized_end=35208
-  _SYSTEMSTDOUTMSG._serialized_start=35210
-  _SYSTEMSTDOUTMSG._serialized_end=35306
-  _SYSTEMSTDERR._serialized_start=35308
-  _SYSTEMSTDERR._serialized_end=35336
-  _SYSTEMSTDERRMSG._serialized_start=35338
-  _SYSTEMSTDERRMSG._serialized_end=35434
-  _SYSTEMREPORTRETURNCODE._serialized_start=35436
-  _SYSTEMREPORTRETURNCODE._serialized_end=35480
-  _SYSTEMREPORTRETURNCODEMSG._serialized_start=35482
-  _SYSTEMREPORTRETURNCODEMSG._serialized_end=35598
-  _TIMINGINFOCOLLECTED._serialized_start=35600
-  _TIMINGINFOCOLLECTED._serialized_end=35712
-  _TIMINGINFOCOLLECTEDMSG._serialized_start=35714
-  _TIMINGINFOCOLLECTEDMSG._serialized_end=35824
-  _LOGDEBUGSTACKTRACE._serialized_start=35826
-  _LOGDEBUGSTACKTRACE._serialized_end=35864
-  _LOGDEBUGSTACKTRACEMSG._serialized_start=35866
-  _LOGDEBUGSTACKTRACEMSG._serialized_end=35974
-  _CHECKCLEANPATH._serialized_start=35976
-  _CHECKCLEANPATH._serialized_end=36006
-  _CHECKCLEANPATHMSG._serialized_start=36008
-  _CHECKCLEANPATHMSG._serialized_end=36108
-  _CONFIRMCLEANPATH._serialized_start=36110
-  _CONFIRMCLEANPATH._serialized_end=36142
-  _CONFIRMCLEANPATHMSG._serialized_start=36144
-  _CONFIRMCLEANPATHMSG._serialized_end=36248
-  _PROTECTEDCLEANPATH._serialized_start=36250
-  _PROTECTEDCLEANPATH._serialized_end=36284
-  _PROTECTEDCLEANPATHMSG._serialized_start=36286
-  _PROTECTEDCLEANPATHMSG._serialized_end=36394
-  _FINISHEDCLEANPATHS._serialized_start=36396
-  _FINISHEDCLEANPATHS._serialized_end=36416
-  _FINISHEDCLEANPATHSMSG._serialized_start=36418
-  _FINISHEDCLEANPATHSMSG._serialized_end=36526
-  _OPENCOMMAND._serialized_start=36528
-  _OPENCOMMAND._serialized_end=36581
-  _OPENCOMMANDMSG._serialized_start=36583
-  _OPENCOMMANDMSG._serialized_end=36677
-  _FORMATTING._serialized_start=36679
-  _FORMATTING._serialized_end=36704
-  _FORMATTINGMSG._serialized_start=36706
-  _FORMATTINGMSG._serialized_end=36798
-  _SERVINGDOCSPORT._serialized_start=36800
-  _SERVINGDOCSPORT._serialized_end=36848
-  _SERVINGDOCSPORTMSG._serialized_start=36850
-  _SERVINGDOCSPORTMSG._serialized_end=36952
-  _SERVINGDOCSACCESSINFO._serialized_start=36954
-  _SERVINGDOCSACCESSINFO._serialized_end=36991
-  _SERVINGDOCSACCESSINFOMSG._serialized_start=36993
-  _SERVINGDOCSACCESSINFOMSG._serialized_end=37107
-  _SERVINGDOCSEXITINFO._serialized_start=37109
-  _SERVINGDOCSEXITINFO._serialized_end=37130
-  _SERVINGDOCSEXITINFOMSG._serialized_start=37132
-  _SERVINGDOCSEXITINFOMSG._serialized_end=37242
-  _RUNRESULTWARNING._serialized_start=37244
-  _RUNRESULTWARNING._serialized_end=37318
-  _RUNRESULTWARNINGMSG._serialized_start=37320
-  _RUNRESULTWARNINGMSG._serialized_end=37424
-  _RUNRESULTFAILURE._serialized_start=37426
-  _RUNRESULTFAILURE._serialized_end=37500
-  _RUNRESULTFAILUREMSG._serialized_start=37502
-  _RUNRESULTFAILUREMSG._serialized_end=37606
-  _STATSLINE._serialized_start=37608
-  _STATSLINE._serialized_end=37715
-  _STATSLINE_STATSENTRY._serialized_start=37671
-  _STATSLINE_STATSENTRY._serialized_end=37715
-  _STATSLINEMSG._serialized_start=37717
-  _STATSLINEMSG._serialized_end=37807
-  _RUNRESULTERROR._serialized_start=37809
-  _RUNRESULTERROR._serialized_end=37838
-  _RUNRESULTERRORMSG._serialized_start=37840
-  _RUNRESULTERRORMSG._serialized_end=37940
-  _RUNRESULTERRORNOMESSAGE._serialized_start=37942
-  _RUNRESULTERRORNOMESSAGE._serialized_end=37983
-  _RUNRESULTERRORNOMESSAGEMSG._serialized_start=37985
-  _RUNRESULTERRORNOMESSAGEMSG._serialized_end=38103
-  _SQLCOMPILEDPATH._serialized_start=38105
-  _SQLCOMPILEDPATH._serialized_end=38136
-  _SQLCOMPILEDPATHMSG._serialized_start=38138
-  _SQLCOMPILEDPATHMSG._serialized_end=38240
-  _CHECKNODETESTFAILURE._serialized_start=38242
-  _CHECKNODETESTFAILURE._serialized_end=38287
-  _CHECKNODETESTFAILUREMSG._serialized_start=38289
-  _CHECKNODETESTFAILUREMSG._serialized_end=38401
-  _ENDOFRUNSUMMARY._serialized_start=38403
-  _ENDOFRUNSUMMARY._serialized_end=38490
-  _ENDOFRUNSUMMARYMSG._serialized_start=38492
-  _ENDOFRUNSUMMARYMSG._serialized_end=38594
-  _LOGSKIPBECAUSEERROR._serialized_start=38596
-  _LOGSKIPBECAUSEERROR._serialized_end=38681
-  _LOGSKIPBECAUSEERRORMSG._serialized_start=38683
-  _LOGSKIPBECAUSEERRORMSG._serialized_end=38793
-  _ENSUREGITINSTALLED._serialized_start=38795
-  _ENSUREGITINSTALLED._serialized_end=38815
-  _ENSUREGITINSTALLEDMSG._serialized_start=38817
-  _ENSUREGITINSTALLEDMSG._serialized_end=38925
-  _DEPSCREATINGLOCALSYMLINK._serialized_start=38927
-  _DEPSCREATINGLOCALSYMLINK._serialized_end=38953
-  _DEPSCREATINGLOCALSYMLINKMSG._serialized_start=38955
-  _DEPSCREATINGLOCALSYMLINKMSG._serialized_end=39075
-  _DEPSSYMLINKNOTAVAILABLE._serialized_start=39077
-  _DEPSSYMLINKNOTAVAILABLE._serialized_end=39102
-  _DEPSSYMLINKNOTAVAILABLEMSG._serialized_start=39104
-  _DEPSSYMLINKNOTAVAILABLEMSG._serialized_end=39222
-  _DISABLETRACKING._serialized_start=39224
-  _DISABLETRACKING._serialized_end=39241
-  _DISABLETRACKINGMSG._serialized_start=39243
-  _DISABLETRACKINGMSG._serialized_end=39345
-  _SENDINGEVENT._serialized_start=39347
-  _SENDINGEVENT._serialized_end=39377
-  _SENDINGEVENTMSG._serialized_start=39379
-  _SENDINGEVENTMSG._serialized_end=39475
-  _SENDEVENTFAILURE._serialized_start=39477
-  _SENDEVENTFAILURE._serialized_end=39495
-  _SENDEVENTFAILUREMSG._serialized_start=39497
-  _SENDEVENTFAILUREMSG._serialized_end=39601
-  _FLUSHEVENTS._serialized_start=39603
-  _FLUSHEVENTS._serialized_end=39616
-  _FLUSHEVENTSMSG._serialized_start=39618
-  _FLUSHEVENTSMSG._serialized_end=39712
-  _FLUSHEVENTSFAILURE._serialized_start=39714
-  _FLUSHEVENTSFAILURE._serialized_end=39734
-  _FLUSHEVENTSFAILUREMSG._serialized_start=39736
-  _FLUSHEVENTSFAILUREMSG._serialized_end=39844
-  _TRACKINGINITIALIZEFAILURE._serialized_start=39846
-  _TRACKINGINITIALIZEFAILURE._serialized_end=39891
-  _TRACKINGINITIALIZEFAILUREMSG._serialized_start=39893
-  _TRACKINGINITIALIZEFAILUREMSG._serialized_end=40015
-  _RUNRESULTWARNINGMESSAGE._serialized_start=40017
-  _RUNRESULTWARNINGMESSAGE._serialized_end=40055
-  _RUNRESULTWARNINGMESSAGEMSG._serialized_start=40057
-  _RUNRESULTWARNINGMESSAGEMSG._serialized_end=40175
-  _DEBUGCMDOUT._serialized_start=40177
-  _DEBUGCMDOUT._serialized_end=40203
-  _DEBUGCMDOUTMSG._serialized_start=40205
-  _DEBUGCMDOUTMSG._serialized_end=40299
-  _DEBUGCMDRESULT._serialized_start=40301
-  _DEBUGCMDRESULT._serialized_end=40330
-  _DEBUGCMDRESULTMSG._serialized_start=40332
-  _DEBUGCMDRESULTMSG._serialized_end=40432
-  _LISTCMDOUT._serialized_start=40434
-  _LISTCMDOUT._serialized_end=40459
-  _LISTCMDOUTMSG._serialized_start=40461
-  _LISTCMDOUTMSG._serialized_end=40553
-  _NOTE._serialized_start=40555
-  _NOTE._serialized_end=40574
-  _NOTEMSG._serialized_start=40576
-  _NOTEMSG._serialized_end=40656
-  _RESOURCEREPORT._serialized_start=40659
-  _RESOURCEREPORT._serialized_end=40895
-  _RESOURCEREPORTMSG._serialized_start=40897
-  _RESOURCEREPORTMSG._serialized_end=40997
+  _globals['_EVENTINFO_EXTRAENTRY']._options = None
+  _globals['_EVENTINFO_EXTRAENTRY']._serialized_options = b'8\001'
+  _globals['_MAINREPORTARGS_ARGSENTRY']._options = None
+  _globals['_MAINREPORTARGS_ARGSENTRY']._serialized_options = b'8\001'
+  _globals['_CACHEDUMPGRAPH_DUMPENTRY']._options = None
+  _globals['_CACHEDUMPGRAPH_DUMPENTRY']._serialized_options = b'8\001'
+  _globals['_PARTIALPARSINGERROR_EXCINFOENTRY']._options = None
+  _globals['_PARTIALPARSINGERROR_EXCINFOENTRY']._serialized_options = b'8\001'
+  _globals['_DEPSFOUNDDUPLICATEPACKAGE_REMOVEDPACKAGEENTRY']._options = None
+  _globals['_DEPSFOUNDDUPLICATEPACKAGE_REMOVEDPACKAGEENTRY']._serialized_options = b'8\001'
+  _globals['_LOGSNAPSHOTRESULT_CFGENTRY']._options = None
+  _globals['_LOGSNAPSHOTRESULT_CFGENTRY']._serialized_options = b'8\001'
+  _globals['_STATSLINE_STATSENTRY']._options = None
+  _globals['_STATSLINE_STATSENTRY']._serialized_options = b'8\001'
+  _globals['_EVENTINFO']._serialized_start=92
+  _globals['_EVENTINFO']._serialized_end=365
+  _globals['_EVENTINFO_EXTRAENTRY']._serialized_start=321
+  _globals['_EVENTINFO_EXTRAENTRY']._serialized_end=365
+  _globals['_TIMINGINFOMSG']._serialized_start=367
+  _globals['_TIMINGINFOMSG']._serialized_end=494
+  _globals['_NODERELATION']._serialized_start=496
+  _globals['_NODERELATION']._serialized_end=582
+  _globals['_NODEINFO']._serialized_start=585
+  _globals['_NODEINFO']._serialized_end=858
+  _globals['_RUNRESULTMSG']._serialized_start=861
+  _globals['_RUNRESULTMSG']._serialized_end=1070
+  _globals['_REFERENCEKEYMSG']._serialized_start=1072
+  _globals['_REFERENCEKEYMSG']._serialized_end=1143
+  _globals['_COLUMNTYPE']._serialized_start=1145
+  _globals['_COLUMNTYPE']._serialized_end=1237
+  _globals['_COLUMNCONSTRAINT']._serialized_start=1239
+  _globals['_COLUMNCONSTRAINT']._serialized_end=1328
+  _globals['_MODELCONSTRAINT']._serialized_start=1330
+  _globals['_MODELCONSTRAINT']._serialized_end=1414
+  _globals['_GENERICMESSAGE']._serialized_start=1416
+  _globals['_GENERICMESSAGE']._serialized_end=1470
+  _globals['_MAINREPORTVERSION']._serialized_start=1472
+  _globals['_MAINREPORTVERSION']._serialized_end=1529
+  _globals['_MAINREPORTVERSIONMSG']._serialized_start=1531
+  _globals['_MAINREPORTVERSIONMSG']._serialized_end=1637
+  _globals['_MAINREPORTARGS']._serialized_start=1639
+  _globals['_MAINREPORTARGS']._serialized_end=1753
+  _globals['_MAINREPORTARGS_ARGSENTRY']._serialized_start=1710
+  _globals['_MAINREPORTARGS_ARGSENTRY']._serialized_end=1753
+  _globals['_MAINREPORTARGSMSG']._serialized_start=1755
+  _globals['_MAINREPORTARGSMSG']._serialized_end=1855
+  _globals['_MAINTRACKINGUSERSTATE']._serialized_start=1857
+  _globals['_MAINTRACKINGUSERSTATE']._serialized_end=1900
+  _globals['_MAINTRACKINGUSERSTATEMSG']._serialized_start=1902
+  _globals['_MAINTRACKINGUSERSTATEMSG']._serialized_end=2016
+  _globals['_MERGEDFROMSTATE']._serialized_start=2018
+  _globals['_MERGEDFROMSTATE']._serialized_end=2071
+  _globals['_MERGEDFROMSTATEMSG']._serialized_start=2073
+  _globals['_MERGEDFROMSTATEMSG']._serialized_end=2175
+  _globals['_MISSINGPROFILETARGET']._serialized_start=2177
+  _globals['_MISSINGPROFILETARGET']._serialized_end=2242
+  _globals['_MISSINGPROFILETARGETMSG']._serialized_start=2244
+  _globals['_MISSINGPROFILETARGETMSG']._serialized_end=2356
+  _globals['_INVALIDOPTIONYAML']._serialized_start=2358
+  _globals['_INVALIDOPTIONYAML']._serialized_end=2398
+  _globals['_INVALIDOPTIONYAMLMSG']._serialized_start=2400
+  _globals['_INVALIDOPTIONYAMLMSG']._serialized_end=2506
+  _globals['_LOGDBTPROJECTERROR']._serialized_start=2508
+  _globals['_LOGDBTPROJECTERROR']._serialized_end=2541
+  _globals['_LOGDBTPROJECTERRORMSG']._serialized_start=2543
+  _globals['_LOGDBTPROJECTERRORMSG']._serialized_end=2651
+  _globals['_LOGDBTPROFILEERROR']._serialized_start=2653
+  _globals['_LOGDBTPROFILEERROR']._serialized_end=2704
+  _globals['_LOGDBTPROFILEERRORMSG']._serialized_start=2706
+  _globals['_LOGDBTPROFILEERRORMSG']._serialized_end=2814
+  _globals['_STARTERPROJECTPATH']._serialized_start=2816
+  _globals['_STARTERPROJECTPATH']._serialized_end=2849
+  _globals['_STARTERPROJECTPATHMSG']._serialized_start=2851
+  _globals['_STARTERPROJECTPATHMSG']._serialized_end=2959
+  _globals['_CONFIGFOLDERDIRECTORY']._serialized_start=2961
+  _globals['_CONFIGFOLDERDIRECTORY']._serialized_end=2997
+  _globals['_CONFIGFOLDERDIRECTORYMSG']._serialized_start=2999
+  _globals['_CONFIGFOLDERDIRECTORYMSG']._serialized_end=3113
+  _globals['_NOSAMPLEPROFILEFOUND']._serialized_start=3115
+  _globals['_NOSAMPLEPROFILEFOUND']._serialized_end=3154
+  _globals['_NOSAMPLEPROFILEFOUNDMSG']._serialized_start=3156
+  _globals['_NOSAMPLEPROFILEFOUNDMSG']._serialized_end=3268
+  _globals['_PROFILEWRITTENWITHSAMPLE']._serialized_start=3270
+  _globals['_PROFILEWRITTENWITHSAMPLE']._serialized_end=3324
+  _globals['_PROFILEWRITTENWITHSAMPLEMSG']._serialized_start=3326
+  _globals['_PROFILEWRITTENWITHSAMPLEMSG']._serialized_end=3446
+  _globals['_PROFILEWRITTENWITHTARGETTEMPLATEYAML']._serialized_start=3448
+  _globals['_PROFILEWRITTENWITHTARGETTEMPLATEYAML']._serialized_end=3514
+  _globals['_PROFILEWRITTENWITHTARGETTEMPLATEYAMLMSG']._serialized_start=3517
+  _globals['_PROFILEWRITTENWITHTARGETTEMPLATEYAMLMSG']._serialized_end=3661
+  _globals['_PROFILEWRITTENWITHPROJECTTEMPLATEYAML']._serialized_start=3663
+  _globals['_PROFILEWRITTENWITHPROJECTTEMPLATEYAML']._serialized_end=3730
+  _globals['_PROFILEWRITTENWITHPROJECTTEMPLATEYAMLMSG']._serialized_start=3733
+  _globals['_PROFILEWRITTENWITHPROJECTTEMPLATEYAMLMSG']._serialized_end=3879
+  _globals['_SETTINGUPPROFILE']._serialized_start=3881
+  _globals['_SETTINGUPPROFILE']._serialized_end=3899
+  _globals['_SETTINGUPPROFILEMSG']._serialized_start=3901
+  _globals['_SETTINGUPPROFILEMSG']._serialized_end=4005
+  _globals['_INVALIDPROFILETEMPLATEYAML']._serialized_start=4007
+  _globals['_INVALIDPROFILETEMPLATEYAML']._serialized_end=4035
+  _globals['_INVALIDPROFILETEMPLATEYAMLMSG']._serialized_start=4037
+  _globals['_INVALIDPROFILETEMPLATEYAMLMSG']._serialized_end=4161
+  _globals['_PROJECTNAMEALREADYEXISTS']._serialized_start=4163
+  _globals['_PROJECTNAMEALREADYEXISTS']._serialized_end=4203
+  _globals['_PROJECTNAMEALREADYEXISTSMSG']._serialized_start=4205
+  _globals['_PROJECTNAMEALREADYEXISTSMSG']._serialized_end=4325
+  _globals['_PROJECTCREATED']._serialized_start=4327
+  _globals['_PROJECTCREATED']._serialized_end=4402
+  _globals['_PROJECTCREATEDMSG']._serialized_start=4404
+  _globals['_PROJECTCREATEDMSG']._serialized_end=4504
+  _globals['_PACKAGEREDIRECTDEPRECATION']._serialized_start=4506
+  _globals['_PACKAGEREDIRECTDEPRECATION']._serialized_end=4570
+  _globals['_PACKAGEREDIRECTDEPRECATIONMSG']._serialized_start=4572
+  _globals['_PACKAGEREDIRECTDEPRECATIONMSG']._serialized_end=4696
+  _globals['_PACKAGEINSTALLPATHDEPRECATION']._serialized_start=4698
+  _globals['_PACKAGEINSTALLPATHDEPRECATION']._serialized_end=4729
+  _globals['_PACKAGEINSTALLPATHDEPRECATIONMSG']._serialized_start=4732
+  _globals['_PACKAGEINSTALLPATHDEPRECATIONMSG']._serialized_end=4862
+  _globals['_CONFIGSOURCEPATHDEPRECATION']._serialized_start=4864
+  _globals['_CONFIGSOURCEPATHDEPRECATION']._serialized_end=4936
+  _globals['_CONFIGSOURCEPATHDEPRECATIONMSG']._serialized_start=4938
+  _globals['_CONFIGSOURCEPATHDEPRECATIONMSG']._serialized_end=5064
+  _globals['_CONFIGDATAPATHDEPRECATION']._serialized_start=5066
+  _globals['_CONFIGDATAPATHDEPRECATION']._serialized_end=5136
+  _globals['_CONFIGDATAPATHDEPRECATIONMSG']._serialized_start=5138
+  _globals['_CONFIGDATAPATHDEPRECATIONMSG']._serialized_end=5260
+  _globals['_ADAPTERDEPRECATIONWARNING']._serialized_start=5262
+  _globals['_ADAPTERDEPRECATIONWARNING']._serialized_end=5325
+  _globals['_ADAPTERDEPRECATIONWARNINGMSG']._serialized_start=5327
+  _globals['_ADAPTERDEPRECATIONWARNINGMSG']._serialized_end=5449
+  _globals['_METRICATTRIBUTESRENAMED']._serialized_start=5451
+  _globals['_METRICATTRIBUTESRENAMED']._serialized_end=5497
+  _globals['_METRICATTRIBUTESRENAMEDMSG']._serialized_start=5499
+  _globals['_METRICATTRIBUTESRENAMEDMSG']._serialized_end=5617
+  _globals['_EXPOSURENAMEDEPRECATION']._serialized_start=5619
+  _globals['_EXPOSURENAMEDEPRECATION']._serialized_end=5662
+  _globals['_EXPOSURENAMEDEPRECATIONMSG']._serialized_start=5664
+  _globals['_EXPOSURENAMEDEPRECATIONMSG']._serialized_end=5782
+  _globals['_INTERNALDEPRECATION']._serialized_start=5784
+  _globals['_INTERNALDEPRECATION']._serialized_end=5878
+  _globals['_INTERNALDEPRECATIONMSG']._serialized_start=5880
+  _globals['_INTERNALDEPRECATIONMSG']._serialized_end=5990
+  _globals['_ENVIRONMENTVARIABLERENAMED']._serialized_start=5992
+  _globals['_ENVIRONMENTVARIABLERENAMED']._serialized_end=6056
+  _globals['_ENVIRONMENTVARIABLERENAMEDMSG']._serialized_start=6058
+  _globals['_ENVIRONMENTVARIABLERENAMEDMSG']._serialized_end=6182
+  _globals['_CONFIGLOGPATHDEPRECATION']._serialized_start=6184
+  _globals['_CONFIGLOGPATHDEPRECATION']._serialized_end=6235
+  _globals['_CONFIGLOGPATHDEPRECATIONMSG']._serialized_start=6237
+  _globals['_CONFIGLOGPATHDEPRECATIONMSG']._serialized_end=6357
+  _globals['_CONFIGTARGETPATHDEPRECATION']._serialized_start=6359
+  _globals['_CONFIGTARGETPATHDEPRECATION']._serialized_end=6413
+  _globals['_CONFIGTARGETPATHDEPRECATIONMSG']._serialized_start=6415
+  _globals['_CONFIGTARGETPATHDEPRECATIONMSG']._serialized_end=6541
+  _globals['_COLLECTFRESHNESSRETURNSIGNATURE']._serialized_start=6543
+  _globals['_COLLECTFRESHNESSRETURNSIGNATURE']._serialized_end=6576
+  _globals['_COLLECTFRESHNESSRETURNSIGNATUREMSG']._serialized_start=6579
+  _globals['_COLLECTFRESHNESSRETURNSIGNATUREMSG']._serialized_end=6713
+  _globals['_PROJECTFLAGSMOVEDDEPRECATION']._serialized_start=6715
+  _globals['_PROJECTFLAGSMOVEDDEPRECATION']._serialized_end=6745
+  _globals['_PROJECTFLAGSMOVEDDEPRECATIONMSG']._serialized_start=6748
+  _globals['_PROJECTFLAGSMOVEDDEPRECATIONMSG']._serialized_end=6876
+  _globals['_PACKAGEMATERIALIZATIONOVERRIDEDEPRECATION']._serialized_start=6878
+  _globals['_PACKAGEMATERIALIZATIONOVERRIDEDEPRECATION']._serialized_end=6973
+  _globals['_PACKAGEMATERIALIZATIONOVERRIDEDEPRECATIONMSG']._serialized_start=6976
+  _globals['_PACKAGEMATERIALIZATIONOVERRIDEDEPRECATIONMSG']._serialized_end=7130
+  _globals['_ADAPTEREVENTDEBUG']._serialized_start=7133
+  _globals['_ADAPTEREVENTDEBUG']._serialized_end=7268
+  _globals['_ADAPTEREVENTDEBUGMSG']._serialized_start=7270
+  _globals['_ADAPTEREVENTDEBUGMSG']._serialized_end=7376
+  _globals['_ADAPTEREVENTINFO']._serialized_start=7379
+  _globals['_ADAPTEREVENTINFO']._serialized_end=7513
+  _globals['_ADAPTEREVENTINFOMSG']._serialized_start=7515
+  _globals['_ADAPTEREVENTINFOMSG']._serialized_end=7619
+  _globals['_ADAPTEREVENTWARNING']._serialized_start=7622
+  _globals['_ADAPTEREVENTWARNING']._serialized_end=7759
+  _globals['_ADAPTEREVENTWARNINGMSG']._serialized_start=7761
+  _globals['_ADAPTEREVENTWARNINGMSG']._serialized_end=7871
+  _globals['_ADAPTEREVENTERROR']._serialized_start=7874
+  _globals['_ADAPTEREVENTERROR']._serialized_end=8027
+  _globals['_ADAPTEREVENTERRORMSG']._serialized_start=8029
+  _globals['_ADAPTEREVENTERRORMSG']._serialized_end=8135
+  _globals['_NEWCONNECTION']._serialized_start=8137
+  _globals['_NEWCONNECTION']._serialized_end=8232
+  _globals['_NEWCONNECTIONMSG']._serialized_start=8234
+  _globals['_NEWCONNECTIONMSG']._serialized_end=8332
+  _globals['_CONNECTIONREUSED']._serialized_start=8334
+  _globals['_CONNECTIONREUSED']._serialized_end=8395
+  _globals['_CONNECTIONREUSEDMSG']._serialized_start=8397
+  _globals['_CONNECTIONREUSEDMSG']._serialized_end=8501
+  _globals['_CONNECTIONLEFTOPENINCLEANUP']._serialized_start=8503
+  _globals['_CONNECTIONLEFTOPENINCLEANUP']._serialized_end=8551
+  _globals['_CONNECTIONLEFTOPENINCLEANUPMSG']._serialized_start=8553
+  _globals['_CONNECTIONLEFTOPENINCLEANUPMSG']._serialized_end=8679
+  _globals['_CONNECTIONCLOSEDINCLEANUP']._serialized_start=8681
+  _globals['_CONNECTIONCLOSEDINCLEANUP']._serialized_end=8727
+  _globals['_CONNECTIONCLOSEDINCLEANUPMSG']._serialized_start=8729
+  _globals['_CONNECTIONCLOSEDINCLEANUPMSG']._serialized_end=8851
+  _globals['_ROLLBACKFAILED']._serialized_start=8853
+  _globals['_ROLLBACKFAILED']._serialized_end=8948
+  _globals['_ROLLBACKFAILEDMSG']._serialized_start=8950
+  _globals['_ROLLBACKFAILEDMSG']._serialized_end=9050
+  _globals['_CONNECTIONCLOSED']._serialized_start=9052
+  _globals['_CONNECTIONCLOSED']._serialized_end=9131
+  _globals['_CONNECTIONCLOSEDMSG']._serialized_start=9133
+  _globals['_CONNECTIONCLOSEDMSG']._serialized_end=9237
+  _globals['_CONNECTIONLEFTOPEN']._serialized_start=9239
+  _globals['_CONNECTIONLEFTOPEN']._serialized_end=9320
+  _globals['_CONNECTIONLEFTOPENMSG']._serialized_start=9322
+  _globals['_CONNECTIONLEFTOPENMSG']._serialized_end=9430
+  _globals['_ROLLBACK']._serialized_start=9432
+  _globals['_ROLLBACK']._serialized_end=9503
+  _globals['_ROLLBACKMSG']._serialized_start=9505
+  _globals['_ROLLBACKMSG']._serialized_end=9593
+  _globals['_CACHEMISS']._serialized_start=9595
+  _globals['_CACHEMISS']._serialized_end=9659
+  _globals['_CACHEMISSMSG']._serialized_start=9661
+  _globals['_CACHEMISSMSG']._serialized_end=9751
+  _globals['_LISTRELATIONS']._serialized_start=9753
+  _globals['_LISTRELATIONS']._serialized_end=9851
+  _globals['_LISTRELATIONSMSG']._serialized_start=9853
+  _globals['_LISTRELATIONSMSG']._serialized_end=9951
+  _globals['_CONNECTIONUSED']._serialized_start=9953
+  _globals['_CONNECTIONUSED']._serialized_end=10049
+  _globals['_CONNECTIONUSEDMSG']._serialized_start=10051
+  _globals['_CONNECTIONUSEDMSG']._serialized_end=10151
+  _globals['_SQLQUERY']._serialized_start=10153
+  _globals['_SQLQUERY']._serialized_end=10237
+  _globals['_SQLQUERYMSG']._serialized_start=10239
+  _globals['_SQLQUERYMSG']._serialized_end=10327
+  _globals['_SQLQUERYSTATUS']._serialized_start=10329
+  _globals['_SQLQUERYSTATUS']._serialized_end=10420
+  _globals['_SQLQUERYSTATUSMSG']._serialized_start=10422
+  _globals['_SQLQUERYSTATUSMSG']._serialized_end=10522
+  _globals['_SQLCOMMIT']._serialized_start=10524
+  _globals['_SQLCOMMIT']._serialized_end=10596
+  _globals['_SQLCOMMITMSG']._serialized_start=10598
+  _globals['_SQLCOMMITMSG']._serialized_end=10688
+  _globals['_COLTYPECHANGE']._serialized_start=10690
+  _globals['_COLTYPECHANGE']._serialized_end=10787
+  _globals['_COLTYPECHANGEMSG']._serialized_start=10789
+  _globals['_COLTYPECHANGEMSG']._serialized_end=10887
+  _globals['_SCHEMACREATION']._serialized_start=10889
+  _globals['_SCHEMACREATION']._serialized_end=10953
+  _globals['_SCHEMACREATIONMSG']._serialized_start=10955
+  _globals['_SCHEMACREATIONMSG']._serialized_end=11055
+  _globals['_SCHEMADROP']._serialized_start=11057
+  _globals['_SCHEMADROP']._serialized_end=11117
+  _globals['_SCHEMADROPMSG']._serialized_start=11119
+  _globals['_SCHEMADROPMSG']._serialized_end=11211
+  _globals['_CACHEACTION']._serialized_start=11214
+  _globals['_CACHEACTION']._serialized_end=11436
+  _globals['_CACHEACTIONMSG']._serialized_start=11438
+  _globals['_CACHEACTIONMSG']._serialized_end=11532
+  _globals['_CACHEDUMPGRAPH']._serialized_start=11535
+  _globals['_CACHEDUMPGRAPH']._serialized_end=11687
+  _globals['_CACHEDUMPGRAPH_DUMPENTRY']._serialized_start=11644
+  _globals['_CACHEDUMPGRAPH_DUMPENTRY']._serialized_end=11687
+  _globals['_CACHEDUMPGRAPHMSG']._serialized_start=11689
+  _globals['_CACHEDUMPGRAPHMSG']._serialized_end=11789
+  _globals['_ADAPTERREGISTERED']._serialized_start=11791
+  _globals['_ADAPTERREGISTERED']._serialized_end=11857
+  _globals['_ADAPTERREGISTEREDMSG']._serialized_start=11859
+  _globals['_ADAPTERREGISTEREDMSG']._serialized_end=11965
+  _globals['_ADAPTERIMPORTERROR']._serialized_start=11967
+  _globals['_ADAPTERIMPORTERROR']._serialized_end=12000
+  _globals['_ADAPTERIMPORTERRORMSG']._serialized_start=12002
+  _globals['_ADAPTERIMPORTERRORMSG']._serialized_end=12110
+  _globals['_PLUGINLOADERROR']._serialized_start=12112
+  _globals['_PLUGINLOADERROR']._serialized_end=12147
+  _globals['_PLUGINLOADERRORMSG']._serialized_start=12149
+  _globals['_PLUGINLOADERRORMSG']._serialized_end=12251
+  _globals['_NEWCONNECTIONOPENING']._serialized_start=12253
+  _globals['_NEWCONNECTIONOPENING']._serialized_end=12343
+  _globals['_NEWCONNECTIONOPENINGMSG']._serialized_start=12345
+  _globals['_NEWCONNECTIONOPENINGMSG']._serialized_end=12457
+  _globals['_CODEEXECUTION']._serialized_start=12459
+  _globals['_CODEEXECUTION']._serialized_end=12515
+  _globals['_CODEEXECUTIONMSG']._serialized_start=12517
+  _globals['_CODEEXECUTIONMSG']._serialized_end=12615
+  _globals['_CODEEXECUTIONSTATUS']._serialized_start=12617
+  _globals['_CODEEXECUTIONSTATUS']._serialized_end=12671
+  _globals['_CODEEXECUTIONSTATUSMSG']._serialized_start=12673
+  _globals['_CODEEXECUTIONSTATUSMSG']._serialized_end=12783
+  _globals['_CATALOGGENERATIONERROR']._serialized_start=12785
+  _globals['_CATALOGGENERATIONERROR']._serialized_end=12822
+  _globals['_CATALOGGENERATIONERRORMSG']._serialized_start=12824
+  _globals['_CATALOGGENERATIONERRORMSG']._serialized_end=12940
+  _globals['_WRITECATALOGFAILURE']._serialized_start=12942
+  _globals['_WRITECATALOGFAILURE']._serialized_end=12987
+  _globals['_WRITECATALOGFAILUREMSG']._serialized_start=12989
+  _globals['_WRITECATALOGFAILUREMSG']._serialized_end=13099
+  _globals['_CATALOGWRITTEN']._serialized_start=13101
+  _globals['_CATALOGWRITTEN']._serialized_end=13131
+  _globals['_CATALOGWRITTENMSG']._serialized_start=13133
+  _globals['_CATALOGWRITTENMSG']._serialized_end=13233
+  _globals['_CANNOTGENERATEDOCS']._serialized_start=13235
+  _globals['_CANNOTGENERATEDOCS']._serialized_end=13255
+  _globals['_CANNOTGENERATEDOCSMSG']._serialized_start=13257
+  _globals['_CANNOTGENERATEDOCSMSG']._serialized_end=13365
+  _globals['_BUILDINGCATALOG']._serialized_start=13367
+  _globals['_BUILDINGCATALOG']._serialized_end=13384
+  _globals['_BUILDINGCATALOGMSG']._serialized_start=13386
+  _globals['_BUILDINGCATALOGMSG']._serialized_end=13488
+  _globals['_DATABASEERRORRUNNINGHOOK']._serialized_start=13490
+  _globals['_DATABASEERRORRUNNINGHOOK']._serialized_end=13535
+  _globals['_DATABASEERRORRUNNINGHOOKMSG']._serialized_start=13537
+  _globals['_DATABASEERRORRUNNINGHOOKMSG']._serialized_end=13657
+  _globals['_HOOKSRUNNING']._serialized_start=13659
+  _globals['_HOOKSRUNNING']._serialized_end=13711
+  _globals['_HOOKSRUNNINGMSG']._serialized_start=13713
+  _globals['_HOOKSRUNNINGMSG']._serialized_end=13809
+  _globals['_FINISHEDRUNNINGSTATS']._serialized_start=13811
+  _globals['_FINISHEDRUNNINGSTATS']._serialized_end=13895
+  _globals['_FINISHEDRUNNINGSTATSMSG']._serialized_start=13897
+  _globals['_FINISHEDRUNNINGSTATSMSG']._serialized_end=14009
+  _globals['_CONSTRAINTNOTENFORCED']._serialized_start=14011
+  _globals['_CONSTRAINTNOTENFORCED']._serialized_end=14071
+  _globals['_CONSTRAINTNOTENFORCEDMSG']._serialized_start=14073
+  _globals['_CONSTRAINTNOTENFORCEDMSG']._serialized_end=14187
+  _globals['_CONSTRAINTNOTSUPPORTED']._serialized_start=14189
+  _globals['_CONSTRAINTNOTSUPPORTED']._serialized_end=14250
+  _globals['_CONSTRAINTNOTSUPPORTEDMSG']._serialized_start=14252
+  _globals['_CONSTRAINTNOTSUPPORTEDMSG']._serialized_end=14368
+  _globals['_INPUTFILEDIFFERROR']._serialized_start=14370
+  _globals['_INPUTFILEDIFFERROR']._serialized_end=14425
+  _globals['_INPUTFILEDIFFERRORMSG']._serialized_start=14427
+  _globals['_INPUTFILEDIFFERRORMSG']._serialized_end=14535
+  _globals['_INVALIDVALUEFORFIELD']._serialized_start=14537
+  _globals['_INVALIDVALUEFORFIELD']._serialized_end=14600
+  _globals['_INVALIDVALUEFORFIELDMSG']._serialized_start=14602
+  _globals['_INVALIDVALUEFORFIELDMSG']._serialized_end=14714
+  _globals['_VALIDATIONWARNING']._serialized_start=14716
+  _globals['_VALIDATIONWARNING']._serialized_end=14797
+  _globals['_VALIDATIONWARNINGMSG']._serialized_start=14799
+  _globals['_VALIDATIONWARNINGMSG']._serialized_end=14905
+  _globals['_PARSEPERFINFOPATH']._serialized_start=14907
+  _globals['_PARSEPERFINFOPATH']._serialized_end=14940
+  _globals['_PARSEPERFINFOPATHMSG']._serialized_start=14942
+  _globals['_PARSEPERFINFOPATHMSG']._serialized_end=15048
+  _globals['_PARTIALPARSINGERRORPROCESSINGFILE']._serialized_start=15050
+  _globals['_PARTIALPARSINGERRORPROCESSINGFILE']._serialized_end=15099
+  _globals['_PARTIALPARSINGERRORPROCESSINGFILEMSG']._serialized_start=15102
+  _globals['_PARTIALPARSINGERRORPROCESSINGFILEMSG']._serialized_end=15240
+  _globals['_PARTIALPARSINGERROR']._serialized_start=15243
+  _globals['_PARTIALPARSINGERROR']._serialized_end=15377
+  _globals['_PARTIALPARSINGERROR_EXCINFOENTRY']._serialized_start=15331
+  _globals['_PARTIALPARSINGERROR_EXCINFOENTRY']._serialized_end=15377
+  _globals['_PARTIALPARSINGERRORMSG']._serialized_start=15379
+  _globals['_PARTIALPARSINGERRORMSG']._serialized_end=15489
+  _globals['_PARTIALPARSINGSKIPPARSING']._serialized_start=15491
+  _globals['_PARTIALPARSINGSKIPPARSING']._serialized_end=15518
+  _globals['_PARTIALPARSINGSKIPPARSINGMSG']._serialized_start=15520
+  _globals['_PARTIALPARSINGSKIPPARSINGMSG']._serialized_end=15642
+  _globals['_UNABLETOPARTIALPARSE']._serialized_start=15644
+  _globals['_UNABLETOPARTIALPARSE']._serialized_end=15682
+  _globals['_UNABLETOPARTIALPARSEMSG']._serialized_start=15684
+  _globals['_UNABLETOPARTIALPARSEMSG']._serialized_end=15796
+  _globals['_STATECHECKVARSHASH']._serialized_start=15798
+  _globals['_STATECHECKVARSHASH']._serialized_end=15900
+  _globals['_STATECHECKVARSHASHMSG']._serialized_start=15902
+  _globals['_STATECHECKVARSHASHMSG']._serialized_end=16010
+  _globals['_PARTIALPARSINGNOTENABLED']._serialized_start=16012
+  _globals['_PARTIALPARSINGNOTENABLED']._serialized_end=16038
+  _globals['_PARTIALPARSINGNOTENABLEDMSG']._serialized_start=16040
+  _globals['_PARTIALPARSINGNOTENABLEDMSG']._serialized_end=16160
+  _globals['_PARSEDFILELOADFAILED']._serialized_start=16162
+  _globals['_PARSEDFILELOADFAILED']._serialized_end=16229
+  _globals['_PARSEDFILELOADFAILEDMSG']._serialized_start=16231
+  _globals['_PARSEDFILELOADFAILEDMSG']._serialized_end=16343
+  _globals['_PARTIALPARSINGENABLED']._serialized_start=16345
+  _globals['_PARTIALPARSINGENABLED']._serialized_end=16417
+  _globals['_PARTIALPARSINGENABLEDMSG']._serialized_start=16419
+  _globals['_PARTIALPARSINGENABLEDMSG']._serialized_end=16533
+  _globals['_PARTIALPARSINGFILE']._serialized_start=16535
+  _globals['_PARTIALPARSINGFILE']._serialized_end=16591
+  _globals['_PARTIALPARSINGFILEMSG']._serialized_start=16593
+  _globals['_PARTIALPARSINGFILEMSG']._serialized_end=16701
+  _globals['_INVALIDDISABLEDTARGETINTESTNODE']._serialized_start=16704
+  _globals['_INVALIDDISABLEDTARGETINTESTNODE']._serialized_end=16879
+  _globals['_INVALIDDISABLEDTARGETINTESTNODEMSG']._serialized_start=16882
+  _globals['_INVALIDDISABLEDTARGETINTESTNODEMSG']._serialized_end=17016
+  _globals['_UNUSEDRESOURCECONFIGPATH']._serialized_start=17018
+  _globals['_UNUSEDRESOURCECONFIGPATH']._serialized_end=17073
+  _globals['_UNUSEDRESOURCECONFIGPATHMSG']._serialized_start=17075
+  _globals['_UNUSEDRESOURCECONFIGPATHMSG']._serialized_end=17195
+  _globals['_SEEDINCREASED']._serialized_start=17197
+  _globals['_SEEDINCREASED']._serialized_end=17248
+  _globals['_SEEDINCREASEDMSG']._serialized_start=17250
+  _globals['_SEEDINCREASEDMSG']._serialized_end=17348
+  _globals['_SEEDEXCEEDSLIMITSAMEPATH']._serialized_start=17350
+  _globals['_SEEDEXCEEDSLIMITSAMEPATH']._serialized_end=17412
+  _globals['_SEEDEXCEEDSLIMITSAMEPATHMSG']._serialized_start=17414
+  _globals['_SEEDEXCEEDSLIMITSAMEPATHMSG']._serialized_end=17534
+  _globals['_SEEDEXCEEDSLIMITANDPATHCHANGED']._serialized_start=17536
+  _globals['_SEEDEXCEEDSLIMITANDPATHCHANGED']._serialized_end=17604
+  _globals['_SEEDEXCEEDSLIMITANDPATHCHANGEDMSG']._serialized_start=17607
+  _globals['_SEEDEXCEEDSLIMITANDPATHCHANGEDMSG']._serialized_end=17739
+  _globals['_SEEDEXCEEDSLIMITCHECKSUMCHANGED']._serialized_start=17741
+  _globals['_SEEDEXCEEDSLIMITCHECKSUMCHANGED']._serialized_end=17833
+  _globals['_SEEDEXCEEDSLIMITCHECKSUMCHANGEDMSG']._serialized_start=17836
+  _globals['_SEEDEXCEEDSLIMITCHECKSUMCHANGEDMSG']._serialized_end=17970
+  _globals['_UNUSEDTABLES']._serialized_start=17972
+  _globals['_UNUSEDTABLES']._serialized_end=18009
+  _globals['_UNUSEDTABLESMSG']._serialized_start=18011
+  _globals['_UNUSEDTABLESMSG']._serialized_end=18107
+  _globals['_WRONGRESOURCESCHEMAFILE']._serialized_start=18110
+  _globals['_WRONGRESOURCESCHEMAFILE']._serialized_end=18245
+  _globals['_WRONGRESOURCESCHEMAFILEMSG']._serialized_start=18247
+  _globals['_WRONGRESOURCESCHEMAFILEMSG']._serialized_end=18365
+  _globals['_NONODEFORYAMLKEY']._serialized_start=18367
+  _globals['_NONODEFORYAMLKEY']._serialized_end=18442
+  _globals['_NONODEFORYAMLKEYMSG']._serialized_start=18444
+  _globals['_NONODEFORYAMLKEYMSG']._serialized_end=18548
+  _globals['_MACRONOTFOUNDFORPATCH']._serialized_start=18550
+  _globals['_MACRONOTFOUNDFORPATCH']._serialized_end=18593
+  _globals['_MACRONOTFOUNDFORPATCHMSG']._serialized_start=18595
+  _globals['_MACRONOTFOUNDFORPATCHMSG']._serialized_end=18709
+  _globals['_NODENOTFOUNDORDISABLED']._serialized_start=18712
+  _globals['_NODENOTFOUNDORDISABLED']._serialized_end=18896
+  _globals['_NODENOTFOUNDORDISABLEDMSG']._serialized_start=18898
+  _globals['_NODENOTFOUNDORDISABLEDMSG']._serialized_end=19014
+  _globals['_JINJALOGWARNING']._serialized_start=19016
+  _globals['_JINJALOGWARNING']._serialized_end=19088
+  _globals['_JINJALOGWARNINGMSG']._serialized_start=19090
+  _globals['_JINJALOGWARNINGMSG']._serialized_end=19192
+  _globals['_JINJALOGINFO']._serialized_start=19194
+  _globals['_JINJALOGINFO']._serialized_end=19263
+  _globals['_JINJALOGINFOMSG']._serialized_start=19265
+  _globals['_JINJALOGINFOMSG']._serialized_end=19361
+  _globals['_JINJALOGDEBUG']._serialized_start=19363
+  _globals['_JINJALOGDEBUG']._serialized_end=19433
+  _globals['_JINJALOGDEBUGMSG']._serialized_start=19435
+  _globals['_JINJALOGDEBUGMSG']._serialized_end=19533
+  _globals['_UNPINNEDREFNEWVERSIONAVAILABLE']._serialized_start=19536
+  _globals['_UNPINNEDREFNEWVERSIONAVAILABLE']._serialized_end=19710
+  _globals['_UNPINNEDREFNEWVERSIONAVAILABLEMSG']._serialized_start=19713
+  _globals['_UNPINNEDREFNEWVERSIONAVAILABLEMSG']._serialized_end=19845
+  _globals['_DEPRECATEDMODEL']._serialized_start=19847
+  _globals['_DEPRECATEDMODEL']._serialized_end=19933
+  _globals['_DEPRECATEDMODELMSG']._serialized_start=19935
+  _globals['_DEPRECATEDMODELMSG']._serialized_end=20037
+  _globals['_UPCOMINGREFERENCEDEPRECATION']._serialized_start=20040
+  _globals['_UPCOMINGREFERENCEDEPRECATION']._serialized_end=20238
+  _globals['_UPCOMINGREFERENCEDEPRECATIONMSG']._serialized_start=20241
+  _globals['_UPCOMINGREFERENCEDEPRECATIONMSG']._serialized_end=20369
+  _globals['_DEPRECATEDREFERENCE']._serialized_start=20372
+  _globals['_DEPRECATEDREFERENCE']._serialized_end=20561
+  _globals['_DEPRECATEDREFERENCEMSG']._serialized_start=20563
+  _globals['_DEPRECATEDREFERENCEMSG']._serialized_end=20673
+  _globals['_UNSUPPORTEDCONSTRAINTMATERIALIZATION']._serialized_start=20675
+  _globals['_UNSUPPORTEDCONSTRAINTMATERIALIZATION']._serialized_end=20735
+  _globals['_UNSUPPORTEDCONSTRAINTMATERIALIZATIONMSG']._serialized_start=20738
+  _globals['_UNSUPPORTEDCONSTRAINTMATERIALIZATIONMSG']._serialized_end=20882
+  _globals['_PARSEINLINENODEERROR']._serialized_start=20884
+  _globals['_PARSEINLINENODEERROR']._serialized_end=20961
+  _globals['_PARSEINLINENODEERRORMSG']._serialized_start=20963
+  _globals['_PARSEINLINENODEERRORMSG']._serialized_end=21075
+  _globals['_SEMANTICVALIDATIONFAILURE']._serialized_start=21077
+  _globals['_SEMANTICVALIDATIONFAILURE']._serialized_end=21117
+  _globals['_SEMANTICVALIDATIONFAILUREMSG']._serialized_start=21119
+  _globals['_SEMANTICVALIDATIONFAILUREMSG']._serialized_end=21241
+  _globals['_UNVERSIONEDBREAKINGCHANGE']._serialized_start=21244
+  _globals['_UNVERSIONEDBREAKINGCHANGE']._serialized_end=21638
+  _globals['_UNVERSIONEDBREAKINGCHANGEMSG']._serialized_start=21640
+  _globals['_UNVERSIONEDBREAKINGCHANGEMSG']._serialized_end=21762
+  _globals['_WARNSTATETARGETEQUAL']._serialized_start=21764
+  _globals['_WARNSTATETARGETEQUAL']._serialized_end=21806
+  _globals['_WARNSTATETARGETEQUALMSG']._serialized_start=21808
+  _globals['_WARNSTATETARGETEQUALMSG']._serialized_end=21920
+  _globals['_FRESHNESSCONFIGPROBLEM']._serialized_start=21922
+  _globals['_FRESHNESSCONFIGPROBLEM']._serialized_end=21959
+  _globals['_FRESHNESSCONFIGPROBLEMMSG']._serialized_start=21961
+  _globals['_FRESHNESSCONFIGPROBLEMMSG']._serialized_end=22077
+  _globals['_GITSPARSECHECKOUTSUBDIRECTORY']._serialized_start=22079
+  _globals['_GITSPARSECHECKOUTSUBDIRECTORY']._serialized_end=22126
+  _globals['_GITSPARSECHECKOUTSUBDIRECTORYMSG']._serialized_start=22129
+  _globals['_GITSPARSECHECKOUTSUBDIRECTORYMSG']._serialized_end=22259
+  _globals['_GITPROGRESSCHECKOUTREVISION']._serialized_start=22261
+  _globals['_GITPROGRESSCHECKOUTREVISION']._serialized_end=22308
+  _globals['_GITPROGRESSCHECKOUTREVISIONMSG']._serialized_start=22310
+  _globals['_GITPROGRESSCHECKOUTREVISIONMSG']._serialized_end=22436
+  _globals['_GITPROGRESSUPDATINGEXISTINGDEPENDENCY']._serialized_start=22438
+  _globals['_GITPROGRESSUPDATINGEXISTINGDEPENDENCY']._serialized_end=22490
+  _globals['_GITPROGRESSUPDATINGEXISTINGDEPENDENCYMSG']._serialized_start=22493
+  _globals['_GITPROGRESSUPDATINGEXISTINGDEPENDENCYMSG']._serialized_end=22639
+  _globals['_GITPROGRESSPULLINGNEWDEPENDENCY']._serialized_start=22641
+  _globals['_GITPROGRESSPULLINGNEWDEPENDENCY']._serialized_end=22687
+  _globals['_GITPROGRESSPULLINGNEWDEPENDENCYMSG']._serialized_start=22690
+  _globals['_GITPROGRESSPULLINGNEWDEPENDENCYMSG']._serialized_end=22824
+  _globals['_GITNOTHINGTODO']._serialized_start=22826
+  _globals['_GITNOTHINGTODO']._serialized_end=22855
+  _globals['_GITNOTHINGTODOMSG']._serialized_start=22857
+  _globals['_GITNOTHINGTODOMSG']._serialized_end=22957
+  _globals['_GITPROGRESSUPDATEDCHECKOUTRANGE']._serialized_start=22959
+  _globals['_GITPROGRESSUPDATEDCHECKOUTRANGE']._serialized_end=23028
+  _globals['_GITPROGRESSUPDATEDCHECKOUTRANGEMSG']._serialized_start=23031
+  _globals['_GITPROGRESSUPDATEDCHECKOUTRANGEMSG']._serialized_end=23165
+  _globals['_GITPROGRESSCHECKEDOUTAT']._serialized_start=23167
+  _globals['_GITPROGRESSCHECKEDOUTAT']._serialized_end=23209
+  _globals['_GITPROGRESSCHECKEDOUTATMSG']._serialized_start=23211
+  _globals['_GITPROGRESSCHECKEDOUTATMSG']._serialized_end=23329
+  _globals['_REGISTRYPROGRESSGETREQUEST']._serialized_start=23331
+  _globals['_REGISTRYPROGRESSGETREQUEST']._serialized_end=23372
+  _globals['_REGISTRYPROGRESSGETREQUESTMSG']._serialized_start=23374
+  _globals['_REGISTRYPROGRESSGETREQUESTMSG']._serialized_end=23498
+  _globals['_REGISTRYPROGRESSGETRESPONSE']._serialized_start=23500
+  _globals['_REGISTRYPROGRESSGETRESPONSE']._serialized_end=23561
+  _globals['_REGISTRYPROGRESSGETRESPONSEMSG']._serialized_start=23563
+  _globals['_REGISTRYPROGRESSGETRESPONSEMSG']._serialized_end=23689
+  _globals['_SELECTORREPORTINVALIDSELECTOR']._serialized_start=23691
+  _globals['_SELECTORREPORTINVALIDSELECTOR']._serialized_end=23786
+  _globals['_SELECTORREPORTINVALIDSELECTORMSG']._serialized_start=23789
+  _globals['_SELECTORREPORTINVALIDSELECTORMSG']._serialized_end=23919
+  _globals['_DEPSNOPACKAGESFOUND']._serialized_start=23921
+  _globals['_DEPSNOPACKAGESFOUND']._serialized_end=23942
+  _globals['_DEPSNOPACKAGESFOUNDMSG']._serialized_start=23944
+  _globals['_DEPSNOPACKAGESFOUNDMSG']._serialized_end=24054
+  _globals['_DEPSSTARTPACKAGEINSTALL']._serialized_start=24056
+  _globals['_DEPSSTARTPACKAGEINSTALL']._serialized_end=24103
+  _globals['_DEPSSTARTPACKAGEINSTALLMSG']._serialized_start=24105
+  _globals['_DEPSSTARTPACKAGEINSTALLMSG']._serialized_end=24223
+  _globals['_DEPSINSTALLINFO']._serialized_start=24225
+  _globals['_DEPSINSTALLINFO']._serialized_end=24264
+  _globals['_DEPSINSTALLINFOMSG']._serialized_start=24266
+  _globals['_DEPSINSTALLINFOMSG']._serialized_end=24368
+  _globals['_DEPSUPDATEAVAILABLE']._serialized_start=24370
+  _globals['_DEPSUPDATEAVAILABLE']._serialized_end=24415
+  _globals['_DEPSUPDATEAVAILABLEMSG']._serialized_start=24417
+  _globals['_DEPSUPDATEAVAILABLEMSG']._serialized_end=24527
+  _globals['_DEPSUPTODATE']._serialized_start=24529
+  _globals['_DEPSUPTODATE']._serialized_end=24543
+  _globals['_DEPSUPTODATEMSG']._serialized_start=24545
+  _globals['_DEPSUPTODATEMSG']._serialized_end=24641
+  _globals['_DEPSLISTSUBDIRECTORY']._serialized_start=24643
+  _globals['_DEPSLISTSUBDIRECTORY']._serialized_end=24687
+  _globals['_DEPSLISTSUBDIRECTORYMSG']._serialized_start=24689
+  _globals['_DEPSLISTSUBDIRECTORYMSG']._serialized_end=24801
+  _globals['_DEPSNOTIFYUPDATESAVAILABLE']._serialized_start=24803
+  _globals['_DEPSNOTIFYUPDATESAVAILABLE']._serialized_end=24849
+  _globals['_DEPSNOTIFYUPDATESAVAILABLEMSG']._serialized_start=24851
+  _globals['_DEPSNOTIFYUPDATESAVAILABLEMSG']._serialized_end=24975
+  _globals['_RETRYEXTERNALCALL']._serialized_start=24977
+  _globals['_RETRYEXTERNALCALL']._serialized_end=25026
+  _globals['_RETRYEXTERNALCALLMSG']._serialized_start=25028
+  _globals['_RETRYEXTERNALCALLMSG']._serialized_end=25134
+  _globals['_RECORDRETRYEXCEPTION']._serialized_start=25136
+  _globals['_RECORDRETRYEXCEPTION']._serialized_end=25171
+  _globals['_RECORDRETRYEXCEPTIONMSG']._serialized_start=25173
+  _globals['_RECORDRETRYEXCEPTIONMSG']._serialized_end=25285
+  _globals['_REGISTRYINDEXPROGRESSGETREQUEST']._serialized_start=25287
+  _globals['_REGISTRYINDEXPROGRESSGETREQUEST']._serialized_end=25333
+  _globals['_REGISTRYINDEXPROGRESSGETREQUESTMSG']._serialized_start=25336
+  _globals['_REGISTRYINDEXPROGRESSGETREQUESTMSG']._serialized_end=25470
+  _globals['_REGISTRYINDEXPROGRESSGETRESPONSE']._serialized_start=25472
+  _globals['_REGISTRYINDEXPROGRESSGETRESPONSE']._serialized_end=25538
+  _globals['_REGISTRYINDEXPROGRESSGETRESPONSEMSG']._serialized_start=25541
+  _globals['_REGISTRYINDEXPROGRESSGETRESPONSEMSG']._serialized_end=25677
+  _globals['_REGISTRYRESPONSEUNEXPECTEDTYPE']._serialized_start=25679
+  _globals['_REGISTRYRESPONSEUNEXPECTEDTYPE']._serialized_end=25729
+  _globals['_REGISTRYRESPONSEUNEXPECTEDTYPEMSG']._serialized_start=25732
+  _globals['_REGISTRYRESPONSEUNEXPECTEDTYPEMSG']._serialized_end=25864
+  _globals['_REGISTRYRESPONSEMISSINGTOPKEYS']._serialized_start=25866
+  _globals['_REGISTRYRESPONSEMISSINGTOPKEYS']._serialized_end=25916
+  _globals['_REGISTRYRESPONSEMISSINGTOPKEYSMSG']._serialized_start=25919
+  _globals['_REGISTRYRESPONSEMISSINGTOPKEYSMSG']._serialized_end=26051
+  _globals['_REGISTRYRESPONSEMISSINGNESTEDKEYS']._serialized_start=26053
+  _globals['_REGISTRYRESPONSEMISSINGNESTEDKEYS']._serialized_end=26106
+  _globals['_REGISTRYRESPONSEMISSINGNESTEDKEYSMSG']._serialized_start=26109
+  _globals['_REGISTRYRESPONSEMISSINGNESTEDKEYSMSG']._serialized_end=26247
+  _globals['_REGISTRYRESPONSEEXTRANESTEDKEYS']._serialized_start=26249
+  _globals['_REGISTRYRESPONSEEXTRANESTEDKEYS']._serialized_end=26300
+  _globals['_REGISTRYRESPONSEEXTRANESTEDKEYSMSG']._serialized_start=26303
+  _globals['_REGISTRYRESPONSEEXTRANESTEDKEYSMSG']._serialized_end=26437
+  _globals['_DEPSSETDOWNLOADDIRECTORY']._serialized_start=26439
+  _globals['_DEPSSETDOWNLOADDIRECTORY']._serialized_end=26479
+  _globals['_DEPSSETDOWNLOADDIRECTORYMSG']._serialized_start=26481
+  _globals['_DEPSSETDOWNLOADDIRECTORYMSG']._serialized_end=26601
+  _globals['_DEPSUNPINNED']._serialized_start=26603
+  _globals['_DEPSUNPINNED']._serialized_end=26648
+  _globals['_DEPSUNPINNEDMSG']._serialized_start=26650
+  _globals['_DEPSUNPINNEDMSG']._serialized_end=26746
+  _globals['_NONODESFORSELECTIONCRITERIA']._serialized_start=26748
+  _globals['_NONODESFORSELECTIONCRITERIA']._serialized_end=26795
+  _globals['_NONODESFORSELECTIONCRITERIAMSG']._serialized_start=26797
+  _globals['_NONODESFORSELECTIONCRITERIAMSG']._serialized_end=26923
+  _globals['_DEPSLOCKUPDATING']._serialized_start=26925
+  _globals['_DEPSLOCKUPDATING']._serialized_end=26966
+  _globals['_DEPSLOCKUPDATINGMSG']._serialized_start=26968
+  _globals['_DEPSLOCKUPDATINGMSG']._serialized_end=27072
+  _globals['_DEPSADDPACKAGE']._serialized_start=27074
+  _globals['_DEPSADDPACKAGE']._serialized_end=27156
+  _globals['_DEPSADDPACKAGEMSG']._serialized_start=27158
+  _globals['_DEPSADDPACKAGEMSG']._serialized_end=27258
+  _globals['_DEPSFOUNDDUPLICATEPACKAGE']._serialized_start=27261
+  _globals['_DEPSFOUNDDUPLICATEPACKAGE']._serialized_end=27428
+  _globals['_DEPSFOUNDDUPLICATEPACKAGE_REMOVEDPACKAGEENTRY']._serialized_start=27375
+  _globals['_DEPSFOUNDDUPLICATEPACKAGE_REMOVEDPACKAGEENTRY']._serialized_end=27428
+  _globals['_DEPSFOUNDDUPLICATEPACKAGEMSG']._serialized_start=27430
+  _globals['_DEPSFOUNDDUPLICATEPACKAGEMSG']._serialized_end=27552
+  _globals['_DEPSVERSIONMISSING']._serialized_start=27554
+  _globals['_DEPSVERSIONMISSING']._serialized_end=27590
+  _globals['_DEPSVERSIONMISSINGMSG']._serialized_start=27592
+  _globals['_DEPSVERSIONMISSINGMSG']._serialized_end=27700
+  _globals['_DEPSSCRUBBEDPACKAGENAME']._serialized_start=27702
+  _globals['_DEPSSCRUBBEDPACKAGENAME']._serialized_end=27749
+  _globals['_DEPSSCRUBBEDPACKAGENAMEMSG']._serialized_start=27751
+  _globals['_DEPSSCRUBBEDPACKAGENAMEMSG']._serialized_end=27869
+  _globals['_RUNNINGOPERATIONCAUGHTERROR']._serialized_start=27871
+  _globals['_RUNNINGOPERATIONCAUGHTERROR']._serialized_end=27913
+  _globals['_RUNNINGOPERATIONCAUGHTERRORMSG']._serialized_start=27915
+  _globals['_RUNNINGOPERATIONCAUGHTERRORMSG']._serialized_end=28041
+  _globals['_COMPILECOMPLETE']._serialized_start=28043
+  _globals['_COMPILECOMPLETE']._serialized_end=28060
+  _globals['_COMPILECOMPLETEMSG']._serialized_start=28062
+  _globals['_COMPILECOMPLETEMSG']._serialized_end=28164
+  _globals['_FRESHNESSCHECKCOMPLETE']._serialized_start=28166
+  _globals['_FRESHNESSCHECKCOMPLETE']._serialized_end=28190
+  _globals['_FRESHNESSCHECKCOMPLETEMSG']._serialized_start=28192
+  _globals['_FRESHNESSCHECKCOMPLETEMSG']._serialized_end=28308
+  _globals['_SEEDHEADER']._serialized_start=28310
+  _globals['_SEEDHEADER']._serialized_end=28338
+  _globals['_SEEDHEADERMSG']._serialized_start=28340
+  _globals['_SEEDHEADERMSG']._serialized_end=28432
+  _globals['_SQLRUNNEREXCEPTION']._serialized_start=28434
+  _globals['_SQLRUNNEREXCEPTION']._serialized_end=28527
+  _globals['_SQLRUNNEREXCEPTIONMSG']._serialized_start=28529
+  _globals['_SQLRUNNEREXCEPTIONMSG']._serialized_end=28637
+  _globals['_LOGTESTRESULT']._serialized_start=28640
+  _globals['_LOGTESTRESULT']._serialized_end=28808
+  _globals['_LOGTESTRESULTMSG']._serialized_start=28810
+  _globals['_LOGTESTRESULTMSG']._serialized_end=28908
+  _globals['_LOGSTARTLINE']._serialized_start=28910
+  _globals['_LOGSTARTLINE']._serialized_end=29017
+  _globals['_LOGSTARTLINEMSG']._serialized_start=29019
+  _globals['_LOGSTARTLINEMSG']._serialized_end=29115
+  _globals['_LOGMODELRESULT']._serialized_start=29118
+  _globals['_LOGMODELRESULT']._serialized_end=29267
+  _globals['_LOGMODELRESULTMSG']._serialized_start=29269
+  _globals['_LOGMODELRESULTMSG']._serialized_end=29369
+  _globals['_LOGSNAPSHOTRESULT']._serialized_start=29372
+  _globals['_LOGSNAPSHOTRESULT']._serialized_end=29646
+  _globals['_LOGSNAPSHOTRESULT_CFGENTRY']._serialized_start=29604
+  _globals['_LOGSNAPSHOTRESULT_CFGENTRY']._serialized_end=29646
+  _globals['_LOGSNAPSHOTRESULTMSG']._serialized_start=29648
+  _globals['_LOGSNAPSHOTRESULTMSG']._serialized_end=29754
+  _globals['_LOGSEEDRESULT']._serialized_start=29757
+  _globals['_LOGSEEDRESULT']._serialized_end=29942
+  _globals['_LOGSEEDRESULTMSG']._serialized_start=29944
+  _globals['_LOGSEEDRESULTMSG']._serialized_end=30042
+  _globals['_LOGFRESHNESSRESULT']._serialized_start=30045
+  _globals['_LOGFRESHNESSRESULT']._serialized_end=30218
+  _globals['_LOGFRESHNESSRESULTMSG']._serialized_start=30220
+  _globals['_LOGFRESHNESSRESULTMSG']._serialized_end=30328
+  _globals['_LOGCANCELLINE']._serialized_start=30330
+  _globals['_LOGCANCELLINE']._serialized_end=30364
+  _globals['_LOGCANCELLINEMSG']._serialized_start=30366
+  _globals['_LOGCANCELLINEMSG']._serialized_end=30464
+  _globals['_DEFAULTSELECTOR']._serialized_start=30466
+  _globals['_DEFAULTSELECTOR']._serialized_end=30497
+  _globals['_DEFAULTSELECTORMSG']._serialized_start=30499
+  _globals['_DEFAULTSELECTORMSG']._serialized_end=30601
+  _globals['_NODESTART']._serialized_start=30603
+  _globals['_NODESTART']._serialized_end=30656
+  _globals['_NODESTARTMSG']._serialized_start=30658
+  _globals['_NODESTARTMSG']._serialized_end=30748
+  _globals['_NODEFINISHED']._serialized_start=30750
+  _globals['_NODEFINISHED']._serialized_end=30853
+  _globals['_NODEFINISHEDMSG']._serialized_start=30855
+  _globals['_NODEFINISHEDMSG']._serialized_end=30951
+  _globals['_QUERYCANCELATIONUNSUPPORTED']._serialized_start=30953
+  _globals['_QUERYCANCELATIONUNSUPPORTED']._serialized_end=30996
+  _globals['_QUERYCANCELATIONUNSUPPORTEDMSG']._serialized_start=30998
+  _globals['_QUERYCANCELATIONUNSUPPORTEDMSG']._serialized_end=31124
+  _globals['_CONCURRENCYLINE']._serialized_start=31126
+  _globals['_CONCURRENCYLINE']._serialized_end=31205
+  _globals['_CONCURRENCYLINEMSG']._serialized_start=31207
+  _globals['_CONCURRENCYLINEMSG']._serialized_end=31309
+  _globals['_WRITINGINJECTEDSQLFORNODE']._serialized_start=31311
+  _globals['_WRITINGINJECTEDSQLFORNODE']._serialized_end=31380
+  _globals['_WRITINGINJECTEDSQLFORNODEMSG']._serialized_start=31382
+  _globals['_WRITINGINJECTEDSQLFORNODEMSG']._serialized_end=31504
+  _globals['_NODECOMPILING']._serialized_start=31506
+  _globals['_NODECOMPILING']._serialized_end=31563
+  _globals['_NODECOMPILINGMSG']._serialized_start=31565
+  _globals['_NODECOMPILINGMSG']._serialized_end=31663
+  _globals['_NODEEXECUTING']._serialized_start=31665
+  _globals['_NODEEXECUTING']._serialized_end=31722
+  _globals['_NODEEXECUTINGMSG']._serialized_start=31724
+  _globals['_NODEEXECUTINGMSG']._serialized_end=31822
+  _globals['_LOGHOOKSTARTLINE']._serialized_start=31824
+  _globals['_LOGHOOKSTARTLINE']._serialized_end=31933
+  _globals['_LOGHOOKSTARTLINEMSG']._serialized_start=31935
+  _globals['_LOGHOOKSTARTLINEMSG']._serialized_end=32039
+  _globals['_LOGHOOKENDLINE']._serialized_start=32042
+  _globals['_LOGHOOKENDLINE']._serialized_end=32189
+  _globals['_LOGHOOKENDLINEMSG']._serialized_start=32191
+  _globals['_LOGHOOKENDLINEMSG']._serialized_end=32291
+  _globals['_SKIPPINGDETAILS']._serialized_start=32294
+  _globals['_SKIPPINGDETAILS']._serialized_end=32441
+  _globals['_SKIPPINGDETAILSMSG']._serialized_start=32443
+  _globals['_SKIPPINGDETAILSMSG']._serialized_end=32545
+  _globals['_NOTHINGTODO']._serialized_start=32547
+  _globals['_NOTHINGTODO']._serialized_end=32560
+  _globals['_NOTHINGTODOMSG']._serialized_start=32562
+  _globals['_NOTHINGTODOMSG']._serialized_end=32656
+  _globals['_RUNNINGOPERATIONUNCAUGHTERROR']._serialized_start=32658
+  _globals['_RUNNINGOPERATIONUNCAUGHTERROR']._serialized_end=32702
+  _globals['_RUNNINGOPERATIONUNCAUGHTERRORMSG']._serialized_start=32705
+  _globals['_RUNNINGOPERATIONUNCAUGHTERRORMSG']._serialized_end=32835
+  _globals['_ENDRUNRESULT']._serialized_start=32838
+  _globals['_ENDRUNRESULT']._serialized_end=32985
+  _globals['_ENDRUNRESULTMSG']._serialized_start=32987
+  _globals['_ENDRUNRESULTMSG']._serialized_end=33083
+  _globals['_NONODESSELECTED']._serialized_start=33085
+  _globals['_NONODESSELECTED']._serialized_end=33102
+  _globals['_NONODESSELECTEDMSG']._serialized_start=33104
+  _globals['_NONODESSELECTEDMSG']._serialized_end=33206
+  _globals['_COMMANDCOMPLETED']._serialized_start=33208
+  _globals['_COMMANDCOMPLETED']._serialized_end=33327
+  _globals['_COMMANDCOMPLETEDMSG']._serialized_start=33329
+  _globals['_COMMANDCOMPLETEDMSG']._serialized_end=33433
+  _globals['_SHOWNODE']._serialized_start=33435
+  _globals['_SHOWNODE']._serialized_end=33542
+  _globals['_SHOWNODEMSG']._serialized_start=33544
+  _globals['_SHOWNODEMSG']._serialized_end=33632
+  _globals['_COMPILEDNODE']._serialized_start=33634
+  _globals['_COMPILEDNODE']._serialized_end=33746
+  _globals['_COMPILEDNODEMSG']._serialized_start=33748
+  _globals['_COMPILEDNODEMSG']._serialized_end=33844
+  _globals['_CATCHABLEEXCEPTIONONRUN']._serialized_start=33846
+  _globals['_CATCHABLEEXCEPTIONONRUN']._serialized_end=33944
+  _globals['_CATCHABLEEXCEPTIONONRUNMSG']._serialized_start=33946
+  _globals['_CATCHABLEEXCEPTIONONRUNMSG']._serialized_end=34064
+  _globals['_INTERNALERRORONRUN']._serialized_start=34066
+  _globals['_INTERNALERRORONRUN']._serialized_end=34161
+  _globals['_INTERNALERRORONRUNMSG']._serialized_start=34163
+  _globals['_INTERNALERRORONRUNMSG']._serialized_end=34271
+  _globals['_GENERICEXCEPTIONONRUN']._serialized_start=34273
+  _globals['_GENERICEXCEPTIONONRUN']._serialized_end=34390
+  _globals['_GENERICEXCEPTIONONRUNMSG']._serialized_start=34392
+  _globals['_GENERICEXCEPTIONONRUNMSG']._serialized_end=34506
+  _globals['_NODECONNECTIONRELEASEERROR']._serialized_start=34508
+  _globals['_NODECONNECTIONRELEASEERROR']._serialized_end=34586
+  _globals['_NODECONNECTIONRELEASEERRORMSG']._serialized_start=34588
+  _globals['_NODECONNECTIONRELEASEERRORMSG']._serialized_end=34712
+  _globals['_FOUNDSTATS']._serialized_start=34714
+  _globals['_FOUNDSTATS']._serialized_end=34745
+  _globals['_FOUNDSTATSMSG']._serialized_start=34747
+  _globals['_FOUNDSTATSMSG']._serialized_end=34839
+  _globals['_MAINKEYBOARDINTERRUPT']._serialized_start=34841
+  _globals['_MAINKEYBOARDINTERRUPT']._serialized_end=34864
+  _globals['_MAINKEYBOARDINTERRUPTMSG']._serialized_start=34866
+  _globals['_MAINKEYBOARDINTERRUPTMSG']._serialized_end=34980
+  _globals['_MAINENCOUNTEREDERROR']._serialized_start=34982
+  _globals['_MAINENCOUNTEREDERROR']._serialized_end=35017
+  _globals['_MAINENCOUNTEREDERRORMSG']._serialized_start=35019
+  _globals['_MAINENCOUNTEREDERRORMSG']._serialized_end=35131
+  _globals['_MAINSTACKTRACE']._serialized_start=35133
+  _globals['_MAINSTACKTRACE']._serialized_end=35170
+  _globals['_MAINSTACKTRACEMSG']._serialized_start=35172
+  _globals['_MAINSTACKTRACEMSG']._serialized_end=35272
+  _globals['_SYSTEMCOULDNOTWRITE']._serialized_start=35274
+  _globals['_SYSTEMCOULDNOTWRITE']._serialized_end=35338
+  _globals['_SYSTEMCOULDNOTWRITEMSG']._serialized_start=35340
+  _globals['_SYSTEMCOULDNOTWRITEMSG']._serialized_end=35450
+  _globals['_SYSTEMEXECUTINGCMD']._serialized_start=35452
+  _globals['_SYSTEMEXECUTINGCMD']._serialized_end=35485
+  _globals['_SYSTEMEXECUTINGCMDMSG']._serialized_start=35487
+  _globals['_SYSTEMEXECUTINGCMDMSG']._serialized_end=35595
+  _globals['_SYSTEMSTDOUT']._serialized_start=35597
+  _globals['_SYSTEMSTDOUT']._serialized_end=35625
+  _globals['_SYSTEMSTDOUTMSG']._serialized_start=35627
+  _globals['_SYSTEMSTDOUTMSG']._serialized_end=35723
+  _globals['_SYSTEMSTDERR']._serialized_start=35725
+  _globals['_SYSTEMSTDERR']._serialized_end=35753
+  _globals['_SYSTEMSTDERRMSG']._serialized_start=35755
+  _globals['_SYSTEMSTDERRMSG']._serialized_end=35851
+  _globals['_SYSTEMREPORTRETURNCODE']._serialized_start=35853
+  _globals['_SYSTEMREPORTRETURNCODE']._serialized_end=35897
+  _globals['_SYSTEMREPORTRETURNCODEMSG']._serialized_start=35899
+  _globals['_SYSTEMREPORTRETURNCODEMSG']._serialized_end=36015
+  _globals['_TIMINGINFOCOLLECTED']._serialized_start=36017
+  _globals['_TIMINGINFOCOLLECTED']._serialized_end=36129
+  _globals['_TIMINGINFOCOLLECTEDMSG']._serialized_start=36131
+  _globals['_TIMINGINFOCOLLECTEDMSG']._serialized_end=36241
+  _globals['_LOGDEBUGSTACKTRACE']._serialized_start=36243
+  _globals['_LOGDEBUGSTACKTRACE']._serialized_end=36281
+  _globals['_LOGDEBUGSTACKTRACEMSG']._serialized_start=36283
+  _globals['_LOGDEBUGSTACKTRACEMSG']._serialized_end=36391
+  _globals['_CHECKCLEANPATH']._serialized_start=36393
+  _globals['_CHECKCLEANPATH']._serialized_end=36423
+  _globals['_CHECKCLEANPATHMSG']._serialized_start=36425
+  _globals['_CHECKCLEANPATHMSG']._serialized_end=36525
+  _globals['_CONFIRMCLEANPATH']._serialized_start=36527
+  _globals['_CONFIRMCLEANPATH']._serialized_end=36559
+  _globals['_CONFIRMCLEANPATHMSG']._serialized_start=36561
+  _globals['_CONFIRMCLEANPATHMSG']._serialized_end=36665
+  _globals['_PROTECTEDCLEANPATH']._serialized_start=36667
+  _globals['_PROTECTEDCLEANPATH']._serialized_end=36701
+  _globals['_PROTECTEDCLEANPATHMSG']._serialized_start=36703
+  _globals['_PROTECTEDCLEANPATHMSG']._serialized_end=36811
+  _globals['_FINISHEDCLEANPATHS']._serialized_start=36813
+  _globals['_FINISHEDCLEANPATHS']._serialized_end=36833
+  _globals['_FINISHEDCLEANPATHSMSG']._serialized_start=36835
+  _globals['_FINISHEDCLEANPATHSMSG']._serialized_end=36943
+  _globals['_OPENCOMMAND']._serialized_start=36945
+  _globals['_OPENCOMMAND']._serialized_end=36998
+  _globals['_OPENCOMMANDMSG']._serialized_start=37000
+  _globals['_OPENCOMMANDMSG']._serialized_end=37094
+  _globals['_FORMATTING']._serialized_start=37096
+  _globals['_FORMATTING']._serialized_end=37121
+  _globals['_FORMATTINGMSG']._serialized_start=37123
+  _globals['_FORMATTINGMSG']._serialized_end=37215
+  _globals['_SERVINGDOCSPORT']._serialized_start=37217
+  _globals['_SERVINGDOCSPORT']._serialized_end=37265
+  _globals['_SERVINGDOCSPORTMSG']._serialized_start=37267
+  _globals['_SERVINGDOCSPORTMSG']._serialized_end=37369
+  _globals['_SERVINGDOCSACCESSINFO']._serialized_start=37371
+  _globals['_SERVINGDOCSACCESSINFO']._serialized_end=37408
+  _globals['_SERVINGDOCSACCESSINFOMSG']._serialized_start=37410
+  _globals['_SERVINGDOCSACCESSINFOMSG']._serialized_end=37524
+  _globals['_SERVINGDOCSEXITINFO']._serialized_start=37526
+  _globals['_SERVINGDOCSEXITINFO']._serialized_end=37547
+  _globals['_SERVINGDOCSEXITINFOMSG']._serialized_start=37549
+  _globals['_SERVINGDOCSEXITINFOMSG']._serialized_end=37659
+  _globals['_RUNRESULTWARNING']._serialized_start=37661
+  _globals['_RUNRESULTWARNING']._serialized_end=37735
+  _globals['_RUNRESULTWARNINGMSG']._serialized_start=37737
+  _globals['_RUNRESULTWARNINGMSG']._serialized_end=37841
+  _globals['_RUNRESULTFAILURE']._serialized_start=37843
+  _globals['_RUNRESULTFAILURE']._serialized_end=37917
+  _globals['_RUNRESULTFAILUREMSG']._serialized_start=37919
+  _globals['_RUNRESULTFAILUREMSG']._serialized_end=38023
+  _globals['_STATSLINE']._serialized_start=38025
+  _globals['_STATSLINE']._serialized_end=38132
+  _globals['_STATSLINE_STATSENTRY']._serialized_start=38088
+  _globals['_STATSLINE_STATSENTRY']._serialized_end=38132
+  _globals['_STATSLINEMSG']._serialized_start=38134
+  _globals['_STATSLINEMSG']._serialized_end=38224
+  _globals['_RUNRESULTERROR']._serialized_start=38226
+  _globals['_RUNRESULTERROR']._serialized_end=38255
+  _globals['_RUNRESULTERRORMSG']._serialized_start=38257
+  _globals['_RUNRESULTERRORMSG']._serialized_end=38357
+  _globals['_RUNRESULTERRORNOMESSAGE']._serialized_start=38359
+  _globals['_RUNRESULTERRORNOMESSAGE']._serialized_end=38400
+  _globals['_RUNRESULTERRORNOMESSAGEMSG']._serialized_start=38402
+  _globals['_RUNRESULTERRORNOMESSAGEMSG']._serialized_end=38520
+  _globals['_SQLCOMPILEDPATH']._serialized_start=38522
+  _globals['_SQLCOMPILEDPATH']._serialized_end=38553
+  _globals['_SQLCOMPILEDPATHMSG']._serialized_start=38555
+  _globals['_SQLCOMPILEDPATHMSG']._serialized_end=38657
+  _globals['_CHECKNODETESTFAILURE']._serialized_start=38659
+  _globals['_CHECKNODETESTFAILURE']._serialized_end=38704
+  _globals['_CHECKNODETESTFAILUREMSG']._serialized_start=38706
+  _globals['_CHECKNODETESTFAILUREMSG']._serialized_end=38818
+  _globals['_ENDOFRUNSUMMARY']._serialized_start=38820
+  _globals['_ENDOFRUNSUMMARY']._serialized_end=38907
+  _globals['_ENDOFRUNSUMMARYMSG']._serialized_start=38909
+  _globals['_ENDOFRUNSUMMARYMSG']._serialized_end=39011
+  _globals['_LOGSKIPBECAUSEERROR']._serialized_start=39013
+  _globals['_LOGSKIPBECAUSEERROR']._serialized_end=39098
+  _globals['_LOGSKIPBECAUSEERRORMSG']._serialized_start=39100
+  _globals['_LOGSKIPBECAUSEERRORMSG']._serialized_end=39210
+  _globals['_ENSUREGITINSTALLED']._serialized_start=39212
+  _globals['_ENSUREGITINSTALLED']._serialized_end=39232
+  _globals['_ENSUREGITINSTALLEDMSG']._serialized_start=39234
+  _globals['_ENSUREGITINSTALLEDMSG']._serialized_end=39342
+  _globals['_DEPSCREATINGLOCALSYMLINK']._serialized_start=39344
+  _globals['_DEPSCREATINGLOCALSYMLINK']._serialized_end=39370
+  _globals['_DEPSCREATINGLOCALSYMLINKMSG']._serialized_start=39372
+  _globals['_DEPSCREATINGLOCALSYMLINKMSG']._serialized_end=39492
+  _globals['_DEPSSYMLINKNOTAVAILABLE']._serialized_start=39494
+  _globals['_DEPSSYMLINKNOTAVAILABLE']._serialized_end=39519
+  _globals['_DEPSSYMLINKNOTAVAILABLEMSG']._serialized_start=39521
+  _globals['_DEPSSYMLINKNOTAVAILABLEMSG']._serialized_end=39639
+  _globals['_DISABLETRACKING']._serialized_start=39641
+  _globals['_DISABLETRACKING']._serialized_end=39658
+  _globals['_DISABLETRACKINGMSG']._serialized_start=39660
+  _globals['_DISABLETRACKINGMSG']._serialized_end=39762
+  _globals['_SENDINGEVENT']._serialized_start=39764
+  _globals['_SENDINGEVENT']._serialized_end=39794
+  _globals['_SENDINGEVENTMSG']._serialized_start=39796
+  _globals['_SENDINGEVENTMSG']._serialized_end=39892
+  _globals['_SENDEVENTFAILURE']._serialized_start=39894
+  _globals['_SENDEVENTFAILURE']._serialized_end=39912
+  _globals['_SENDEVENTFAILUREMSG']._serialized_start=39914
+  _globals['_SENDEVENTFAILUREMSG']._serialized_end=40018
+  _globals['_FLUSHEVENTS']._serialized_start=40020
+  _globals['_FLUSHEVENTS']._serialized_end=40033
+  _globals['_FLUSHEVENTSMSG']._serialized_start=40035
+  _globals['_FLUSHEVENTSMSG']._serialized_end=40129
+  _globals['_FLUSHEVENTSFAILURE']._serialized_start=40131
+  _globals['_FLUSHEVENTSFAILURE']._serialized_end=40151
+  _globals['_FLUSHEVENTSFAILUREMSG']._serialized_start=40153
+  _globals['_FLUSHEVENTSFAILUREMSG']._serialized_end=40261
+  _globals['_TRACKINGINITIALIZEFAILURE']._serialized_start=40263
+  _globals['_TRACKINGINITIALIZEFAILURE']._serialized_end=40308
+  _globals['_TRACKINGINITIALIZEFAILUREMSG']._serialized_start=40310
+  _globals['_TRACKINGINITIALIZEFAILUREMSG']._serialized_end=40432
+  _globals['_RUNRESULTWARNINGMESSAGE']._serialized_start=40434
+  _globals['_RUNRESULTWARNINGMESSAGE']._serialized_end=40472
+  _globals['_RUNRESULTWARNINGMESSAGEMSG']._serialized_start=40474
+  _globals['_RUNRESULTWARNINGMESSAGEMSG']._serialized_end=40592
+  _globals['_DEBUGCMDOUT']._serialized_start=40594
+  _globals['_DEBUGCMDOUT']._serialized_end=40620
+  _globals['_DEBUGCMDOUTMSG']._serialized_start=40622
+  _globals['_DEBUGCMDOUTMSG']._serialized_end=40716
+  _globals['_DEBUGCMDRESULT']._serialized_start=40718
+  _globals['_DEBUGCMDRESULT']._serialized_end=40747
+  _globals['_DEBUGCMDRESULTMSG']._serialized_start=40749
+  _globals['_DEBUGCMDRESULTMSG']._serialized_end=40849
+  _globals['_LISTCMDOUT']._serialized_start=40851
+  _globals['_LISTCMDOUT']._serialized_end=40876
+  _globals['_LISTCMDOUTMSG']._serialized_start=40878
+  _globals['_LISTCMDOUTMSG']._serialized_end=40970
+  _globals['_NOTE']._serialized_start=40972
+  _globals['_NOTE']._serialized_end=40991
+  _globals['_NOTEMSG']._serialized_start=40993
+  _globals['_NOTEMSG']._serialized_end=41073
+  _globals['_RESOURCEREPORT']._serialized_start=41076
+  _globals['_RESOURCEREPORT']._serialized_end=41312
+  _globals['_RESOURCEREPORTMSG']._serialized_start=41314
+  _globals['_RESOURCEREPORTMSG']._serialized_end=41414
 # @@protoc_insertion_point(module_scope)
diff --git a/core/dbt/flags.py b/core/dbt/flags.py
index 891d510f2e1..241189f556a 100644
--- a/core/dbt/flags.py
+++ b/core/dbt/flags.py
@@ -39,23 +39,24 @@ def get_flags():
     return GLOBAL_FLAGS
 
 
-def set_from_args(args: Namespace, user_config):
+def set_from_args(args: Namespace, project_flags):
     global GLOBAL_FLAGS
     from dbt.cli.main import cli
     from dbt.cli.flags import Flags, convert_config
 
-    # we set attributes of args after initialize the flags, but user_config
+    # we set attributes of args after initialize the flags, but project_flags
     # is being read in the Flags constructor, so we need to read it here and pass in
-    # to make sure we use the correct user_config
-    if (hasattr(args, "PROFILES_DIR") or hasattr(args, "profiles_dir")) and not user_config:
-        from dbt.config.profile import read_user_config
+    # to make sure we use the correct project_flags
+    profiles_dir = getattr(args, "PROFILES_DIR", None) or getattr(args, "profiles_dir", None)
+    project_dir = getattr(args, "PROJECT_DIR", None) or getattr(args, "project_dir", None)
+    if profiles_dir and project_dir:
+        from dbt.config.project import read_project_flags
 
-        profiles_dir = getattr(args, "PROFILES_DIR", None) or getattr(args, "profiles_dir")
-        user_config = read_user_config(profiles_dir)
+        project_flags = read_project_flags(project_dir, profiles_dir)
 
     # make a dummy context to get the flags, totally arbitrary
     ctx = cli.make_context("run", ["run"])
-    flags = Flags(ctx, user_config)
+    flags = Flags(ctx, project_flags)
     for arg_name, args_param_value in vars(args).items():
         args_param_value = convert_config(arg_name, args_param_value)
         object.__setattr__(flags, arg_name.upper(), args_param_value)
diff --git a/core/dbt/include/starter_project/dbt_project.yml b/core/dbt/include/starter_project/dbt_project.yml
index 630001eed2f..c7e1fcdb0ef 100644
--- a/core/dbt/include/starter_project/dbt_project.yml
+++ b/core/dbt/include/starter_project/dbt_project.yml
@@ -4,7 +4,6 @@
 # name or the intended use of these models
 name: '{project_name}'
 version: '1.0.0'
-config-version: 2
 
 # This setting configures which "profile" dbt uses for this project.
 profile: '{profile_name}'
diff --git a/core/dbt/tests/fixtures/project.py b/core/dbt/tests/fixtures/project.py
index 1b7ef899bd0..8ea01050367 100644
--- a/core/dbt/tests/fixtures/project.py
+++ b/core/dbt/tests/fixtures/project.py
@@ -142,7 +142,6 @@ def profiles_config_update():
 @pytest.fixture(scope="class")
 def dbt_profile_data(unique_schema, dbt_profile_target, profiles_config_update):
     profile = {
-        "config": {"send_anonymous_usage_stats": False},
         "test": {
             "outputs": {
                 "default": {},
@@ -181,6 +180,7 @@ def dbt_project_yml(project_root, project_config_update):
     project_config = {
         "name": "test",
         "profile": "test",
+        "flags": {"send_anonymous_usage_stats": False},
     }
     if project_config_update:
         if isinstance(project_config_update, dict):
diff --git a/core/dbt/tracking.py b/core/dbt/tracking.py
index 88022c93f0f..7febe4acdf6 100644
--- a/core/dbt/tracking.py
+++ b/core/dbt/tracking.py
@@ -471,7 +471,6 @@ def process(self, record):
 
 
 def initialize_from_flags(send_anonymous_usage_stats, profiles_dir):
-    # Setting these used to be in UserConfig, but had to be moved here
     global active_user
     if send_anonymous_usage_stats:
         active_user = User(profiles_dir)
diff --git a/core/dbt/utils.py b/core/dbt/utils.py
index c50df0d1f52..31697ad6146 100644
--- a/core/dbt/utils.py
+++ b/core/dbt/utils.py
@@ -631,7 +631,7 @@ def _connection_exception_retry(fn, max_attempts: int, attempt: int = 0):
 def args_to_dict(args):
     var_args = vars(args).copy()
     # update the args with the flags, which could also come from environment
-    # variables or user_config
+    # variables or project_flags
     flag_dict = flags.get_flag_dict()
     var_args.update(flag_dict)
     dict_args = {}
diff --git a/tests/functional/basic/test_mixed_case_db.py b/tests/functional/basic/test_mixed_case_db.py
index 19b2077cede..13519cc4bb4 100644
--- a/tests/functional/basic/test_mixed_case_db.py
+++ b/tests/functional/basic/test_mixed_case_db.py
@@ -16,7 +16,6 @@ def models():
 def dbt_profile_data(unique_schema):
 
     return {
-        "config": {"send_anonymous_usage_stats": False},
         "test": {
             "outputs": {
                 "default": {
diff --git a/tests/functional/basic/test_project.py b/tests/functional/basic/test_project.py
index 080c5d591d0..6602c5e300f 100644
--- a/tests/functional/basic/test_project.py
+++ b/tests/functional/basic/test_project.py
@@ -77,11 +77,16 @@ def test_dbt_cloud(self, project):
         conf = yaml.safe_load(
             Path(os.path.join(project.project_root, "dbt_project.yml")).read_text()
         )
-        assert conf == {"name": "test", "profile": "test"}
+        assert conf == {
+            "name": "test",
+            "profile": "test",
+            "flags": {"send_anonymous_usage_stats": False},
+        }
 
         config = {
             "name": "test",
             "profile": "test",
+            "flags": {"send_anonymous_usage_stats": False},
             "dbt-cloud": {
                 "account_id": "123",
                 "application": "test",
diff --git a/tests/functional/configs/test_disabled_configs.py b/tests/functional/configs/test_disabled_configs.py
index ee56a39a867..0d7cff755d8 100644
--- a/tests/functional/configs/test_disabled_configs.py
+++ b/tests/functional/configs/test_disabled_configs.py
@@ -9,7 +9,6 @@ class TestDisabledConfigs(BaseConfigProject):
     @pytest.fixture(scope="class")
     def dbt_profile_data(self, unique_schema):
         return {
-            "config": {"send_anonymous_usage_stats": False},
             "test": {
                 "outputs": {
                     "default": {
diff --git a/tests/functional/dependencies/test_local_dependency.py b/tests/functional/dependencies/test_local_dependency.py
index 5305659b95b..c537f0068a5 100644
--- a/tests/functional/dependencies/test_local_dependency.py
+++ b/tests/functional/dependencies/test_local_dependency.py
@@ -243,6 +243,10 @@ class TestSimpleDependencyNoVersionCheckConfig(BaseDependencyTest):
     @pytest.fixture(scope="class")
     def project_config_update(self):
         return {
+            "flags": {
+                "send_anonymous_usage_stats": False,
+                "version_check": False,
+            },
             "models": {
                 "schema": "dbt_test",
             },
@@ -251,15 +255,6 @@ def project_config_update(self):
             },
         }
 
-    @pytest.fixture(scope="class")
-    def profiles_config_update(self):
-        return {
-            "config": {
-                "send_anonymous_usage_stats": False,
-                "version_check": False,
-            }
-        }
-
     @pytest.fixture(scope="class")
     def macros(self):
         return {"macro.sql": macros__macro_override_schema_sql}
diff --git a/tests/functional/deprecations/test_deprecations.py b/tests/functional/deprecations/test_deprecations.py
index 6c2678433b0..68430ff4b8b 100644
--- a/tests/functional/deprecations/test_deprecations.py
+++ b/tests/functional/deprecations/test_deprecations.py
@@ -2,7 +2,8 @@
 
 from dbt import deprecations
 import dbt.exceptions
-from dbt.tests.util import run_dbt
+from dbt.tests.util import run_dbt, write_file
+import yaml
 
 
 models__already_exists_sql = """
@@ -157,3 +158,31 @@ def test_exposure_name_fail(self, project):
         exc_str = " ".join(str(exc.value).split())  # flatten all whitespace
         expected_msg = "Starting in v1.3, the 'name' of an exposure should contain only letters, numbers, and underscores."
         assert expected_msg in exc_str
+
+
+class TestPrjectFlagsMovedDeprecation:
+    @pytest.fixture(scope="class")
+    def profiles_config_update(self):
+        return {
+            "config": {"send_anonymous_usage_stats": False},
+        }
+
+    @pytest.fixture(scope="class")
+    def dbt_project_yml(self, project_root, project_config_update):
+        project_config = {
+            "name": "test",
+            "profile": "test",
+        }
+        write_file(yaml.safe_dump(project_config), project_root, "dbt_project.yml")
+        return project_config
+
+    @pytest.fixture(scope="class")
+    def models(self):
+        return {"my_model.sql": "select 1 as fun"}
+
+    def test_profile_config_deprecation(self, project):
+        deprecations.reset_deprecations()
+        assert deprecations.active_deprecations == set()
+        run_dbt(["parse"])
+        expected = {"project-flags-moved"}
+        assert expected == deprecations.active_deprecations
diff --git a/tests/functional/fail_fast/test_fail_fast_run.py b/tests/functional/fail_fast/test_fail_fast_run.py
index ea956a2d540..457d620cd8d 100644
--- a/tests/functional/fail_fast/test_fail_fast_run.py
+++ b/tests/functional/fail_fast/test_fail_fast_run.py
@@ -44,15 +44,15 @@ def test_fail_fast_run(
 
 class TestFailFastFromConfig(FailFastBase):
     @pytest.fixture(scope="class")
-    def profiles_config_update(self):
+    def project_config_update(self):
         return {
-            "config": {
+            "flags": {
                 "send_anonymous_usage_stats": False,
                 "fail_fast": True,
             }
         }
 
-    def test_fail_fast_run_user_config(
+    def test_fail_fast_run_project_flags(
         self,
         project,
         models,  # noqa: F811
diff --git a/tests/functional/init/test_init.py b/tests/functional/init/test_init.py
index 9ac821d7c26..6aee523320c 100644
--- a/tests/functional/init/test_init.py
+++ b/tests/functional/init/test_init.py
@@ -70,9 +70,7 @@ def test_init_task_in_project_with_existing_profiles_yml(
         with open(os.path.join(project.profiles_dir, "profiles.yml"), "r") as f:
             assert (
                 f.read()
-                == """config:
-  send_anonymous_usage_stats: false
-test:
+                == """test:
   outputs:
     dev:
       dbname: test_db
@@ -391,9 +389,7 @@ def test_init_task_in_project_with_invalid_profile_template(
         with open(os.path.join(project.profiles_dir, "profiles.yml"), "r") as f:
             assert (
                 f.read()
-                == """config:
-  send_anonymous_usage_stats: false
-test:
+                == """test:
   outputs:
     dev:
       dbname: test_db
@@ -430,7 +426,6 @@ class TestInitOutsideOfProject(TestInitOutsideOfProjectBase):
     @pytest.fixture(scope="class")
     def dbt_profile_data(self, unique_schema):
         return {
-            "config": {"send_anonymous_usage_stats": False},
             "test": {
                 "outputs": {
                     "default2": {
@@ -513,9 +508,7 @@ def test_init_task_outside_of_project(
         with open(os.path.join(project.profiles_dir, "profiles.yml"), "r") as f:
             assert (
                 f.read()
-                == f"""config:
-  send_anonymous_usage_stats: false
-{project_name}:
+                == f"""{project_name}:
   outputs:
     dev:
       dbname: test_db
@@ -560,7 +553,6 @@ def test_init_task_outside_of_project(
 # name or the intended use of these models
 name: '{project_name}'
 version: '1.0.0'
-config-version: 2
 
 # This setting configures which "profile" dbt uses for this project.
 profile: '{project_name}'
@@ -679,7 +671,6 @@ def test_init_provided_project_name_and_skip_profile_setup(
 # name or the intended use of these models
 name: '{project_name}'
 version: '1.0.0'
-config-version: 2
 
 # This setting configures which "profile" dbt uses for this project.
 profile: '{project_name}'
@@ -766,7 +757,6 @@ def test_init_task_outside_of_project_with_specified_profile(
 # name or the intended use of these models
 name: '{project_name}'
 version: '1.0.0'
-config-version: 2
 
 # This setting configures which "profile" dbt uses for this project.
 profile: 'test'
diff --git a/tests/functional/materializations/conftest.py b/tests/functional/materializations/conftest.py
index b808c1a6a7b..8441e72c0b2 100644
--- a/tests/functional/materializations/conftest.py
+++ b/tests/functional/materializations/conftest.py
@@ -325,6 +325,21 @@
 {%- endmaterialization -%}
 """
 
+custom_materialization_dep__dbt_project_yml = """
+name: custom_materialization_default
+macro-paths: ['macros']
+"""
+
+custom_materialization_sql = """
+{% materialization custom_materialization, default %}
+    {%- set target_relation = this.incorporate(type='table') %}
+    {% call statement('main') -%}
+        select 1 as column1
+    {%- endcall %}
+    {{ return({'relations': [target_relation]}) }}
+{% endmaterialization %}
+"""
+
 
 @pytest.fixture(scope="class")
 def override_view_adapter_pass_dep(project_root):
@@ -368,3 +383,12 @@ def override_view_return_no_relation(project_root):
         },
     }
     write_project_files(project_root, "override-view-return-no-relation", files)
+
+
+@pytest.fixture(scope="class")
+def custom_materialization_dep(project_root):
+    files = {
+        "dbt_project.yml": custom_materialization_dep__dbt_project_yml,
+        "macros": {"custom_materialization.sql": custom_materialization_sql},
+    }
+    write_project_files(project_root, "custom-materialization-dep", files)
diff --git a/tests/functional/materializations/test_custom_materialization.py b/tests/functional/materializations/test_custom_materialization.py
index 838eb68bb01..2c3ec4e74c2 100644
--- a/tests/functional/materializations/test_custom_materialization.py
+++ b/tests/functional/materializations/test_custom_materialization.py
@@ -1,7 +1,7 @@
 import pytest
 
 from dbt.tests.util import run_dbt
-
+from dbt import deprecations
 
 models__model_sql = """
 {{ config(materialized='view') }}
@@ -10,11 +10,24 @@
 """
 
 
+models_custom_materialization__model_sql = """
+{{ config(materialized='custom_materialization') }}
+select 1 as id
+
+"""
+
+
 @pytest.fixture(scope="class")
 def models():
     return {"model.sql": models__model_sql}
 
 
+@pytest.fixture(scope="class")
+def set_up_deprecations():
+    deprecations.reset_deprecations()
+    assert deprecations.active_deprecations == set()
+
+
 class TestOverrideAdapterDependency:
     # make sure that if there's a dependency with an adapter-specific
     # materialization, we honor that materialization
@@ -22,22 +35,171 @@ class TestOverrideAdapterDependency:
     def packages(self):
         return {"packages": [{"local": "override-view-adapter-dep"}]}
 
-    def test_adapter_dependency(self, project, override_view_adapter_dep):
+    def test_adapter_dependency(self, project, override_view_adapter_dep, set_up_deprecations):
+        run_dbt(["deps"])
+        # this should error because the override is buggy
+        run_dbt(["run"], expect_pass=False)
+
+        # overriding a built-in materialization scoped to adapter from package is deprecated
+        assert deprecations.active_deprecations == {"package-materialization-override"}
+
+
+class TestOverrideAdapterDependencyDeprecated:
+    # make sure that if there's a dependency with an adapter-specific
+    # materialization, we honor that materialization
+    @pytest.fixture(scope="class")
+    def packages(self):
+        return {"packages": [{"local": "override-view-adapter-dep"}]}
+
+    @pytest.fixture(scope="class")
+    def project_config_update(self):
+        return {
+            "flags": {
+                "require_explicit_package_overrides_for_builtin_materializations": True,
+            },
+        }
+
+    def test_adapter_dependency_deprecate_overrides(
+        self, project, override_view_adapter_dep, set_up_deprecations
+    ):
+        run_dbt(["deps"])
+        # this should pass because the override is buggy and unused
+        run_dbt(["run"])
+
+        # no deprecation warning -- flag used correctly
+        assert deprecations.active_deprecations == set()
+
+
+class TestOverrideAdapterDependencyLegacy:
+    # make sure that if there's a dependency with an adapter-specific
+    # materialization, we honor that materialization
+    @pytest.fixture(scope="class")
+    def packages(self):
+        return {"packages": [{"local": "override-view-adapter-dep"}]}
+
+    @pytest.fixture(scope="class")
+    def project_config_update(self):
+        return {
+            "flags": {
+                "require_explicit_package_overrides_for_builtin_materializations": False,
+            },
+        }
+
+    def test_adapter_dependency(self, project, override_view_adapter_dep, set_up_deprecations):
         run_dbt(["deps"])
         # this should error because the override is buggy
         run_dbt(["run"], expect_pass=False)
 
+        # overriding a built-in materialization scoped to adapter from package is deprecated
+        assert deprecations.active_deprecations == {"package-materialization-override"}
+
 
 class TestOverrideDefaultDependency:
     @pytest.fixture(scope="class")
     def packages(self):
         return {"packages": [{"local": "override-view-default-dep"}]}
 
-    def test_default_dependency(self, project, override_view_default_dep):
+    def test_default_dependency(self, project, override_view_default_dep, set_up_deprecations):
+        run_dbt(["deps"])
+        # this should error because the override is buggy
+        run_dbt(["run"], expect_pass=False)
+
+        # overriding a built-in materialization from package is deprecated
+        assert deprecations.active_deprecations == {"package-materialization-override"}
+
+
+class TestOverrideDefaultDependencyDeprecated:
+    @pytest.fixture(scope="class")
+    def packages(self):
+        return {"packages": [{"local": "override-view-default-dep"}]}
+
+    @pytest.fixture(scope="class")
+    def project_config_update(self):
+        return {
+            "flags": {
+                "require_explicit_package_overrides_for_builtin_materializations": True,
+            },
+        }
+
+    def test_default_dependency_deprecated(
+        self, project, override_view_default_dep, set_up_deprecations
+    ):
+        run_dbt(["deps"])
+        # this should pass because the override is buggy and unused
+        run_dbt(["run"])
+
+        # overriding a built-in materialization from package is deprecated
+        assert deprecations.active_deprecations == set()
+
+
+class TestOverrideDefaultDependencyLegacy:
+    @pytest.fixture(scope="class")
+    def packages(self):
+        return {"packages": [{"local": "override-view-default-dep"}]}
+
+    @pytest.fixture(scope="class")
+    def project_config_update(self):
+        return {
+            "flags": {
+                "require_explicit_package_overrides_for_builtin_materializations": False,
+            },
+        }
+
+    def test_default_dependency(self, project, override_view_default_dep, set_up_deprecations):
+        run_dbt(["deps"])
+        # this should error because the override is buggy
+        run_dbt(["run"], expect_pass=False)
+
+        # overriding a built-in materialization from package is deprecated
+        assert deprecations.active_deprecations == {"package-materialization-override"}
+
+
+root_view_override_macro = """
+{% materialization view, default %}
+ {{ return(view_default_override.materialization_view_default()) }}
+{% endmaterialization %}
+"""
+
+
+class TestOverrideDefaultDependencyRootOverride:
+    @pytest.fixture(scope="class")
+    def packages(self):
+        return {"packages": [{"local": "override-view-default-dep"}]}
+
+    @pytest.fixture(scope="class")
+    def macros(self):
+        return {"my_view.sql": root_view_override_macro}
+
+    def test_default_dependency_with_root_override(
+        self, project, override_view_default_dep, set_up_deprecations
+    ):
         run_dbt(["deps"])
         # this should error because the override is buggy
         run_dbt(["run"], expect_pass=False)
 
+        # using an package-overriden built-in materialization in a root matereialization is _not_ deprecated
+        assert deprecations.active_deprecations == set()
+
+
+class TestCustomMaterializationDependency:
+    @pytest.fixture(scope="class")
+    def models(self):
+        return {"model.sql": models_custom_materialization__model_sql}
+
+    @pytest.fixture(scope="class")
+    def packages(self):
+        return {"packages": [{"local": "custom-materialization-dep"}]}
+
+    def test_custom_materialization_deopendency(
+        self, project, custom_materialization_dep, set_up_deprecations
+    ):
+        run_dbt(["deps"])
+        # custom materilization is valid
+        run_dbt(["run"])
+
+        # using a custom materialization is from an installed package is _not_ deprecated
+        assert deprecations.active_deprecations == set()
+
 
 class TestOverrideAdapterDependencyPassing:
     @pytest.fixture(scope="class")
diff --git a/tests/functional/metrics/test_metric_deferral.py b/tests/functional/metrics/test_metric_deferral.py
index 620c8dba25f..8803bf249da 100644
--- a/tests/functional/metrics/test_metric_deferral.py
+++ b/tests/functional/metrics/test_metric_deferral.py
@@ -23,7 +23,6 @@ def setup(self, project):
     @pytest.fixture(scope="class")
     def dbt_profile_data(self, unique_schema):
         return {
-            "config": {"send_anonymous_usage_stats": False},
             "test": {
                 "outputs": {
                     "default": {
diff --git a/tests/functional/run_operations/test_run_operations.py b/tests/functional/run_operations/test_run_operations.py
index aa6d908b8ce..c713c8d1939 100644
--- a/tests/functional/run_operations/test_run_operations.py
+++ b/tests/functional/run_operations/test_run_operations.py
@@ -28,7 +28,6 @@ def macros(self):
     @pytest.fixture(scope="class")
     def dbt_profile_data(self, unique_schema):
         return {
-            "config": {"send_anonymous_usage_stats": False},
             "test": {
                 "outputs": {
                     "default": {
diff --git a/tests/unit/test_cli_flags.py b/tests/unit/test_cli_flags.py
index 83c0e251deb..c7fcd92e128 100644
--- a/tests/unit/test_cli_flags.py
+++ b/tests/unit/test_cli_flags.py
@@ -9,7 +9,7 @@
 from dbt.cli.flags import Flags
 from dbt.cli.main import cli
 from dbt.cli.types import Command
-from dbt.contracts.project import UserConfig
+from dbt.contracts.project import ProjectFlags
 from dbt.exceptions import DbtInternalError
 from dbt.helper_types import WarnErrorOptions
 from dbt.tests.util import rm_file, write_file
@@ -27,8 +27,8 @@ def run_context(self) -> click.Context:
         return self.make_dbt_context("run", ["run"])
 
     @pytest.fixture
-    def user_config(self) -> UserConfig:
-        return UserConfig()
+    def project_flags(self) -> ProjectFlags:
+        return ProjectFlags()
 
     def test_which(self, run_context):
         flags = Flags(run_context)
@@ -110,35 +110,35 @@ def test_anonymous_usage_state(
         flags = Flags(run_context)
         assert flags.SEND_ANONYMOUS_USAGE_STATS == expected_anonymous_usage_stats
 
-    def test_empty_user_config_uses_default(self, run_context, user_config):
-        flags = Flags(run_context, user_config)
+    def test_empty_project_flags_uses_default(self, run_context, project_flags):
+        flags = Flags(run_context, project_flags)
         assert flags.USE_COLORS == run_context.params["use_colors"]
 
-    def test_none_user_config_uses_default(self, run_context):
+    def test_none_project_flags_uses_default(self, run_context):
         flags = Flags(run_context, None)
         assert flags.USE_COLORS == run_context.params["use_colors"]
 
-    def test_prefer_user_config_to_default(self, run_context, user_config):
-        user_config.use_colors = False
+    def test_prefer_project_flags_to_default(self, run_context, project_flags):
+        project_flags.use_colors = False
         # ensure default value is not the same as user config
-        assert run_context.params["use_colors"] is not user_config.use_colors
+        assert run_context.params["use_colors"] is not project_flags.use_colors
 
-        flags = Flags(run_context, user_config)
-        assert flags.USE_COLORS == user_config.use_colors
+        flags = Flags(run_context, project_flags)
+        assert flags.USE_COLORS == project_flags.use_colors
 
-    def test_prefer_param_value_to_user_config(self):
-        user_config = UserConfig(use_colors=False)
+    def test_prefer_param_value_to_project_flags(self):
+        project_flags = ProjectFlags(use_colors=False)
         context = self.make_dbt_context("run", ["--use-colors", "True", "run"])
 
-        flags = Flags(context, user_config)
+        flags = Flags(context, project_flags)
         assert flags.USE_COLORS
 
-    def test_prefer_env_to_user_config(self, monkeypatch, user_config):
-        user_config.use_colors = False
+    def test_prefer_env_to_project_flags(self, monkeypatch, project_flags):
+        project_flags.use_colors = False
         monkeypatch.setenv("DBT_USE_COLORS", "True")
         context = self.make_dbt_context("run", ["run"])
 
-        flags = Flags(context, user_config)
+        flags = Flags(context, project_flags)
         assert flags.USE_COLORS
 
     def test_mutually_exclusive_options_passed_separately(self):
@@ -163,14 +163,14 @@ def test_mutually_exclusive_options_from_cli(self):
             Flags(context)
 
     @pytest.mark.parametrize("warn_error", [True, False])
-    def test_mutually_exclusive_options_from_user_config(self, warn_error, user_config):
-        user_config.warn_error = warn_error
+    def test_mutually_exclusive_options_from_project_flags(self, warn_error, project_flags):
+        project_flags.warn_error = warn_error
         context = self.make_dbt_context(
             "run", ["--warn-error-options", '{"include": "all"}', "run"]
         )
 
         with pytest.raises(DbtUsageException):
-            Flags(context, user_config)
+            Flags(context, project_flags)
 
     @pytest.mark.parametrize("warn_error", ["True", "False"])
     def test_mutually_exclusive_options_from_envvar(self, warn_error, monkeypatch):
@@ -182,14 +182,16 @@ def test_mutually_exclusive_options_from_envvar(self, warn_error, monkeypatch):
             Flags(context)
 
     @pytest.mark.parametrize("warn_error", [True, False])
-    def test_mutually_exclusive_options_from_cli_and_user_config(self, warn_error, user_config):
-        user_config.warn_error = warn_error
+    def test_mutually_exclusive_options_from_cli_and_project_flags(
+        self, warn_error, project_flags
+    ):
+        project_flags.warn_error = warn_error
         context = self.make_dbt_context(
             "run", ["--warn-error-options", '{"include": "all"}', "run"]
         )
 
         with pytest.raises(DbtUsageException):
-            Flags(context, user_config)
+            Flags(context, project_flags)
 
     @pytest.mark.parametrize("warn_error", ["True", "False"])
     def test_mutually_exclusive_options_from_cli_and_envvar(self, warn_error, monkeypatch):
@@ -202,15 +204,15 @@ def test_mutually_exclusive_options_from_cli_and_envvar(self, warn_error, monkey
             Flags(context)
 
     @pytest.mark.parametrize("warn_error", ["True", "False"])
-    def test_mutually_exclusive_options_from_user_config_and_envvar(
-        self, user_config, warn_error, monkeypatch
+    def test_mutually_exclusive_options_from_project_flags_and_envvar(
+        self, project_flags, warn_error, monkeypatch
     ):
-        user_config.warn_error = warn_error
+        project_flags.warn_error = warn_error
         monkeypatch.setenv("DBT_WARN_ERROR_OPTIONS", '{"include": "all"}')
         context = self.make_dbt_context("run", ["run"])
 
         with pytest.raises(DbtUsageException):
-            Flags(context, user_config)
+            Flags(context, project_flags)
 
     @pytest.mark.parametrize(
         "cli_colors,cli_colors_file,flag_colors,flag_colors_file",
@@ -319,10 +321,10 @@ def test_log_format_interaction(
         assert flags.LOG_FORMAT_FILE == flag_log_format_file
 
     def test_log_settings_from_config(self):
-        """Test that values set in UserConfig for log settings will set flags as expected"""
+        """Test that values set in ProjectFlags for log settings will set flags as expected"""
         context = self.make_dbt_context("run", ["run"])
 
-        config = UserConfig(log_format="json", log_level="warn", use_colors=False)
+        config = ProjectFlags(log_format="json", log_level="warn", use_colors=False)
 
         flags = Flags(context, config)
 
@@ -334,11 +336,11 @@ def test_log_settings_from_config(self):
         assert flags.USE_COLORS_FILE is False
 
     def test_log_file_settings_from_config(self):
-        """Test that values set in UserConfig for log *file* settings will set flags as expected, leaving the console
+        """Test that values set in ProjectFlags for log *file* settings will set flags as expected, leaving the console
         logging flags with their default values"""
         context = self.make_dbt_context("run", ["run"])
 
-        config = UserConfig(log_format_file="json", log_level_file="warn", use_colors_file=False)
+        config = ProjectFlags(log_format_file="json", log_level_file="warn", use_colors_file=False)
 
         flags = Flags(context, config)
 
@@ -369,6 +371,14 @@ def test_global_flag_at_child_context(self):
 
         assert flags_a.USE_COLORS == flags_b.USE_COLORS
 
+    def test_set_project_only_flags(self, project_flags, run_context):
+        flags = Flags(run_context, project_flags)
+
+        for project_only_flag, project_only_flag_value in project_flags.project_only_flags.items():
+            assert getattr(flags, project_only_flag) == project_only_flag_value
+            # sanity check: ensure project_only_flag is not part of the click context
+            assert project_only_flag not in run_context.params
+
     def _create_flags_from_dict(self, cmd, d):
         write_file("", "profiles.yml")
         result = Flags.from_dict(cmd, d)
@@ -409,3 +419,38 @@ def test_from_dict_0_value(self):
         args_dict = {"log_file_max_bytes": 0}
         flags = Flags.from_dict(Command.RUN, args_dict)
         assert flags.LOG_FILE_MAX_BYTES == 0
+
+
+def test_project_flag_defaults():
+    flags = ProjectFlags()
+    # From # 9183: Let's add a unit test that ensures that:
+    # every attribute of ProjectFlags that has a corresponding click option
+    # in params.py should be set to None by default (except for anon user
+    # tracking). Going forward, flags can have non-None defaults if they
+    # do not have a corresponding CLI option/env var. These will be used
+    # to control backwards incompatible interface or behaviour changes.
+
+    # List of all flags except send_anonymous_usage_stats
+    project_flags = [
+        "cache_selected_only",
+        "debug",
+        "fail_fast",
+        "indirect_selection",
+        "log_format",
+        "log_format_file",
+        "log_level",
+        "log_level_file",
+        "partial_parse",
+        "populate_cache",
+        "printer_width",
+        "static_parser",
+        "use_colors",
+        "use_colors_file",
+        "use_experimental_parser",
+        "version_check",
+        "warn_error",
+        "warn_error_options",
+        "write_json",
+    ]
+    for flag in project_flags:
+        assert getattr(flags, flag) is None
diff --git a/tests/unit/test_config.py b/tests/unit/test_config.py
index 38516fdea0a..e8728091c5d 100644
--- a/tests/unit/test_config.py
+++ b/tests/unit/test_config.py
@@ -119,12 +119,17 @@ class BaseConfigTest(unittest.TestCase):
     """
 
     def setUp(self):
+        # Write project
+        self.project_dir = normalize(tempfile.mkdtemp())
         self.default_project_data = {
             "version": "0.0.1",
             "name": "my_test_project",
             "profile": "default",
-            "config-version": 2,
         }
+        self.write_project(self.default_project_data)
+
+        # Write profile
+        self.profiles_dir = normalize(tempfile.mkdtemp())
         self.default_profile_data = {
             "default": {
                 "outputs": {
@@ -176,6 +181,8 @@ def setUp(self):
             },
             "empty_profile_data": {},
         }
+        self.write_profile(self.default_profile_data)
+
         self.args = Namespace(
             profiles_dir=self.profiles_dir,
             cli_vars={},
@@ -203,13 +210,6 @@ def assertRaisesOrReturns(self, exc):
         else:
             return self.assertRaises(exc)
 
-
-class BaseFileTest(BaseConfigTest):
-    def setUp(self):
-        self.project_dir = normalize(tempfile.mkdtemp())
-        self.profiles_dir = normalize(tempfile.mkdtemp())
-        super().setUp()
-
     def tearDown(self):
         try:
             shutil.rmtree(self.project_dir)
@@ -248,11 +248,6 @@ def write_empty_profile(self):
 
 
 class TestProfile(BaseConfigTest):
-    def setUp(self):
-        self.profiles_dir = "/invalid-path"
-        self.project_dir = "/invalid-project-path"
-        super().setUp()
-
     def from_raw_profiles(self):
         renderer = empty_profile_renderer()
         return dbt.config.Profile.from_raw_profiles(self.default_profile_data, "default", renderer)
@@ -262,8 +257,6 @@ def test_from_raw_profiles(self):
         self.assertEqual(profile.profile_name, "default")
         self.assertEqual(profile.target_name, "postgres")
         self.assertEqual(profile.threads, 7)
-        self.assertTrue(profile.user_config.send_anonymous_usage_stats)
-        self.assertIsNone(profile.user_config.use_colors)
         self.assertTrue(isinstance(profile.credentials, PostgresCredentials))
         self.assertEqual(profile.credentials.type, "postgres")
         self.assertEqual(profile.credentials.host, "postgres-db-hostname")
@@ -273,29 +266,6 @@ def test_from_raw_profiles(self):
         self.assertEqual(profile.credentials.schema, "postgres-schema")
         self.assertEqual(profile.credentials.database, "postgres-db-name")
 
-    def test_config_override(self):
-        self.default_profile_data["config"] = {
-            "send_anonymous_usage_stats": False,
-            "use_colors": False,
-        }
-        profile = self.from_raw_profiles()
-        self.assertEqual(profile.profile_name, "default")
-        self.assertEqual(profile.target_name, "postgres")
-        self.assertFalse(profile.user_config.send_anonymous_usage_stats)
-        self.assertFalse(profile.user_config.use_colors)
-
-    def test_partial_config_override(self):
-        self.default_profile_data["config"] = {
-            "send_anonymous_usage_stats": False,
-            "printer_width": 60,
-        }
-        profile = self.from_raw_profiles()
-        self.assertEqual(profile.profile_name, "default")
-        self.assertEqual(profile.target_name, "postgres")
-        self.assertFalse(profile.user_config.send_anonymous_usage_stats)
-        self.assertIsNone(profile.user_config.use_colors)
-        self.assertEqual(profile.user_config.printer_width, 60)
-
     def test_missing_type(self):
         del self.default_profile_data["default"]["outputs"]["postgres"]["type"]
         with self.assertRaises(dbt.exceptions.DbtProfileError) as exc:
@@ -337,7 +307,7 @@ def test_extra_path(self):
             }
         )
         with self.assertRaises(dbt.exceptions.DbtProjectError) as exc:
-            project_from_config_norender(self.default_project_data)
+            project_from_config_norender(self.default_project_data, project_root=self.project_dir)
 
         self.assertIn("source-paths and model-paths", str(exc.exception))
         self.assertIn("cannot both be defined.", str(exc.exception))
@@ -403,11 +373,7 @@ def test_invalid_env_vars(self):
         self.assertIn("Could not convert value 'hello' into type 'number'", str(exc.exception))
 
 
-class TestProfileFile(BaseFileTest):
-    def setUp(self):
-        super().setUp()
-        self.write_profile(self.default_profile_data)
-
+class TestProfileFile(BaseConfigTest):
     def from_raw_profile_info(self, raw_profile=None, profile_name="default", **kwargs):
         if raw_profile is None:
             raw_profile = self.default_profile_data["default"]
@@ -438,8 +404,6 @@ def test_profile_simple(self):
         self.assertEqual(profile.profile_name, "default")
         self.assertEqual(profile.target_name, "postgres")
         self.assertEqual(profile.threads, 7)
-        self.assertTrue(profile.user_config.send_anonymous_usage_stats)
-        self.assertIsNone(profile.user_config.use_colors)
         self.assertTrue(isinstance(profile.credentials, PostgresCredentials))
         self.assertEqual(profile.credentials.type, "postgres")
         self.assertEqual(profile.credentials.host, "postgres-db-hostname")
@@ -464,8 +428,6 @@ def test_profile_override(self):
         self.assertEqual(profile.profile_name, "other")
         self.assertEqual(profile.target_name, "other-postgres")
         self.assertEqual(profile.threads, 3)
-        self.assertTrue(profile.user_config.send_anonymous_usage_stats)
-        self.assertIsNone(profile.user_config.use_colors)
         self.assertTrue(isinstance(profile.credentials, PostgresCredentials))
         self.assertEqual(profile.credentials.type, "postgres")
         self.assertEqual(profile.credentials.host, "other-postgres-db-hostname")
@@ -485,8 +447,6 @@ def test_env_vars(self):
         self.assertEqual(profile.profile_name, "default")
         self.assertEqual(profile.target_name, "with-vars")
         self.assertEqual(profile.threads, 1)
-        self.assertTrue(profile.user_config.send_anonymous_usage_stats)
-        self.assertIsNone(profile.user_config.use_colors)
         self.assertEqual(profile.credentials.type, "postgres")
         self.assertEqual(profile.credentials.host, "env-postgres-host")
         self.assertEqual(profile.credentials.port, 6543)
@@ -505,8 +465,6 @@ def test_env_vars_env_target(self):
         self.assertEqual(profile.profile_name, "default")
         self.assertEqual(profile.target_name, "with-vars")
         self.assertEqual(profile.threads, 1)
-        self.assertTrue(profile.user_config.send_anonymous_usage_stats)
-        self.assertIsNone(profile.user_config.use_colors)
         self.assertEqual(profile.credentials.type, "postgres")
         self.assertEqual(profile.credentials.host, "env-postgres-host")
         self.assertEqual(profile.credentials.port, 6543)
@@ -537,8 +495,6 @@ def test_cli_and_env_vars(self):
         self.assertEqual(profile.profile_name, "default")
         self.assertEqual(profile.target_name, "cli-and-env-vars")
         self.assertEqual(profile.threads, 1)
-        self.assertTrue(profile.user_config.send_anonymous_usage_stats)
-        self.assertIsNone(profile.user_config.use_colors)
         self.assertEqual(profile.credentials.type, "postgres")
         self.assertEqual(profile.credentials.host, "cli-postgres-host")
         self.assertEqual(profile.credentials.port, 6543)
@@ -567,18 +523,19 @@ def test_profile_with_empty_profile_data(self):
 
 
 def project_from_config_norender(
-    cfg, packages=None, path="/invalid-root-path", verify_version=False
+    cfg, packages=None, project_root="/invalid-root-path", verify_version=False
 ):
     if packages is None:
         packages = {}
     partial = dbt.config.project.PartialProject.from_dicts(
-        path,
+        project_root,
         project_dict=cfg,
         packages_dict=packages,
         selectors_dict={},
         verify_version=verify_version,
     )
-    # no rendering
+    # no rendering ... Why?
+    partial.project_dict["project-root"] = project_root
     rendered = dbt.config.project.RenderComponents(
         project_dict=partial.project_dict,
         packages_dict=partial.packages_dict,
@@ -590,14 +547,14 @@ def project_from_config_norender(
 def project_from_config_rendered(
     cfg,
     packages=None,
-    path="/invalid-root-path",
+    project_root="/invalid-root-path",
     verify_version=False,
     packages_specified_path=PACKAGES_FILE_NAME,
 ):
     if packages is None:
         packages = {}
     partial = dbt.config.project.PartialProject.from_dicts(
-        path,
+        project_root,
         project_dict=cfg,
         packages_dict=packages,
         selectors_dict={},
@@ -608,18 +565,14 @@ def project_from_config_rendered(
 
 
 class TestProject(BaseConfigTest):
-    def setUp(self):
-        self.profiles_dir = "/invalid-profiles-path"
-        self.project_dir = "/invalid-root-path"
-        super().setUp()
-        self.default_project_data["project-root"] = self.project_dir
-
     def test_defaults(self):
-        project = project_from_config_norender(self.default_project_data)
+        project = project_from_config_norender(
+            self.default_project_data, project_root=self.project_dir
+        )
         self.assertEqual(project.project_name, "my_test_project")
         self.assertEqual(project.version, "0.0.1")
         self.assertEqual(project.profile_name, "default")
-        self.assertEqual(project.project_root, "/invalid-root-path")
+        self.assertEqual(project.project_root, self.project_dir)
         self.assertEqual(project.model_paths, ["models"])
         self.assertEqual(project.macro_paths, ["macros"])
         self.assertEqual(project.seed_paths, ["seeds"])
@@ -645,30 +598,38 @@ def test_defaults(self):
         str(project)
 
     def test_eq(self):
-        project = project_from_config_norender(self.default_project_data)
-        other = project_from_config_norender(self.default_project_data)
+        project = project_from_config_norender(
+            self.default_project_data, project_root=self.project_dir
+        )
+        other = project_from_config_norender(
+            self.default_project_data, project_root=self.project_dir
+        )
         self.assertEqual(project, other)
 
     def test_neq(self):
-        project = project_from_config_norender(self.default_project_data)
+        project = project_from_config_norender(
+            self.default_project_data, project_root=self.project_dir
+        )
         self.assertNotEqual(project, object())
 
     def test_implicit_overrides(self):
         self.default_project_data.update(
             {
                 "model-paths": ["other-models"],
-                "target-path": "other-target",
             }
         )
-        project = project_from_config_norender(self.default_project_data)
+        project = project_from_config_norender(
+            self.default_project_data, project_root=self.project_dir
+        )
         self.assertEqual(
             set(project.docs_paths),
             set(["other-models", "seeds", "snapshots", "analyses", "macros"]),
         )
-        self.assertEqual(project.clean_targets, ["other-target"])
 
     def test_hashed_name(self):
-        project = project_from_config_norender(self.default_project_data)
+        project = project_from_config_norender(
+            self.default_project_data, project_root=self.project_dir
+        )
         self.assertEqual(project.hashed_name(), "754cd47eac1d6f50a5f7cd399ec43da4")
 
     def test_all_overrides(self):
@@ -682,7 +643,6 @@ def test_all_overrides(self):
                 "analysis-paths": ["other-analyses"],
                 "docs-paths": ["docs"],
                 "asset-paths": ["other-assets"],
-                "target-path": "other-target",
                 "clean-targets": ["another-target"],
                 "packages-install-path": "other-dbt_packages",
                 "quoting": {"identifier": False},
@@ -731,11 +691,12 @@ def test_all_overrides(self):
                 {"git": "git@example.com:dbt-labs/dbt-utils.git", "revision": "test-rev"},
             ],
         }
-        project = project_from_config_norender(self.default_project_data, packages=packages)
+        project = project_from_config_norender(
+            self.default_project_data, project_root=self.project_dir, packages=packages
+        )
         self.assertEqual(project.project_name, "my_test_project")
         self.assertEqual(project.version, "0.0.1")
         self.assertEqual(project.profile_name, "default")
-        self.assertEqual(project.project_root, "/invalid-root-path")
         self.assertEqual(project.model_paths, ["other-models"])
         self.assertEqual(project.macro_paths, ["other-macros"])
         self.assertEqual(project.seed_paths, ["other-seeds"])
@@ -743,7 +704,6 @@ def test_all_overrides(self):
         self.assertEqual(project.analysis_paths, ["other-analyses"])
         self.assertEqual(project.docs_paths, ["docs"])
         self.assertEqual(project.asset_paths, ["other-assets"])
-        self.assertEqual(project.target_path, "other-target")
         self.assertEqual(project.clean_targets, ["another-target"])
         self.assertEqual(project.packages_install_path, "other-dbt_packages")
         self.assertEqual(project.quoting, {"identifier": False})
@@ -822,11 +782,12 @@ def test_string_run_hooks(self):
     def test_invalid_project_name(self):
         self.default_project_data["name"] = "invalid-project-name"
         with self.assertRaises(dbt.exceptions.DbtProjectError) as exc:
-            project_from_config_norender(self.default_project_data)
+            project_from_config_norender(self.default_project_data, project_root=self.project_dir)
 
         self.assertIn("invalid-project-name", str(exc.exception))
 
     def test_no_project(self):
+        os.remove(os.path.join(self.project_dir, "dbt_project.yml"))
         renderer = empty_project_renderer()
         with self.assertRaises(dbt.exceptions.DbtProjectError) as exc:
             dbt.config.Project.from_project_root(self.project_dir, renderer)
@@ -836,12 +797,12 @@ def test_no_project(self):
     def test_invalid_version(self):
         self.default_project_data["require-dbt-version"] = "hello!"
         with self.assertRaises(dbt.exceptions.DbtProjectError):
-            project_from_config_norender(self.default_project_data)
+            project_from_config_norender(self.default_project_data, project_root=self.project_dir)
 
     def test_unsupported_version(self):
         self.default_project_data["require-dbt-version"] = ">99999.0.0"
         # allowed, because the RuntimeConfig checks, not the Project itself
-        project_from_config_norender(self.default_project_data)
+        project_from_config_norender(self.default_project_data, project_root=self.project_dir)
 
     def test_none_values(self):
         self.default_project_data.update(
@@ -891,7 +852,9 @@ def test_query_comment_disabled(self):
                 "query-comment": None,
             }
         )
-        project = project_from_config_norender(self.default_project_data)
+        project = project_from_config_norender(
+            self.default_project_data, project_root=self.project_dir
+        )
         self.assertEqual(project.query_comment.comment, "")
         self.assertEqual(project.query_comment.append, False)
 
@@ -900,12 +863,16 @@ def test_query_comment_disabled(self):
                 "query-comment": "",
             }
         )
-        project = project_from_config_norender(self.default_project_data)
+        project = project_from_config_norender(
+            self.default_project_data, project_root=self.project_dir
+        )
         self.assertEqual(project.query_comment.comment, "")
         self.assertEqual(project.query_comment.append, False)
 
     def test_default_query_comment(self):
-        project = project_from_config_norender(self.default_project_data)
+        project = project_from_config_norender(
+            self.default_project_data, project_root=self.project_dir
+        )
         self.assertEqual(project.query_comment, QueryComment())
 
     def test_default_query_comment_append(self):
@@ -914,7 +881,9 @@ def test_default_query_comment_append(self):
                 "query-comment": {"append": True},
             }
         )
-        project = project_from_config_norender(self.default_project_data)
+        project = project_from_config_norender(
+            self.default_project_data, project_root=self.project_dir
+        )
         self.assertEqual(project.query_comment.comment, DEFAULT_QUERY_COMMENT)
         self.assertEqual(project.query_comment.append, True)
 
@@ -924,7 +893,9 @@ def test_custom_query_comment_append(self):
                 "query-comment": {"comment": "run by user test", "append": True},
             }
         )
-        project = project_from_config_norender(self.default_project_data)
+        project = project_from_config_norender(
+            self.default_project_data, project_root=self.project_dir
+        )
         self.assertEqual(project.query_comment.comment, "run by user test")
         self.assertEqual(project.query_comment.append, True)
 
@@ -946,17 +917,13 @@ def test_packages_from_dependencies(self):
         assert git_package.git == "{{ env_var('some_package') }}"
 
 
-class TestProjectFile(BaseFileTest):
-    def setUp(self):
-        super().setUp()
-        self.write_project(self.default_project_data)
-        # and after the fact, add the project root
-        self.default_project_data["project-root"] = self.project_dir
-
+class TestProjectFile(BaseConfigTest):
     def test_from_project_root(self):
         renderer = empty_project_renderer()
         project = dbt.config.Project.from_project_root(self.project_dir, renderer)
-        from_config = project_from_config_norender(self.default_project_data)
+        from_config = project_from_config_norender(
+            self.default_project_data, project_root=self.project_dir
+        )
         self.assertEqual(project, from_config)
         self.assertEqual(project.version, "0.0.1")
         self.assertEqual(project.project_name, "my_test_project")
@@ -973,12 +940,7 @@ def run(self):
         pass
 
 
-class TestConfiguredTask(BaseFileTest):
-    def setUp(self):
-        super().setUp()
-        self.write_project(self.default_project_data)
-        self.write_profile(self.default_profile_data)
-
+class TestConfiguredTask(BaseConfigTest):
     def tearDown(self):
         super().tearDown()
         # These tests will change the directory to the project path,
@@ -997,15 +959,13 @@ def test_configured_task_dir_change_with_bad_path(self):
             InheritsFromConfiguredTask.from_args(self.args)
 
 
-class TestVariableProjectFile(BaseFileTest):
+class TestVariableProjectFile(BaseConfigTest):
     def setUp(self):
         super().setUp()
         self.default_project_data["version"] = "{{ var('cli_version') }}"
         self.default_project_data["name"] = "blah"
         self.default_project_data["profile"] = "{{ env_var('env_value_profile') }}"
         self.write_project(self.default_project_data)
-        # and after the fact, add the project root
-        self.default_project_data["project-root"] = self.project_dir
 
     def test_cli_and_env_vars(self):
         renderer = dbt.config.renderer.DbtProjectYamlRenderer(None, {"cli_version": "0.1.2"})
@@ -1022,15 +982,11 @@ def test_cli_and_env_vars(self):
 
 
 class TestRuntimeConfig(BaseConfigTest):
-    def setUp(self):
-        self.profiles_dir = "/invalid-profiles-path"
-        self.project_dir = "/invalid-root-path"
-        super().setUp()
-        self.default_project_data["project-root"] = self.project_dir
-
     def get_project(self):
         return project_from_config_norender(
-            self.default_project_data, verify_version=self.args.version_check
+            self.default_project_data,
+            project_root=self.project_dir,
+            verify_version=self.args.version_check,
         )
 
     def get_profile(self):
@@ -1079,14 +1035,6 @@ def test_str(self):
         # to make sure nothing terrible happens
         str(config)
 
-    def test_validate_fails(self):
-        project = self.get_project()
-        profile = self.get_profile()
-        # invalid - must be boolean
-        profile.user_config.use_colors = 100
-        with self.assertRaises(dbt.exceptions.DbtProjectError):
-            dbt.config.RuntimeConfig.from_parts(project, profile, {})
-
     def test_supported_version(self):
         self.default_project_data["require-dbt-version"] = ">0.0.0"
         conf = self.from_parts()
@@ -1210,7 +1158,9 @@ def setUp(self):
         }
 
     def get_project(self):
-        return project_from_config_norender(self.default_project_data, verify_version=True)
+        return project_from_config_norender(
+            self.default_project_data, project_root=self.project_dir, verify_version=True
+        )
 
     def get_profile(self):
         renderer = empty_profile_renderer()
@@ -1242,14 +1192,7 @@ def test__warn_for_unused_resource_config_paths(self):
             assert expected_msg in msg
 
 
-class TestRuntimeConfigFiles(BaseFileTest):
-    def setUp(self):
-        super().setUp()
-        self.write_profile(self.default_profile_data)
-        self.write_project(self.default_project_data)
-        # and after the fact, add the project root
-        self.default_project_data["project-root"] = self.project_dir
-
+class TestRuntimeConfigFiles(BaseConfigTest):
     def test_from_args(self):
         with temp_cd(self.project_dir):
             config = dbt.config.RuntimeConfig.from_args(self.args)
@@ -1279,7 +1222,7 @@ def test_from_args(self):
         self.assertEqual(config.project_name, "my_test_project")
 
 
-class TestVariableRuntimeConfigFiles(BaseFileTest):
+class TestVariableRuntimeConfigFiles(BaseConfigTest):
     def setUp(self):
         super().setUp()
         self.default_project_data.update(
@@ -1311,9 +1254,6 @@ def setUp(self):
             }
         )
         self.write_project(self.default_project_data)
-        self.write_profile(self.default_profile_data)
-        # and after the fact, add the project root
-        self.default_project_data["project-root"] = self.project_dir
 
     def test_cli_and_env_vars(self):
         self.args.target = "cli-and-env-vars"
@@ -1387,3 +1327,30 @@ def test_lookups(self):
         for node, key, expected_value in expected:
             value = vars_provider.vars_for(node, "postgres").get(key)
             assert value == expected_value
+
+
+class TestMultipleProjectFlags(BaseConfigTest):
+    def setUp(self):
+        super().setUp()
+
+        self.default_project_data.update(
+            {
+                "flags": {
+                    "send_anonymous_usage_data": False,
+                }
+            }
+        )
+        self.write_project(self.default_project_data)
+
+        self.default_profile_data.update(
+            {
+                "config": {
+                    "send_anonymous_usage_data": False,
+                }
+            }
+        )
+        self.write_profile(self.default_profile_data)
+
+    def test_setting_multiple_flags(self):
+        with pytest.raises(dbt.exceptions.DbtProjectError):
+            set_from_args(self.args, None)
diff --git a/tests/unit/test_events.py b/tests/unit/test_events.py
index 89dc1a15255..2290c5600e8 100644
--- a/tests/unit/test_events.py
+++ b/tests/unit/test_events.py
@@ -145,6 +145,10 @@ def test_event_codes(self):
     types.ConfigLogPathDeprecation(deprecated_path=""),
     types.ConfigTargetPathDeprecation(deprecated_path=""),
     types.CollectFreshnessReturnSignature(),
+    types.ProjectFlagsMovedDeprecation(),
+    types.PackageMaterializationOverrideDeprecation(
+        package_name="my_package", materialization_name="view"
+    ),
     # E - DB Adapter ======================
     types.AdapterEventDebug(),
     types.AdapterEventInfo(),
diff --git a/tests/unit/test_flags.py b/tests/unit/test_flags.py
deleted file mode 100644
index 69d8913b675..00000000000
--- a/tests/unit/test_flags.py
+++ /dev/null
@@ -1,340 +0,0 @@
-import os
-from unittest import TestCase
-from argparse import Namespace
-import pytest
-
-from dbt import flags
-from dbt.contracts.project import UserConfig
-from dbt.graph.selector_spec import IndirectSelection
-from dbt.helper_types import WarnErrorOptions
-
-# Skip due to interface for flag updated
-pytestmark = pytest.mark.skip
-
-
-class TestFlags(TestCase):
-    def setUp(self):
-        self.args = Namespace()
-        self.user_config = UserConfig()
-
-    def test__flags(self):
-
-        # use_experimental_parser
-        self.user_config.use_experimental_parser = True
-        flags.set_from_args(self.args, self.user_config)
-        self.assertEqual(flags.USE_EXPERIMENTAL_PARSER, True)
-        os.environ["DBT_USE_EXPERIMENTAL_PARSER"] = "false"
-        flags.set_from_args(self.args, self.user_config)
-        self.assertEqual(flags.USE_EXPERIMENTAL_PARSER, False)
-        setattr(self.args, "use_experimental_parser", True)
-        flags.set_from_args(self.args, self.user_config)
-        self.assertEqual(flags.USE_EXPERIMENTAL_PARSER, True)
-        # cleanup
-        os.environ.pop("DBT_USE_EXPERIMENTAL_PARSER")
-        delattr(self.args, "use_experimental_parser")
-        flags.USE_EXPERIMENTAL_PARSER = False
-        self.user_config.use_experimental_parser = None
-
-        # static_parser
-        self.user_config.static_parser = False
-        flags.set_from_args(self.args, self.user_config)
-        self.assertEqual(flags.STATIC_PARSER, False)
-        os.environ["DBT_STATIC_PARSER"] = "true"
-        flags.set_from_args(self.args, self.user_config)
-        self.assertEqual(flags.STATIC_PARSER, True)
-        setattr(self.args, "static_parser", False)
-        flags.set_from_args(self.args, self.user_config)
-        self.assertEqual(flags.STATIC_PARSER, False)
-        # cleanup
-        os.environ.pop("DBT_STATIC_PARSER")
-        delattr(self.args, "static_parser")
-        flags.STATIC_PARSER = True
-        self.user_config.static_parser = None
-
-        # warn_error
-        self.user_config.warn_error = False
-        flags.set_from_args(self.args, self.user_config)
-        self.assertEqual(flags.WARN_ERROR, False)
-        os.environ["DBT_WARN_ERROR"] = "true"
-        flags.set_from_args(self.args, self.user_config)
-        self.assertEqual(flags.WARN_ERROR, True)
-        setattr(self.args, "warn_error", False)
-        flags.set_from_args(self.args, self.user_config)
-        self.assertEqual(flags.WARN_ERROR, False)
-        # cleanup
-        os.environ.pop("DBT_WARN_ERROR")
-        delattr(self.args, "warn_error")
-        flags.WARN_ERROR = False
-        self.user_config.warn_error = None
-
-        # warn_error_options
-        self.user_config.warn_error_options = '{"include": "all"}'
-        flags.set_from_args(self.args, self.user_config)
-        self.assertEqual(flags.WARN_ERROR_OPTIONS, WarnErrorOptions(include="all"))
-        os.environ["DBT_WARN_ERROR_OPTIONS"] = '{"include": []}'
-        flags.set_from_args(self.args, self.user_config)
-        self.assertEqual(flags.WARN_ERROR_OPTIONS, WarnErrorOptions(include=[]))
-        setattr(self.args, "warn_error_options", '{"include": "all"}')
-        flags.set_from_args(self.args, self.user_config)
-        self.assertEqual(flags.WARN_ERROR_OPTIONS, WarnErrorOptions(include="all"))
-        # cleanup
-        os.environ.pop("DBT_WARN_ERROR_OPTIONS")
-        delattr(self.args, "warn_error_options")
-        self.user_config.warn_error_options = None
-
-        # write_json
-        self.user_config.write_json = True
-        flags.set_from_args(self.args, self.user_config)
-        self.assertEqual(flags.WRITE_JSON, True)
-        os.environ["DBT_WRITE_JSON"] = "false"
-        flags.set_from_args(self.args, self.user_config)
-        self.assertEqual(flags.WRITE_JSON, False)
-        setattr(self.args, "write_json", True)
-        flags.set_from_args(self.args, self.user_config)
-        self.assertEqual(flags.WRITE_JSON, True)
-        # cleanup
-        os.environ.pop("DBT_WRITE_JSON")
-        delattr(self.args, "write_json")
-
-        # partial_parse
-        self.user_config.partial_parse = True
-        flags.set_from_args(self.args, self.user_config)
-        self.assertEqual(flags.PARTIAL_PARSE, True)
-        os.environ["DBT_PARTIAL_PARSE"] = "false"
-        flags.set_from_args(self.args, self.user_config)
-        self.assertEqual(flags.PARTIAL_PARSE, False)
-        setattr(self.args, "partial_parse", True)
-        flags.set_from_args(self.args, self.user_config)
-        self.assertEqual(flags.PARTIAL_PARSE, True)
-        # cleanup
-        os.environ.pop("DBT_PARTIAL_PARSE")
-        delattr(self.args, "partial_parse")
-        self.user_config.partial_parse = False
-
-        # use_colors
-        self.user_config.use_colors = True
-        flags.set_from_args(self.args, self.user_config)
-        self.assertEqual(flags.USE_COLORS, True)
-        os.environ["DBT_USE_COLORS"] = "false"
-        flags.set_from_args(self.args, self.user_config)
-        self.assertEqual(flags.USE_COLORS, False)
-        setattr(self.args, "use_colors", True)
-        flags.set_from_args(self.args, self.user_config)
-        self.assertEqual(flags.USE_COLORS, True)
-        # cleanup
-        os.environ.pop("DBT_USE_COLORS")
-        delattr(self.args, "use_colors")
-
-        # debug
-        self.user_config.debug = True
-        flags.set_from_args(self.args, self.user_config)
-        self.assertEqual(flags.DEBUG, True)
-        os.environ["DBT_DEBUG"] = "True"
-        flags.set_from_args(self.args, self.user_config)
-        self.assertEqual(flags.DEBUG, True)
-        os.environ["DBT_DEBUG"] = "False"
-        setattr(self.args, "debug", True)
-        flags.set_from_args(self.args, self.user_config)
-        self.assertEqual(flags.DEBUG, True)
-        # cleanup
-        os.environ.pop("DBT_DEBUG")
-        delattr(self.args, "debug")
-        self.user_config.debug = None
-
-        # log_format -- text, json, default
-        self.user_config.log_format = "text"
-        flags.set_from_args(self.args, self.user_config)
-        self.assertEqual(flags.LOG_FORMAT, "text")
-        os.environ["DBT_LOG_FORMAT"] = "json"
-        flags.set_from_args(self.args, self.user_config)
-        self.assertEqual(flags.LOG_FORMAT, "json")
-        setattr(self.args, "log_format", "text")
-        flags.set_from_args(self.args, self.user_config)
-        self.assertEqual(flags.LOG_FORMAT, "text")
-        # cleanup
-        os.environ.pop("DBT_LOG_FORMAT")
-        delattr(self.args, "log_format")
-        self.user_config.log_format = None
-
-        # version_check
-        self.user_config.version_check = True
-        flags.set_from_args(self.args, self.user_config)
-        self.assertEqual(flags.VERSION_CHECK, True)
-        os.environ["DBT_VERSION_CHECK"] = "false"
-        flags.set_from_args(self.args, self.user_config)
-        self.assertEqual(flags.VERSION_CHECK, False)
-        setattr(self.args, "version_check", True)
-        flags.set_from_args(self.args, self.user_config)
-        self.assertEqual(flags.VERSION_CHECK, True)
-        # cleanup
-        os.environ.pop("DBT_VERSION_CHECK")
-        delattr(self.args, "version_check")
-
-        # fail_fast
-        self.user_config.fail_fast = True
-        flags.set_from_args(self.args, self.user_config)
-        self.assertEqual(flags.FAIL_FAST, True)
-        os.environ["DBT_FAIL_FAST"] = "false"
-        flags.set_from_args(self.args, self.user_config)
-        self.assertEqual(flags.FAIL_FAST, False)
-        setattr(self.args, "fail_fast", True)
-        flags.set_from_args(self.args, self.user_config)
-        self.assertEqual(flags.FAIL_FAST, True)
-        # cleanup
-        os.environ.pop("DBT_FAIL_FAST")
-        delattr(self.args, "fail_fast")
-        self.user_config.fail_fast = False
-
-        # send_anonymous_usage_stats
-        self.user_config.send_anonymous_usage_stats = True
-        flags.set_from_args(self.args, self.user_config)
-        self.assertEqual(flags.SEND_ANONYMOUS_USAGE_STATS, True)
-        os.environ["DBT_SEND_ANONYMOUS_USAGE_STATS"] = "false"
-        flags.set_from_args(self.args, self.user_config)
-        self.assertEqual(flags.SEND_ANONYMOUS_USAGE_STATS, False)
-        setattr(self.args, "send_anonymous_usage_stats", True)
-        flags.set_from_args(self.args, self.user_config)
-        self.assertEqual(flags.SEND_ANONYMOUS_USAGE_STATS, True)
-        os.environ["DO_NOT_TRACK"] = "1"
-        flags.set_from_args(self.args, self.user_config)
-        self.assertEqual(flags.SEND_ANONYMOUS_USAGE_STATS, False)
-        # cleanup
-        os.environ.pop("DBT_SEND_ANONYMOUS_USAGE_STATS")
-        os.environ.pop("DO_NOT_TRACK")
-        delattr(self.args, "send_anonymous_usage_stats")
-
-        # printer_width
-        self.user_config.printer_width = 100
-        flags.set_from_args(self.args, self.user_config)
-        self.assertEqual(flags.PRINTER_WIDTH, 100)
-        os.environ["DBT_PRINTER_WIDTH"] = "80"
-        flags.set_from_args(self.args, self.user_config)
-        self.assertEqual(flags.PRINTER_WIDTH, 80)
-        setattr(self.args, "printer_width", "120")
-        flags.set_from_args(self.args, self.user_config)
-        self.assertEqual(flags.PRINTER_WIDTH, 120)
-        # cleanup
-        os.environ.pop("DBT_PRINTER_WIDTH")
-        delattr(self.args, "printer_width")
-        self.user_config.printer_width = None
-
-        # indirect_selection
-        self.user_config.indirect_selection = "eager"
-        flags.set_from_args(self.args, self.user_config)
-        self.assertEqual(flags.INDIRECT_SELECTION, IndirectSelection.Eager)
-        self.user_config.indirect_selection = "cautious"
-        flags.set_from_args(self.args, self.user_config)
-        self.assertEqual(flags.INDIRECT_SELECTION, IndirectSelection.Cautious)
-        self.user_config.indirect_selection = "buildable"
-        flags.set_from_args(self.args, self.user_config)
-        self.assertEqual(flags.INDIRECT_SELECTION, IndirectSelection.Buildable)
-        self.user_config.indirect_selection = None
-        flags.set_from_args(self.args, self.user_config)
-        self.assertEqual(flags.INDIRECT_SELECTION, IndirectSelection.Eager)
-        os.environ["DBT_INDIRECT_SELECTION"] = "cautious"
-        flags.set_from_args(self.args, self.user_config)
-        self.assertEqual(flags.INDIRECT_SELECTION, IndirectSelection.Cautious)
-        setattr(self.args, "indirect_selection", "cautious")
-        flags.set_from_args(self.args, self.user_config)
-        self.assertEqual(flags.INDIRECT_SELECTION, IndirectSelection.Cautious)
-        # cleanup
-        os.environ.pop("DBT_INDIRECT_SELECTION")
-        delattr(self.args, "indirect_selection")
-        self.user_config.indirect_selection = None
-
-        # quiet
-        self.user_config.quiet = True
-        flags.set_from_args(self.args, self.user_config)
-        self.assertEqual(flags.QUIET, True)
-        # cleanup
-        self.user_config.quiet = None
-
-        # no_print
-        self.user_config.no_print = True
-        flags.set_from_args(self.args, self.user_config)
-        self.assertEqual(flags.NO_PRINT, True)
-        # cleanup
-        self.user_config.no_print = None
-
-        # cache_selected_only
-        self.user_config.cache_selected_only = True
-        flags.set_from_args(self.args, self.user_config)
-        self.assertEqual(flags.CACHE_SELECTED_ONLY, True)
-        os.environ["DBT_CACHE_SELECTED_ONLY"] = "false"
-        flags.set_from_args(self.args, self.user_config)
-        self.assertEqual(flags.CACHE_SELECTED_ONLY, False)
-        setattr(self.args, "cache_selected_only", True)
-        flags.set_from_args(self.args, self.user_config)
-        self.assertEqual(flags.CACHE_SELECTED_ONLY, True)
-        # cleanup
-        os.environ.pop("DBT_CACHE_SELECTED_ONLY")
-        delattr(self.args, "cache_selected_only")
-        self.user_config.cache_selected_only = False
-
-        # target_path/log_path
-        flags.set_from_args(self.args, self.user_config)
-        self.assertIsNone(flags.LOG_PATH)
-        os.environ["DBT_LOG_PATH"] = "a/b/c"
-        flags.set_from_args(self.args, self.user_config)
-        self.assertEqual(flags.LOG_PATH, "a/b/c")
-        setattr(self.args, "log_path", "d/e/f")
-        flags.set_from_args(self.args, self.user_config)
-        self.assertEqual(flags.LOG_PATH, "d/e/f")
-        # cleanup
-        os.environ.pop("DBT_LOG_PATH")
-        delattr(self.args, "log_path")
-
-    def test__flags_are_mutually_exclusive(self):
-        # options from user config
-        self.user_config.warn_error = False
-        self.user_config.warn_error_options = '{"include":"all"}'
-        with pytest.raises(ValueError):
-            flags.set_from_args(self.args, self.user_config)
-        # cleanup
-        self.user_config.warn_error = None
-        self.user_config.warn_error_options = None
-
-        # options from args
-        setattr(self.args, "warn_error", False)
-        setattr(self.args, "warn_error_options", '{"include":"all"}')
-        with pytest.raises(ValueError):
-            flags.set_from_args(self.args, self.user_config)
-        # cleanup
-        delattr(self.args, "warn_error")
-        delattr(self.args, "warn_error_options")
-
-        # options from environment
-        os.environ["DBT_WARN_ERROR"] = "false"
-        os.environ["DBT_WARN_ERROR_OPTIONS"] = '{"include": []}'
-        with pytest.raises(ValueError):
-            flags.set_from_args(self.args, self.user_config)
-        # cleanup
-        os.environ.pop("DBT_WARN_ERROR")
-        os.environ.pop("DBT_WARN_ERROR_OPTIONS")
-
-        # options from user config + args
-        self.user_config.warn_error = False
-        setattr(self.args, "warn_error_options", '{"include":"all"}')
-        with pytest.raises(ValueError):
-            flags.set_from_args(self.args, self.user_config)
-        # cleanup
-        self.user_config.warn_error = None
-        delattr(self.args, "warn_error_options")
-
-        # options from user config + environ
-        self.user_config.warn_error = False
-        os.environ["DBT_WARN_ERROR_OPTIONS"] = '{"include": []}'
-        with pytest.raises(ValueError):
-            flags.set_from_args(self.args, self.user_config)
-        # cleanup
-        self.user_config.warn_error = None
-        os.environ.pop("DBT_WARN_ERROR_OPTIONS")
-
-        # options from args + environ
-        setattr(self.args, "warn_error", False)
-        os.environ["DBT_WARN_ERROR_OPTIONS"] = '{"include": []}'
-        with pytest.raises(ValueError):
-            flags.set_from_args(self.args, self.user_config)
-        # cleanup
-        delattr(self.args, "warn_error")
-        os.environ.pop("DBT_WARN_ERROR_OPTIONS")
diff --git a/tests/unit/test_graph.py b/tests/unit/test_graph.py
index 48011cd2553..9c61b3f97c7 100644
--- a/tests/unit/test_graph.py
+++ b/tests/unit/test_graph.py
@@ -16,6 +16,7 @@
 import dbt.parser.manifest
 from dbt import tracking
 from dbt.contracts.files import SourceFile, FileHash, FilePath
+from dbt.contracts.project import ProjectFlags
 from dbt.contracts.graph.manifest import MacroManifest, ManifestStateCheck
 from dbt.graph import NodeSelector, parse_difference
 from dbt.events.functions import setup_event_logger
@@ -130,7 +131,7 @@ def get_config(self, extra_cfg=None):
         cfg.update(extra_cfg)
 
         config = config_from_parts_or_dicts(project=cfg, profile=self.profile)
-        dbt.flags.set_from_args(Namespace(), config)
+        dbt.flags.set_from_args(Namespace(), ProjectFlags())
         setup_event_logger(dbt.flags.get_flags())
         object.__setattr__(dbt.flags.get_flags(), "PARTIAL_PARSE", False)
         return config
diff --git a/tests/unit/test_graph_selection.py b/tests/unit/test_graph_selection.py
index 572c8fed10d..5700cba6606 100644
--- a/tests/unit/test_graph_selection.py
+++ b/tests/unit/test_graph_selection.py
@@ -13,9 +13,9 @@
 from dbt import flags
 
 from argparse import Namespace
-from dbt.contracts.project import UserConfig
+from dbt.contracts.project import ProjectFlags
 
-flags.set_from_args(Namespace(), UserConfig())
+flags.set_from_args(Namespace(), ProjectFlags())
 
 
 def _get_graph():
diff --git a/tests/unit/test_manifest.py b/tests/unit/test_manifest.py
index 685c1feb5c5..8fcc5109441 100644
--- a/tests/unit/test_manifest.py
+++ b/tests/unit/test_manifest.py
@@ -1239,7 +1239,7 @@ def test_find_generate_macros_by_name(macros, expectations):
 FindMaterializationSpec = namedtuple("FindMaterializationSpec", "macros,adapter_type,expected")
 
 
-def _materialization_parameter_sets():
+def _materialization_parameter_sets_legacy():
     # inject the plugins used for materialization parameter tests
     with mock.patch("dbt.adapters.base.plugin.project_name_from_path") as get_name:
         get_name.return_value = "foo"
@@ -1386,12 +1386,187 @@ def id_mat(arg):
         return "_".join(arg)
 
 
+@pytest.mark.parametrize(
+    "macros,adapter_type,expected",
+    _materialization_parameter_sets_legacy(),
+    ids=id_mat,
+)
+def test_find_materialization_by_name_legacy(macros, adapter_type, expected):
+    set_from_args(
+        Namespace(
+            SEND_ANONYMOUS_USAGE_STATS=False,
+            REQUIRE_EXPLICIT_PACKAGE_OVERRIDES_FOR_BUILTIN_MATERIALIZATIONS=False,
+        ),
+        None,
+    )
+
+    manifest = make_manifest(macros=macros)
+    result = manifest.find_materialization_macro_by_name(
+        project_name="root",
+        materialization_name="my_materialization",
+        adapter_type=adapter_type,
+    )
+    if expected is None:
+        assert result is expected
+    else:
+        expected_package, expected_adapter_type = expected
+        assert result.adapter_type == expected_adapter_type
+        assert result.package_name == expected_package
+
+
+def _materialization_parameter_sets():
+    # inject the plugins used for materialization parameter tests
+    with mock.patch("dbt.adapters.base.plugin.project_name_from_path") as get_name:
+        get_name.return_value = "foo"
+        FooPlugin = AdapterPlugin(
+            adapter=mock.MagicMock(),
+            credentials=mock.MagicMock(),
+            include_path="/path/to/root/plugin",
+        )
+        FooPlugin.adapter.type.return_value = "foo"
+        inject_plugin(FooPlugin)
+
+        BarPlugin = AdapterPlugin(
+            adapter=mock.MagicMock(),
+            credentials=mock.MagicMock(),
+            include_path="/path/to/root/plugin",
+            dependencies=["foo"],
+        )
+        BarPlugin.adapter.type.return_value = "bar"
+        inject_plugin(BarPlugin)
+
+        sets = [
+            FindMaterializationSpec(macros=[], adapter_type="foo", expected=None),
+        ]
+
+        # default only, each project
+        sets.extend(
+            FindMaterializationSpec(
+                macros=[MockMaterialization(project, adapter_type=None)],
+                adapter_type="foo",
+                expected=(project, "default"),
+            )
+            for project in ["root", "dep", "dbt"]
+        )
+
+        # other type only, each project
+        sets.extend(
+            FindMaterializationSpec(
+                macros=[MockMaterialization(project, adapter_type="bar")],
+                adapter_type="foo",
+                expected=None,
+            )
+            for project in ["root", "dep", "dbt"]
+        )
+
+        # matching type only, each project
+        sets.extend(
+            FindMaterializationSpec(
+                macros=[MockMaterialization(project, adapter_type="foo")],
+                adapter_type="foo",
+                expected=(project, "foo"),
+            )
+            for project in ["root", "dep", "dbt"]
+        )
+
+        sets.extend(
+            [
+                # matching type and default everywhere
+                FindMaterializationSpec(
+                    macros=[
+                        MockMaterialization(project, adapter_type=atype)
+                        for (project, atype) in product(["root", "dep", "dbt"], ["foo", None])
+                    ],
+                    adapter_type="foo",
+                    expected=("root", "foo"),
+                ),
+                # default in core, override is in dep, and root has unrelated override
+                # should find the dbt default because default materializations cannot be overwritten by packages.
+                FindMaterializationSpec(
+                    macros=[
+                        MockMaterialization("root", adapter_type="bar"),
+                        MockMaterialization("dep", adapter_type="foo"),
+                        MockMaterialization("dbt", adapter_type=None),
+                    ],
+                    adapter_type="foo",
+                    expected=("dbt", "default"),
+                ),
+                # default in core, unrelated override is in dep, and root has an override
+                # should find the root override.
+                FindMaterializationSpec(
+                    macros=[
+                        MockMaterialization("root", adapter_type="foo"),
+                        MockMaterialization("dep", adapter_type="bar"),
+                        MockMaterialization("dbt", adapter_type=None),
+                    ],
+                    adapter_type="foo",
+                    expected=("root", "foo"),
+                ),
+                # default in core, override is in dep, and root has an override too.
+                # should find the root override.
+                FindMaterializationSpec(
+                    macros=[
+                        MockMaterialization("root", adapter_type="foo"),
+                        MockMaterialization("dep", adapter_type="foo"),
+                        MockMaterialization("dbt", adapter_type=None),
+                    ],
+                    adapter_type="foo",
+                    expected=("root", "foo"),
+                ),
+                # core has default + adapter, dep has adapter, root has default
+                # should find the default adapter implementation, because it's the most specific
+                # and default materializations cannot be overwritten by packages
+                FindMaterializationSpec(
+                    macros=[
+                        MockMaterialization("root", adapter_type=None),
+                        MockMaterialization("dep", adapter_type="foo"),
+                        MockMaterialization("dbt", adapter_type=None),
+                        MockMaterialization("dbt", adapter_type="foo"),
+                    ],
+                    adapter_type="foo",
+                    expected=("dbt", "foo"),
+                ),
+            ]
+        )
+
+        # inherit from parent adapter
+        sets.extend(
+            FindMaterializationSpec(
+                macros=[MockMaterialization(project, adapter_type="foo")],
+                adapter_type="bar",
+                expected=(project, "foo"),
+            )
+            for project in ["root", "dep", "dbt"]
+        )
+        sets.extend(
+            FindMaterializationSpec(
+                macros=[
+                    MockMaterialization(project, adapter_type="foo"),
+                    MockMaterialization(project, adapter_type="bar"),
+                ],
+                adapter_type="bar",
+                expected=(project, "bar"),
+            )
+            for project in ["root", "dep", "dbt"]
+        )
+
+        return sets
+
+
 @pytest.mark.parametrize(
     "macros,adapter_type,expected",
     _materialization_parameter_sets(),
     ids=id_mat,
 )
 def test_find_materialization_by_name(macros, adapter_type, expected):
+    set_from_args(
+        Namespace(
+            SEND_ANONYMOUS_USAGE_STATS=False,
+            REQUIRE_EXPLICIT_PACKAGE_OVERRIDES_FOR_BUILTIN_MATERIALIZATIONS=True,
+        ),
+        None,
+    )
+
     manifest = make_manifest(macros=macros)
     result = manifest.find_materialization_macro_by_name(
         project_name="root",
