diff --git a/comments/views.py b/comments/views.py
index a350783f..55e23ce1 100644
--- a/comments/views.py
+++ b/comments/views.py
@@ -18,7 +18,7 @@
 from comments.models import RootHeader, UserDiscussionAttribute
 from comments.templatetags.comments_tags import add_discussion_attributes
 from common_utils import get_meta
-from common_utils.url_utils import link_add_query
+from common_utils.url_utils import link_add_query, check_redirect_url
 
 
 def get_module_name(content_object):
@@ -95,6 +95,7 @@ def form_valid(self, form):
 		form.move_attachments(comment)
 
 		next_url = self.request.POST.get('next', '')
+		check_redirect_url(next_url, self.request)
 		if self.request.POST.get('time'):
 			next_url = link_add_query(next_url, time=self.request.POST['time'])
 		return http.HttpResponseRedirect(next_url + '#link_' + str(comment.pk))
@@ -148,8 +149,10 @@ def post(self, request, **kwargs):
 		else:
 			attributes.watch = 1
 		attributes.save()
-		if 'next' in request.POST:
-			return HttpResponseRedirect(request.POST['next'])
+		next_url = request.POST.get('next')
+		if next_url is not None:
+			check_redirect_url(next_url, request)
+			return HttpResponseRedirect(next_url)
 		else:
 			obj = header.content_object
 			return HttpResponseRedirect(obj.get_absolute_url())
@@ -161,8 +164,10 @@ class Forget(LoginRequiredMixin, DetailView):
 	def get(self, request, **kwargs):
 		header = self.get_object()
 		UserDiscussionAttribute.objects.filter(user=request.user, discussion=header).delete()
-		if 'next' in request.GET:
-			return HttpResponseRedirect(request.GET['next'])
+		next_url = request.GET.get('next')
+		if next_url is not None:
+			check_redirect_url(next_url, request)
+			return HttpResponseRedirect(next_url)
 		else:
 			return HttpResponseRedirect(reverse('home'))
 
diff --git a/common_utils/generic.py b/common_utils/generic.py
index d9151adf..cfd0d5be 100644
--- a/common_utils/generic.py
+++ b/common_utils/generic.py
@@ -5,9 +5,10 @@
 from django.db.models import Q, Manager
 from django.shortcuts import get_object_or_404, resolve_url
 from django.utils.functional import cached_property
-from django.utils.http import url_has_allowed_host_and_scheme
 from django.views.generic import CreateView, UpdateView, DetailView, ListView as OriginalListView
 
+from .url_utils import check_redirect_url
+
 
 # dokumentácia  k viewom tu https://ccbv.co.uk/
 
@@ -155,12 +156,8 @@ def get_redirect_url(self):
 		redirect_to = self.request.POST.get(
 			self.redirect_field_name, self.request.GET.get(self.redirect_field_name)
 		)
-		url_is_safe = url_has_allowed_host_and_scheme(
-			url=redirect_to,
-			allowed_hosts=[self.request.get_host()],
-			require_https=self.request.is_secure(),
-		)
-		return redirect_to if url_is_safe else ""
+		check_redirect_url(redirect_to, self.request)
+		return redirect_to
 
 	def get_default_redirect_url(self):
 		if self.next_page:
diff --git a/common_utils/url_utils.py b/common_utils/url_utils.py
index da9466d3..b6d5e961 100644
--- a/common_utils/url_utils.py
+++ b/common_utils/url_utils.py
@@ -1,10 +1,15 @@
 # -*- coding: utf-8 -*-
+import logging
 from urllib.parse import urlparse, urlunparse
 
 from django.http import QueryDict
-from django.http.response import HttpResponseRedirect
+from django.http.response import HttpResponseRedirect, Http404
 from django.shortcuts import resolve_url
 from django.utils.encoding import force_str
+from django.utils.http import url_has_allowed_host_and_scheme
+
+
+logger = logging.getLogger(__name__)
 
 
 def build_query(query):
@@ -50,3 +55,14 @@ def link_add_query(url, **values):
 	for key, value in values.items():
 		q[key] = value
 	return '%s?%s' % (url, q.urlencode(''))
+
+
+def check_redirect_url(redirect_to, request):
+	url_is_safe = url_has_allowed_host_and_scheme(
+		url=redirect_to,
+		allowed_hosts=[request.get_host()],
+		require_https=request.is_secure(),
+	)
+	if not url_is_safe:
+		logger.warning("Unsafe redirect to: %s", redirect_to)
+		raise Http404("Unsafe redirect to: %s" % redirect_to)
diff --git a/polls/views.py b/polls/views.py
index 7be0f5dd..333bdea0 100644
--- a/polls/views.py
+++ b/polls/views.py
@@ -11,6 +11,7 @@
 from .forms import PollForm, VoteForm
 from .models import Poll, Choice
 from common_utils.generic import ListView, DetailView, CreateView
+from common_utils.url_utils import check_redirect_url
 
 
 class PollPost(FormView):
@@ -28,7 +29,9 @@ def get_message_tag(self):
 		return self.request.POST.get('msg_id', 'polls') # identifikácia ankety ak ich je na webe viacej
 
 	def get_success_url(self):
-		return self.request.POST.get('next', '/')
+		next_url = self.request.POST.get('next', '/')
+		check_redirect_url(next_url, self.request)
+		return next_url
 
 	def get_form_kwargs(self):
 		kwargs = super(PollPost, self).get_form_kwargs()
diff --git a/template_dynamicloader/views.py b/template_dynamicloader/views.py
index 63a11acf..ac3f6481 100644
--- a/template_dynamicloader/views.py
+++ b/template_dynamicloader/views.py
@@ -10,13 +10,16 @@
 
 from .forms import ChangeTemplateHiddenForm
 from .utils import switch_template
+from common_utils.url_utils import check_redirect_url
 
 
 @csrf_exempt
 @require_POST
 def change(request):
 	form = ChangeTemplateHiddenForm(request.POST)
-	response = HttpResponseRedirect(request.POST.get('next', reverse('home')))
+	redirect_to = request.POST.get('next', reverse('home'))
+	check_redirect_url(redirect_to, request)
+	response = HttpResponseRedirect(redirect_to)
 	if form.is_valid() and 'change_style' in request.POST:
 		switch_template(response, **form.cleaned_data)
 	return response
