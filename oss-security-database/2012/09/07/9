
Date: Fri, 7 Sep 2012 11:25:30 -0400 (EDT)
From: Jan Lieskovsky <jlieskov@...hat.com>
To: "Steven M. Christey" <coley@...us.mitre.org>
Cc: oss-security@...ts.openwall.com, Florian Weimer <fweimer@...hat.com>,
        Jeff Law <law@...hat.com>, Jakub Jelinek <jakub@...hat.com>
Subject: CVE Request -- glibc: strcoll() integer overflow leading to buffer
 overflow + another alloca() stack overflow issue (upstream #14547 &&
 #14552)

Hello Kurt, Steve, Florian, Jeff, Jakub, vendors,

1) Issue #1: 
------------
  An integer overflow, leading to buffer overflow
flaw was found in the way the implementation of
strcoll() routine, used to compare two strings
based on the current locale, of glibc, the GNU
libc libraries, performed calculation of memory
requirements / allocation, needed for storage
of the strings. If an application linked against
glibc was missing an application-level sanity
checks for validity of strcoll() arguments and
accepted untrusted input, an attacker could use
this flaw to cause the particular application
to crash or, potentially, execute arbitrary code
with the privileges of the user running the
application.

Upstream bug report (including reproducer):
[1] http://sourceware.org/bugzilla/show_bug.cgi?id=14547

References:
[2] https://bugzilla.redhat.com/show_bug.cgi?id=855385

Could you allocate a CVE identifier for this?

2) Issue #2 (mentioned here only for completeness,
but I am not of the opinion this should receive a CVE
identifier. See argumentation below [but open to
glibc upstream / others to disprove it]).

alloca() stack overflow (first issue from the report below)
Upstream bug report:
[3] http://sourceware.org/bugzilla/show_bug.cgi?id=14552

If I have looked correctly this is expected / known
behaviour of alloca() - from the manual page:
[4] http://linux.die.net/man/3/alloca

"Return Value
The alloca() function returns a pointer to the
beginning of the allocated space. If the allocation
causes stack overflow, program behavior is undefined."

Under my opinion the above description covers also the
case of 'alloca() stack overflow' as reported in bug [3].
Further opinions / upstream comments appreciated though.

Thank you && Regards, Jan.
--
Jan iankko Lieskovsky / Red Hat Security Response Team
